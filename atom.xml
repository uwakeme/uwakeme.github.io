<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Uwakeme]]></title>
  <subtitle><![CDATA[一起学习，一起进步]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://hexo.blog.uwakeme.tech/"/>
  <updated>2025-08-22T09:47:09.241Z</updated>
  <id>https://hexo.blog.uwakeme.tech/</id>
  
  <author>
    <name><![CDATA[Wake]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[【软件功能解析】静态博客生成器技术原理详解：从Markdown到网页的完整转换过程]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/19/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/%E3%80%90%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90%E3%80%91%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%94%9F%E6%88%90%E5%99%A8%E6%8A%80%E6%9C%AF%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8EMarkdown%E5%88%B0%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%8C%E6%95%B4%E8%BD%AC%E6%8D%A2%E8%BF%87%E7%A8%8B/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/19/软件功能解析/【软件功能解析】静态博客生成器技术原理详解：从Markdown到网页的完整转换过程/</id>
    <published>2025-08-19T07:30:00.000Z</published>
    <updated>2025-08-22T09:47:09.241Z</updated>
    <content type="html"><![CDATA[<h1 id="一、静态博客生成器概述"><a href="#一、静态博客生成器概述" class="headerlink" title="一、静态博客生成器概述"></a>一、静态博客生成器概述</h1><h2 id="（一）什么是静态博客生成器"><a href="#（一）什么是静态博客生成器" class="headerlink" title="（一）什么是静态博客生成器"></a>（一）什么是静态博客生成器</h2><p>静态博客生成器是一种将<strong>Markdown文件</strong>、<strong>模板文件</strong>和<strong>配置文件</strong>转换为<strong>静态HTML网页</strong>的工具。与传统的动态博客系统（如WordPress）不同，静态博客生成器在构建时就生成所有页面，无需数据库和服务器端脚本支持。</p>
<pre class="mermaid">graph LR
    A[Markdown文件] --> B[静态博客生成器]
    C[模板文件] --> B
    D[配置文件] --> B
    E[静态资源] --> B
    B --> F[HTML网页]
    B --> G[CSS样式]
    B --> H[JavaScript脚本]
    B --> I[图片资源]</pre>

<h2 id="（二）主流静态博客生成器对比"><a href="#（二）主流静态博客生成器对比" class="headerlink" title="（二）主流静态博客生成器对比"></a>（二）主流静态博客生成器对比</h2><table>
<thead>
<tr>
<th>生成器</th>
<th>开发语言</th>
<th>特点</th>
<th>适用场景</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Hexo</strong></td>
<td>Node.js</td>
<td>快速、插件丰富、中文友好</td>
<td>个人博客、技术文档</td>
</tr>
<tr>
<td><strong>Jekyll</strong></td>
<td>Ruby</td>
<td>GitHub Pages原生支持</td>
<td>GitHub托管博客</td>
</tr>
<tr>
<td><strong>Hugo</strong></td>
<td>Go</td>
<td>构建速度极快、功能强大</td>
<td>大型网站、企业博客</td>
</tr>
<tr>
<td><strong>Gatsby</strong></td>
<td>React</td>
<td>现代化、PWA支持</td>
<td>企业级网站</td>
</tr>
<tr>
<td><strong>VuePress</strong></td>
<td>Vue.js</td>
<td>文档友好、Vue生态</td>
<td>技术文档、API文档</td>
</tr>
</tbody></table>
<div class="note info flat"><p><strong>为什么选择静态博客？</strong></p>
<ul>
<li>⚡ <strong>性能优异</strong>：无需数据库查询，加载速度快</li>
<li>🔒 <strong>安全性高</strong>：无服务器端漏洞风险</li>
<li>💰 <strong>成本低廉</strong>：可免费托管在GitHub Pages等平台</li>
<li>📝 <strong>专注写作</strong>：使用Markdown专注内容创作</li>
</ul>
</div>

<h1 id="二、Hexo工作原理深度解析"><a href="#二、Hexo工作原理深度解析" class="headerlink" title="二、Hexo工作原理深度解析"></a>二、Hexo工作原理深度解析</h1><h2 id="（一）Hexo核心架构"><a href="#（一）Hexo核心架构" class="headerlink" title="（一）Hexo核心架构"></a>（一）Hexo核心架构</h2><p>Hexo采用<strong>模块化架构</strong>，主要包含以下核心组件：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Hexo核心架构示意</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Hexo</span> = &#123;</span><br><span class="line">  <span class="comment">// 核心引擎：负责整体流程控制</span></span><br><span class="line">  <span class="attr">core</span>: &#123;</span><br><span class="line">    <span class="attr">init</span>: <span class="function">() =&gt;</span> &#123;&#125;,      <span class="comment">// 初始化博客项目</span></span><br><span class="line">    <span class="attr">generate</span>: <span class="function">() =&gt;</span> &#123;&#125;,  <span class="comment">// 生成静态文件</span></span><br><span class="line">    <span class="attr">serve</span>: <span class="function">() =&gt;</span> &#123;&#125;,     <span class="comment">// 启动本地服务器</span></span><br><span class="line">    <span class="attr">deploy</span>: <span class="function">() =&gt;</span> &#123;&#125;     <span class="comment">// 部署到远程服务器</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 渲染引擎：处理不同格式文件</span></span><br><span class="line">  <span class="attr">renderer</span>: &#123;</span><br><span class="line">    <span class="attr">markdown</span>: <span class="function">() =&gt;</span> &#123;&#125;,  <span class="comment">// Markdown渲染器</span></span><br><span class="line">    <span class="attr">ejs</span>: <span class="function">() =&gt;</span> &#123;&#125;,       <span class="comment">// EJS模板渲染器</span></span><br><span class="line">    <span class="attr">stylus</span>: <span class="function">() =&gt;</span> &#123;&#125;,    <span class="comment">// Stylus样式渲染器</span></span><br><span class="line">    <span class="attr">sass</span>: <span class="function">() =&gt;</span> &#123;&#125;       <span class="comment">// Sass样式渲染器</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 插件系统：扩展功能</span></span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="attr">generator</span>: [],       <span class="comment">// 页面生成器插件</span></span><br><span class="line">    <span class="attr">processor</span>: [],       <span class="comment">// 文件处理器插件</span></span><br><span class="line">    <span class="attr">helper</span>: [],          <span class="comment">// 模板助手插件</span></span><br><span class="line">    <span class="attr">deployer</span>: []         <span class="comment">// 部署器插件</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（二）文件处理流程"><a href="#（二）文件处理流程" class="headerlink" title="（二）文件处理流程"></a>（二）文件处理流程</h2><h3 id="1-源文件扫描与解析"><a href="#1-源文件扫描与解析" class="headerlink" title="1. 源文件扫描与解析"></a>1. 源文件扫描与解析</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件扫描过程（简化版）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileProcessor</span> &#123;</span><br><span class="line">  <span class="title function_">scanSourceFiles</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sourceDir = <span class="string">&#x27;source/_posts&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> files = fs.<span class="title function_">readdirSync</span>(sourceDir);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> files</span><br><span class="line">      .<span class="title function_">filter</span>(<span class="function"><span class="params">file</span> =&gt;</span> file.<span class="title function_">endsWith</span>(<span class="string">&#x27;.md&#x27;</span>))  <span class="comment">// 筛选Markdown文件</span></span><br><span class="line">      .<span class="title function_">map</span>(<span class="function"><span class="params">file</span> =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">parseMarkdownFile</span>(file));</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">parseMarkdownFile</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> content = fs.<span class="title function_">readFileSync</span>(filePath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 解析Front Matter（文章元数据）</span></span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">data</span>: frontMatter, <span class="attr">content</span>: markdownContent &#125; = <span class="title function_">matter</span>(content);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">title</span>: frontMatter.<span class="property">title</span>,           <span class="comment">// 文章标题</span></span><br><span class="line">      <span class="attr">date</span>: frontMatter.<span class="property">date</span>,             <span class="comment">// 发布日期</span></span><br><span class="line">      <span class="attr">categories</span>: frontMatter.<span class="property">categories</span>, <span class="comment">// 分类</span></span><br><span class="line">      <span class="attr">tags</span>: frontMatter.<span class="property">tags</span>,             <span class="comment">// 标签</span></span><br><span class="line">      <span class="attr">content</span>: markdownContent            <span class="comment">// 正文内容</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Markdown渲染过程"><a href="#2-Markdown渲染过程" class="headerlink" title="2. Markdown渲染过程"></a>2. Markdown渲染过程</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Markdown到HTML的转换过程</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MarkdownRenderer</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 配置Markdown解析器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">marked</span> = <span class="built_in">require</span>(<span class="string">&#x27;marked&#x27;</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">highlightjs</span> = <span class="built_in">require</span>(<span class="string">&#x27;highlight.js&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置代码高亮</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">marked</span>.<span class="title function_">setOptions</span>(&#123;</span><br><span class="line">      <span class="attr">highlight</span>: <span class="function">(<span class="params">code, language</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (language &amp;&amp; <span class="variable language_">this</span>.<span class="property">highlightjs</span>.<span class="title function_">getLanguage</span>(language)) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">highlightjs</span>.<span class="title function_">highlight</span>(code, &#123; language &#125;).<span class="property">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">highlightjs</span>.<span class="title function_">highlightAuto</span>(code).<span class="property">value</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">breaks</span>: <span class="literal">true</span>,        <span class="comment">// 支持换行</span></span><br><span class="line">      <span class="attr">gfm</span>: <span class="literal">true</span>           <span class="comment">// 支持GitHub风格Markdown</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">render</span>(<span class="params">markdownContent</span>) &#123;</span><br><span class="line">    <span class="comment">// 预处理：处理自定义语法</span></span><br><span class="line">    <span class="keyword">const</span> processedContent = <span class="variable language_">this</span>.<span class="title function_">preprocessCustomSyntax</span>(markdownContent);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 转换为HTML</span></span><br><span class="line">    <span class="keyword">const</span> htmlContent = <span class="variable language_">this</span>.<span class="property">marked</span>.<span class="title function_">parse</span>(processedContent);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 后处理：添加自定义功能</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">postprocessHTML</span>(htmlContent);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">preprocessCustomSyntax</span>(<span class="params">content</span>) &#123;</span><br><span class="line">    <span class="comment">// 处理Hexo特有的标签语法，如 &#123;% note %&#125; &#123;% endnote %&#125;</span></span><br><span class="line">    <span class="keyword">return</span> content.<span class="title function_">replace</span>(</span><br><span class="line">      <span class="regexp">/&#123;% note (\w+) %&#125;([\s\S]*?)&#123;% endnote %&#125;/g</span>,</span><br><span class="line">      <span class="string">&#x27;&lt;div class=&quot;note note-$1&quot;&gt;$2&lt;/div&gt;&#x27;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）模板渲染系统"><a href="#（三）模板渲染系统" class="headerlink" title="（三）模板渲染系统"></a>（三）模板渲染系统</h2><h3 id="1-模板引擎工作原理"><a href="#1-模板引擎工作原理" class="headerlink" title="1. 模板引擎工作原理"></a>1. 模板引擎工作原理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// EJS模板渲染示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TemplateRenderer</span> &#123;</span><br><span class="line">  <span class="title function_">renderPost</span>(<span class="params">postData, templatePath</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> template = fs.<span class="title function_">readFileSync</span>(templatePath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 准备模板变量</span></span><br><span class="line">    <span class="keyword">const</span> templateVars = &#123;</span><br><span class="line">      <span class="attr">title</span>: postData.<span class="property">title</span>,</span><br><span class="line">      <span class="attr">content</span>: postData.<span class="property">htmlContent</span>,</span><br><span class="line">      <span class="attr">date</span>: <span class="variable language_">this</span>.<span class="title function_">formatDate</span>(postData.<span class="property">date</span>),</span><br><span class="line">      <span class="attr">categories</span>: postData.<span class="property">categories</span>,</span><br><span class="line">      <span class="attr">tags</span>: postData.<span class="property">tags</span>,</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 全局配置变量</span></span><br><span class="line">      <span class="attr">site</span>: &#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">title</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">url</span>,</span><br><span class="line">        <span class="attr">author</span>: <span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">author</span></span><br><span class="line">      &#125;,</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 模板助手函数</span></span><br><span class="line">      <span class="attr">helpers</span>: &#123;</span><br><span class="line">        <span class="attr">url_for</span>: <span class="variable language_">this</span>.<span class="property">urlFor</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>),</span><br><span class="line">        <span class="attr">date</span>: <span class="variable language_">this</span>.<span class="property">dateHelper</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>),</span><br><span class="line">        <span class="attr">truncate</span>: <span class="variable language_">this</span>.<span class="property">truncateHelper</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 渲染模板</span></span><br><span class="line">    <span class="keyword">return</span> ejs.<span class="title function_">render</span>(template, templateVars);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// URL生成助手</span></span><br><span class="line">  <span class="title function_">urlFor</span>(<span class="params">path</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.config.root&#125;</span><span class="subst">$&#123;path&#125;</span>`</span>.<span class="title function_">replace</span>(<span class="regexp">/\/+/g</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 日期格式化助手</span></span><br><span class="line">  <span class="title function_">dateHelper</span>(<span class="params">date, format = <span class="string">&#x27;YYYY-MM-DD&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">moment</span>(date).<span class="title function_">format</span>(format);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-主题模板结构"><a href="#2-主题模板结构" class="headerlink" title="2. 主题模板结构"></a>2. 主题模板结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">themes/butterfly/</span><br><span class="line">├── layout/                    # 布局模板目录</span><br><span class="line">│   ├── _partial/             # 部分模板（组件）</span><br><span class="line">│   │   ├── head.ejs         # 页面头部</span><br><span class="line">│   │   ├── header.ejs       # 网站头部</span><br><span class="line">│   │   ├── footer.ejs       # 网站底部</span><br><span class="line">│   │   └── sidebar.ejs      # 侧边栏</span><br><span class="line">│   ├── index.ejs            # 首页模板</span><br><span class="line">│   ├── post.ejs             # 文章页模板</span><br><span class="line">│   ├── page.ejs             # 独立页面模板</span><br><span class="line">│   └── archive.ejs          # 归档页模板</span><br><span class="line">├── source/                   # 静态资源目录</span><br><span class="line">│   ├── css/                 # 样式文件</span><br><span class="line">│   ├── js/                  # JavaScript文件</span><br><span class="line">│   └── img/                 # 图片资源</span><br><span class="line">└── _config.yml              # 主题配置文件</span><br></pre></td></tr></table></figure>

<h1 id="三、静态文件生成过程"><a href="#三、静态文件生成过程" class="headerlink" title="三、静态文件生成过程"></a>三、静态文件生成过程</h1><h2 id="（一）页面生成器系统"><a href="#（一）页面生成器系统" class="headerlink" title="（一）页面生成器系统"></a>（一）页面生成器系统</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面生成器核心逻辑</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PageGenerator</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">generateAllPages</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 生成文章页面</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generatePosts</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 生成首页和分页</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateIndex</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. 生成归档页面</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateArchives</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4. 生成分类和标签页面</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateCategories</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateTags</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 5. 生成RSS和Sitemap</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateFeeds</span>();</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateSitemap</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">generatePosts</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> posts = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">loadAllPosts</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> post <span class="keyword">of</span> posts) &#123;</span><br><span class="line">      <span class="comment">// 生成文章URL路径</span></span><br><span class="line">      <span class="keyword">const</span> permalink = <span class="variable language_">this</span>.<span class="title function_">generatePermalink</span>(post);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 渲染文章页面</span></span><br><span class="line">      <span class="keyword">const</span> html = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">renderTemplate</span>(<span class="string">&#x27;post&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">post</span>: post,</span><br><span class="line">        <span class="attr">prev</span>: <span class="variable language_">this</span>.<span class="title function_">getPrevPost</span>(post),</span><br><span class="line">        <span class="attr">next</span>: <span class="variable language_">this</span>.<span class="title function_">getNextPost</span>(post)</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 写入文件</span></span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">writeFile</span>(<span class="string">`public/<span class="subst">$&#123;permalink&#125;</span>/index.html`</span>, html);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">generatePermalink</span>(<span class="params">post</span>) &#123;</span><br><span class="line">    <span class="comment">// 根据配置生成永久链接</span></span><br><span class="line">    <span class="comment">// 例如：:year/:month/:day/:title/</span></span><br><span class="line">    <span class="keyword">const</span> template = <span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">permalink</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> template</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;:year&#x27;</span>, post.<span class="property">date</span>.<span class="title function_">getFullYear</span>())</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;:month&#x27;</span>, <span class="title class_">String</span>(post.<span class="property">date</span>.<span class="title function_">getMonth</span>() + <span class="number">1</span>).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;:day&#x27;</span>, <span class="title class_">String</span>(post.<span class="property">date</span>.<span class="title function_">getDate</span>()).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;:title&#x27;</span>, post.<span class="property">slug</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）资源处理与优化"><a href="#（二）资源处理与优化" class="headerlink" title="（二）资源处理与优化"></a>（二）资源处理与优化</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态资源处理器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AssetProcessor</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">processAssets</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 处理CSS文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">processCSSFiles</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 处理JavaScript文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">processJSFiles</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. 处理图片资源</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">processImages</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4. 复制其他静态文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">copyStaticFiles</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">processCSSFiles</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> cssFiles = glob.<span class="title function_">sync</span>(<span class="string">&#x27;source/css/**/*.styl&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> file <span class="keyword">of</span> cssFiles) &#123;</span><br><span class="line">      <span class="comment">// 编译Stylus到CSS</span></span><br><span class="line">      <span class="keyword">const</span> stylusContent = fs.<span class="title function_">readFileSync</span>(file, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> css = stylus.<span class="title function_">render</span>(stylusContent);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 压缩CSS（生产环境）</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">env</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">        css = <span class="variable language_">this</span>.<span class="title function_">minifyCSS</span>(css);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 输出到public目录</span></span><br><span class="line">      <span class="keyword">const</span> outputPath = file.<span class="title function_">replace</span>(<span class="string">&#x27;source/&#x27;</span>, <span class="string">&#x27;public/&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;.styl&#x27;</span>, <span class="string">&#x27;.css&#x27;</span>);</span><br><span class="line">      fs.<span class="title function_">writeFileSync</span>(outputPath, css);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">processImages</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> images = glob.<span class="title function_">sync</span>(<span class="string">&#x27;source/img/**/*.&#123;jpg,jpeg,png,gif,webp&#125;&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> image <span class="keyword">of</span> images) &#123;</span><br><span class="line">      <span class="comment">// 图片优化（可选）</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">config</span>.<span class="property">image_optimization</span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">optimizeImage</span>(image);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 复制到public目录</span></span><br><span class="line">      <span class="keyword">const</span> outputPath = image.<span class="title function_">replace</span>(<span class="string">&#x27;source/&#x27;</span>, <span class="string">&#x27;public/&#x27;</span>);</span><br><span class="line">      fs.<span class="title function_">copyFileSync</span>(image, outputPath);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、高级功能实现原理"><a href="#四、高级功能实现原理" class="headerlink" title="四、高级功能实现原理"></a>四、高级功能实现原理</h1><h2 id="（一）插件系统架构"><a href="#（一）插件系统架构" class="headerlink" title="（一）插件系统架构"></a>（一）插件系统架构</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Hexo插件系统核心</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PluginSystem</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">hexo</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">hexo</span> = hexo;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">plugins</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 注册插件</span></span><br><span class="line">  <span class="title function_">register</span>(<span class="params">name, plugin</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">plugins</span>.<span class="title function_">set</span>(name, plugin);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据插件类型注册到相应的钩子</span></span><br><span class="line">    <span class="keyword">if</span> (plugin.<span class="property">generator</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">hexo</span>.<span class="property">extend</span>.<span class="property">generator</span>.<span class="title function_">register</span>(name, plugin.<span class="property">generator</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (plugin.<span class="property">processor</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">hexo</span>.<span class="property">extend</span>.<span class="property">processor</span>.<span class="title function_">register</span>(plugin.<span class="property">processor</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (plugin.<span class="property">helper</span>) &#123;</span><br><span class="line">      <span class="title class_">Object</span>.<span class="title function_">keys</span>(plugin.<span class="property">helper</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">helperName</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hexo</span>.<span class="property">extend</span>.<span class="property">helper</span>.<span class="title function_">register</span>(helperName, plugin.<span class="property">helper</span>[helperName]);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 执行插件钩子</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">executeHook</span>(<span class="params">hookName, ...args</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [name, plugin] <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">plugins</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (plugin[hookName]) &#123;</span><br><span class="line">        <span class="keyword">await</span> plugin[hookName].<span class="title function_">apply</span>(plugin, args);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插件示例：自动生成目录</span></span><br><span class="line"><span class="keyword">const</span> tocPlugin = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;hexo-toc&#x27;</span>,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 处理器：在文章渲染前添加目录</span></span><br><span class="line">  <span class="attr">processor</span>: &#123;</span><br><span class="line">    <span class="attr">pattern</span>: <span class="string">&#x27;source/_posts/**/*.md&#x27;</span>,</span><br><span class="line">    <span class="attr">process</span>: <span class="keyword">function</span>(<span class="params">file</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (file.<span class="property">content</span>.<span class="title function_">includes</span>(<span class="string">&#x27;&lt;!-- toc --&gt;&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">const</span> toc = <span class="variable language_">this</span>.<span class="title function_">generateTOC</span>(file.<span class="property">content</span>);</span><br><span class="line">        file.<span class="property">content</span> = file.<span class="property">content</span>.<span class="title function_">replace</span>(<span class="string">&#x27;&lt;!-- toc --&gt;&#x27;</span>, toc);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 生成目录的方法</span></span><br><span class="line">  <span class="title function_">generateTOC</span>(<span class="params">content</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> headings = content.<span class="title function_">match</span>(<span class="regexp">/^#&#123;1,6&#125;\s+.+$/gm</span>) || [];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> toc = <span class="string">&#x27;&lt;div class=&quot;toc&quot;&gt;\n&lt;ul&gt;\n&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    headings.<span class="title function_">forEach</span>(<span class="function"><span class="params">heading</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> level = heading.<span class="title function_">match</span>(<span class="regexp">/^#+/</span>)[<span class="number">0</span>].<span class="property">length</span>;</span><br><span class="line">      <span class="keyword">const</span> text = heading.<span class="title function_">replace</span>(<span class="regexp">/^#+\s+/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> id = text.<span class="title function_">toLowerCase</span>().<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">      </span><br><span class="line">      toc += <span class="string">`  &lt;li class=&quot;toc-level-<span class="subst">$&#123;level&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;#<span class="subst">$&#123;id&#125;</span>&quot;&gt;<span class="subst">$&#123;text&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">      &lt;/li&gt;\n`</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    toc += <span class="string">&#x27;&lt;/ul&gt;\n&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> toc;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（二）实时预览服务器"><a href="#（二）实时预览服务器" class="headerlink" title="（二）实时预览服务器"></a>（二）实时预览服务器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本地开发服务器实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DevServer</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">hexo</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">hexo</span> = hexo;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">app</span> = <span class="title function_">express</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">watcher</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">start</span>(<span class="params">port = <span class="number">4000</span></span>) &#123;</span><br><span class="line">    <span class="comment">// 设置静态文件服务</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">app</span>.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置文件监听</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setupFileWatcher</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 启动服务器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">server</span> = <span class="variable language_">this</span>.<span class="property">app</span>.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hexo服务器运行在 http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">setupFileWatcher</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 监听源文件变化</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">watcher</span> = chokidar.<span class="title function_">watch</span>([</span><br><span class="line">      <span class="string">&#x27;source/**/*&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;themes/**/*&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;_config.yml&#x27;</span></span><br><span class="line">    ], &#123;</span><br><span class="line">      <span class="attr">ignored</span>: <span class="regexp">/node_modules/</span>,</span><br><span class="line">      <span class="attr">persistent</span>: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 文件变化时重新生成</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">watcher</span>.<span class="title function_">on</span>(<span class="string">&#x27;change&#x27;</span>, <span class="title function_">async</span> (filePath) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`文件变化: <span class="subst">$&#123;filePath&#125;</span>`</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (filePath.<span class="title function_">includes</span>(<span class="string">&#x27;_posts&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 只重新生成相关文章</span></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">regeneratePost</span>(filePath);</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (filePath.<span class="title function_">includes</span>(<span class="string">&#x27;themes&#x27;</span>)) &#123;</span><br><span class="line">        <span class="comment">// 重新生成所有页面</span></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">hexo</span>.<span class="title function_">generate</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 通知浏览器刷新（WebSocket）</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">notifyBrowserRefresh</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 浏览器自动刷新功能</span></span><br><span class="line">  <span class="title function_">notifyBrowserRefresh</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">wsServer</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">wsServer</span>.<span class="property">clients</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">client</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (client.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">OPEN</span>) &#123;</span><br><span class="line">          client.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;reload&#x27;</span> &#125;));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、性能优化策略"><a href="#五、性能优化策略" class="headerlink" title="五、性能优化策略"></a>五、性能优化策略</h1><h2 id="（一）构建性能优化"><a href="#（一）构建性能优化" class="headerlink" title="（一）构建性能优化"></a>（一）构建性能优化</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增量构建优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IncrementalBuilder</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">dependencies</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">build</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> changedFiles = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getChangedFiles</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (changedFiles.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;没有文件变化，跳过构建&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 只处理变化的文件及其依赖</span></span><br><span class="line">    <span class="keyword">const</span> filesToProcess = <span class="variable language_">this</span>.<span class="title function_">getDependentFiles</span>(changedFiles);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> file <span class="keyword">of</span> filesToProcess) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">processFile</span>(file);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">processFile</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> stats = fs.<span class="title function_">statSync</span>(filePath);</span><br><span class="line">    <span class="keyword">const</span> cacheKey = <span class="string">`<span class="subst">$&#123;filePath&#125;</span>:<span class="subst">$&#123;stats.mtime.getTime()&#125;</span>`</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查缓存</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(cacheKey)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(cacheKey);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理文件</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">actuallyProcessFile</span>(filePath);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 缓存结果</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(cacheKey, result);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）输出优化"><a href="#（二）输出优化" class="headerlink" title="（二）输出优化"></a>（二）输出优化</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 资源压缩与优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AssetOptimizer</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">optimize</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1. HTML压缩</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">minifyHTML</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. CSS压缩与合并</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">optimizeCSS</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. JavaScript压缩</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">optimizeJS</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4. 图片优化</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">optimizeImages</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 5. 生成Service Worker</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">generateServiceWorker</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">minifyHTML</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> htmlFiles = glob.<span class="title function_">sync</span>(<span class="string">&#x27;public/**/*.html&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> file <span class="keyword">of</span> htmlFiles) &#123;</span><br><span class="line">      <span class="keyword">const</span> html = fs.<span class="title function_">readFileSync</span>(file, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> minified = htmlMinifier.<span class="title function_">minify</span>(html, &#123;</span><br><span class="line">        <span class="attr">removeComments</span>: <span class="literal">true</span>,           <span class="comment">// 移除注释</span></span><br><span class="line">        <span class="attr">collapseWhitespace</span>: <span class="literal">true</span>,       <span class="comment">// 压缩空白字符</span></span><br><span class="line">        <span class="attr">removeEmptyAttributes</span>: <span class="literal">true</span>,    <span class="comment">// 移除空属性</span></span><br><span class="line">        <span class="attr">minifyCSS</span>: <span class="literal">true</span>,               <span class="comment">// 压缩内联CSS</span></span><br><span class="line">        <span class="attr">minifyJS</span>: <span class="literal">true</span>                 <span class="comment">// 压缩内联JavaScript</span></span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      fs.<span class="title function_">writeFileSync</span>(file, minified);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">optimizeImages</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> images = glob.<span class="title function_">sync</span>(<span class="string">&#x27;public/img/**/*.&#123;jpg,jpeg,png&#125;&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> image <span class="keyword">of</span> images) &#123;</span><br><span class="line">      <span class="comment">// 使用imagemin进行无损压缩</span></span><br><span class="line">      <span class="keyword">const</span> buffer = fs.<span class="title function_">readFileSync</span>(image);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> optimized = <span class="keyword">await</span> imagemin.<span class="title function_">buffer</span>(buffer, &#123;</span><br><span class="line">        <span class="attr">plugins</span>: [</span><br><span class="line">          <span class="title function_">imageminJpegtran</span>(),  <span class="comment">// JPEG优化</span></span><br><span class="line">          <span class="title function_">imageminPngquant</span>()   <span class="comment">// PNG优化</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      fs.<span class="title function_">writeFileSync</span>(image, optimized);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、部署与发布"><a href="#六、部署与发布" class="headerlink" title="六、部署与发布"></a>六、部署与发布</h1><h2 id="（一）自动化部署流程"><a href="#（一）自动化部署流程" class="headerlink" title="（一）自动化部署流程"></a>（一）自动化部署流程</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitHub Actions自动部署配置</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">Blog</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [ <span class="string">main</span> ]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检出代码</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">设置Node.js环境</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;18&#x27;</span></span><br><span class="line">        <span class="attr">cache:</span> <span class="string">&#x27;npm&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line">      </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">构建网站</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm run clean</span></span><br><span class="line"><span class="string">        npm run build:prod</span></span><br><span class="line"><span class="string"></span>        </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署到GitHub</span> <span class="string">Pages</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">cname:</span> <span class="string">example.com</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）多平台部署支持"><a href="#（二）多平台部署支持" class="headerlink" title="（二）多平台部署支持"></a>（二）多平台部署支持</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 部署器插件示例</span></span><br><span class="line"><span class="keyword">const</span> deployerGit = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;git&#x27;</span>,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">deploy</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; repo, branch = <span class="string">&#x27;gh-pages&#x27;</span>, message &#125; = config;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1. 初始化Git仓库</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">initGitRepo</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 添加远程仓库</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">addRemote</span>(<span class="string">&#x27;origin&#x27;</span>, repo);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. 提交文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">commitFiles</span>(message);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4. 推送到远程分支</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">pushToBranch</span>(branch);</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">initGitRepo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> git = <span class="title function_">simpleGit</span>(<span class="string">&#x27;public&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(<span class="string">&#x27;public/.git&#x27;</span>)) &#123;</span><br><span class="line">      <span class="keyword">await</span> git.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> git;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">commitFiles</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> git = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">initGitRepo</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> git.<span class="title function_">add</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">await</span> git.<span class="title function_">commit</span>(message || <span class="string">`Site updated: <span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toISOString()&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://hexo.io/docs/">Hexo官方文档</a></li>
<li><a href="https://www.cnblogs.com/jijunhao/p/16972920.html">Hexo博客搭建和使用 - 博客园</a></li>
<li><a href="https://blog.csdn.net/smileyan9/article/details/124268248">从零开始编写自己的主题 - CSDN</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1769731">静态站点生成器概述 - 腾讯云</a></li>
<li><a href="https://nodejs.org/docs/">Node.js官方文档</a></li>
</ol>
<div class="note success flat"><p><strong>总结</strong><br>静态博客生成器通过将Markdown文件转换为HTML网页，实现了高性能、安全且易维护的博客系统。Hexo作为其中的佼佼者，凭借其强大的插件系统、灵活的主题机制和优秀的性能表现，成为了技术博客的首选方案。</p>
</div>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、静态博客生成器概述"><a href="#一、静态博客生成器概述" class="headerlink" title="一、静态博客生成器概述"></a>一、静态博客生成器概述</h1><h2 id="（一）什么是静态博客生成器"><a href="#（一）什]]>
    </summary>
    
      <category term="前端技术" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Hexo" scheme="https://hexo.blog.uwakeme.tech/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://hexo.blog.uwakeme.tech/tags/Markdown/"/>
    
      <category term="博客技术" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%8D%9A%E5%AE%A2%E6%8A%80%E6%9C%AF/"/>
    
      <category term="网站生成" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90/"/>
    
      <category term="软件功能解析" scheme="https://hexo.blog.uwakeme.tech/categories/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】微服务核心组件详解：服务网关、注册中心、配置中心与监控中心]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/19/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E8%AF%A6%E8%A7%A3%EF%BC%9A%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3%E3%80%81%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E3%80%81%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%B8%8E%E7%9B%91%E6%8E%A7%E4%B8%AD%E5%BF%83/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/19/学习/【学习】微服务核心组件详解：服务网关、注册中心、配置中心与监控中心/</id>
    <published>2025-08-19T03:00:00.000Z</published>
    <updated>2025-08-19T03:14:45.671Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>系列文章导航</strong><br>本文是微服务架构实战系列的核心组件篇，全面介绍微服务基础设施的设计与实现。</p>
</div>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着互联网业务的快速发展和系统复杂度的不断提升，传统的单体架构已经难以满足现代应用的需求。微服务架构作为一种新兴的分布式系统设计模式，通过将大型应用拆分为多个独立的小服务，实现了更好的可扩展性、可维护性和技术多样性。然而，微服务架构的成功实施离不开一系列核心功能组件的支撑。本文将深入探讨微服务架构中的关键基础设施组件。</p>
<h2 id="一、微服务架构概述"><a href="#一、微服务架构概述" class="headerlink" title="一、微服务架构概述"></a>一、微服务架构概述</h2><h3 id="（一）什么是微服务"><a href="#（一）什么是微服务" class="headerlink" title="（一）什么是微服务"></a>（一）什么是微服务</h3><p>微服务架构是一种将单一应用程序开发为一组小型服务的方法，每个服务运行在自己的进程中，并使用轻量级机制（通常是HTTP RESTful API）进行通信。这些服务围绕业务功能构建，并且可以由全自动部署机制独立部署。</p>
<h3 id="（二）微服务架构的优势"><a href="#（二）微服务架构的优势" class="headerlink" title="（二）微服务架构的优势"></a>（二）微服务架构的优势</h3><ol>
<li><strong>技术栈多样性</strong>：不同服务可以使用不同的编程语言和数据库</li>
<li><strong>独立部署</strong>：服务可以独立开发、测试和部署</li>
<li><strong>故障隔离</strong>：单个服务的故障不会影响整个系统</li>
<li><strong>团队自治</strong>：小团队可以独立负责特定服务</li>
<li><strong>可扩展性</strong>：可以根据需求独立扩展特定服务</li>
</ol>
<h3 id="（三）微服务架构的挑战"><a href="#（三）微服务架构的挑战" class="headerlink" title="（三）微服务架构的挑战"></a>（三）微服务架构的挑战</h3><p>微服务架构在带来诸多优势的同时，也引入了新的复杂性：</p>
<ul>
<li><strong>服务间通信</strong>：需要处理网络延迟、故障和数据一致性</li>
<li><strong>服务发现</strong>：动态环境中如何找到和调用其他服务</li>
<li><strong>配置管理</strong>：大量服务的配置如何统一管理</li>
<li><strong>监控和调试</strong>：分布式环境下的问题定位和性能监控</li>
<li><strong>数据一致性</strong>：跨服务的事务处理</li>
</ul>
<h2 id="二、服务网关（API-Gateway）"><a href="#二、服务网关（API-Gateway）" class="headerlink" title="二、服务网关（API Gateway）"></a>二、服务网关（API Gateway）</h2><div class="note success flat"><p><strong>核心概念</strong><br>服务网关是微服务架构的统一入口点，承担着流量管控、安全认证、协议转换等关键职责。</p>
</div>

<h3 id="（一）服务网关的作用"><a href="#（一）服务网关的作用" class="headerlink" title="（一）服务网关的作用"></a>（一）服务网关的作用</h3><p>服务网关是微服务架构中的统一入口，所有客户端请求都通过网关路由到相应的后端服务。它就像是微服务系统的”门卫”，负责请求的接收、路由、过滤和响应。</p>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden>
    graph TB
    A[客户端] --&gt; B[API网关]
    B --&gt; C[用户服务]
    B --&gt; D[订单服务]
    B --&gt; E[商品服务]
    B --&gt; F[支付服务]
    
    G[负载均衡] --&gt; B
    H[认证授权] --&gt; B
    I[限流熔断] --&gt; B
    J[监控日志] --&gt; B
  </pre></div>

<h3 id="（二）核心功能"><a href="#（二）核心功能" class="headerlink" title="（二）核心功能"></a>（二）核心功能</h3><h4 id="1-请求路由"><a href="#1-请求路由" class="headerlink" title="1. 请求路由"></a>1. 请求路由</h4><p>网关根据请求路径、请求头或其他规则将请求转发到相应的后端服务：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Spring Cloud Gateway配置示例</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">user-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://user-service</span>  <span class="comment"># lb表示负载均衡</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/users/**</span>   <span class="comment"># 路径匹配规则</span></span><br><span class="line">          <span class="attr">filters:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">StripPrefix=2</span>        <span class="comment"># 去除路径前缀</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">order-service</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://order-service</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/api/orders/**</span></span><br></pre></td></tr></table></figure>

<h4 id="2-负载均衡"><a href="#2-负载均衡" class="headerlink" title="2. 负载均衡"></a>2. 负载均衡</h4><p>网关可以在多个服务实例之间分配请求，支持多种负载均衡策略：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义负载均衡策略</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomLoadBalancer</span> <span class="keyword">implements</span> <span class="title class_">ReactorLoadBalancer</span>&lt;ServiceInstance&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Response&lt;ServiceInstance&gt;&gt; <span class="title function_">choose</span><span class="params">(Request request)</span> &#123;</span><br><span class="line">        <span class="comment">// 实现自定义负载均衡逻辑</span></span><br><span class="line">        <span class="comment">// 例如：基于权重、响应时间、地理位置等</span></span><br><span class="line">        <span class="keyword">return</span> Mono.just(<span class="keyword">new</span> <span class="title class_">DefaultResponse</span>(selectInstance()));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> ServiceInstance <span class="title function_">selectInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 选择服务实例的具体逻辑</span></span><br><span class="line">        <span class="comment">// 可以基于CPU使用率、内存使用率等指标</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-认证授权"><a href="#3-认证授权" class="headerlink" title="3. 认证授权"></a>3. 认证授权</h4><p>网关可以统一处理用户身份验证和权限控制：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JWT认证过滤器</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtAuthenticationFilter</span> <span class="keyword">implements</span> <span class="title class_">GlobalFilter</span>, Ordered &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> extractToken(exchange.getRequest());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (token == <span class="literal">null</span> || !validateToken(token)) &#123;</span><br><span class="line">            <span class="comment">// 返回401未授权</span></span><br><span class="line">            <span class="keyword">return</span> unauthorized(exchange.getResponse());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将用户信息添加到请求头中传递给下游服务</span></span><br><span class="line">        <span class="type">ServerHttpRequest</span> <span class="variable">request</span> <span class="operator">=</span> exchange.getRequest().mutate()</span><br><span class="line">            .header(<span class="string">&quot;X-User-Id&quot;</span>, getUserId(token))</span><br><span class="line">            .header(<span class="string">&quot;X-User-Role&quot;</span>, getUserRole(token))</span><br><span class="line">            .build();</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange.mutate().request(request).build());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">extractToken</span><span class="params">(ServerHttpRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">// 从请求头中提取JWT token</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">authHeader</span> <span class="operator">=</span> request.getHeaders().getFirst(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (authHeader != <span class="literal">null</span> &amp;&amp; authHeader.startsWith(<span class="string">&quot;Bearer &quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> authHeader.substring(<span class="number">7</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">validateToken</span><span class="params">(String token)</span> &#123;</span><br><span class="line">        <span class="comment">// 验证JWT token的有效性</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Jwts.parser().setSigningKey(secretKey).parseClaimsJws(token);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-限流熔断"><a href="#4-限流熔断" class="headerlink" title="4. 限流熔断"></a>4. 限流熔断</h4><p>保护后端服务免受过载影响：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 限流配置</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RateLimitConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisRateLimiter <span class="title function_">redisRateLimiter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 每秒允许10个请求，突发容量20</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RedisRateLimiter</span>(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> KeyResolver <span class="title function_">userKeyResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 基于用户ID进行限流</span></span><br><span class="line">        <span class="keyword">return</span> exchange -&gt; exchange.getRequest().getHeaders()</span><br><span class="line">            .getFirst(<span class="string">&quot;X-User-Id&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（三）主流网关技术对比"><a href="#（三）主流网关技术对比" class="headerlink" title="（三）主流网关技术对比"></a>（三）主流网关技术对比</h3><table>
<thead>
<tr>
<th>特性</th>
<th>Spring Cloud Gateway</th>
<th>Zuul 2.x</th>
<th>Kong</th>
<th>Nginx</th>
</tr>
</thead>
<tbody><tr>
<td><strong>性能</strong></td>
<td>高（基于WebFlux）</td>
<td>高（异步非阻塞）</td>
<td>高</td>
<td>极高</td>
</tr>
<tr>
<td><strong>编程语言</strong></td>
<td>Java</td>
<td>Java</td>
<td>Lua&#x2F;Go</td>
<td>C</td>
</tr>
<tr>
<td><strong>生态集成</strong></td>
<td>Spring生态完整</td>
<td>Netflix生态</td>
<td>插件丰富</td>
<td>模块丰富</td>
</tr>
<tr>
<td><strong>学习成本</strong></td>
<td>中等</td>
<td>中等</td>
<td>较高</td>
<td>较高</td>
</tr>
<tr>
<td><strong>适用场景</strong></td>
<td>Spring微服务</td>
<td>Netflix技术栈</td>
<td>企业级API管理</td>
<td>高性能代理</td>
</tr>
</tbody></table>
<h2 id="三、注册中心（Service-Registry）"><a href="#三、注册中心（Service-Registry）" class="headerlink" title="三、注册中心（Service Registry）"></a>三、注册中心（Service Registry）</h2><div class="note warning flat"><p><strong>重要提醒</strong><br>注册中心是微服务架构的核心基础设施，其稳定性直接影响整个系统的可用性。建议在生产环境中部署高可用集群。</p>
</div>

<h3 id="（一）服务注册与发现机制"><a href="#（一）服务注册与发现机制" class="headerlink" title="（一）服务注册与发现机制"></a>（一）服务注册与发现机制</h3><p>注册中心是微服务架构的”电话簿”，负责管理所有服务实例的信息，包括服务的位置、健康状态和元数据。</p>
<h4 id="1-服务注册流程"><a href="#1-服务注册流程" class="headerlink" title="1. 服务注册流程"></a>1. 服务注册流程</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务启动时自动注册</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span>  <span class="comment">// 启用服务发现客户端</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceApplication</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(UserServiceApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件</span></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: user-service      # 服务名称</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: localhost:<span class="number">8848</span>  # 注册中心地址</span><br><span class="line">        namespace: production        # 命名空间</span><br><span class="line">        group: DEFAULT_GROUP         # 服务分组</span><br><span class="line">        cluster-name: BJ            # 集群名称</span><br><span class="line">        weight: <span class="number">1.0</span>                 # 权重</span><br><span class="line">        metadata:                   # 元数据</span><br><span class="line">          version: <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">          region: beijing</span><br></pre></td></tr></table></figure>

<h4 id="2-服务发现机制"><a href="#2-服务发现机制" class="headerlink" title="2. 服务发现机制"></a>2. 服务发现机制</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Feign进行服务调用</span></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;user-service&quot;)</span>  <span class="comment">// 指定要调用的服务名</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserServiceClient</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/users/&#123;id&#125;&quot;)</span></span><br><span class="line">    User <span class="title function_">getUserById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@PostMapping(&quot;/users&quot;)</span></span><br><span class="line">    User <span class="title function_">createUser</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在业务代码中使用</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserServiceClient userServiceClient;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">createOrder</span><span class="params">(CreateOrderRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">// 通过服务名调用用户服务，无需知道具体IP和端口</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userServiceClient.getUserById(request.getUserId());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建订单逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Order</span>(user, request.getProducts());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（二）健康检查机制"><a href="#（二）健康检查机制" class="headerlink" title="（二）健康检查机制"></a>（二）健康检查机制</h3><p>注册中心需要监控服务实例的健康状态，及时剔除不健康的实例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义健康检查</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomHealthIndicator</span> <span class="keyword">implements</span> <span class="title class_">HealthIndicator</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Health <span class="title function_">health</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 检查数据库连接</span></span><br><span class="line">        <span class="keyword">if</span> (isDatabaseHealthy()) &#123;</span><br><span class="line">            <span class="comment">// 检查外部依赖</span></span><br><span class="line">            <span class="keyword">if</span> (areExternalDependenciesHealthy()) &#123;</span><br><span class="line">                <span class="keyword">return</span> Health.up()</span><br><span class="line">                    .withDetail(<span class="string">&quot;database&quot;</span>, <span class="string">&quot;连接正常&quot;</span>)</span><br><span class="line">                    .withDetail(<span class="string">&quot;external-api&quot;</span>, <span class="string">&quot;响应正常&quot;</span>)</span><br><span class="line">                    .build();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Health.down()</span><br><span class="line">            .withDetail(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;服务不健康&quot;</span>)</span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isDatabaseHealthy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 检查数据库连接状态</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行简单查询测试连接</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">areExternalDependenciesHealthy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 检查外部API或服务的可用性</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（三）主流注册中心对比"><a href="#（三）主流注册中心对比" class="headerlink" title="（三）主流注册中心对比"></a>（三）主流注册中心对比</h3><table>
<thead>
<tr>
<th>特性</th>
<th>Nacos</th>
<th>Eureka</th>
<th>Consul</th>
<th>Zookeeper</th>
</tr>
</thead>
<tbody><tr>
<td><strong>一致性模型</strong></td>
<td>CP+AP</td>
<td>AP</td>
<td>CP</td>
<td>CP</td>
</tr>
<tr>
<td><strong>健康检查</strong></td>
<td>支持多种方式</td>
<td>客户端心跳</td>
<td>支持多种方式</td>
<td>客户端心跳</td>
</tr>
<tr>
<td><strong>负载均衡</strong></td>
<td>支持权重</td>
<td>Ribbon集成</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td><strong>配置中心</strong></td>
<td>内置支持</td>
<td>不支持</td>
<td>KV存储</td>
<td>不支持</td>
</tr>
<tr>
<td><strong>多数据中心</strong></td>
<td>支持</td>
<td>支持</td>
<td>原生支持</td>
<td>不支持</td>
</tr>
<tr>
<td><strong>界面管理</strong></td>
<td>友好的Web界面</td>
<td>简单界面</td>
<td>Web界面</td>
<td>第三方工具</td>
</tr>
</tbody></table>
<h2 id="四、配置中心（Configuration-Center）"><a href="#四、配置中心（Configuration-Center）" class="headerlink" title="四、配置中心（Configuration Center）"></a>四、配置中心（Configuration Center）</h2><div class="note primary flat"><p><strong>配置管理的挑战</strong><br>微服务架构中，配置管理的复杂度呈指数级增长。配置中心通过集中化管理解决了配置分散、环境差异、动态更新等关键问题。</p>
</div>

<h3 id="（一）配置中心的必要性"><a href="#（一）配置中心的必要性" class="headerlink" title="（一）配置中心的必要性"></a>（一）配置中心的必要性</h3><p>在微服务架构中，配置管理面临以下挑战：</p>
<ol>
<li><strong>配置分散</strong>：每个服务都有自己的配置文件</li>
<li><strong>环境差异</strong>：开发、测试、生产环境配置不同</li>
<li><strong>动态更新</strong>：配置变更需要重启服务</li>
<li><strong>安全性</strong>：敏感配置需要加密存储</li>
<li><strong>版本管理</strong>：配置变更需要版本控制和回滚能力</li>
</ol>
<h3 id="（二）配置中心核心功能"><a href="#（二）配置中心核心功能" class="headerlink" title="（二）配置中心核心功能"></a>（二）配置中心核心功能</h3><h4 id="1-集中化配置管理"><a href="#1-集中化配置管理" class="headerlink" title="1. 集中化配置管理"></a>1. 集中化配置管理</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在Nacos配置中心创建配置</span></span><br><span class="line"><span class="comment"># Data ID: user-service-dev.yml</span></span><br><span class="line"><span class="comment"># Group: DEFAULT_GROUP</span></span><br><span class="line"><span class="comment"># 配置内容：</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/user_db</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">$&#123;DB_USERNAME:root&#125;</span>      <span class="comment"># 支持环境变量和默认值</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$&#123;DB_PASSWORD:password&#125;</span></span><br><span class="line">    </span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">$&#123;REDIS_HOST:localhost&#125;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">$&#123;REDIS_PORT:6379&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 业务配置</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">default-avatar:</span> <span class="string">https://example.com/default-avatar.png</span></span><br><span class="line">  <span class="attr">max-login-attempts:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">session-timeout:</span> <span class="number">3600</span></span><br></pre></td></tr></table></figure>

<h4 id="2-动态配置更新"><a href="#2-动态配置更新" class="headerlink" title="2. 动态配置更新"></a>2. 动态配置更新</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用@RefreshScope实现配置热更新</span></span><br><span class="line"><span class="meta">@RefreshScope</span>  <span class="comment">// 支持配置动态刷新</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.default-avatar&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String defaultAvatar;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.max-login-attempts&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer maxLoginAttempts;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.session-timeout&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer sessionTimeout;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter方法</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDefaultAvatar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> defaultAvatar;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getMaxLoginAttempts</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> maxLoginAttempts;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSessionTimeout</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sessionTimeout;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置变更监听器</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigChangeListener</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@NacosConfigListener(dataId = &quot;user-service-dev.yml&quot;, groupId = &quot;DEFAULT_GROUP&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfigChange</span><span class="params">(String newConfig)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;配置发生变更: &#123;&#125;&quot;</span>, newConfig);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 可以在这里执行一些配置变更后的逻辑</span></span><br><span class="line">        <span class="comment">// 例如：刷新缓存、重新初始化组件等</span></span><br><span class="line">        refreshCache();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">refreshCache</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 刷新相关缓存</span></span><br><span class="line">        log.info(<span class="string">&quot;配置变更，正在刷新缓存...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-配置加密与安全"><a href="#3-配置加密与安全" class="headerlink" title="3. 配置加密与安全"></a>3. 配置加密与安全</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 敏感配置加密</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EncryptionConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> StringEncryptor <span class="title function_">stringEncryptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">PooledPBEStringEncryptor</span> <span class="variable">encryptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PooledPBEStringEncryptor</span>();</span><br><span class="line">        <span class="type">SimpleStringPBEConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleStringPBEConfig</span>();</span><br><span class="line">        config.setPassword(<span class="string">&quot;mySecretKey&quot;</span>);           <span class="comment">// 加密密钥</span></span><br><span class="line">        config.setAlgorithm(<span class="string">&quot;PBEWithMD5AndDES&quot;</span>);     <span class="comment">// 加密算法</span></span><br><span class="line">        config.setKeyObtentionIterations(<span class="string">&quot;1000&quot;</span>);    <span class="comment">// 迭代次数</span></span><br><span class="line">        config.setPoolSize(<span class="string">&quot;1&quot;</span>);                     <span class="comment">// 线程池大小</span></span><br><span class="line">        config.setProviderName(<span class="string">&quot;SunJCE&quot;</span>);</span><br><span class="line">        config.setSaltGeneratorClassName(<span class="string">&quot;org.jasypt.salt.RandomSaltGenerator&quot;</span>);</span><br><span class="line">        config.setStringOutputType(<span class="string">&quot;base64&quot;</span>);</span><br><span class="line">        encryptor.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> encryptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在配置文件中使用加密</span></span><br><span class="line"># application.yml</span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    password: ENC(加密后的密码)  # 使用ENC()包装加密内容</span><br><span class="line">    </span><br><span class="line"># 或者使用注解方式</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;database.password&#125;&quot;)</span></span><br><span class="line"><span class="meta">@Encrypted</span>  <span class="comment">// 自定义注解，表示该字段需要解密</span></span><br><span class="line"><span class="keyword">private</span> String databasePassword;</span><br></pre></td></tr></table></figure>

<h3 id="（三）配置分层管理"><a href="#（三）配置分层管理" class="headerlink" title="（三）配置分层管理"></a>（三）配置分层管理</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 公共配置 (common.yml)</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.example:</span> <span class="string">INFO</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">health,info,metrics</span></span><br><span class="line">        </span><br><span class="line"><span class="comment"># 应用配置 (user-service.yml)</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/api/v1</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 环境配置 (user-service-dev.yml)</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://dev-db:3306/user_db</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 环境配置 (user-service-prod.yml)</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://prod-db:3306/user_db</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 五、监控中心（Monitoring Center）</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">note</span> <span class="string">danger</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">**监控的重要性**</span></span><br><span class="line"><span class="string">在分布式系统中，&quot;没有监控就没有运维&quot;。完善的监控体系是保障系统稳定运行的基石，能够实现故障的快速发现、定位和恢复。</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endnote</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">### （一）微服务监控的重要性</span></span><br><span class="line"></span><br><span class="line"><span class="string">在分布式环境中，监控系统的作用至关重要：</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">**性能监控**：实时监控服务性能指标</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">**故障定位**：快速定位和诊断问题</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">**容量规划**：基于监控数据进行资源规划</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">**用户体验**：监控用户请求的端到端性能</span></span><br><span class="line"><span class="number">5</span><span class="string">.</span> <span class="string">**业务洞察**：通过监控数据获得业务洞察</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### （二）监控体系架构</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">mermaid</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">graph</span> <span class="string">TB</span></span><br><span class="line">    <span class="string">A[应用服务]</span> <span class="string">--&gt;</span> <span class="string">B[Metrics收集]</span></span><br><span class="line">    <span class="string">A</span> <span class="string">--&gt;</span> <span class="string">C[日志收集]</span></span><br><span class="line">    <span class="string">A</span> <span class="string">--&gt;</span> <span class="string">D[链路追踪]</span></span><br><span class="line"></span><br><span class="line">    <span class="string">B</span> <span class="string">--&gt;</span> <span class="string">E[Prometheus]</span></span><br><span class="line">    <span class="string">C</span> <span class="string">--&gt;</span> <span class="string">F[ELK</span> <span class="string">Stack]</span></span><br><span class="line">    <span class="string">D</span> <span class="string">--&gt;</span> <span class="string">G[Zipkin/Jaeger]</span></span><br><span class="line"></span><br><span class="line">    <span class="string">E</span> <span class="string">--&gt;</span> <span class="string">H[Grafana]</span></span><br><span class="line">    <span class="string">F</span> <span class="string">--&gt;</span> <span class="string">H</span></span><br><span class="line">    <span class="string">G</span> <span class="string">--&gt;</span> <span class="string">H</span></span><br><span class="line"></span><br><span class="line">    <span class="string">H</span> <span class="string">--&gt;</span> <span class="string">I[告警系统]</span></span><br><span class="line">    <span class="string">I</span> <span class="string">--&gt;</span> <span class="string">J[运维人员]</span></span><br><span class="line">&#123;<span class="string">%</span> <span class="string">endmermaid</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">### （三）核心监控组件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### 1. 指标监控（Metrics）</span></span><br><span class="line"></span><br><span class="line"><span class="string">使用Prometheus</span> <span class="string">+</span> <span class="string">Grafana进行指标监控：</span></span><br><span class="line"></span><br><span class="line"><span class="string">```java</span></span><br><span class="line"><span class="string">//</span> <span class="string">自定义业务指标</span></span><br><span class="line"><span class="string">@Component</span></span><br><span class="line"><span class="string">public</span> <span class="string">class</span> <span class="string">BusinessMetrics</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">//</span> <span class="string">计数器：统计用户注册数量</span></span><br><span class="line">    <span class="string">private</span> <span class="string">final</span> <span class="string">Counter</span> <span class="string">userRegistrationCounter</span> <span class="string">=</span> <span class="string">Counter.builder(&quot;user_registration_total&quot;)</span></span><br><span class="line">        <span class="string">.description(&quot;用户注册总数&quot;)</span></span><br><span class="line">        <span class="string">.tag(&quot;service&quot;</span>, <span class="string">&quot;user-service&quot;</span><span class="string">)</span></span><br><span class="line">        <span class="string">.register(Metrics.globalRegistry);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">//</span> <span class="string">计时器：统计接口响应时间</span></span><br><span class="line">    <span class="string">private</span> <span class="string">final</span> <span class="string">Timer</span> <span class="string">orderProcessingTimer</span> <span class="string">=</span> <span class="string">Timer.builder(&quot;order_processing_duration&quot;)</span></span><br><span class="line">        <span class="string">.description(&quot;订单处理耗时&quot;)</span></span><br><span class="line">        <span class="string">.tag(&quot;service&quot;</span>, <span class="string">&quot;order-service&quot;</span><span class="string">)</span></span><br><span class="line">        <span class="string">.register(Metrics.globalRegistry);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">//</span> <span class="string">仪表盘：当前在线用户数</span></span><br><span class="line">    <span class="string">private</span> <span class="string">final</span> <span class="string">Gauge</span> <span class="string">onlineUsersGauge</span> <span class="string">=</span> <span class="string">Gauge.builder(&quot;online_users_current&quot;)</span></span><br><span class="line">        <span class="string">.description(&quot;当前在线用户数&quot;)</span></span><br><span class="line">        <span class="string">.register(Metrics.globalRegistry</span>, <span class="string">this</span>, <span class="string">BusinessMetrics::getOnlineUserCount);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">public</span> <span class="string">void</span> <span class="string">recordUserRegistration()</span> &#123;</span><br><span class="line">        <span class="string">userRegistrationCounter.increment();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">public</span> <span class="string">void</span> <span class="string">recordOrderProcessing(Runnable</span> <span class="string">orderProcessing)</span> &#123;</span><br><span class="line">        <span class="string">orderProcessingTimer.recordCallable(()</span> <span class="string">-&gt;</span> &#123;</span><br><span class="line">            <span class="string">orderProcessing.run();</span></span><br><span class="line">            <span class="string">return</span> <span class="literal">null</span><span class="string">;</span></span><br><span class="line">        &#125;<span class="string">);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="string">private</span> <span class="string">double</span> <span class="string">getOnlineUserCount()</span> &#123;</span><br><span class="line">        <span class="string">//</span> <span class="string">获取当前在线用户数的逻辑</span></span><br><span class="line">        <span class="string">return</span> <span class="string">redisTemplate.opsForSet().size(&quot;online_users&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">在业务代码中使用</span></span><br><span class="line"><span class="string">@Service</span></span><br><span class="line"><span class="string">public</span> <span class="string">class</span> <span class="string">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">@Autowired</span></span><br><span class="line">    <span class="string">private</span> <span class="string">BusinessMetrics</span> <span class="string">businessMetrics;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">public</span> <span class="string">User</span> <span class="string">registerUser(UserRegistrationRequest</span> <span class="string">request)</span> &#123;</span><br><span class="line">        <span class="string">//</span> <span class="string">记录用户注册指标</span></span><br><span class="line">        <span class="string">businessMetrics.recordUserRegistration();</span></span><br><span class="line"></span><br><span class="line">        <span class="string">//</span> <span class="string">用户注册逻辑</span></span><br><span class="line">        <span class="string">User</span> <span class="string">user</span> <span class="string">=</span> <span class="string">new</span> <span class="string">User(request);</span></span><br><span class="line">        <span class="string">userRepository.save(user);</span></span><br><span class="line"></span><br><span class="line">        <span class="string">return</span> <span class="string">user;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-日志监控（Logging）"><a href="#2-日志监控（Logging）" class="headerlink" title="2. 日志监控（Logging）"></a>2. 日志监控（Logging）</h4><p>使用ELK Stack（Elasticsearch + Logstash + Kibana）进行日志收集和分析：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- logback-spring.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制台输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;CONSOLE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">timestamp</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">logLevel</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">loggerName</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">message</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mdc</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">stackTrace</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 文件输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;FILE&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>logs/application.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>logs/application.%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">providers</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">timestamp</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">logLevel</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">loggerName</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">message</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">mdc</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">arguments</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">stackTrace</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">providers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;CONSOLE&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;FILE&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 结构化日志记录</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(OrderService.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">createOrder</span><span class="params">(CreateOrderRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">// 使用MDC添加上下文信息</span></span><br><span class="line">        MDC.put(<span class="string">&quot;userId&quot;</span>, request.getUserId().toString());</span><br><span class="line">        MDC.put(<span class="string">&quot;orderId&quot;</span>, UUID.randomUUID().toString());</span><br><span class="line">        MDC.put(<span class="string">&quot;operation&quot;</span>, <span class="string">&quot;createOrder&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            logger.info(<span class="string">&quot;开始创建订单, userId=&#123;&#125;, productCount=&#123;&#125;&quot;</span>,</span><br><span class="line">                request.getUserId(), request.getProducts().size());</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 订单创建逻辑</span></span><br><span class="line">            <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> processOrder(request);</span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">&quot;订单创建成功, orderId=&#123;&#125;, totalAmount=&#123;&#125;&quot;</span>,</span><br><span class="line">                order.getId(), order.getTotalAmount());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> order;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;订单创建失败, userId=&#123;&#125;, error=&#123;&#125;&quot;</span>,</span><br><span class="line">                request.getUserId(), e.getMessage(), e);</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 清理MDC</span></span><br><span class="line">            MDC.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-链路追踪（Distributed-Tracing）"><a href="#3-链路追踪（Distributed-Tracing）" class="headerlink" title="3. 链路追踪（Distributed Tracing）"></a>3. 链路追踪（Distributed Tracing）</h4><p>使用Zipkin进行分布式链路追踪：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置Zipkin</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TracingConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Sender <span class="title function_">sender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> OkHttpSender.create(<span class="string">&quot;http://zipkin-server:9411/api/v2/spans&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> AsyncReporter&lt;Span&gt; <span class="title function_">spanReporter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> AsyncReporter.create(sender());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Tracing <span class="title function_">tracing</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Tracing.newBuilder()</span><br><span class="line">            .localServiceName(<span class="string">&quot;user-service&quot;</span>)</span><br><span class="line">            .spanReporter(spanReporter())</span><br><span class="line">            .sampler(Sampler.create(<span class="number">1.0f</span>))  <span class="comment">// 100%采样率</span></span><br><span class="line">            .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动创建Span</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Tracing tracing;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserService</span><span class="params">(Tracing tracing)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tracing = tracing;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserById</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="type">Span</span> <span class="variable">span</span> <span class="operator">=</span> tracing.tracer().nextSpan()</span><br><span class="line">            .name(<span class="string">&quot;get-user-by-id&quot;</span>)</span><br><span class="line">            .tag(<span class="string">&quot;user.id&quot;</span>, userId.toString())</span><br><span class="line">            .start();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (Tracer.<span class="type">SpanInScope</span> <span class="variable">ws</span> <span class="operator">=</span> tracing.tracer().withSpanInScope(span)) &#123;</span><br><span class="line">            <span class="comment">// 数据库查询</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userRepository.findById(userId);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">                span.tag(<span class="string">&quot;user.found&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">                span.tag(<span class="string">&quot;user.name&quot;</span>, user.getName());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                span.tag(<span class="string">&quot;user.found&quot;</span>, <span class="string">&quot;false&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            span.end();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="（四）告警系统"><a href="#（四）告警系统" class="headerlink" title="（四）告警系统"></a>（四）告警系统</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Prometheus告警规则</span></span><br><span class="line"><span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">microservice-alerts</span></span><br><span class="line">    <span class="attr">rules:</span></span><br><span class="line">      <span class="comment"># 服务可用性告警</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">ServiceDown</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">up</span> <span class="string">==</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">1m</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">&quot;服务 <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> 已下线&quot;</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">&quot;服务 <span class="template-variable">&#123;&#123; $labels.instance &#125;&#125;</span> 已经下线超过1分钟&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 响应时间告警</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">HighResponseTime</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">http_request_duration_seconds&#123;quantile=&quot;0.95&quot;&#125;</span> <span class="string">&gt;</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">5m</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">warning</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">&quot;服务响应时间过高&quot;</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">&quot;服务 <span class="template-variable">&#123;&#123; $labels.service &#125;&#125;</span> 的95%响应时间超过2秒&quot;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 错误率告警</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">alert:</span> <span class="string">HighErrorRate</span></span><br><span class="line">        <span class="attr">expr:</span> <span class="string">rate(http_requests_total&#123;status=~&quot;5..&quot;&#125;[5m])</span> <span class="string">/</span> <span class="string">rate(http_requests_total[5m])</span> <span class="string">&gt;</span> <span class="number">0.1</span></span><br><span class="line">        <span class="attr">for:</span> <span class="string">2m</span></span><br><span class="line">        <span class="attr">labels:</span></span><br><span class="line">          <span class="attr">severity:</span> <span class="string">critical</span></span><br><span class="line">        <span class="attr">annotations:</span></span><br><span class="line">          <span class="attr">summary:</span> <span class="string">&quot;服务错误率过高&quot;</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">&quot;服务 <span class="template-variable">&#123;&#123; $labels.service &#125;&#125;</span> 的错误率超过10%&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义告警处理器</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlertHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> NotificationService notificationService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleServiceDownAlert</span><span class="params">(ServiceDownEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 服务下线告警处理</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> String.format(<span class="string">&quot;【严重告警】服务 %s 已下线，请立即处理！&quot;</span>,</span><br><span class="line">            event.getServiceName());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送钉钉通知</span></span><br><span class="line">        notificationService.sendDingTalkMessage(message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送邮件通知</span></span><br><span class="line">        notificationService.sendEmail(<span class="string">&quot;运维团队&quot;</span>, <span class="string">&quot;服务下线告警&quot;</span>, message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录告警日志</span></span><br><span class="line">        log.error(<span class="string">&quot;Service down alert: &#123;&#125;&quot;</span>, event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleHighErrorRateAlert</span><span class="params">(HighErrorRateEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 高错误率告警处理</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> String.format(<span class="string">&quot;【警告】服务 %s 错误率过高：%.2f%%&quot;</span>,</span><br><span class="line">            event.getServiceName(), event.getErrorRate() * <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        notificationService.sendDingTalkMessage(message);</span><br><span class="line">        log.warn(<span class="string">&quot;High error rate alert: &#123;&#125;&quot;</span>, event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="六、微服务组件集成实践"><a href="#六、微服务组件集成实践" class="headerlink" title="六、微服务组件集成实践"></a>六、微服务组件集成实践</h2><h3 id="（一）Spring-Cloud-Alibaba技术栈"><a href="#（一）Spring-Cloud-Alibaba技术栈" class="headerlink" title="（一）Spring Cloud Alibaba技术栈"></a>（一）Spring Cloud Alibaba技术栈</h3><p>Spring Cloud Alibaba为微服务提供了一站式解决方案：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 父工程依赖管理 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.SR12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 微服务核心依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 服务注册发现 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置中心 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 服务网关 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 负载均衡 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 服务调用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 熔断器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 链路追踪 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zipkin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 监控指标 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.micrometer<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>micrometer-registry-prometheus<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="（二）统一配置文件"><a href="#（二）统一配置文件" class="headerlink" title="（二）统一配置文件"></a>（二）统一配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bootstrap.yml - 引导配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">$&#123;SERVICE_NAME:user-service&#125;</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">$&#123;SPRING_PROFILES_ACTIVE:dev&#125;</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="string">$&#123;NACOS_SERVER:localhost:8848&#125;</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">$&#123;NACOS_USERNAME:nacos&#125;</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">$&#123;NACOS_PASSWORD:nacos&#125;</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">$&#123;NACOS_NAMESPACE:&#125;</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">$&#123;NACOS_GROUP:DEFAULT_GROUP&#125;</span></span><br><span class="line">        <span class="attr">cluster-name:</span> <span class="string">$&#123;NACOS_CLUSTER:DEFAULT&#125;</span></span><br><span class="line">        <span class="attr">metadata:</span></span><br><span class="line">          <span class="attr">version:</span> <span class="string">$&#123;SERVICE_VERSION:1.0.0&#125;</span></span><br><span class="line">          <span class="attr">region:</span> <span class="string">$&#123;SERVICE_REGION:default&#125;</span></span><br><span class="line">      <span class="attr">config:</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">$&#123;NACOS_NAMESPACE:&#125;</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">$&#123;NACOS_GROUP:DEFAULT_GROUP&#125;</span></span><br><span class="line">        <span class="attr">file-extension:</span> <span class="string">yml</span></span><br><span class="line">        <span class="attr">shared-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">common.yml</span></span><br><span class="line">            <span class="attr">group:</span> <span class="string">$&#123;NACOS_GROUP:DEFAULT_GROUP&#125;</span></span><br><span class="line">            <span class="attr">refresh:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">extension-configs:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">data-id:</span> <span class="string">$&#123;spring.application.name&#125;-$&#123;spring.profiles.active&#125;.yml</span></span><br><span class="line">            <span class="attr">group:</span> <span class="string">$&#123;NACOS_GROUP:DEFAULT_GROUP&#125;</span></span><br><span class="line">            <span class="attr">refresh:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># application.yml - 应用配置</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">$&#123;SERVER_PORT:8080&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">health,info,metrics,prometheus</span></span><br><span class="line">  <span class="attr">endpoint:</span></span><br><span class="line">    <span class="attr">health:</span></span><br><span class="line">      <span class="attr">show-details:</span> <span class="string">always</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">    <span class="attr">export:</span></span><br><span class="line">      <span class="attr">prometheus:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.example:</span> <span class="string">$&#123;LOG_LEVEL:INFO&#125;</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%X&#123;traceId:-&#125;,%X&#123;spanId:-&#125;] [%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Zipkin链路追踪配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">$&#123;ZIPKIN_URL:http://localhost:9411&#125;</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="string">$&#123;SLEUTH_SAMPLE_RATE:0.1&#125;</span>  <span class="comment"># 10%采样率</span></span><br></pre></td></tr></table></figure>

<h3 id="（三）Docker容器化部署"><a href="#（三）Docker容器化部署" class="headerlink" title="（三）Docker容器化部署"></a>（三）Docker容器化部署</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dockerfile</span></span><br><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">11</span>-jre-slim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制jar包</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> target/*.jar app.jar</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置JVM参数</span></span><br><span class="line"><span class="keyword">ENV</span> JAVA_OPTS=<span class="string">&quot;-Xms512m -Xmx1024m -XX:+UseG1GC&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 健康检查</span></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="language-bash"> --interval=30s --<span class="built_in">timeout</span>=3s --start-period=60s --retries=3 \</span></span><br><span class="line"><span class="language-bash">  CMD curl -f http://localhost:8080/actuator/health || <span class="built_in">exit</span> 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动应用</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;java <span class="variable">$JAVA_OPTS</span> -jar app.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="comment"># Nacos注册中心和配置中心</span></span><br><span class="line">  <span class="attr">nacos:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nacos/nacos-server:v2.2.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nacos</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MODE=standalone</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_DATASOURCE_PLATFORM=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_SERVICE_HOST=mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_SERVICE_DB_NAME=nacos_config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_SERVICE_USER=nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_SERVICE_PASSWORD=nacos</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8848:8848&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># MySQL数据库</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_ROOT_PASSWORD=root</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_DATABASE=nacos_config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_USER=nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_PASSWORD=nacos</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql_data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Redis缓存</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:7-alpine</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6379:6379&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Zipkin链路追踪</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">openzipkin/zipkin:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">zipkin</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9411:9411&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Prometheus监控</span></span><br><span class="line">  <span class="attr">prometheus:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">prom/prometheus:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">prometheus</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9090:9090&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./prometheus.yml:/etc/prometheus/prometheus.yml</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Grafana可视化</span></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">grafana/grafana:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">grafana</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GF_SECURITY_ADMIN_PASSWORD=admin</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">grafana_data:/var/lib/grafana</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 用户服务</span></span><br><span class="line">  <span class="attr">user-service:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./user-service</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">user-service</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_PROFILES_ACTIVE=docker</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_SERVER=nacos:8848</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MYSQL_HOST=mysql:3306</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">REDIS_HOST=redis:6379</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ZIPKIN_URL=http://zipkin:9411</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8081:8080&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">zipkin</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># API网关</span></span><br><span class="line">  <span class="attr">gateway:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./gateway</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gateway</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SPRING_PROFILES_ACTIVE=docker</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NACOS_SERVER=nacos:8848</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nacos</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">user-service</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">mysql_data:</span></span><br><span class="line">  <span class="attr">grafana_data:</span></span><br></pre></td></tr></table></figure>

<h2 id="七、最佳实践与注意事项"><a href="#七、最佳实践与注意事项" class="headerlink" title="七、最佳实践与注意事项"></a>七、最佳实践与注意事项</h2><div class="note info flat"><p><strong>实践建议</strong><br>微服务架构的成功实施需要遵循一系列最佳实践，从服务拆分到运维监控，每个环节都至关重要。</p>
</div>

<h3 id="（一）服务拆分原则"><a href="#（一）服务拆分原则" class="headerlink" title="（一）服务拆分原则"></a>（一）服务拆分原则</h3><ol>
<li><strong>单一职责原则</strong>：每个服务只负责一个业务领域</li>
<li><strong>数据独立性</strong>：每个服务拥有独立的数据存储</li>
<li><strong>接口稳定性</strong>：服务间接口要保持向后兼容</li>
<li><strong>团队边界</strong>：服务边界与团队边界保持一致</li>
</ol>
<h3 id="（二）性能优化建议"><a href="#（二）性能优化建议" class="headerlink" title="（二）性能优化建议"></a>（二）性能优化建议</h3><ol>
<li><strong>连接池配置</strong>：合理配置数据库和HTTP连接池</li>
<li><strong>缓存策略</strong>：在适当的层级使用缓存</li>
<li><strong>异步处理</strong>：使用消息队列处理非实时业务</li>
<li><strong>资源限制</strong>：设置合理的CPU和内存限制</li>
</ol>
<h3 id="（三）安全考虑"><a href="#（三）安全考虑" class="headerlink" title="（三）安全考虑"></a>（三）安全考虑</h3><ol>
<li><strong>网络隔离</strong>：使用VPC和安全组进行网络隔离</li>
<li><strong>身份认证</strong>：统一的身份认证和授权机制</li>
<li><strong>数据加密</strong>：敏感数据传输和存储加密</li>
<li><strong>审计日志</strong>：记录关键操作的审计日志</li>
</ol>
<h3 id="（四）运维监控"><a href="#（四）运维监控" class="headerlink" title="（四）运维监控"></a>（四）运维监控</h3><ol>
<li><strong>健康检查</strong>：实现完善的健康检查机制</li>
<li><strong>日志规范</strong>：统一的日志格式和级别</li>
<li><strong>监控告警</strong>：建立完整的监控告警体系</li>
<li><strong>故障演练</strong>：定期进行故障演练和恢复测试</li>
</ol>
<h2 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h2><p>微服务架构的成功实施需要一套完整的基础设施支撑。本文介绍的四大核心组件各司其职，共同构建了现代分布式系统的技术基石：</p>
<ol>
<li><strong>服务网关</strong>：作为系统的统一入口，提供路由、认证、限流等功能</li>
<li><strong>注册中心</strong>：管理服务实例信息，实现服务发现和健康检查</li>
<li><strong>配置中心</strong>：集中管理配置信息，支持动态更新和环境隔离</li>
<li><strong>监控中心</strong>：提供全方位的系统监控和故障诊断能力</li>
</ol>
<p>这些组件相互配合，形成了一个完整的微服务生态系统。在实际项目中，建议根据业务规模和技术栈选择合适的技术方案，并建立完善的运维体系，确保微服务系统的稳定性和可靠性。</p>
<p>随着云原生技术的发展，这些组件也在不断演进，为构建更加健壮和高效的分布式系统提供了强有力的支撑。笔者建议在实施微服务架构时，要循序渐进，先从核心业务开始，逐步完善基础设施，最终构建出适合自己业务场景的微服务架构。</p>
<a class="btn-beautify outline" href="https://nacos.io/zh-cn/docs/quick-start.html" title="Nacos官方文档"><i class="fas fa-external-link-alt"></i><span>Nacos官方文档</span></a>
<a class="btn-beautify outline" href="https://spring.io/projects/spring-cloud-gateway" title="Spring Cloud Gateway"><i class="fas fa-external-link-alt"></i><span>Spring Cloud Gateway</span></a>
<a class="btn-beautify outline" href="https://prometheus.io/docs/" title="Prometheus监控"><i class="fas fa-external-link-alt"></i><span>Prometheus监控</span></a>

<div class="note success flat"><p><strong>相关文章推荐</strong></p>
<ul>
<li><a href="/posts/%E5%AD%A6%E4%B9%A0/Nacos%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E4%B8%8E%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97/">Nacos详解：微服务注册中心与配置中心实战指南</a></li>
<li><a href="/posts/%E5%90%8E%E7%AB%AF/Spring-Boot%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BC%81%E4%B8%9A%E7%BA%A7Java%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/">Spring Boot详解：企业级Java开发框架</a></li>
<li><a href="/posts/%E5%90%8E%E7%AB%AF/%E4%B8%9A%E5%8A%A1%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%80%89%E6%8B%A9%E6%8C%87%E5%8D%97/">业务模块划分与微服务架构选择指南</a></li>
</ul>
</div>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://spring.io/projects/spring-cloud">Spring Cloud官方文档</a></li>
<li><a href="https://microservices.io/">微服务架构设计模式</a></li>
<li><a href="https://prometheus.io/docs/">Prometheus监控实践指南</a></li>
<li><a href="https://zipkin.io/">分布式链路追踪技术解析</a></li>
<li><a href="https://nacos.io/zh-cn/docs/quick-start.html">Nacos官方文档</a></li>
<li><a href="https://konghq.com/kong/">Kong API网关实践</a></li>
<li><a href="https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/zh-cn/index.html">Spring Cloud Alibaba官方文档</a></li>
<li><a href="https://grafana.com/docs/">微服务监控最佳实践</a></li>
</ul>
<hr>
<p><em>本文深入解析了微服务架构中的核心功能组件，希望能够帮助读者理解和构建现代分布式系统。在实际应用中，建议根据具体业务需求选择合适的技术方案，并持续优化系统架构。</em></p>
]]></content>
    <summary type="html">
    <![CDATA[深入解析微服务架构中的核心功能组件，包括服务网关、注册中心、配置中心、监控中心等关键基础设施的原理、实现和最佳实践]]>
    
    </summary>
    
      <category term="微服务" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="分布式系统" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="注册中心" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    
      <category term="配置中心" scheme="https://hexo.blog.uwakeme.tech/tags/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    
      <category term="Spring Cloud" scheme="https://hexo.blog.uwakeme.tech/tags/Spring-Cloud/"/>
    
      <category term="服务网关" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3/"/>
    
      <category term="监控中心" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%9B%91%E6%8E%A7%E4%B8%AD%E5%BF%83/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】NW.js详解：用Web技术构建跨平台桌面应用的完整指南]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/18/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91NW.js%E8%AF%A6%E8%A7%A3%EF%BC%9A%E7%94%A8Web%E6%8A%80%E6%9C%AF%E6%9E%84%E5%BB%BA%E8%B7%A8%E5%B9%B3%E5%8F%B0%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/18/学习/【学习】NW.js详解：用Web技术构建跨平台桌面应用的完整指南/</id>
    <published>2025-08-17T16:00:00.000Z</published>
    <updated>2025-08-18T07:36:15.076Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代软件开发中，跨平台桌面应用开发一直是开发者面临的重要挑战。传统的桌面应用开发需要针对不同操作系统使用不同的技术栈，如Windows的C#&#x2F;.NET、macOS的Swift&#x2F;Objective-C、Linux的C++&#x2F;Qt等。这种分散的开发模式不仅增加了开发成本，也提高了维护难度。NW.js（原名node-webkit）的出现为这一问题提供了优雅的解决方案，它允许开发者使用熟悉的Web技术（HTML、CSS、JavaScript）来构建功能完整的跨平台桌面应用。本文将深入探讨NW.js的技术原理、开发实践和应用场景。</p>
<span id="more"></span>

<h1 id="一、NW-js技术概述"><a href="#一、NW-js技术概述" class="headerlink" title="一、NW.js技术概述"></a>一、NW.js技术概述</h1><h2 id="（一）什么是NW-js"><a href="#（一）什么是NW-js" class="headerlink" title="（一）什么是NW.js"></a>（一）什么是NW.js</h2><h3 id="1-基本定义"><a href="#1-基本定义" class="headerlink" title="1. 基本定义"></a>1. 基本定义</h3><p>NW.js是一个基于Chromium和Node.js的应用运行时框架，它将Web浏览器引擎与Node.js运行时环境相结合，使开发者能够使用HTML、CSS和JavaScript构建原生桌面应用程序。</p>
<h3 id="2-核心特性"><a href="#2-核心特性" class="headerlink" title="2. 核心特性"></a>2. 核心特性</h3><pre class="mermaid">graph TB
    A[NW.js核心特性] --> B[Web技术栈]
    A --> C[跨平台支持]
    A --> D[原生API访问]
    A --> E[简单易用]
    
    B --> B1[HTML/CSS界面]
    B --> B2[JavaScript逻辑]
    B --> B3[现代Web标准]
    
    C --> C1[Windows支持]
    C --> C2[macOS支持]
    C --> C3[Linux支持]
    
    D --> D1[文件系统访问]
    D --> D2[系统通知]
    D --> D3[菜单栏集成]
    
    E --> E1[零配置启动]
    E --> E2[快速原型开发]
    E --> E3[丰富的API]</pre>

<h3 id="3-技术架构"><a href="#3-技术架构" class="headerlink" title="3. 技术架构"></a>3. 技术架构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NW.js架构示意</span></span><br><span class="line"><span class="keyword">const</span> nwjsArchitecture = &#123;</span><br><span class="line">    <span class="comment">// 用户界面层：使用Web技术构建</span></span><br><span class="line">    <span class="attr">userInterface</span>: &#123;</span><br><span class="line">        <span class="attr">html</span>: <span class="string">&quot;页面结构和内容&quot;</span>,</span><br><span class="line">        <span class="attr">css</span>: <span class="string">&quot;样式和布局设计&quot;</span>, </span><br><span class="line">        <span class="attr">javascript</span>: <span class="string">&quot;交互逻辑和动态行为&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 应用运行时：NW.js核心</span></span><br><span class="line">    <span class="attr">runtime</span>: &#123;</span><br><span class="line">        <span class="attr">chromium</span>: <span class="string">&quot;Web渲染引擎，负责UI显示&quot;</span>,</span><br><span class="line">        <span class="attr">nodejs</span>: <span class="string">&quot;JavaScript运行时，提供系统API访问&quot;</span>,</span><br><span class="line">        <span class="attr">nwjsAPI</span>: <span class="string">&quot;桥接Web和系统的专用API&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 系统平台层：跨平台支持</span></span><br><span class="line">    <span class="attr">platform</span>: &#123;</span><br><span class="line">        <span class="attr">windows</span>: <span class="string">&quot;Windows桌面环境&quot;</span>,</span><br><span class="line">        <span class="attr">macos</span>: <span class="string">&quot;macOS桌面环境&quot;</span>,</span><br><span class="line">        <span class="attr">linux</span>: <span class="string">&quot;Linux桌面环境&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（二）NW-js-vs-其他桌面开发方案"><a href="#（二）NW-js-vs-其他桌面开发方案" class="headerlink" title="（二）NW.js vs 其他桌面开发方案"></a>（二）NW.js vs 其他桌面开发方案</h2><h3 id="1-与Electron的对比"><a href="#1-与Electron的对比" class="headerlink" title="1. 与Electron的对比"></a>1. 与Electron的对比</h3><table>
<thead>
<tr>
<th>特性</th>
<th>NW.js</th>
<th>Electron</th>
</tr>
</thead>
<tbody><tr>
<td><strong>架构设计</strong></td>
<td>单进程架构，Web和Node.js在同一上下文</td>
<td>多进程架构，主进程和渲染进程分离</td>
</tr>
<tr>
<td><strong>开发复杂度</strong></td>
<td>简单，可直接在DOM中使用Node.js</td>
<td>相对复杂，需要IPC通信</td>
</tr>
<tr>
<td><strong>内存占用</strong></td>
<td>约40MB</td>
<td>约45MB</td>
</tr>
<tr>
<td><strong>应用大小</strong></td>
<td>约78MB</td>
<td>约118MB</td>
</tr>
<tr>
<td><strong>安全性</strong></td>
<td>较低，Web和Node.js混合执行</td>
<td>较高，进程隔离提供更好安全性</td>
</tr>
<tr>
<td><strong>生态系统</strong></td>
<td>相对较小，Intel支持</td>
<td>庞大，GitHub&#x2F;Microsoft支持</td>
</tr>
<tr>
<td><strong>知名应用</strong></td>
<td>较少</td>
<td>VS Code、Slack、Discord等</td>
</tr>
</tbody></table>
<h3 id="2-开发体验对比"><a href="#2-开发体验对比" class="headerlink" title="2. 开发体验对比"></a>2. 开发体验对比</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NW.js：直接在Web页面中使用Node.js</span></span><br><span class="line"><span class="comment">// index.html</span></span><br><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>NW.js应用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文件系统操作<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;readFile()&quot;</span>&gt;</span>读取文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 直接使用Node.js模块，无需额外配置</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">function</span> <span class="title function_">readFile</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 直接调用Node.js API</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            fs.<span class="title function_">readFile</span>(<span class="string">&#x27;package.json&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="keyword">if</span> (err) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;读取文件失败:&#x27;</span>, err);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                    <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 直接操作DOM</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;content&#x27;</span>).<span class="property">textContent</span> = data;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 使用NW.js专用API</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;应用即将关闭&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="title function_">close</span>(<span class="literal">true</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Electron：需要主进程和渲染进程通信</span></span><br><span class="line"><span class="comment">// main.js (主进程)</span></span><br><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, ipcMain &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">        <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">        <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">            <span class="attr">nodeIntegration</span>: <span class="literal">false</span>, <span class="comment">// 安全考虑，禁用Node.js集成</span></span><br><span class="line">            <span class="attr">contextIsolation</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">preload</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;preload.js&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    win.<span class="title function_">loadFile</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理渲染进程的文件读取请求</span></span><br><span class="line">ipcMain.<span class="title function_">handle</span>(<span class="string">&#x27;read-file&#x27;</span>, <span class="title function_">async</span> (event, filePath) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">readFile</span>(filePath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// renderer.js (渲染进程)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">readFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 通过IPC与主进程通信</span></span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="variable language_">window</span>.<span class="property">electronAPI</span>.<span class="title function_">readFile</span>(<span class="string">&#x27;package.json&#x27;</span>);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;content&#x27;</span>).<span class="property">textContent</span> = data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;读取文件失败:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）NW-js的优势与局限"><a href="#（三）NW-js的优势与局限" class="headerlink" title="（三）NW.js的优势与局限"></a>（三）NW.js的优势与局限</h2><h3 id="1-主要优势"><a href="#1-主要优势" class="headerlink" title="1. 主要优势"></a>1. 主要优势</h3><ul>
<li><strong>开发简单</strong>：Web开发者可以直接上手，无需学习新的技术栈</li>
<li><strong>快速原型</strong>：可以快速将Web应用转换为桌面应用</li>
<li><strong>资源占用小</strong>：相比Electron，内存和磁盘占用更少</li>
<li><strong>API丰富</strong>：提供完整的桌面应用API支持</li>
<li><strong>兼容性好</strong>：支持较老的操作系统版本</li>
</ul>
<h3 id="2-主要局限"><a href="#2-主要局限" class="headerlink" title="2. 主要局限"></a>2. 主要局限</h3><ul>
<li><strong>安全性较低</strong>：Web和Node.js在同一上下文中运行</li>
<li><strong>生态系统小</strong>：相比Electron，社区和资源较少</li>
<li><strong>大型应用支持</strong>：不适合构建大型复杂应用</li>
<li><strong>调试复杂</strong>：单进程架构使调试相对困难</li>
</ul>
<h1 id="二、NW-js开发环境搭建"><a href="#二、NW-js开发环境搭建" class="headerlink" title="二、NW.js开发环境搭建"></a>二、NW.js开发环境搭建</h1><h2 id="（一）环境准备"><a href="#（一）环境准备" class="headerlink" title="（一）环境准备"></a>（一）环境准备</h2><h3 id="1-系统要求"><a href="#1-系统要求" class="headerlink" title="1. 系统要求"></a>1. 系统要求</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 支持的操作系统</span></span><br><span class="line">Windows: Windows 7 及以上版本</span><br><span class="line">macOS: macOS 10.10 及以上版本  </span><br><span class="line">Linux: Ubuntu 14.04 及以上版本</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发环境要求</span></span><br><span class="line">Node.js: 14.x 或更高版本</span><br><span class="line">npm: 6.x 或更高版本</span><br><span class="line">Python: 2.7 或 3.x（用于编译原生模块）</span><br></pre></td></tr></table></figure>

<h3 id="2-下载和安装NW-js"><a href="#2-下载和安装NW-js" class="headerlink" title="2. 下载和安装NW.js"></a>2. 下载和安装NW.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一：直接下载预编译版本</span></span><br><span class="line"><span class="comment"># 访问 https://nwjs.io/downloads/</span></span><br><span class="line"><span class="comment"># 下载对应平台的SDK版本（推荐用于开发）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二：通过npm安装</span></span><br><span class="line">npm install -g nw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法三：项目本地安装</span></span><br><span class="line">npm install --save-dev nw</span><br></pre></td></tr></table></figure>

<h3 id="3-验证安装"><a href="#3-验证安装" class="headerlink" title="3. 验证安装"></a>3. 验证安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查NW.js版本</span></span><br><span class="line">nw --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者如果是本地安装</span></span><br><span class="line">npx nw --version</span><br></pre></td></tr></table></figure>

<h2 id="（二）创建第一个NW-js应用"><a href="#（二）创建第一个NW-js应用" class="headerlink" title="（二）创建第一个NW.js应用"></a>（二）创建第一个NW.js应用</h2><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1. 项目结构"></a>1. 项目结构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">my-nwjs-app/</span><br><span class="line">├── package.json          # 应用配置文件</span><br><span class="line">├── index.html            # 主页面</span><br><span class="line">├── style.css             # 样式文件</span><br><span class="line">├── script.js             # 脚本文件</span><br><span class="line">├── assets/               # 资源文件夹</span><br><span class="line">│   ├── icons/           # 图标文件</span><br><span class="line">│   └── images/          # 图片文件</span><br><span class="line">└── node_modules/        # 依赖模块</span><br></pre></td></tr></table></figure>

<h3 id="2-配置package-json"><a href="#2-配置package-json" class="headerlink" title="2. 配置package.json"></a>2. 配置package.json</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-nwjs-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我的第一个NW.js应用&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw . --enable-logging&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nwbuild -p win32,osx,linux64 -v 0.88.0 .&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我的NW.js应用&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">1024</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">768</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_width&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_height&quot;</span><span class="punctuation">:</span> <span class="number">600</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assets/icons/app.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;center&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resizable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;show_in_taskbar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;frame&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;kiosk&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fullscreen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;webkit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;plugin&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;java&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;page-cache&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;nw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.88.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nwjs-builder-phoenix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.15.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-创建主页面"><a href="#3-创建主页面" class="headerlink" title="3. 创建主页面"></a>3. 创建主页面</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的NW.js应用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>欢迎使用NW.js应用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个使用Web技术构建的桌面应用<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;features&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;feature-card&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>文件操作<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;selectFile()&quot;</span>&gt;</span>选择文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;saveFile()&quot;</span>&gt;</span>保存文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;file-info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;feature-card&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>系统信息<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getSystemInfo()&quot;</span>&gt;</span>获取系统信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;system-info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;feature-card&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>窗口控制<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;minimizeWindow()&quot;</span>&gt;</span>最小化<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;maximizeWindow()&quot;</span>&gt;</span>最大化<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;closeWindow()&quot;</span>&gt;</span>关闭应用<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>基于NW.js构建 | 版本: <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;version&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-添加样式"><a href="#4-添加样式" class="headerlink" title="4. 添加样式"></a>4. 添加样式</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* style.css */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Segoe UI&#x27;</span>, Tahoma, Geneva, Verdana, sans-serif;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="number">#667eea</span> <span class="number">0%</span>, <span class="number">#764ba2</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2.5em</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">4px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.features</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fit, <span class="built_in">minmax</span>(<span class="number">300px</span>, <span class="number">1</span>fr));</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.feature-card</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.feature-card</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.feature-card</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#667eea</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#667eea</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: background <span class="number">0.3s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#5a67d8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">1px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#file-info</span>, <span class="selector-id">#system-info</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#f7fafc</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#667eea</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: monospace;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 响应式设计 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.features</span> &#123;</span><br><span class="line">        <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">header</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-class">.feature-card</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5-实现应用逻辑"><a href="#5-实现应用逻辑" class="headerlink" title="5. 实现应用逻辑"></a>5. 实现应用逻辑</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// script.js</span></span><br><span class="line"><span class="comment">// 应用初始化</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 显示应用版本信息</span></span><br><span class="line">    <span class="keyword">const</span> versionElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;version&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (versionElement) &#123;</span><br><span class="line">        versionElement.<span class="property">textContent</span> = nw.<span class="property">App</span>.<span class="property">manifest</span>.<span class="property">version</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置窗口事件监听</span></span><br><span class="line">    <span class="title function_">setupWindowEvents</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;NW.js应用已启动&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件选择功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">selectFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fileInput = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">    fileInput.<span class="property">type</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">    fileInput.<span class="property">accept</span> = <span class="string">&#x27;.txt,.json,.js,.html,.css&#x27;</span>; <span class="comment">// 限制文件类型</span></span><br><span class="line">    </span><br><span class="line">    fileInput.<span class="property">onchange</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> file = event.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (file) &#123;</span><br><span class="line">            <span class="title function_">displayFileInfo</span>(file);</span><br><span class="line">            <span class="title function_">readFileContent</span>(file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    fileInput.<span class="title function_">click</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示文件信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">displayFileInfo</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> fileInfoDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file-info&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> fileInfo = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;strong&gt;文件信息：&lt;/strong&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">        名称: <span class="subst">$&#123;file.name&#125;</span>&lt;br&gt;</span></span><br><span class="line"><span class="string">        大小: <span class="subst">$&#123;formatFileSize(file.size)&#125;</span>&lt;br&gt;</span></span><br><span class="line"><span class="string">        类型: <span class="subst">$&#123;file.type || <span class="string">&#x27;未知&#x27;</span>&#125;</span>&lt;br&gt;</span></span><br><span class="line"><span class="string">        最后修改: <span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>(file.lastModified).toLocaleString()&#125;</span></span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    fileInfoDiv.<span class="property">innerHTML</span> = fileInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readFileContent</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">    reader.<span class="property">onload</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> content = e.<span class="property">target</span>.<span class="property">result</span>;</span><br><span class="line">        <span class="keyword">const</span> fileInfoDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file-info&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果是文本文件，显示部分内容</span></span><br><span class="line">        <span class="keyword">if</span> (file.<span class="property">type</span>.<span class="title function_">startsWith</span>(<span class="string">&#x27;text/&#x27;</span>) || file.<span class="property">name</span>.<span class="title function_">endsWith</span>(<span class="string">&#x27;.json&#x27;</span>) || file.<span class="property">name</span>.<span class="title function_">endsWith</span>(<span class="string">&#x27;.js&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">const</span> preview = content.<span class="property">length</span> &gt; <span class="number">200</span> ? content.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">200</span>) + <span class="string">&#x27;...&#x27;</span> : content;</span><br><span class="line">            fileInfoDiv.<span class="property">innerHTML</span> += <span class="string">`&lt;br&gt;&lt;br&gt;&lt;strong&gt;内容预览：&lt;/strong&gt;&lt;br&gt;&lt;pre&gt;<span class="subst">$&#123;preview&#125;</span>&lt;/pre&gt;`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    reader.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;文件读取失败&#x27;</span>);</span><br><span class="line">        <span class="title function_">showNotification</span>(<span class="string">&#x27;文件读取失败&#x27;</span>, <span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    reader.<span class="title function_">readAsText</span>(file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存文件功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">saveFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> content = <span class="string">`# NW.js应用生成的文件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">这是一个由NW.js应用生成的示例文件。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">生成时间: <span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()&#125;</span></span></span><br><span class="line"><span class="string">应用版本: <span class="subst">$&#123;nw.App.manifest.version&#125;</span></span></span><br><span class="line"><span class="string">用户代理: <span class="subst">$&#123;navigator.userAgent&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 系统信息</span></span><br><span class="line"><span class="string">平台: <span class="subst">$&#123;process.platform&#125;</span></span></span><br><span class="line"><span class="string">架构: <span class="subst">$&#123;process.arch&#125;</span></span></span><br><span class="line"><span class="string">Node.js版本: <span class="subst">$&#123;process.version&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用NW.js的文件保存对话框</span></span><br><span class="line">    <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建文件保存对话框</span></span><br><span class="line">    <span class="keyword">const</span> saveDialog = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">    saveDialog.<span class="property">type</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">    saveDialog.<span class="property">nwsaveas</span> = <span class="string">&#x27;nwjs-sample.md&#x27;</span>; <span class="comment">// 默认文件名</span></span><br><span class="line">    saveDialog.<span class="property">accept</span> = <span class="string">&#x27;.md,.txt&#x27;</span>; <span class="comment">// 允许的文件类型</span></span><br><span class="line">    </span><br><span class="line">    saveDialog.<span class="property">onchange</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> filePath = event.<span class="property">target</span>.<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">if</span> (filePath) &#123;</span><br><span class="line">            fs.<span class="title function_">writeFile</span>(filePath, content, <span class="string">&#x27;utf8&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;文件保存失败:&#x27;</span>, err);</span><br><span class="line">                    <span class="title function_">showNotification</span>(<span class="string">&#x27;文件保存失败&#x27;</span>, <span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;文件保存成功:&#x27;</span>, filePath);</span><br><span class="line">                    <span class="title function_">showNotification</span>(<span class="string">&#x27;文件保存成功&#x27;</span>, <span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 更新文件信息显示</span></span><br><span class="line">                    <span class="keyword">const</span> fileInfoDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file-info&#x27;</span>);</span><br><span class="line">                    fileInfoDiv.<span class="property">innerHTML</span> = <span class="string">`&lt;strong&gt;文件已保存到：&lt;/strong&gt;&lt;br&gt;<span class="subst">$&#123;filePath&#125;</span>`</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    saveDialog.<span class="title function_">click</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取系统信息</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSystemInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> os = <span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> process = <span class="built_in">require</span>(<span class="string">&#x27;process&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> systemInfo = &#123;</span><br><span class="line">        <span class="attr">platform</span>: os.<span class="title function_">platform</span>(),</span><br><span class="line">        <span class="attr">arch</span>: os.<span class="title function_">arch</span>(),</span><br><span class="line">        <span class="attr">release</span>: os.<span class="title function_">release</span>(),</span><br><span class="line">        <span class="attr">hostname</span>: os.<span class="title function_">hostname</span>(),</span><br><span class="line">        <span class="attr">cpus</span>: os.<span class="title function_">cpus</span>().<span class="property">length</span>,</span><br><span class="line">        <span class="attr">totalMemory</span>: <span class="title function_">formatFileSize</span>(os.<span class="title function_">totalmem</span>()),</span><br><span class="line">        <span class="attr">freeMemory</span>: <span class="title function_">formatFileSize</span>(os.<span class="title function_">freemem</span>()),</span><br><span class="line">        <span class="attr">uptime</span>: <span class="title function_">formatUptime</span>(os.<span class="title function_">uptime</span>()),</span><br><span class="line">        <span class="attr">nodeVersion</span>: process.<span class="property">version</span>,</span><br><span class="line">        <span class="attr">nwVersion</span>: process.<span class="property">versions</span>.<span class="property">nw</span>,</span><br><span class="line">        <span class="attr">chromiumVersion</span>: process.<span class="property">versions</span>.<span class="property">chromium</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> systemInfoDiv = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;system-info&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> infoHtml = <span class="string">&#x27;&lt;strong&gt;系统信息：&lt;/strong&gt;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(systemInfo)) &#123;</span><br><span class="line">        <span class="keyword">const</span> label = <span class="title function_">getSystemInfoLabel</span>(key);</span><br><span class="line">        infoHtml += <span class="string">`<span class="subst">$&#123;label&#125;</span>: <span class="subst">$&#123;value&#125;</span>&lt;br&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    systemInfoDiv.<span class="property">innerHTML</span> = infoHtml;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 窗口控制功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">minimizeWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">minimize</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">maximizeWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">    <span class="keyword">if</span> (win.<span class="property">isMaximized</span>) &#123;</span><br><span class="line">        win.<span class="title function_">unmaximize</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        win.<span class="title function_">maximize</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">closeWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_">confirm</span>(<span class="string">&#x27;确定要关闭应用吗？&#x27;</span>)) &#123;</span><br><span class="line">        nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置窗口事件监听</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setupWindowEvents</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 窗口关闭事件</span></span><br><span class="line">    win.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;应用即将关闭&#x27;</span>);</span><br><span class="line">        <span class="comment">// 可以在这里保存用户数据或执行清理操作</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">close</span>(<span class="literal">true</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 窗口最小化事件</span></span><br><span class="line">    win.<span class="title function_">on</span>(<span class="string">&#x27;minimize&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口已最小化&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 窗口最大化事件</span></span><br><span class="line">    win.<span class="title function_">on</span>(<span class="string">&#x27;maximize&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口已最大化&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 窗口恢复事件</span></span><br><span class="line">    win.<span class="title function_">on</span>(<span class="string">&#x27;restore&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口已恢复&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatFileSize</span>(<span class="params">bytes</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (bytes === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&#x27;0 Bytes&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> k = <span class="number">1024</span>;</span><br><span class="line">    <span class="keyword">const</span> sizes = [<span class="string">&#x27;Bytes&#x27;</span>, <span class="string">&#x27;KB&#x27;</span>, <span class="string">&#x27;MB&#x27;</span>, <span class="string">&#x27;GB&#x27;</span>];</span><br><span class="line">    <span class="keyword">const</span> i = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">log</span>(bytes) / <span class="title class_">Math</span>.<span class="title function_">log</span>(k));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>((bytes / <span class="title class_">Math</span>.<span class="title function_">pow</span>(k, i)).<span class="title function_">toFixed</span>(<span class="number">2</span>)) + <span class="string">&#x27; &#x27;</span> + sizes[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatUptime</span>(<span class="params">seconds</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> days = <span class="title class_">Math</span>.<span class="title function_">floor</span>(seconds / <span class="number">86400</span>);</span><br><span class="line">    <span class="keyword">const</span> hours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((seconds % <span class="number">86400</span>) / <span class="number">3600</span>);</span><br><span class="line">    <span class="keyword">const</span> minutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((seconds % <span class="number">3600</span>) / <span class="number">60</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;days&#125;</span>天 <span class="subst">$&#123;hours&#125;</span>小时 <span class="subst">$&#123;minutes&#125;</span>分钟`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSystemInfoLabel</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> labels = &#123;</span><br><span class="line">        <span class="attr">platform</span>: <span class="string">&#x27;操作系统&#x27;</span>,</span><br><span class="line">        <span class="attr">arch</span>: <span class="string">&#x27;系统架构&#x27;</span>,</span><br><span class="line">        <span class="attr">release</span>: <span class="string">&#x27;系统版本&#x27;</span>,</span><br><span class="line">        <span class="attr">hostname</span>: <span class="string">&#x27;主机名&#x27;</span>,</span><br><span class="line">        <span class="attr">cpus</span>: <span class="string">&#x27;CPU核心数&#x27;</span>,</span><br><span class="line">        <span class="attr">totalMemory</span>: <span class="string">&#x27;总内存&#x27;</span>,</span><br><span class="line">        <span class="attr">freeMemory</span>: <span class="string">&#x27;可用内存&#x27;</span>,</span><br><span class="line">        <span class="attr">uptime</span>: <span class="string">&#x27;系统运行时间&#x27;</span>,</span><br><span class="line">        <span class="attr">nodeVersion</span>: <span class="string">&#x27;Node.js版本&#x27;</span>,</span><br><span class="line">        <span class="attr">nwVersion</span>: <span class="string">&#x27;NW.js版本&#x27;</span>,</span><br><span class="line">        <span class="attr">chromiumVersion</span>: <span class="string">&#x27;Chromium版本&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> labels[key] || key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showNotification</span>(<span class="params">message, type = <span class="string">&#x27;info&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建通知元素</span></span><br><span class="line">    <span class="keyword">const</span> notification = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">    notification.<span class="property">className</span> = <span class="string">`notification <span class="subst">$&#123;type&#125;</span>`</span>;</span><br><span class="line">    notification.<span class="property">textContent</span> = message;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加样式</span></span><br><span class="line">    notification.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        top: 20px;</span></span><br><span class="line"><span class="string">        right: 20px;</span></span><br><span class="line"><span class="string">        padding: 15px 20px;</span></span><br><span class="line"><span class="string">        border-radius: 5px;</span></span><br><span class="line"><span class="string">        color: white;</span></span><br><span class="line"><span class="string">        font-weight: bold;</span></span><br><span class="line"><span class="string">        z-index: 1000;</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        transition: opacity 0.3s ease;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;type === <span class="string">&#x27;success&#x27;</span> ? <span class="string">&#x27;background: #48bb78;&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;type === <span class="string">&#x27;error&#x27;</span> ? <span class="string">&#x27;background: #f56565;&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;type === <span class="string">&#x27;info&#x27;</span> ? <span class="string">&#x27;background: #4299e1;&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(notification);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示动画</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        notification.<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自动隐藏</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        notification.<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(notification);</span><br><span class="line">        &#125;, <span class="number">300</span>);</span><br><span class="line">    &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘快捷键支持</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="comment">// Ctrl+Q 或 Cmd+Q 退出应用</span></span><br><span class="line">    <span class="keyword">if</span> ((event.<span class="property">ctrlKey</span> || event.<span class="property">metaKey</span>) &amp;&amp; event.<span class="property">key</span> === <span class="string">&#x27;q&#x27;</span>) &#123;</span><br><span class="line">        event.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="title function_">closeWindow</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// F11 切换全屏</span></span><br><span class="line">    <span class="keyword">if</span> (event.<span class="property">key</span> === <span class="string">&#x27;F11&#x27;</span>) &#123;</span><br><span class="line">        event.<span class="title function_">preventDefault</span>();</span><br><span class="line">        <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">        win.<span class="title function_">toggleFullscreen</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// F12 打开开发者工具</span></span><br><span class="line">    <span class="keyword">if</span> (event.<span class="property">key</span> === <span class="string">&#x27;F12&#x27;</span>) &#123;</span><br><span class="line">        event.<span class="title function_">preventDefault</span>();</span><br><span class="line">        nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">showDevTools</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="6-运行应用"><a href="#6-运行应用" class="headerlink" title="6. 运行应用"></a>6. 运行应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录</span></span><br><span class="line"><span class="built_in">cd</span> my-nwjs-app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖（如果有的话）</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动应用</span></span><br><span class="line">npm start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者直接使用nw命令</span></span><br><span class="line">nw .</span><br></pre></td></tr></table></figure>

<h1 id="三、NW-js高级功能与API详解"><a href="#三、NW-js高级功能与API详解" class="headerlink" title="三、NW.js高级功能与API详解"></a>三、NW.js高级功能与API详解</h1><h2 id="（一）菜单系统开发"><a href="#（一）菜单系统开发" class="headerlink" title="（一）菜单系统开发"></a>（一）菜单系统开发</h2><h3 id="1-创建应用菜单"><a href="#1-创建应用菜单" class="headerlink" title="1. 创建应用菜单"></a>1. 创建应用菜单</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建菜单栏的完整示例</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createApplicationMenu</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建菜单栏</span></span><br><span class="line">    <span class="keyword">const</span> menubar = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;menubar&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件菜单</span></span><br><span class="line">    <span class="keyword">const</span> fileMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line">    fileMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;新建&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+N&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">createNewDocument</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    fileMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;打开&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+O&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">openDocument</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    fileMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;保存&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+S&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">saveDocument</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    fileMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;separator&#x27;</span> &#125;));</span><br><span class="line"></span><br><span class="line">    fileMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;退出&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+Q&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            nw.<span class="property">App</span>.<span class="title function_">quit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 编辑菜单</span></span><br><span class="line">    <span class="keyword">const</span> editMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line">    editMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;撤销&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+Z&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;undo&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    editMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;重做&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+Y&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;redo&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    editMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;separator&#x27;</span> &#125;));</span><br><span class="line"></span><br><span class="line">    editMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;复制&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+C&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    editMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;粘贴&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;CmdOrCtrl+V&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;paste&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 视图菜单</span></span><br><span class="line">    <span class="keyword">const</span> viewMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line">    viewMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;全屏&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;F11&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">            win.<span class="title function_">toggleFullscreen</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    viewMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;开发者工具&#x27;</span>,</span><br><span class="line">        <span class="attr">accelerator</span>: <span class="string">&#x27;F12&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">showDevTools</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 帮助菜单</span></span><br><span class="line">    <span class="keyword">const</span> helpMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line">    helpMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;关于&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">showAboutDialog</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将子菜单添加到菜单栏</span></span><br><span class="line">    menubar.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;文件&#x27;</span>,</span><br><span class="line">        <span class="attr">submenu</span>: fileMenu</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    menubar.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;编辑&#x27;</span>,</span><br><span class="line">        <span class="attr">submenu</span>: editMenu</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    menubar.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;视图&#x27;</span>,</span><br><span class="line">        <span class="attr">submenu</span>: viewMenu</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    menubar.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;帮助&#x27;</span>,</span><br><span class="line">        <span class="attr">submenu</span>: helpMenu</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置窗口菜单</span></span><br><span class="line">    nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="property">menu</span> = menubar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建右键上下文菜单</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createContextMenu</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> contextMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line"></span><br><span class="line">    contextMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;复制&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    contextMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;粘贴&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;paste&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    contextMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;separator&#x27;</span> &#125;));</span><br><span class="line"></span><br><span class="line">    contextMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;刷新&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            location.<span class="title function_">reload</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绑定右键事件</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;contextmenu&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        e.<span class="title function_">preventDefault</span>();</span><br><span class="line">        contextMenu.<span class="title function_">popup</span>(e.<span class="property">x</span>, e.<span class="property">y</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-系统托盘集成"><a href="#2-系统托盘集成" class="headerlink" title="2. 系统托盘集成"></a>2. 系统托盘集成</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建系统托盘图标</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createTrayIcon</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建托盘图标</span></span><br><span class="line">    <span class="keyword">const</span> tray = <span class="keyword">new</span> nw.<span class="title class_">Tray</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;我的NW.js应用&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;assets/icons/tray.png&#x27;</span>,</span><br><span class="line">        <span class="attr">alticon</span>: <span class="string">&#x27;assets/icons/tray-alt.png&#x27;</span>, <span class="comment">// macOS替代图标</span></span><br><span class="line">        <span class="attr">iconsAreTemplates</span>: <span class="literal">false</span> <span class="comment">// macOS模板图标</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建托盘菜单</span></span><br><span class="line">    <span class="keyword">const</span> trayMenu = <span class="keyword">new</span> nw.<span class="title class_">Menu</span>();</span><br><span class="line"></span><br><span class="line">    trayMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;显示主窗口&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">            win.<span class="title function_">show</span>();</span><br><span class="line">            win.<span class="title function_">focus</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    trayMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;隐藏窗口&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            nw.<span class="property">Window</span>.<span class="title function_">get</span>().<span class="title function_">hide</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    trayMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;separator&#x27;</span> &#125;));</span><br><span class="line"></span><br><span class="line">    trayMenu.<span class="title function_">append</span>(<span class="keyword">new</span> nw.<span class="title class_">MenuItem</span>(&#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&#x27;退出应用&#x27;</span>,</span><br><span class="line">        <span class="attr">click</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            nw.<span class="property">App</span>.<span class="title function_">quit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置托盘菜单</span></span><br><span class="line">    tray.<span class="property">menu</span> = trayMenu;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 托盘图标点击事件</span></span><br><span class="line">    tray.<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> win = nw.<span class="property">Window</span>.<span class="title function_">get</span>();</span><br><span class="line">        <span class="keyword">if</span> (win.<span class="property">isMinimized</span>) &#123;</span><br><span class="line">            win.<span class="title function_">restore</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            win.<span class="title function_">show</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        win.<span class="title function_">focus</span>();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）文件系统操作"><a href="#（二）文件系统操作" class="headerlink" title="（二）文件系统操作"></a>（二）文件系统操作</h2><h3 id="1-高级文件处理"><a href="#1-高级文件处理" class="headerlink" title="1. 高级文件处理"></a>1. 高级文件处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件管理器功能实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fs</span> = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">path</span> = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentPath</span> = process.<span class="title function_">cwd</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取目录内容</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">readDirectory</span>(<span class="params">dirPath = <span class="variable language_">this</span>.currentPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> items = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">readdir</span>(dirPath, &#123; <span class="attr">withFileTypes</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            <span class="keyword">const</span> result = [];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> items) &#123;</span><br><span class="line">                <span class="keyword">const</span> fullPath = <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">join</span>(dirPath, item.<span class="property">name</span>);</span><br><span class="line">                <span class="keyword">const</span> stats = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">stat</span>(fullPath);</span><br><span class="line"></span><br><span class="line">                result.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">                    <span class="attr">path</span>: fullPath,</span><br><span class="line">                    <span class="attr">isDirectory</span>: item.<span class="title function_">isDirectory</span>(),</span><br><span class="line">                    <span class="attr">isFile</span>: item.<span class="title function_">isFile</span>(),</span><br><span class="line">                    <span class="attr">size</span>: stats.<span class="property">size</span>,</span><br><span class="line">                    <span class="attr">modified</span>: stats.<span class="property">mtime</span>,</span><br><span class="line">                    <span class="attr">created</span>: stats.<span class="property">birthtime</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 目录优先，然后按名称排序</span></span><br><span class="line">                <span class="keyword">if</span> (a.<span class="property">isDirectory</span> &amp;&amp; !b.<span class="property">isDirectory</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (!a.<span class="property">isDirectory</span> &amp;&amp; b.<span class="property">isDirectory</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> a.<span class="property">name</span>.<span class="title function_">localeCompare</span>(b.<span class="property">name</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;读取目录失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建目录</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">createDirectory</span>(<span class="params">dirPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">mkdir</span>(dirPath, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;创建目录失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除文件或目录</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">deleteItem</span>(<span class="params">itemPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> stats = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">stat</span>(itemPath);</span><br><span class="line">            <span class="keyword">if</span> (stats.<span class="title function_">isDirectory</span>()) &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">rmdir</span>(itemPath, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">unlink</span>(itemPath);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;删除失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复制文件</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">copyFile</span>(<span class="params">sourcePath, destPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">copyFile</span>(sourcePath, destPath);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;复制文件失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动/重命名文件</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">moveFile</span>(<span class="params">oldPath, newPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">rename</span>(oldPath, newPath);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;移动文件失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听文件变化</span></span><br><span class="line">    <span class="title function_">watchDirectory</span>(<span class="params">dirPath, callback</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> watcher = <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="title function_">watch</span>(dirPath, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;, <span class="function">(<span class="params">eventType, filename</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (filename) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>: eventType,</span><br><span class="line">                    <span class="attr">filename</span>: filename,</span><br><span class="line">                    <span class="attr">fullPath</span>: <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">join</span>(dirPath, filename)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> watcher;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> fileManager = <span class="keyword">new</span> <span class="title class_">FileManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">displayDirectoryContents</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> items = <span class="keyword">await</span> fileManager.<span class="title function_">readDirectory</span>();</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file-list&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        container.<span class="property">innerHTML</span> = items.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;file-item <span class="subst">$&#123;item.isDirectory ? <span class="string">&#x27;directory&#x27;</span> : <span class="string">&#x27;file&#x27;</span>&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;file-icon&quot;&gt;</span></span><br><span class="line"><span class="string">                    <span class="subst">$&#123;item.isDirectory ? <span class="string">&#x27;📁&#x27;</span> : <span class="string">&#x27;📄&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;file-info&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;file-name&quot;&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;file-details&quot;&gt;</span></span><br><span class="line"><span class="string">                        <span class="subst">$&#123;item.isFile ? formatFileSize(item.size) + <span class="string">&#x27; - &#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">                        <span class="subst">$&#123;item.modified.toLocaleString()&#125;</span></span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;file-actions&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;button onclick=&quot;openItem(&#x27;<span class="subst">$&#123;item.path&#125;</span>&#x27;)&quot;&gt;打开&lt;/button&gt;</span></span><br><span class="line"><span class="string">                    &lt;button onclick=&quot;deleteItem(&#x27;<span class="subst">$&#123;item.path&#125;</span>&#x27;)&quot;&gt;删除&lt;/button&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>).<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="title function_">showNotification</span>(<span class="string">&#x27;读取目录失败: &#x27;</span> + error.<span class="property">message</span>, <span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）网络通信与数据处理"><a href="#（三）网络通信与数据处理" class="headerlink" title="（三）网络通信与数据处理"></a>（三）网络通信与数据处理</h2><h3 id="1-HTTP请求处理"><a href="#1-HTTP请求处理" class="headerlink" title="1. HTTP请求处理"></a>1. HTTP请求处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HTTP客户端封装</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HttpClient</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">https</span> = <span class="built_in">require</span>(<span class="string">&#x27;https&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">http</span> = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">url</span> = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// GET请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">get</span>(<span class="params">urlString, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(<span class="string">&#x27;GET&#x27;</span>, urlString, <span class="literal">null</span>, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// POST请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">post</span>(<span class="params">urlString, data, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(<span class="string">&#x27;POST&#x27;</span>, urlString, data, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// PUT请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">put</span>(<span class="params">urlString, data, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(<span class="string">&#x27;PUT&#x27;</span>, urlString, data, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// DELETE请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">delete</span>(<span class="params">urlString, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(<span class="string">&#x27;DELETE&#x27;</span>, urlString, <span class="literal">null</span>, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通用请求方法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">request</span>(<span class="params">method, urlString, data, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> parsedUrl = <span class="variable language_">this</span>.<span class="property">url</span>.<span class="title function_">parse</span>(urlString);</span><br><span class="line">            <span class="keyword">const</span> isHttps = parsedUrl.<span class="property">protocol</span> === <span class="string">&#x27;https:&#x27;</span>;</span><br><span class="line">            <span class="keyword">const</span> httpModule = isHttps ? <span class="variable language_">this</span>.<span class="property">https</span> : <span class="variable language_">this</span>.<span class="property">http</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">const</span> requestOptions = &#123;</span><br><span class="line">                <span class="attr">hostname</span>: parsedUrl.<span class="property">hostname</span>,</span><br><span class="line">                <span class="attr">port</span>: parsedUrl.<span class="property">port</span> || (isHttps ? <span class="number">443</span> : <span class="number">80</span>),</span><br><span class="line">                <span class="attr">path</span>: parsedUrl.<span class="property">path</span>,</span><br><span class="line">                <span class="attr">method</span>: method,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;NW.js Application&#x27;</span>,</span><br><span class="line">                    ...options.<span class="property">headers</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (data) &#123;</span><br><span class="line">                <span class="keyword">const</span> jsonData = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">                requestOptions.<span class="property">headers</span>[<span class="string">&#x27;Content-Length&#x27;</span>] = <span class="title class_">Buffer</span>.<span class="title function_">byteLength</span>(jsonData);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">const</span> req = httpModule.<span class="title function_">request</span>(requestOptions, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> responseData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                res.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">                    responseData += chunk;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                res.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">const</span> result = &#123;</span><br><span class="line">                            <span class="attr">statusCode</span>: res.<span class="property">statusCode</span>,</span><br><span class="line">                            <span class="attr">headers</span>: res.<span class="property">headers</span>,</span><br><span class="line">                            <span class="attr">data</span>: responseData</span><br><span class="line">                        &#125;;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 尝试解析JSON响应</span></span><br><span class="line">                        <span class="keyword">if</span> (res.<span class="property">headers</span>[<span class="string">&#x27;content-type&#x27;</span>]?.<span class="title function_">includes</span>(<span class="string">&#x27;application/json&#x27;</span>)) &#123;</span><br><span class="line">                            result.<span class="property">data</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(responseData);</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="title function_">resolve</span>(result);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                        <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;响应解析失败: &#x27;</span> + error.<span class="property">message</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            req.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;请求失败: &#x27;</span> + error.<span class="property">message</span>));</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            req.<span class="title function_">on</span>(<span class="string">&#x27;timeout&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                req.<span class="title function_">destroy</span>();</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;请求超时&#x27;</span>));</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置超时</span></span><br><span class="line">            req.<span class="built_in">setTimeout</span>(options.<span class="property">timeout</span> || <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送数据</span></span><br><span class="line">            <span class="keyword">if</span> (data) &#123;</span><br><span class="line">                req.<span class="title function_">write</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            req.<span class="title function_">end</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> httpClient = <span class="keyword">new</span> <span class="title class_">HttpClient</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchWeatherData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_">showLoading</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> httpClient.<span class="title function_">get</span>(</span><br><span class="line">            <span class="string">&#x27;https://api.openweathermap.org/data/2.5/weather?q=Beijing&amp;appid=YOUR_API_KEY&amp;units=metric&#x27;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="title function_">displayWeatherData</span>(response.<span class="property">data</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`HTTP <span class="subst">$&#123;response.statusCode&#125;</span>: 请求失败`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取天气数据失败:&#x27;</span>, error);</span><br><span class="line">        <span class="title function_">showNotification</span>(<span class="string">&#x27;获取天气数据失败: &#x27;</span> + error.<span class="property">message</span>, <span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="title function_">showLoading</span>(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">displayWeatherData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> weatherContainer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;weather-info&#x27;</span>);</span><br><span class="line">    weatherContainer.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;weather-card&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;<span class="subst">$&#123;data.name&#125;</span>, <span class="subst">$&#123;data.sys.country&#125;</span>&lt;/h3&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;weather-main&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;temperature&quot;&gt;<span class="subst">$&#123;<span class="built_in">Math</span>.round(data.main.temp)&#125;</span>°C&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;description&quot;&gt;<span class="subst">$&#123;data.weather[<span class="number">0</span>].description&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;weather-details&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div&gt;体感温度: <span class="subst">$&#123;<span class="built_in">Math</span>.round(data.main.feels_like)&#125;</span>°C&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div&gt;湿度: <span class="subst">$&#123;data.main.humidity&#125;</span>%&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div&gt;风速: <span class="subst">$&#123;data.wind.speed&#125;</span> m/s&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div&gt;气压: <span class="subst">$&#123;data.main.pressure&#125;</span> hPa&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-WebSocket通信"><a href="#2-WebSocket通信" class="headerlink" title="2. WebSocket通信"></a>2. WebSocket通信</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WebSocket客户端封装</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebSocketClient</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">url</span> = url;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span> = <span class="number">5</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">reconnectInterval</span> = <span class="number">3000</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventHandlers</span> = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接WebSocket</span></span><br><span class="line">    <span class="title function_">connect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="variable language_">this</span>.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onopen</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket连接已建立&#x27;</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;open&#x27;</span>, event);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onmessage</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;message&#x27;</span>, data);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;message&#x27;</span>, event.<span class="property">data</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onclose</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket连接已关闭&#x27;</span>, event.<span class="property">code</span>, event.<span class="property">reason</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;close&#x27;</span>, event);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 自动重连</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> &lt; <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span>) &#123;</span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span>++;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`尝试重连 (<span class="subst">$&#123;<span class="variable language_">this</span>.reconnectAttempts&#125;</span>/<span class="subst">$&#123;<span class="variable language_">this</span>.maxReconnectAttempts&#125;</span>)`</span>);</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">                    &#125;, <span class="variable language_">this</span>.<span class="property">reconnectInterval</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onerror</span> = <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket错误:&#x27;</span>, error);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, error);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket连接失败:&#x27;</span>, error);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;error&#x27;</span>, error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="title function_">send</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">OPEN</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> message = <span class="keyword">typeof</span> data === <span class="string">&#x27;string&#x27;</span> ? data : <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">send</span>(message);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;WebSocket未连接，无法发送消息&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭连接</span></span><br><span class="line">    <span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件监听</span></span><br><span class="line">    <span class="title function_">on</span>(<span class="params">event, handler</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">eventHandlers</span>[event]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">eventHandlers</span>[event] = [];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventHandlers</span>[event].<span class="title function_">push</span>(handler);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 触发事件</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="params">event, data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">eventHandlers</span>[event]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">eventHandlers</span>[event].<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(data));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> wsClient = <span class="keyword">new</span> <span class="title class_">WebSocketClient</span>(<span class="string">&#x27;wss://echo.websocket.org&#x27;</span>);</span><br><span class="line"></span><br><span class="line">wsClient.<span class="title function_">on</span>(<span class="string">&#x27;open&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">showNotification</span>(<span class="string">&#x27;WebSocket连接成功&#x27;</span>, <span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">    wsClient.<span class="title function_">send</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;greeting&#x27;</span>, <span class="attr">message</span>: <span class="string">&#x27;Hello from NW.js!&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wsClient.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到消息:&#x27;</span>, data);</span><br><span class="line">    <span class="title function_">displayMessage</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wsClient.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">showNotification</span>(<span class="string">&#x27;WebSocket连接错误&#x27;</span>, <span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wsClient.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">showNotification</span>(<span class="string">&#x27;WebSocket连接已断开&#x27;</span>, <span class="string">&#x27;info&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接WebSocket</span></span><br><span class="line">wsClient.<span class="title function_">connect</span>();</span><br></pre></td></tr></table></figure>

<h1 id="四、应用打包与部署"><a href="#四、应用打包与部署" class="headerlink" title="四、应用打包与部署"></a>四、应用打包与部署</h1><h2 id="（一）构建配置优化"><a href="#（一）构建配置优化" class="headerlink" title="（一）构建配置优化"></a>（一）构建配置优化</h2><h3 id="1-生产环境配置"><a href="#1-生产环境配置" class="headerlink" title="1. 生产环境配置"></a>1. 生产环境配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json - 生产环境优化配置</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-nwjs-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;基于NW.js的桌面应用&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.html&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nw . --enable-logging --remote-debugging-port=9222&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nwbuild -p win32,win64,osx64,linux32,linux64 -v 0.88.0 .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build-win&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nwbuild -p win32,win64 -v 0.88.0 .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build-mac&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nwbuild -p osx64 -v 0.88.0 .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build-linux&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nwbuild -p linux32,linux64 -v 0.88.0 .&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dist&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run build &amp;&amp; npm run package&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;package&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node scripts/package.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;nwVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.88.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;output&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./dist/&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outputPattern&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;name&#125;-$&#123;version&#125;-$&#123;platform&#125;-$&#123;arch&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;packed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;win32&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x64&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;darwin&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x64&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;platform&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linux&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;arch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x64&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;excludes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;node_modules/nw/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;src/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;docs/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;*.md&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;.git/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;.gitignore&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;package-lock.json&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我的NW.js应用&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;width&quot;</span><span class="punctuation">:</span> <span class="number">1200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;height&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_width&quot;</span><span class="punctuation">:</span> <span class="number">800</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;min_height&quot;</span><span class="punctuation">:</span> <span class="number">600</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;icon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;assets/icons/app.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;center&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;resizable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;show_in_taskbar&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;frame&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;show&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;webkit&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;plugin&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;java&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;page-cache&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;chromium-args&quot;</span><span class="punctuation">:</span> <span class="string">&quot;--disable-web-security --disable-features=VizDisplayCompositor&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;nw&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.88.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nwjs-builder-phoenix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.15.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-自动化构建脚本"><a href="#2-自动化构建脚本" class="headerlink" title="2. 自动化构建脚本"></a>2. 自动化构建脚本</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// scripts/package.js - 自动化打包脚本</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; execSync &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AppPackager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">packageJson</span> = <span class="built_in">require</span>(<span class="string">&#x27;../package.json&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">buildConfig</span> = <span class="variable language_">this</span>.<span class="property">packageJson</span>.<span class="property">build</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">distPath</span> = path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">buildConfig</span>.<span class="property">output</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理构建目录</span></span><br><span class="line">    <span class="title function_">cleanBuildDir</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🧹 清理构建目录...&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(<span class="variable language_">this</span>.<span class="property">distPath</span>)) &#123;</span><br><span class="line">            fs.<span class="title function_">rmSync</span>(<span class="variable language_">this</span>.<span class="property">distPath</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span>, <span class="attr">force</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        fs.<span class="title function_">mkdirSync</span>(<span class="variable language_">this</span>.<span class="property">distPath</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复制资源文件</span></span><br><span class="line">    <span class="title function_">copyAssets</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;📁 复制资源文件...&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> assetsPath = path.<span class="title function_">resolve</span>(<span class="string">&#x27;assets&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> distAssetsPath = path.<span class="title function_">join</span>(<span class="variable language_">this</span>.<span class="property">distPath</span>, <span class="string">&#x27;assets&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(assetsPath)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">copyDirectory</span>(assetsPath, distAssetsPath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 递归复制目录</span></span><br><span class="line">    <span class="title function_">copyDirectory</span>(<span class="params">src, dest</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!fs.<span class="title function_">existsSync</span>(dest)) &#123;</span><br><span class="line">            fs.<span class="title function_">mkdirSync</span>(dest, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> items = fs.<span class="title function_">readdirSync</span>(src);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> items) &#123;</span><br><span class="line">            <span class="keyword">const</span> srcPath = path.<span class="title function_">join</span>(src, item);</span><br><span class="line">            <span class="keyword">const</span> destPath = path.<span class="title function_">join</span>(dest, item);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fs.<span class="title function_">statSync</span>(srcPath).<span class="title function_">isDirectory</span>()) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">copyDirectory</span>(srcPath, destPath);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fs.<span class="title function_">copyFileSync</span>(srcPath, destPath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建应用</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">buildApp</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🔨 开始构建应用...&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> target <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">buildConfig</span>.<span class="property">targets</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`📦 构建 <span class="subst">$&#123;target.platform&#125;</span>-<span class="subst">$&#123;target.arch&#125;</span>...`</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> command = <span class="string">`nwbuild -p <span class="subst">$&#123;target.platform&#125;</span> -a <span class="subst">$&#123;target.arch&#125;</span> -v <span class="subst">$&#123;<span class="variable language_">this</span>.buildConfig.nwVersion&#125;</span> .`</span>;</span><br><span class="line">                <span class="title function_">execSync</span>(command, &#123; <span class="attr">stdio</span>: <span class="string">&#x27;inherit&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 后处理</span></span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">postProcess</span>(target);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`❌ 构建 <span class="subst">$&#123;target.platform&#125;</span>-<span class="subst">$&#123;target.arch&#125;</span> 失败:`</span>, error.<span class="property">message</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建后处理</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">postProcess</span>(<span class="params">target</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> platformName = <span class="variable language_">this</span>.<span class="title function_">getPlatformName</span>(target.<span class="property">platform</span>);</span><br><span class="line">        <span class="keyword">const</span> buildPath = path.<span class="title function_">join</span>(<span class="variable language_">this</span>.<span class="property">distPath</span>, <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>-<span class="subst">$&#123;platformName&#125;</span>-<span class="subst">$&#123;target.arch&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(buildPath)) &#123;</span><br><span class="line">            <span class="comment">// 创建启动脚本</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">createLauncher</span>(buildPath, target);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 复制额外文件</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">copyExtraFiles</span>(buildPath);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建安装包</span></span><br><span class="line">            <span class="keyword">if</span> (target.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">createWindowsInstaller</span>(buildPath);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target.<span class="property">platform</span> === <span class="string">&#x27;darwin&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">createMacInstaller</span>(buildPath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建启动脚本</span></span><br><span class="line">    <span class="title function_">createLauncher</span>(<span class="params">buildPath, target</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (target.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// Windows批处理文件</span></span><br><span class="line">            <span class="keyword">const</span> batchContent = <span class="string">`@echo off</span></span><br><span class="line"><span class="string">cd /d &quot;%~dp0&quot;</span></span><br><span class="line"><span class="string">start &quot;&quot; &quot;<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>.exe&quot;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line">            fs.<span class="title function_">writeFileSync</span>(path.<span class="title function_">join</span>(buildPath, <span class="string">&#x27;start.bat&#x27;</span>), batchContent);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target.<span class="property">platform</span> === <span class="string">&#x27;linux&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// Linux shell脚本</span></span><br><span class="line">            <span class="keyword">const</span> shellContent = <span class="string">`#!/bin/bash</span></span><br><span class="line"><span class="string">cd &quot;$(dirname &quot;$0&quot;)&quot;</span></span><br><span class="line"><span class="string">./<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line">            <span class="keyword">const</span> scriptPath = path.<span class="title function_">join</span>(buildPath, <span class="string">&#x27;start.sh&#x27;</span>);</span><br><span class="line">            fs.<span class="title function_">writeFileSync</span>(scriptPath, shellContent);</span><br><span class="line">            fs.<span class="title function_">chmodSync</span>(scriptPath, <span class="string">&#x27;755&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复制额外文件</span></span><br><span class="line">    <span class="title function_">copyExtraFiles</span>(<span class="params">buildPath</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> extraFiles = [<span class="string">&#x27;README.md&#x27;</span>, <span class="string">&#x27;LICENSE&#x27;</span>, <span class="string">&#x27;CHANGELOG.md&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> file <span class="keyword">of</span> extraFiles) &#123;</span><br><span class="line">            <span class="keyword">const</span> srcPath = path.<span class="title function_">resolve</span>(file);</span><br><span class="line">            <span class="keyword">if</span> (fs.<span class="title function_">existsSync</span>(srcPath)) &#123;</span><br><span class="line">                fs.<span class="title function_">copyFileSync</span>(srcPath, path.<span class="title function_">join</span>(buildPath, file));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建Windows安装包</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">createWindowsInstaller</span>(<span class="params">buildPath</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🏗️  创建Windows安装包...&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用NSIS或Inno Setup创建安装包</span></span><br><span class="line">        <span class="keyword">const</span> nsisScript = <span class="variable language_">this</span>.<span class="title function_">generateNSISScript</span>(buildPath);</span><br><span class="line">        <span class="keyword">const</span> scriptPath = path.<span class="title function_">join</span>(buildPath, <span class="string">&#x27;installer.nsi&#x27;</span>);</span><br><span class="line">        fs.<span class="title function_">writeFileSync</span>(scriptPath, nsisScript);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="title function_">execSync</span>(<span class="string">`makensis &quot;<span class="subst">$&#123;scriptPath&#125;</span>&quot;`</span>, &#123; <span class="attr">stdio</span>: <span class="string">&#x27;inherit&#x27;</span> &#125;);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ Windows安装包创建成功&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;⚠️  NSIS未安装，跳过安装包创建&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成NSIS安装脚本</span></span><br><span class="line">    <span class="title function_">generateNSISScript</span>(<span class="params">buildPath</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">; NSIS安装脚本</span></span><br><span class="line"><span class="string">!define APP_NAME &quot;<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>&quot;</span></span><br><span class="line"><span class="string">!define APP_VERSION &quot;<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.version&#125;</span>&quot;</span></span><br><span class="line"><span class="string">!define APP_PUBLISHER &quot;Your Company&quot;</span></span><br><span class="line"><span class="string">!define APP_URL &quot;https://your-website.com&quot;</span></span><br><span class="line"><span class="string">!define APP_EXECUTABLE &quot;<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>.exe&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Name &quot;\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">OutFile &quot;\$&#123;APP_NAME&#125;-\$&#123;APP_VERSION&#125;-Setup.exe&quot;</span></span><br><span class="line"><span class="string">InstallDir &quot;$PROGRAMFILES\\\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">RequestExecutionLevel admin</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Page directory</span></span><br><span class="line"><span class="string">Page instfiles</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Section &quot;MainSection&quot; SEC01</span></span><br><span class="line"><span class="string">    SetOutPath &quot;$INSTDIR&quot;</span></span><br><span class="line"><span class="string">    File /r &quot;<span class="subst">$&#123;buildPath&#125;</span>\\*&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    CreateDirectory &quot;$SMPROGRAMS\\\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">    CreateShortCut &quot;$SMPROGRAMS\\\$&#123;APP_NAME&#125;\\\$&#123;APP_NAME&#125;.lnk&quot; &quot;$INSTDIR\\\$&#123;APP_EXECUTABLE&#125;&quot;</span></span><br><span class="line"><span class="string">    CreateShortCut &quot;$DESKTOP\\\$&#123;APP_NAME&#125;.lnk&quot; &quot;$INSTDIR\\\$&#123;APP_EXECUTABLE&#125;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    WriteRegStr HKLM &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\$&#123;APP_NAME&#125;&quot; &quot;DisplayName&quot; &quot;\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">    WriteRegStr HKLM &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\$&#123;APP_NAME&#125;&quot; &quot;UninstallString&quot; &quot;$INSTDIR\\uninstall.exe&quot;</span></span><br><span class="line"><span class="string">    WriteUninstaller &quot;$INSTDIR\\uninstall.exe&quot;</span></span><br><span class="line"><span class="string">SectionEnd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Section &quot;Uninstall&quot;</span></span><br><span class="line"><span class="string">    Delete &quot;$INSTDIR\\uninstall.exe&quot;</span></span><br><span class="line"><span class="string">    RMDir /r &quot;$INSTDIR&quot;</span></span><br><span class="line"><span class="string">    Delete &quot;$SMPROGRAMS\\\$&#123;APP_NAME&#125;\\\$&#123;APP_NAME&#125;.lnk&quot;</span></span><br><span class="line"><span class="string">    Delete &quot;$DESKTOP\\\$&#123;APP_NAME&#125;.lnk&quot;</span></span><br><span class="line"><span class="string">    RMDir &quot;$SMPROGRAMS\\\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">    DeleteRegKey HKLM &quot;Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\\$&#123;APP_NAME&#125;&quot;</span></span><br><span class="line"><span class="string">SectionEnd</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建macOS安装包</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">createMacInstaller</span>(<span class="params">buildPath</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🍎 创建macOS安装包...&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建DMG文件</span></span><br><span class="line">            <span class="keyword">const</span> dmgName = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>-<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.version&#125;</span>.dmg`</span>;</span><br><span class="line">            <span class="keyword">const</span> command = <span class="string">`hdiutil create -volname &quot;<span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>&quot; -srcfolder &quot;<span class="subst">$&#123;buildPath&#125;</span>&quot; -ov -format UDZO &quot;<span class="subst">$&#123;path.join(<span class="variable language_">this</span>.distPath, dmgName)&#125;</span>&quot;`</span>;</span><br><span class="line">            <span class="title function_">execSync</span>(command, &#123; <span class="attr">stdio</span>: <span class="string">&#x27;inherit&#x27;</span> &#125;);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;✅ macOS DMG文件创建成功&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;⚠️  macOS工具未安装，跳过DMG创建&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取平台名称</span></span><br><span class="line">    <span class="title function_">getPlatformName</span>(<span class="params">platform</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> platformMap = &#123;</span><br><span class="line">            <span class="string">&#x27;win32&#x27;</span>: <span class="string">&#x27;windows&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;darwin&#x27;</span>: <span class="string">&#x27;macos&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;linux&#x27;</span>: <span class="string">&#x27;linux&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> platformMap[platform] || platform;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主构建流程</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">build</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🚀 开始应用打包流程...&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`📋 应用名称: <span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.name&#125;</span>`</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`📋 应用版本: <span class="subst">$&#123;<span class="variable language_">this</span>.packageJson.version&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">cleanBuildDir</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">copyAssets</span>();</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">buildApp</span>();</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;🎉 应用打包完成！&#x27;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`📁 输出目录: <span class="subst">$&#123;<span class="variable language_">this</span>.distPath&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;❌ 打包过程中出现错误:&#x27;</span>, error);</span><br><span class="line">            process.<span class="title function_">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行打包</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">require</span>.<span class="property">main</span> === <span class="variable language_">module</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> packager = <span class="keyword">new</span> <span class="title class_">AppPackager</span>();</span><br><span class="line">    packager.<span class="title function_">build</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">AppPackager</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）性能优化策略"><a href="#（二）性能优化策略" class="headerlink" title="（二）性能优化策略"></a>（二）性能优化策略</h2><h3 id="1-应用启动优化"><a href="#1-应用启动优化" class="headerlink" title="1. 应用启动优化"></a>1. 应用启动优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启动性能优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AppOptimizer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">startTime</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loadingSteps</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 预加载关键资源</span></span><br><span class="line">    <span class="title function_">preloadResources</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> resources = [</span><br><span class="line">            <span class="string">&#x27;assets/icons/app.png&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;assets/css/main.css&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;assets/js/vendor.js&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(resources.<span class="title function_">map</span>(<span class="function"><span class="params">resource</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.png&#x27;</span>) || resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.jpg&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">                    img.<span class="property">onload</span> = resolve;</span><br><span class="line">                    img.<span class="property">onerror</span> = resolve;</span><br><span class="line">                    img.<span class="property">src</span> = resource;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.css&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>);</span><br><span class="line">                    link.<span class="property">rel</span> = <span class="string">&#x27;stylesheet&#x27;</span>;</span><br><span class="line">                    link.<span class="property">href</span> = resource;</span><br><span class="line">                    link.<span class="property">onload</span> = resolve;</span><br><span class="line">                    link.<span class="property">onerror</span> = resolve;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.js&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">                    script.<span class="property">src</span> = resource;</span><br><span class="line">                    script.<span class="property">onload</span> = resolve;</span><br><span class="line">                    script.<span class="property">onerror</span> = resolve;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 延迟加载非关键功能</span></span><br><span class="line">    <span class="title function_">lazyLoadFeatures</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 延迟初始化重型组件</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">initializeCharts</span>();</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">initializePlugins</span>();</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 内存使用优化</span></span><br><span class="line">    <span class="title function_">optimizeMemoryUsage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 定期清理未使用的对象</span></span><br><span class="line">        <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">cleanupUnusedObjects</span>();</span><br><span class="line">        &#125;, <span class="number">60000</span>); <span class="comment">// 每分钟清理一次</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听内存警告</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">performance</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">performance</span>.<span class="property">memory</span>) &#123;</span><br><span class="line">            <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> memory = <span class="variable language_">window</span>.<span class="property">performance</span>.<span class="property">memory</span>;</span><br><span class="line">                <span class="keyword">const</span> usageRatio = memory.<span class="property">usedJSHeapSize</span> / memory.<span class="property">jsHeapSizeLimit</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (usageRatio &gt; <span class="number">0.8</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;内存使用率过高:&#x27;</span>, (usageRatio * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;%&#x27;</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">forceGarbageCollection</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">30000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 强制垃圾回收</span></span><br><span class="line">    <span class="title function_">forceGarbageCollection</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">gc</span>) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="title function_">gc</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理未使用的对象</span></span><br><span class="line">    <span class="title function_">cleanupUnusedObjects</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理事件监听器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">cleanupEventListeners</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理缓存</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">cleanupCache</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理DOM节点</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">cleanupDOMNodes</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 应用启动计时</span></span><br><span class="line">    <span class="title function_">trackStartupTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> endTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="keyword">const</span> startupTime = endTime - <span class="variable language_">this</span>.<span class="property">startTime</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`应用启动耗时: <span class="subst">$&#123;startupTime&#125;</span>ms`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送启动性能数据</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendPerformanceData</span>(&#123;</span><br><span class="line">            <span class="attr">startupTime</span>: startupTime,</span><br><span class="line">            <span class="attr">loadingSteps</span>: <span class="variable language_">this</span>.<span class="property">loadingSteps</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用启动优化</span></span><br><span class="line"><span class="keyword">const</span> optimizer = <span class="keyword">new</span> <span class="title class_">AppOptimizer</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 显示启动画面</span></span><br><span class="line">    <span class="title function_">showSplashScreen</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 预加载资源</span></span><br><span class="line">        <span class="keyword">await</span> optimizer.<span class="title function_">preloadResources</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化应用</span></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">initializeApp</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 延迟加载功能</span></span><br><span class="line">        optimizer.<span class="title function_">lazyLoadFeatures</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 优化内存使用</span></span><br><span class="line">        optimizer.<span class="title function_">optimizeMemoryUsage</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 隐藏启动画面</span></span><br><span class="line">        <span class="title function_">hideSplashScreen</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录启动时间</span></span><br><span class="line">        optimizer.<span class="title function_">trackStartupTime</span>();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;应用启动失败:&#x27;</span>, error);</span><br><span class="line">        <span class="title function_">showErrorScreen</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="2-资源管理优化"><a href="#2-资源管理优化" class="headerlink" title="2. 资源管理优化"></a>2. 资源管理优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 资源管理器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ResourceManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxCacheSize</span> = <span class="number">100</span>; <span class="comment">// 最大缓存项数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheHitCount</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheMissCount</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载图片资源</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">loadImage</span>(<span class="params">src</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(src)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cacheHitCount</span>++;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(src);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheMissCount</span>++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">            img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">addToCache</span>(src, img);</span><br><span class="line">                <span class="title function_">resolve</span>(img);</span><br><span class="line">            &#125;;</span><br><span class="line">            img.<span class="property">onerror</span> = reject;</span><br><span class="line">            img.<span class="property">src</span> = src;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载JSON数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">loadJSON</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> cacheKey = <span class="string">`json:<span class="subst">$&#123;url&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(cacheKey)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cacheHitCount</span>++;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(cacheKey);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheMissCount</span>++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url);</span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">addToCache</span>(cacheKey, data);</span><br><span class="line">            <span class="keyword">return</span> data;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;加载JSON失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加到缓存</span></span><br><span class="line">    <span class="title function_">addToCache</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果缓存已满，删除最旧的项</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="property">size</span> &gt;= <span class="variable language_">this</span>.<span class="property">maxCacheSize</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> firstKey = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">keys</span>().<span class="title function_">next</span>().<span class="property">value</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(firstKey);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理缓存</span></span><br><span class="line">    <span class="title function_">clearCache</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">clear</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheHitCount</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cacheMissCount</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取缓存统计</span></span><br><span class="line">    <span class="title function_">getCacheStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> total = <span class="variable language_">this</span>.<span class="property">cacheHitCount</span> + <span class="variable language_">this</span>.<span class="property">cacheMissCount</span>;</span><br><span class="line">        <span class="keyword">const</span> hitRate = total &gt; <span class="number">0</span> ? (<span class="variable language_">this</span>.<span class="property">cacheHitCount</span> / total * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">size</span>: <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="property">size</span>,</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="variable language_">this</span>.<span class="property">maxCacheSize</span>,</span><br><span class="line">            <span class="attr">hits</span>: <span class="variable language_">this</span>.<span class="property">cacheHitCount</span>,</span><br><span class="line">            <span class="attr">misses</span>: <span class="variable language_">this</span>.<span class="property">cacheMissCount</span>,</span><br><span class="line">            <span class="attr">hitRate</span>: hitRate + <span class="string">&#x27;%&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局资源管理器实例</span></span><br><span class="line"><span class="keyword">const</span> resourceManager = <span class="keyword">new</span> <span class="title class_">ResourceManager</span>();</span><br></pre></td></tr></table></figure>

<h1 id="五、实际应用场景与案例分析"><a href="#五、实际应用场景与案例分析" class="headerlink" title="五、实际应用场景与案例分析"></a>五、实际应用场景与案例分析</h1><h2 id="（一）典型应用场景"><a href="#（一）典型应用场景" class="headerlink" title="（一）典型应用场景"></a>（一）典型应用场景</h2><h3 id="1-开发工具类应用"><a href="#1-开发工具类应用" class="headerlink" title="1. 开发工具类应用"></a>1. 开发工具类应用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码编辑器示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CodeEditor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fs</span> = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">path</span> = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentFile</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">initializeEditor</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">initializeEditor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 初始化Monaco Editor或CodeMirror</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span> = monaco.<span class="property">editor</span>.<span class="title function_">create</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;editor&#x27;</span>), &#123;</span><br><span class="line">            <span class="attr">value</span>: <span class="string">&#x27;// 欢迎使用代码编辑器\nconsole.log(&quot;Hello, NW.js!&quot;);&#x27;</span>,</span><br><span class="line">            <span class="attr">language</span>: <span class="string">&#x27;javascript&#x27;</span>,</span><br><span class="line">            <span class="attr">theme</span>: <span class="string">&#x27;vs-dark&#x27;</span>,</span><br><span class="line">            <span class="attr">automaticLayout</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">minimap</span>: &#123; <span class="attr">enabled</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">14</span>,</span><br><span class="line">            <span class="attr">wordWrap</span>: <span class="string">&#x27;on&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听内容变化</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">onDidChangeModelContent</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateTitle</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置快捷键</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupKeyBindings</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupKeyBindings</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// Ctrl+S 保存文件</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">addCommand</span>(monaco.<span class="property">KeyMod</span>.<span class="property">CtrlCmd</span> | monaco.<span class="property">KeyCode</span>.<span class="property">KeyS</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">saveFile</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Ctrl+O 打开文件</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">addCommand</span>(monaco.<span class="property">KeyMod</span>.<span class="property">CtrlCmd</span> | monaco.<span class="property">KeyCode</span>.<span class="property">KeyO</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">openFile</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Ctrl+N 新建文件</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">addCommand</span>(monaco.<span class="property">KeyMod</span>.<span class="property">CtrlCmd</span> | monaco.<span class="property">KeyCode</span>.<span class="property">KeyN</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">newFile</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">openFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        input.<span class="property">type</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">        input.<span class="property">accept</span> = <span class="string">&#x27;.js,.ts,.html,.css,.json,.md&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        input.<span class="property">onchange</span> = <span class="title function_">async</span> (event) =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> file = event.<span class="property">target</span>.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">if</span> (file) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> content = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">readFileContent</span>(file.<span class="property">path</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">setValue</span>(content);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">currentFile</span> = file.<span class="property">path</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">updateTitle</span>();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 根据文件扩展名设置语言</span></span><br><span class="line">                    <span class="keyword">const</span> language = <span class="variable language_">this</span>.<span class="title function_">getLanguageFromExtension</span>(file.<span class="property">name</span>);</span><br><span class="line">                    monaco.<span class="property">editor</span>.<span class="title function_">setModelLanguage</span>(<span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">getModel</span>(), language);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;打开文件失败: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        input.<span class="title function_">click</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">saveFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">currentFile</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">saveAsFile</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> content = <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">getValue</span>();</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">writeFile</span>(<span class="variable language_">this</span>.<span class="property">currentFile</span>, content, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateTitle</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showSuccess</span>(<span class="string">&#x27;文件保存成功&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;保存文件失败: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">saveAsFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        input.<span class="property">type</span> = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line">        input.<span class="property">nwsaveas</span> = <span class="string">&#x27;untitled.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        input.<span class="property">onchange</span> = <span class="title function_">async</span> (event) =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> filePath = event.<span class="property">target</span>.<span class="property">value</span>;</span><br><span class="line">            <span class="keyword">if</span> (filePath) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> content = <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">getValue</span>();</span><br><span class="line">                    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">writeFile</span>(filePath, content, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">currentFile</span> = filePath;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">false</span>;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">updateTitle</span>();</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">showSuccess</span>(<span class="string">&#x27;文件保存成功&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;保存文件失败: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        input.<span class="title function_">click</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">newFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isModified</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="title function_">confirm</span>(<span class="string">&#x27;当前文件未保存，确定要新建文件吗？&#x27;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editor</span>.<span class="title function_">setValue</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentFile</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isModified</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">updateTitle</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateTitle</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> fileName = <span class="variable language_">this</span>.<span class="property">currentFile</span> ? <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">basename</span>(<span class="variable language_">this</span>.<span class="property">currentFile</span>) : <span class="string">&#x27;未命名&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> modified = <span class="variable language_">this</span>.<span class="property">isModified</span> ? <span class="string">&#x27; *&#x27;</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">`<span class="subst">$&#123;fileName&#125;</span><span class="subst">$&#123;modified&#125;</span> - 代码编辑器`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getLanguageFromExtension</span>(<span class="params">filename</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> ext = <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">extname</span>(filename).<span class="title function_">toLowerCase</span>();</span><br><span class="line">        <span class="keyword">const</span> languageMap = &#123;</span><br><span class="line">            <span class="string">&#x27;.js&#x27;</span>: <span class="string">&#x27;javascript&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.ts&#x27;</span>: <span class="string">&#x27;typescript&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.html&#x27;</span>: <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.css&#x27;</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.json&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.md&#x27;</span>: <span class="string">&#x27;markdown&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.py&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.java&#x27;</span>: <span class="string">&#x27;java&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.cpp&#x27;</span>: <span class="string">&#x27;cpp&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.c&#x27;</span>: <span class="string">&#x27;c&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> languageMap[ext] || <span class="string">&#x27;plaintext&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化代码编辑器</span></span><br><span class="line"><span class="keyword">const</span> codeEditor = <span class="keyword">new</span> <span class="title class_">CodeEditor</span>();</span><br></pre></td></tr></table></figure>

<h3 id="2-系统监控工具"><a href="#2-系统监控工具" class="headerlink" title="2. 系统监控工具"></a>2. 系统监控工具</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 系统监控应用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SystemMonitor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">os</span> = <span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">process</span> = <span class="built_in">require</span>(<span class="string">&#x27;process&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isMonitoring</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">monitoringInterval</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chartData</span> = &#123;</span><br><span class="line">            <span class="attr">cpu</span>: [],</span><br><span class="line">            <span class="attr">memory</span>: [],</span><br><span class="line">            <span class="attr">timestamps</span>: []</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxDataPoints</span> = <span class="number">60</span>; <span class="comment">// 保留60个数据点</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">startMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isMonitoring</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isMonitoring</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">monitoringInterval</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">collectSystemData</span>();</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;系统监控已启动&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">stopMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">isMonitoring</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isMonitoring</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">monitoringInterval</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">monitoringInterval</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">monitoringInterval</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;系统监控已停止&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">collectSystemData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> cpuUsage = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getCPUUsage</span>();</span><br><span class="line">            <span class="keyword">const</span> memoryUsage = <span class="variable language_">this</span>.<span class="title function_">getMemoryUsage</span>();</span><br><span class="line">            <span class="keyword">const</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加新数据点</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">cpu</span>.<span class="title function_">push</span>(cpuUsage);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">memory</span>.<span class="title function_">push</span>(memoryUsage);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">timestamps</span>.<span class="title function_">push</span>(timestamp);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 限制数据点数量</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">cpu</span>.<span class="property">length</span> &gt; <span class="variable language_">this</span>.<span class="property">maxDataPoints</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">cpu</span>.<span class="title function_">shift</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">memory</span>.<span class="title function_">shift</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">chartData</span>.<span class="property">timestamps</span>.<span class="title function_">shift</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 更新显示</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateDisplay</span>(cpuUsage, memoryUsage);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateCharts</span>();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;收集系统数据失败:&#x27;</span>, error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getCPUUsage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> startMeasure = <span class="variable language_">this</span>.<span class="title function_">cpuAverage</span>();</span><br><span class="line"></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> endMeasure = <span class="variable language_">this</span>.<span class="title function_">cpuAverage</span>();</span><br><span class="line">                <span class="keyword">const</span> idleDifference = endMeasure.<span class="property">idle</span> - startMeasure.<span class="property">idle</span>;</span><br><span class="line">                <span class="keyword">const</span> totalDifference = endMeasure.<span class="property">total</span> - startMeasure.<span class="property">total</span>;</span><br><span class="line">                <span class="keyword">const</span> percentageCPU = <span class="number">100</span> - ~~(<span class="number">100</span> * idleDifference / totalDifference);</span><br><span class="line">                <span class="title function_">resolve</span>(percentageCPU);</span><br><span class="line">            &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">cpuAverage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> cpus = <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">cpus</span>();</span><br><span class="line">        <span class="keyword">let</span> totalIdle = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> totalTick = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> cpu <span class="keyword">of</span> cpus) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> type <span class="keyword">in</span> cpu.<span class="property">times</span>) &#123;</span><br><span class="line">                totalTick += cpu.<span class="property">times</span>[type];</span><br><span class="line">            &#125;</span><br><span class="line">            totalIdle += cpu.<span class="property">times</span>.<span class="property">idle</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">idle</span>: totalIdle / cpus.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">total</span>: totalTick / cpus.<span class="property">length</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getMemoryUsage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> totalMemory = <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">totalmem</span>();</span><br><span class="line">        <span class="keyword">const</span> freeMemory = <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">freemem</span>();</span><br><span class="line">        <span class="keyword">const</span> usedMemory = totalMemory - freeMemory;</span><br><span class="line">        <span class="keyword">return</span> (usedMemory / totalMemory) * <span class="number">100</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateDisplay</span>(<span class="params">cpuUsage, memoryUsage</span>) &#123;</span><br><span class="line">        <span class="comment">// 更新CPU使用率显示</span></span><br><span class="line">        <span class="keyword">const</span> cpuElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;cpu-usage&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (cpuElement) &#123;</span><br><span class="line">            cpuElement.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;cpuUsage.toFixed(<span class="number">1</span>)&#125;</span>%`</span>;</span><br><span class="line">            cpuElement.<span class="property">className</span> = <span class="variable language_">this</span>.<span class="title function_">getUsageClass</span>(cpuUsage);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新内存使用率显示</span></span><br><span class="line">        <span class="keyword">const</span> memoryElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;memory-usage&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (memoryElement) &#123;</span><br><span class="line">            memoryElement.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;memoryUsage.toFixed(<span class="number">1</span>)&#125;</span>%`</span>;</span><br><span class="line">            memoryElement.<span class="property">className</span> = <span class="variable language_">this</span>.<span class="title function_">getUsageClass</span>(memoryUsage);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新系统信息</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">updateSystemInfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateSystemInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> systemInfo = &#123;</span><br><span class="line">            <span class="attr">platform</span>: <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">platform</span>(),</span><br><span class="line">            <span class="attr">arch</span>: <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">arch</span>(),</span><br><span class="line">            <span class="attr">hostname</span>: <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">hostname</span>(),</span><br><span class="line">            <span class="attr">uptime</span>: <span class="variable language_">this</span>.<span class="title function_">formatUptime</span>(<span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">uptime</span>()),</span><br><span class="line">            <span class="attr">loadavg</span>: <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">loadavg</span>(),</span><br><span class="line">            <span class="attr">cpuCount</span>: <span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">cpus</span>().<span class="property">length</span>,</span><br><span class="line">            <span class="attr">totalMemory</span>: <span class="variable language_">this</span>.<span class="title function_">formatBytes</span>(<span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">totalmem</span>()),</span><br><span class="line">            <span class="attr">freeMemory</span>: <span class="variable language_">this</span>.<span class="title function_">formatBytes</span>(<span class="variable language_">this</span>.<span class="property">os</span>.<span class="title function_">freemem</span>())</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> infoContainer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;system-info&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (infoContainer) &#123;</span><br><span class="line">            infoContainer.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;info-grid&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;操作系统:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.platform&#125;</span> <span class="subst">$&#123;systemInfo.arch&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;主机名:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.hostname&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;运行时间:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.uptime&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;CPU核心:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.cpuCount&#125;</span>个&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;总内存:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.totalMemory&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;info-item&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;label&gt;可用内存:&lt;/label&gt;</span></span><br><span class="line"><span class="string">                        &lt;span&gt;<span class="subst">$&#123;systemInfo.freeMemory&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            `</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getUsageClass</span>(<span class="params">usage</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (usage &lt; <span class="number">50</span>) <span class="keyword">return</span> <span class="string">&#x27;usage-low&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (usage &lt; <span class="number">80</span>) <span class="keyword">return</span> <span class="string">&#x27;usage-medium&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;usage-high&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">formatUptime</span>(<span class="params">seconds</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> days = <span class="title class_">Math</span>.<span class="title function_">floor</span>(seconds / <span class="number">86400</span>);</span><br><span class="line">        <span class="keyword">const</span> hours = <span class="title class_">Math</span>.<span class="title function_">floor</span>((seconds % <span class="number">86400</span>) / <span class="number">3600</span>);</span><br><span class="line">        <span class="keyword">const</span> minutes = <span class="title class_">Math</span>.<span class="title function_">floor</span>((seconds % <span class="number">3600</span>) / <span class="number">60</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;days&#125;</span>天 <span class="subst">$&#123;hours&#125;</span>小时 <span class="subst">$&#123;minutes&#125;</span>分钟`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">formatBytes</span>(<span class="params">bytes</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> sizes = [<span class="string">&#x27;Bytes&#x27;</span>, <span class="string">&#x27;KB&#x27;</span>, <span class="string">&#x27;MB&#x27;</span>, <span class="string">&#x27;GB&#x27;</span>, <span class="string">&#x27;TB&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (bytes === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&#x27;0 Bytes&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> i = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">log</span>(bytes) / <span class="title class_">Math</span>.<span class="title function_">log</span>(<span class="number">1024</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(bytes / <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">1024</span>, i) * <span class="number">100</span>) / <span class="number">100</span> + <span class="string">&#x27; &#x27;</span> + sizes[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化系统监控</span></span><br><span class="line"><span class="keyword">const</span> systemMonitor = <span class="keyword">new</span> <span class="title class_">SystemMonitor</span>();</span><br></pre></td></tr></table></figure>

<h3 id="3-文件管理工具"><a href="#3-文件管理工具" class="headerlink" title="3. 文件管理工具"></a>3. 文件管理工具</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件管理器应用</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileExplorer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fs</span> = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">path</span> = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentPath</span> = <span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_">homedir</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">selectedItems</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">clipboard</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">clipboardOperation</span> = <span class="literal">null</span>; <span class="comment">// &#x27;copy&#x27; or &#x27;cut&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">initializeExplorer</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">initializeExplorer</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupEventListeners</span>();</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">navigateToPath</span>(<span class="variable language_">this</span>.<span class="property">currentPath</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupEventListeners</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 导航按钮</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;back-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">navigateBack</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;up-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">navigateUp</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;home-btn&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">navigateToPath</span>(<span class="built_in">require</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_">homedir</span>());</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 地址栏</span></span><br><span class="line">        <span class="keyword">const</span> addressBar = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;address-bar&#x27;</span>);</span><br><span class="line">        addressBar.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">navigateToPath</span>(addressBar.<span class="property">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 右键菜单</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupContextMenu</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 键盘快捷键</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keydown&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleKeyboardShortcuts</span>(e);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">navigateToPath</span>(<span class="params">targetPath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> stats = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">stat</span>(targetPath);</span><br><span class="line">            <span class="keyword">if</span> (!stats.<span class="title function_">isDirectory</span>()) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;不是有效的目录&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">currentPath</span> = targetPath;</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">loadDirectoryContents</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateAddressBar</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateNavigationButtons</span>();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;导航失败:&#x27;</span>, error);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;无法访问目录: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">loadDirectoryContents</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> items = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">readdir</span>(<span class="variable language_">this</span>.<span class="property">currentPath</span>, &#123; <span class="attr">withFileTypes</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            <span class="keyword">const</span> fileList = [];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> item <span class="keyword">of</span> items) &#123;</span><br><span class="line">                <span class="keyword">const</span> fullPath = <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">join</span>(<span class="variable language_">this</span>.<span class="property">currentPath</span>, item.<span class="property">name</span>);</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">const</span> stats = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">fs</span>.<span class="property">promises</span>.<span class="title function_">stat</span>(fullPath);</span><br><span class="line">                    fileList.<span class="title function_">push</span>(&#123;</span><br><span class="line">                        <span class="attr">name</span>: item.<span class="property">name</span>,</span><br><span class="line">                        <span class="attr">path</span>: fullPath,</span><br><span class="line">                        <span class="attr">isDirectory</span>: item.<span class="title function_">isDirectory</span>(),</span><br><span class="line">                        <span class="attr">isFile</span>: item.<span class="title function_">isFile</span>(),</span><br><span class="line">                        <span class="attr">size</span>: stats.<span class="property">size</span>,</span><br><span class="line">                        <span class="attr">modified</span>: stats.<span class="property">mtime</span>,</span><br><span class="line">                        <span class="attr">permissions</span>: stats.<span class="property">mode</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="comment">// 跳过无法访问的文件</span></span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;无法访问文件:&#x27;</span>, fullPath, error.<span class="property">message</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 排序：目录优先，然后按名称排序</span></span><br><span class="line">            fileList.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (a.<span class="property">isDirectory</span> &amp;&amp; !b.<span class="property">isDirectory</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (!a.<span class="property">isDirectory</span> &amp;&amp; b.<span class="property">isDirectory</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">return</span> a.<span class="property">name</span>.<span class="title function_">localeCompare</span>(b.<span class="property">name</span>, <span class="literal">undefined</span>, &#123; <span class="attr">numeric</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">renderFileList</span>(fileList);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;加载目录内容失败:&#x27;</span>, error);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;加载目录失败: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">renderFileList</span>(<span class="params">items</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;file-list&#x27;</span>);</span><br><span class="line">        container.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        items.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> itemElement = <span class="variable language_">this</span>.<span class="title function_">createFileItem</span>(item);</span><br><span class="line">            container.<span class="title function_">appendChild</span>(itemElement);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">selectedItems</span>.<span class="title function_">clear</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">updateStatusBar</span>(items.<span class="property">length</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createFileItem</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> itemDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        itemDiv.<span class="property">className</span> = <span class="string">&#x27;file-item&#x27;</span>;</span><br><span class="line">        itemDiv.<span class="property">dataset</span>.<span class="property">path</span> = item.<span class="property">path</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> icon = item.<span class="property">isDirectory</span> ? <span class="string">&#x27;📁&#x27;</span> : <span class="variable language_">this</span>.<span class="title function_">getFileIcon</span>(item.<span class="property">name</span>);</span><br><span class="line">        <span class="keyword">const</span> size = item.<span class="property">isFile</span> ? <span class="variable language_">this</span>.<span class="title function_">formatFileSize</span>(item.<span class="property">size</span>) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> modified = item.<span class="property">modified</span>.<span class="title function_">toLocaleString</span>();</span><br><span class="line"></span><br><span class="line">        itemDiv.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;file-icon&quot;&gt;<span class="subst">$&#123;icon&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;file-info&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;file-name&quot; title=&quot;<span class="subst">$&#123;item.name&#125;</span>&quot;&gt;<span class="subst">$&#123;item.name&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;file-details&quot;&gt;<span class="subst">$&#123;size&#125;</span> <span class="subst">$&#123;modified&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 双击事件</span></span><br><span class="line">        itemDiv.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dblclick&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.<span class="property">isDirectory</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">navigateToPath</span>(item.<span class="property">path</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">openFile</span>(item.<span class="property">path</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 单击选择</span></span><br><span class="line">        itemDiv.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">selectItem</span>(itemDiv, e.<span class="property">ctrlKey</span> || e.<span class="property">metaKey</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> itemDiv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getFileIcon</span>(<span class="params">filename</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> ext = <span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">extname</span>(filename).<span class="title function_">toLowerCase</span>();</span><br><span class="line">        <span class="keyword">const</span> iconMap = &#123;</span><br><span class="line">            <span class="string">&#x27;.txt&#x27;</span>: <span class="string">&#x27;📄&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.doc&#x27;</span>: <span class="string">&#x27;📄&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.docx&#x27;</span>: <span class="string">&#x27;📄&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.pdf&#x27;</span>: <span class="string">&#x27;📕&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.jpg&#x27;</span>: <span class="string">&#x27;🖼️&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.jpeg&#x27;</span>: <span class="string">&#x27;🖼️&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.png&#x27;</span>: <span class="string">&#x27;🖼️&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.gif&#x27;</span>: <span class="string">&#x27;🖼️&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.mp3&#x27;</span>: <span class="string">&#x27;🎵&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.mp4&#x27;</span>: <span class="string">&#x27;🎬&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.avi&#x27;</span>: <span class="string">&#x27;🎬&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.zip&#x27;</span>: <span class="string">&#x27;📦&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.rar&#x27;</span>: <span class="string">&#x27;📦&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.js&#x27;</span>: <span class="string">&#x27;📜&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.html&#x27;</span>: <span class="string">&#x27;🌐&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.css&#x27;</span>: <span class="string">&#x27;🎨&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;.json&#x27;</span>: <span class="string">&#x27;⚙️&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> iconMap[ext] || <span class="string">&#x27;📄&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">selectItem</span>(<span class="params">itemElement, multiSelect = <span class="literal">false</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!multiSelect) &#123;</span><br><span class="line">            <span class="comment">// 清除其他选择</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.file-item.selected&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">el</span> =&gt;</span> &#123;</span><br><span class="line">                el.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;selected&#x27;</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">selectedItems</span>.<span class="title function_">clear</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> path = itemElement.<span class="property">dataset</span>.<span class="property">path</span>;</span><br><span class="line">        <span class="keyword">if</span> (itemElement.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;selected&#x27;</span>)) &#123;</span><br><span class="line">            itemElement.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;selected&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">selectedItems</span>.<span class="title function_">delete</span>(path);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            itemElement.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;selected&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">selectedItems</span>.<span class="title function_">add</span>(path);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">updateStatusBar</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">openFile</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用系统默认程序打开文件</span></span><br><span class="line">            <span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> command = process.<span class="property">platform</span> === <span class="string">&#x27;win32&#x27;</span> ? <span class="string">`start &quot;&quot; &quot;<span class="subst">$&#123;filePath&#125;</span>&quot;`</span> :</span><br><span class="line">                          process.<span class="property">platform</span> === <span class="string">&#x27;darwin&#x27;</span> ? <span class="string">`open &quot;<span class="subst">$&#123;filePath&#125;</span>&quot;`</span> :</span><br><span class="line">                          <span class="string">`xdg-open &quot;<span class="subst">$&#123;filePath&#125;</span>&quot;`</span>;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">exec</span>(command, <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;打开文件失败:&#x27;</span>, error);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;无法打开文件: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;打开文件失败:&#x27;</span>, error);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;打开文件失败: &#x27;</span> + error.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">updateStatusBar</span>(<span class="params">totalItems = <span class="literal">null</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> statusBar = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;status-bar&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> selectedCount = <span class="variable language_">this</span>.<span class="property">selectedItems</span>.<span class="property">size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> statusText = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (totalItems !== <span class="literal">null</span>) &#123;</span><br><span class="line">            statusText = <span class="string">`<span class="subst">$&#123;totalItems&#125;</span> 个项目`</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (selectedCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            statusText += <span class="string">` (已选择 <span class="subst">$&#123;selectedCount&#125;</span> 个)`</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        statusBar.<span class="property">textContent</span> = statusText;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">formatFileSize</span>(<span class="params">bytes</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> sizes = [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;KB&#x27;</span>, <span class="string">&#x27;MB&#x27;</span>, <span class="string">&#x27;GB&#x27;</span>, <span class="string">&#x27;TB&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (bytes === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&#x27;0 B&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> i = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">log</span>(bytes) / <span class="title class_">Math</span>.<span class="title function_">log</span>(<span class="number">1024</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(bytes / <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">1024</span>, i) * <span class="number">100</span>) / <span class="number">100</span> + <span class="string">&#x27; &#x27;</span> + sizes[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化文件管理器</span></span><br><span class="line"><span class="keyword">const</span> fileExplorer = <span class="keyword">new</span> <span class="title class_">FileExplorer</span>();</span><br></pre></td></tr></table></figure>

<h2 id="（二）最佳实践总结"><a href="#（二）最佳实践总结" class="headerlink" title="（二）最佳实践总结"></a>（二）最佳实践总结</h2><h3 id="1-开发最佳实践"><a href="#1-开发最佳实践" class="headerlink" title="1. 开发最佳实践"></a>1. 开发最佳实践</h3><ul>
<li><strong>项目结构清晰</strong>：合理组织代码和资源文件</li>
<li><strong>错误处理完善</strong>：对所有异步操作进行错误处理</li>
<li><strong>性能优化</strong>：合理使用缓存和延迟加载</li>
<li><strong>用户体验</strong>：提供加载状态和操作反馈</li>
<li><strong>安全考虑</strong>：验证用户输入，避免路径遍历攻击</li>
</ul>
<h3 id="2-部署最佳实践"><a href="#2-部署最佳实践" class="headerlink" title="2. 部署最佳实践"></a>2. 部署最佳实践</h3><ul>
<li><strong>自动化构建</strong>：使用脚本自动化打包流程</li>
<li><strong>多平台测试</strong>：在目标平台上充分测试</li>
<li><strong>版本管理</strong>：建立完善的版本发布流程</li>
<li><strong>用户反馈</strong>：收集用户使用数据和错误报告</li>
</ul>
<h1 id="六、总结与展望"><a href="#六、总结与展望" class="headerlink" title="六、总结与展望"></a>六、总结与展望</h1><h2 id="（一）NW-js技术总结"><a href="#（一）NW-js技术总结" class="headerlink" title="（一）NW.js技术总结"></a>（一）NW.js技术总结</h2><p>通过本文的深入探讨，我们全面了解了NW.js这一强大的跨平台桌面应用开发框架：</p>
<h3 id="1-核心优势"><a href="#1-核心优势" class="headerlink" title="1. 核心优势"></a>1. 核心优势</h3><ul>
<li><strong>开发简单</strong>：Web开发者可以直接使用熟悉的技术栈</li>
<li><strong>跨平台支持</strong>：一套代码支持Windows、macOS、Linux</li>
<li><strong>资源占用小</strong>：相比Electron更轻量级</li>
<li><strong>API丰富</strong>：提供完整的桌面应用开发能力</li>
<li><strong>快速原型</strong>：可以快速将Web应用转换为桌面应用</li>
</ul>
<h3 id="2-适用场景"><a href="#2-适用场景" class="headerlink" title="2. 适用场景"></a>2. 适用场景</h3><ul>
<li><strong>开发工具</strong>：代码编辑器、构建工具、调试器</li>
<li><strong>系统工具</strong>：文件管理器、系统监控、网络工具</li>
<li><strong>办公应用</strong>：文档编辑器、项目管理工具</li>
<li><strong>媒体应用</strong>：音视频播放器、图片编辑器</li>
<li><strong>企业应用</strong>：内部管理系统、数据分析工具</li>
</ul>
<h3 id="3-技术特点"><a href="#3-技术特点" class="headerlink" title="3. 技术特点"></a>3. 技术特点</h3><ul>
<li><strong>单进程架构</strong>：简化了开发复杂度</li>
<li><strong>直接API访问</strong>：可以在DOM中直接使用Node.js</li>
<li><strong>丰富的窗口控制</strong>：支持菜单、托盘、全屏等功能</li>
<li><strong>文件系统集成</strong>：完整的文件操作能力</li>
<li><strong>网络通信支持</strong>：HTTP、WebSocket等网络功能</li>
</ul>
<h2 id="（二）发展趋势与展望"><a href="#（二）发展趋势与展望" class="headerlink" title="（二）发展趋势与展望"></a>（二）发展趋势与展望</h2><h3 id="1-技术发展方向"><a href="#1-技术发展方向" class="headerlink" title="1. 技术发展方向"></a>1. 技术发展方向</h3><ul>
<li><strong>性能持续优化</strong>：更好的内存管理和启动速度</li>
<li><strong>安全性增强</strong>：更完善的沙箱机制和权限控制</li>
<li><strong>开发工具改进</strong>：更好的调试工具和开发体验</li>
<li><strong>生态系统扩展</strong>：更多的插件和组件支持</li>
</ul>
<h3 id="2-应用前景"><a href="#2-应用前景" class="headerlink" title="2. 应用前景"></a>2. 应用前景</h3><ul>
<li><strong>企业级应用</strong>：在企业内部工具开发中的应用</li>
<li><strong>教育领域</strong>：编程教学和学习工具的开发</li>
<li><strong>创意工具</strong>：设计和创作工具的快速开发</li>
<li><strong>物联网应用</strong>：设备管理和监控工具</li>
</ul>
<h2 id="（三）学习建议"><a href="#（三）学习建议" class="headerlink" title="（三）学习建议"></a>（三）学习建议</h2><h3 id="1-学习路径"><a href="#1-学习路径" class="headerlink" title="1. 学习路径"></a>1. 学习路径</h3><ol>
<li><strong>Web基础</strong>：掌握HTML、CSS、JavaScript</li>
<li><strong>Node.js基础</strong>：了解Node.js API和模块系统</li>
<li><strong>NW.js入门</strong>：学习基本概念和API使用</li>
<li><strong>实践项目</strong>：通过实际项目积累经验</li>
<li><strong>高级特性</strong>：深入学习性能优化和部署</li>
</ol>
<h3 id="2-持续学习"><a href="#2-持续学习" class="headerlink" title="2. 持续学习"></a>2. 持续学习</h3><ul>
<li><strong>关注官方更新</strong>：跟踪NW.js的版本更新和新特性</li>
<li><strong>参与社区</strong>：加入开发者社区，分享经验和问题</li>
<li><strong>对比学习</strong>：了解Electron、Tauri等其他方案</li>
<li><strong>实践应用</strong>：在实际项目中应用所学知识</li>
</ul>
<p>NW.js作为一个成熟的跨平台桌面应用开发框架，为Web开发者提供了进入桌面应用开发领域的便捷途径。虽然在生态系统规模上不如Electron，但其简单易用的特点和较小的资源占用使其在特定场景下具有独特优势。随着Web技术的不断发展和完善，相信NW.js将在跨平台桌面应用开发中发挥更重要的作用。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://nwjs.io/">NW.js官方网站</a> - 官方文档和下载</li>
<li><a href="https://github.com/nwjs/nw.js">NW.js GitHub仓库</a> - 源代码和问题追踪</li>
<li><a href="https://docs.nwjs.io/">NW.js API文档</a> - 完整的API参考</li>
<li><a href="https://nodejs.org/docs/">Node.js官方文档</a> - Node.js API参考</li>
<li><a href="https://www.chromium.org/developers/">Chromium开发者文档</a> - Chromium相关技术</li>
<li><a href="https://github.com/sudhakar3697/electron-alternatives">跨平台桌面应用开发对比</a> - 技术方案对比</li>
<li><a href="https://groups.google.com/g/nwjs-general">NW.js社区论坛</a> - 社区讨论和支持</li>
</ul>
<hr>
<blockquote>
<p>💡 <strong>相关阅读推荐</strong>：</p>
<ul>
<li><a href="./%E3%80%90%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90%E3%80%91%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E4%B9%9F%E8%83%BD%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%EF%BC%9AWebAssembly%E4%B8%8EWebContainer%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3.md">【软件功能解析】后端代码也能在浏览器运行：WebAssembly与WebContainer技术详解</a></li>
<li><a href="../%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91uni-app%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E4%B8%80%E5%A5%97%E4%BB%A3%E7%A0%81%E5%A4%9A%E7%AB%AF%E8%BF%90%E8%A1%8C%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5.md">【前端】uni-app跨平台开发完全指南：一套代码多端运行的最佳实践</a></li>
<li><a href="../Node.js/%E3%80%90Node.js%E3%80%91Node.js%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1.md">【Node.js】Node.js深度解析：构建高性能的后端服务</a></li>
</ul>
</blockquote>
<p>通过NW.js，Web开发者可以轻松跨越技术边界，将熟悉的Web技术应用到桌面应用开发中，为用户提供更丰富的应用体验。掌握NW.js不仅能够扩展开发技能，更能为职业发展开辟新的可能性。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代软件开发中，跨平台桌面应用开发一直是开发者面临的重要挑战。传统的桌面应用开发需要针对不同操作系统使用不同的技术栈，如Windows的C#&#x2F;.NET、macOS的Swift&#x2F;Objective-C、Linux的C++&#x2F;Qt等。这种分散的开发模式不仅增加了开发成本，也提高了维护难度。NW.js（原名node-webkit）的出现为这一问题提供了优雅的解决方案，它允许开发者使用熟悉的Web技术（HTML、CSS、JavaScript）来构建功能完整的跨平台桌面应用。本文将深入探讨NW.js的技术原理、开发实践和应用场景。</p>]]>
    
    </summary>
    
      <category term="Node.js" scheme="https://hexo.blog.uwakeme.tech/tags/Node-js/"/>
    
      <category term="JavaScript" scheme="https://hexo.blog.uwakeme.tech/tags/JavaScript/"/>
    
      <category term="跨平台开发" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="NW.js" scheme="https://hexo.blog.uwakeme.tech/tags/NW-js/"/>
    
      <category term="桌面应用开发" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】套壳应用开发详解：从WebView到混合开发的完整指南]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/18/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%A5%97%E5%A3%B3%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8EWebView%E5%88%B0%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/18/学习/【学习】套壳应用开发详解：从WebView到混合开发的完整指南/</id>
    <published>2025-08-17T16:00:00.000Z</published>
    <updated>2025-08-18T08:44:16.934Z</updated>
    <content type="html"><![CDATA[<h1 id="一、套壳应用概述"><a href="#一、套壳应用概述" class="headerlink" title="一、套壳应用概述"></a>一、套壳应用概述</h1><h2 id="（一）什么是套壳应用"><a href="#（一）什么是套壳应用" class="headerlink" title="（一）什么是套壳应用"></a>（一）什么是套壳应用</h2><p>套壳应用（Shell App），也称为混合应用（Hybrid App），是指使用原生应用的外壳（Shell）包装Web内容的应用程序。简单来说，就是在原生应用中嵌入一个WebView组件，然后加载Web页面来实现应用功能。</p>
<blockquote>
<p><strong>核心概念</strong>：套壳应用 &#x3D; 原生外壳 + Web内容，通过WebView作为桥梁连接原生功能和Web技术。</p>
</blockquote>
<h2 id="（二）套壳应用的技术架构"><a href="#（二）套壳应用的技术架构" class="headerlink" title="（二）套壳应用的技术架构"></a>（二）套壳应用的技术架构</h2><pre class="mermaid">graph TB
    A[用户界面] --> B[原生外壳 Native Shell]
    B --> C[WebView容器]
    C --> D[Web内容 HTML/CSS/JS]
    B --> E[原生功能模块]
    E --> F[设备API]
    E --> G[系统服务]
    C --> H[JavaScript Bridge]
    H --> E
    D --> I[前端框架]
    I --> J[Vue.js/React/Angular]</pre>

<h3 id="技术栈组成"><a href="#技术栈组成" class="headerlink" title="技术栈组成"></a>技术栈组成</h3><p><strong>原生层（Native Layer）：</strong></p>
<ul>
<li><strong>Android</strong>：Java&#x2F;Kotlin + WebView</li>
<li><strong>iOS</strong>：Objective-C&#x2F;Swift + WKWebView</li>
<li><strong>跨平台</strong>：React Native、Flutter、Cordova</li>
</ul>
<p><strong>Web层（Web Layer）：</strong></p>
<ul>
<li><strong>前端框架</strong>：Vue.js、React、Angular</li>
<li><strong>构建工具</strong>：Webpack、Vite、Rollup</li>
<li><strong>UI库</strong>：Element UI、Ant Design、Vant</li>
</ul>
<p><strong>桥接层（Bridge Layer）：</strong></p>
<ul>
<li><strong>通信机制</strong>：JavaScript Bridge</li>
<li><strong>数据传递</strong>：JSON格式数据交换</li>
<li><strong>API封装</strong>：原生功能的JavaScript接口</li>
</ul>
<h2 id="（三）套壳应用的分类"><a href="#（三）套壳应用的分类" class="headerlink" title="（三）套壳应用的分类"></a>（三）套壳应用的分类</h2><h3 id="1-按技术实现分类"><a href="#1-按技术实现分类" class="headerlink" title="1. 按技术实现分类"></a>1. 按技术实现分类</h3><h4 id="纯WebView套壳"><a href="#纯WebView套壳" class="headerlink" title="纯WebView套壳"></a>纯WebView套壳</h4><ul>
<li><strong>描述</strong>：完全基于Web技术，原生部分只提供WebView容器</li>
<li><strong>优势</strong>：开发成本低、更新便捷、跨平台一致性好</li>
<li><strong>劣势</strong>：性能相对较差、用户体验不如原生、功能受限</li>
<li><strong>适用场景</strong>：简单的展示类应用、内容管理系统、企业内部工具</li>
</ul>
<h4 id="混合开发套壳"><a href="#混合开发套壳" class="headerlink" title="混合开发套壳"></a>混合开发套壳</h4><ul>
<li><strong>描述</strong>：核心功能用Web实现，关键模块用原生开发</li>
<li><strong>优势</strong>：性能较好、功能丰富、开发效率高</li>
<li><strong>劣势</strong>：技术栈复杂、调试困难、包体积较大</li>
<li><strong>适用场景</strong>：电商应用、社交应用、金融应用</li>
</ul>
<h4 id="渐进式Web应用（PWA）"><a href="#渐进式Web应用（PWA）" class="headerlink" title="渐进式Web应用（PWA）"></a>渐进式Web应用（PWA）</h4><ul>
<li><strong>描述</strong>：Web应用 + 原生应用特性</li>
<li><strong>优势</strong>：无需安装、离线可用、推送通知</li>
<li><strong>劣势</strong>：浏览器兼容性、功能限制、iOS支持有限</li>
<li><strong>适用场景</strong>：Twitter Lite、Pinterest、Starbucks PWA</li>
</ul>
<h3 id="2-按应用场景分类"><a href="#2-按应用场景分类" class="headerlink" title="2. 按应用场景分类"></a>2. 按应用场景分类</h3><p><strong>企业级应用：</strong></p>
<ul>
<li>内部管理系统</li>
<li>员工门户应用</li>
<li>业务流程应用</li>
</ul>
<p><strong>内容展示应用：</strong></p>
<ul>
<li>新闻资讯应用</li>
<li>博客阅读器</li>
<li>产品展示应用</li>
</ul>
<p><strong>电商类应用：</strong></p>
<ul>
<li>购物商城</li>
<li>商品展示</li>
<li>订单管理系统</li>
</ul>
<h1 id="二、套壳应用开发技术方案"><a href="#二、套壳应用开发技术方案" class="headerlink" title="二、套壳应用开发技术方案"></a>二、套壳应用开发技术方案</h1><h2 id="（一）Android套壳应用开发"><a href="#（一）Android套壳应用开发" class="headerlink" title="（一）Android套壳应用开发"></a>（一）Android套壳应用开发</h2><h3 id="1-基础WebView实现"><a href="#1-基础WebView实现" class="headerlink" title="1. 基础WebView实现"></a>1. 基础WebView实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MainActivity.java - Android WebView套壳应用基础实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> WebView webView;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        initViews();</span><br><span class="line">        setupWebView();</span><br><span class="line">        loadWebContent();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initViews</span><span class="params">()</span> &#123;</span><br><span class="line">        webView = findViewById(R.id.webview);</span><br><span class="line">        progressBar = findViewById(R.id.progress_bar);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setupWebView</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebSettings</span> <span class="variable">webSettings</span> <span class="operator">=</span> webView.getSettings();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 启用JavaScript支持</span></span><br><span class="line">        webSettings.setJavaScriptEnabled(<span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 启用DOM存储</span></span><br><span class="line">        webSettings.setDomStorageEnabled(<span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 启用数据库存储</span></span><br><span class="line">        webSettings.setDatabaseEnabled(<span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置缓存模式</span></span><br><span class="line">        webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 启用缩放功能</span></span><br><span class="line">        webSettings.setSupportZoom(<span class="literal">true</span>);</span><br><span class="line">        webSettings.setBuiltInZoomControls(<span class="literal">true</span>);</span><br><span class="line">        webSettings.setDisplayZoomControls(<span class="literal">false</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置User-Agent</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">userAgent</span> <span class="operator">=</span> webSettings.getUserAgentString();</span><br><span class="line">        webSettings.setUserAgentString(userAgent + <span class="string">&quot; MyApp/1.0&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 允许混合内容（HTTP和HTTPS）</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</span><br><span class="line">            webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置WebView客户端</span></span><br><span class="line">        webView.setWebViewClient(<span class="keyword">new</span> <span class="title class_">CustomWebViewClient</span>());</span><br><span class="line">        webView.setWebChromeClient(<span class="keyword">new</span> <span class="title class_">CustomWebChromeClient</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加JavaScript接口</span></span><br><span class="line">        webView.addJavascriptInterface(<span class="keyword">new</span> <span class="title class_">JavaScriptInterface</span>(), <span class="string">&quot;Android&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadWebContent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 加载本地HTML文件</span></span><br><span class="line">        <span class="comment">// webView.loadUrl(&quot;file:///android_asset/index.html&quot;);</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 加载远程URL</span></span><br><span class="line">        webView.loadUrl(<span class="string">&quot;https://your-web-app.com&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自定义WebViewClient</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">CustomWebViewClient</span> <span class="keyword">extends</span> <span class="title class_">WebViewClient</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> request.getUrl().toString();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 处理特殊URL scheme</span></span><br><span class="line">            <span class="keyword">if</span> (url.startsWith(<span class="string">&quot;tel:&quot;</span>)) &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_DIAL, Uri.parse(url));</span><br><span class="line">                startActivity(intent);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 在当前WebView中加载URL</span></span><br><span class="line">            view.loadUrl(url);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onPageStarted(view, url, favicon);</span><br><span class="line">            progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPageFinished</span><span class="params">(WebView view, String url)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onPageFinished(view, url);</span><br><span class="line">            progressBar.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceivedError</span><span class="params">(WebView view, WebResourceRequest request, </span></span><br><span class="line"><span class="params">                                  WebResourceError error)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onReceivedError(view, request, error);</span><br><span class="line">            <span class="comment">// 处理加载错误</span></span><br><span class="line">            loadErrorPage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自定义WebChromeClient</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">CustomWebChromeClient</span> <span class="keyword">extends</span> <span class="title class_">WebChromeClient</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onProgressChanged</span><span class="params">(WebView view, <span class="type">int</span> newProgress)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onProgressChanged(view, newProgress);</span><br><span class="line">            progressBar.setProgress(newProgress);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onJsAlert</span><span class="params">(WebView view, String url, String message, </span></span><br><span class="line"><span class="params">                               JsResult result)</span> &#123;</span><br><span class="line">            <span class="comment">// 处理JavaScript alert</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(MainActivity.<span class="built_in">this</span>)</span><br><span class="line">                .setMessage(message)</span><br><span class="line">                .setPositiveButton(<span class="string">&quot;确定&quot;</span>, (dialog, which) -&gt; result.confirm())</span><br><span class="line">                .show();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理文件选择</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onShowFileChooser</span><span class="params">(WebView webView, ValueCallback&lt;Uri[]&gt; filePathCallback,</span></span><br><span class="line"><span class="params">                                       FileChooserParams fileChooserParams)</span> &#123;</span><br><span class="line">            <span class="comment">// 实现文件选择逻辑</span></span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">super</span>.onShowFileChooser(webView, filePathCallback, fileChooserParams);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// JavaScript接口类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JavaScriptInterface</span> &#123;</span><br><span class="line">        <span class="meta">@JavascriptInterface</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showToast</span><span class="params">(String message)</span> &#123;</span><br><span class="line">            runOnUiThread(() -&gt; </span><br><span class="line">                Toast.makeText(MainActivity.<span class="built_in">this</span>, message, Toast.LENGTH_SHORT).show()</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@JavascriptInterface</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getDeviceInfo</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">deviceInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                deviceInfo.put(<span class="string">&quot;model&quot;</span>, Build.MODEL);</span><br><span class="line">                deviceInfo.put(<span class="string">&quot;version&quot;</span>, Build.VERSION.RELEASE);</span><br><span class="line">                deviceInfo.put(<span class="string">&quot;manufacturer&quot;</span>, Build.MANUFACTURER);</span><br><span class="line">                deviceInfo.put(<span class="string">&quot;appVersion&quot;</span>, getAppVersion());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> deviceInfo.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@JavascriptInterface</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">openCamera</span><span class="params">()</span> &#123;</span><br><span class="line">            runOnUiThread(() -&gt; &#123;</span><br><span class="line">                <span class="comment">// 调用相机功能</span></span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">                <span class="keyword">if</span> (intent.resolveActivity(getPackageManager()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                    startActivityForResult(intent, REQUEST_CAMERA);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadErrorPage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">errorHtml</span> <span class="operator">=</span> <span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;html&gt;&lt;head&gt;&lt;meta charset=&#x27;utf-8&#x27;&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;meta name=&#x27;viewport&#x27; content=&#x27;width=device-width, initial-scale=1.0&#x27;&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;title&gt;加载失败&lt;/title&gt;&lt;/head&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;body style=&#x27;text-align:center; padding:50px;&#x27;&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;h2&gt;页面加载失败&lt;/h2&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;p&gt;请检查网络连接后重试&lt;/p&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;button onclick=&#x27;window.location.reload()&#x27;&gt;重新加载&lt;/button&gt;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;&lt;/body&gt;&lt;/html&gt;&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        webView.loadDataWithBaseURL(<span class="literal">null</span>, errorHtml, <span class="string">&quot;text/html&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onBackPressed</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (webView.canGoBack()) &#123;</span><br><span class="line">            webView.goBack();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onBackPressed();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (webView != <span class="literal">null</span>) &#123;</span><br><span class="line">            webView.destroy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-布局文件配置"><a href="#2-布局文件配置" class="headerlink" title="2. 布局文件配置"></a>2. 布局文件配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- activity_main.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- WebView容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">WebView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/webview&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 加载进度条 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/progress_bar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;3dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:progressDrawable</span>=<span class="string">&quot;@drawable/progress_bar_drawable&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-权限配置"><a href="#3-权限配置" class="headerlink" title="3. 权限配置"></a>3. 权限配置</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- AndroidManifest.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.shellapp&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 网络权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.INTERNET&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_NETWORK_STATE&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 存储权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 相机权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CAMERA&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 定位权限 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 允许HTTP流量（Android 9+） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:usesCleartextTraffic</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:networkSecurityConfig</span>=<span class="string">&quot;@xml/network_security_config&quot;</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">&quot;@style/Theme.ShellApp&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）iOS套壳应用开发"><a href="#（二）iOS套壳应用开发" class="headerlink" title="（二）iOS套壳应用开发"></a>（二）iOS套壳应用开发</h2><h3 id="1-Swift实现WebView套壳"><a href="#1-Swift实现WebView套壳" class="headerlink" title="1. Swift实现WebView套壳"></a>1. Swift实现WebView套壳</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ViewController.swift - iOS WKWebView套壳应用实现</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> WebKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ViewController</span>: <span class="title class_ inherited__">UIViewController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> webView: <span class="type">WKWebView</span>!</span><br><span class="line">    <span class="keyword">@IBOutlet</span> <span class="keyword">weak</span> <span class="keyword">var</span> progressView: <span class="type">UIProgressView</span>!</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">viewDidLoad</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        setupWebView()</span><br><span class="line">        loadWebContent()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">setupWebView</span>() &#123;</span><br><span class="line">        <span class="comment">// 配置WKWebView</span></span><br><span class="line">        <span class="keyword">let</span> configuration <span class="operator">=</span> <span class="type">WKWebViewConfiguration</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 启用JavaScript</span></span><br><span class="line">        configuration.preferences.javaScriptEnabled <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 允许JavaScript打开窗口</span></span><br><span class="line">        configuration.preferences.javaScriptCanOpenWindowsAutomatically <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加用户脚本</span></span><br><span class="line">        <span class="keyword">let</span> userScript <span class="operator">=</span> <span class="type">WKUserScript</span>(</span><br><span class="line">            source: <span class="string">&quot;window.iOS = true;&quot;</span>,</span><br><span class="line">            injectionTime: .atDocumentEnd,</span><br><span class="line">            forMainFrameOnly: <span class="literal">false</span></span><br><span class="line">        )</span><br><span class="line">        configuration.userContentController.addUserScript(userScript)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加消息处理器</span></span><br><span class="line">        configuration.userContentController.add(<span class="keyword">self</span>, name: <span class="string">&quot;iOSHandler&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重新创建WebView（如果需要）</span></span><br><span class="line">        <span class="keyword">if</span> webView <span class="operator">==</span> <span class="literal">nil</span> &#123;</span><br><span class="line">            webView <span class="operator">=</span> <span class="type">WKWebView</span>(frame: view.bounds, configuration: configuration)</span><br><span class="line">            view.addSubview(webView)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置代理</span></span><br><span class="line">        webView.navigationDelegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        webView.uiDelegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加KVO观察者</span></span><br><span class="line">        webView.addObserver(<span class="keyword">self</span>, forKeyPath: <span class="keyword">#keyPath</span>(<span class="type">WKWebView</span>.estimatedProgress), </span><br><span class="line">                           options: .new, context: <span class="literal">nil</span>)</span><br><span class="line">        webView.addObserver(<span class="keyword">self</span>, forKeyPath: <span class="keyword">#keyPath</span>(<span class="type">WKWebView</span>.title), </span><br><span class="line">                           options: .new, context: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">loadWebContent</span>() &#123;</span><br><span class="line">        <span class="comment">// 加载本地HTML文件</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> path <span class="operator">=</span> <span class="type">Bundle</span>.main.path(forResource: <span class="string">&quot;index&quot;</span>, ofType: <span class="string">&quot;html&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> url <span class="operator">=</span> <span class="type">URL</span>(fileURLWithPath: path)</span><br><span class="line">            webView.loadFileURL(url, allowingReadAccessTo: url.deletingLastPathComponent())</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 或者加载远程URL</span></span><br><span class="line">        <span class="comment">// if let url = URL(string: &quot;https://your-web-app.com&quot;) &#123;</span></span><br><span class="line">        <span class="comment">//     let request = URLRequest(url: url)</span></span><br><span class="line">        <span class="comment">//     webView.load(request)</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// KVO观察者</span></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">func</span> <span class="title function_">observeValue</span>(<span class="params">forKeyPath</span> <span class="params">keyPath</span>: <span class="type">String</span>?, <span class="params">of</span> <span class="params">object</span>: <span class="keyword">Any</span><span class="operator">?</span>, </span><br><span class="line">                             <span class="params">change</span>: [<span class="params">NSKeyValueChangeKey</span> : <span class="keyword">Any</span>]<span class="operator">?</span>, <span class="params">context</span>: <span class="type">UnsafeMutableRawPointer</span>?) &#123;</span><br><span class="line">        <span class="keyword">if</span> keyPath <span class="operator">==</span> <span class="string">&quot;estimatedProgress&quot;</span> &#123;</span><br><span class="line">            progressView.progress <span class="operator">=</span> <span class="type">Float</span>(webView.estimatedProgress)</span><br><span class="line">            progressView.isHidden <span class="operator">=</span> webView.estimatedProgress <span class="operator">&gt;=</span> <span class="number">1.0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> keyPath <span class="operator">==</span> <span class="string">&quot;title&quot;</span> &#123;</span><br><span class="line">            title <span class="operator">=</span> webView.title</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">deinit</span> &#123;</span><br><span class="line">        webView.removeObserver(<span class="keyword">self</span>, forKeyPath: <span class="keyword">#keyPath</span>(<span class="type">WKWebView</span>.estimatedProgress))</span><br><span class="line">        webView.removeObserver(<span class="keyword">self</span>, forKeyPath: <span class="keyword">#keyPath</span>(<span class="type">WKWebView</span>.title))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - WKNavigationDelegate</span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">ViewController</span>: <span class="title class_ inherited__">WKNavigationDelegate</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">didStartProvisionalNavigation</span> <span class="params">navigation</span>: <span class="type">WKNavigation</span>!) &#123;</span><br><span class="line">        progressView.isHidden <span class="operator">=</span> <span class="literal">false</span></span><br><span class="line">        progressView.progress <span class="operator">=</span> <span class="number">0.0</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">didFinish</span> <span class="params">navigation</span>: <span class="type">WKNavigation</span>!) &#123;</span><br><span class="line">        progressView.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">didFail</span> <span class="params">navigation</span>: <span class="type">WKNavigation</span>!, <span class="params">withError</span> <span class="params">error</span>: <span class="type">Error</span>) &#123;</span><br><span class="line">        progressView.isHidden <span class="operator">=</span> <span class="literal">true</span></span><br><span class="line">        showErrorAlert(error: error)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">decidePolicyFor</span> <span class="params">navigationAction</span>: <span class="type">WKNavigationAction</span>, </span><br><span class="line">                <span class="params">decisionHandler</span>: <span class="keyword">@escaping</span> (<span class="type">WKNavigationActionPolicy</span>) -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> url <span class="operator">=</span> navigationAction.request.url <span class="keyword">else</span> &#123;</span><br><span class="line">            decisionHandler(.cancel)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理特殊URL scheme</span></span><br><span class="line">        <span class="keyword">if</span> url.scheme <span class="operator">==</span> <span class="string">&quot;tel&quot;</span> &#123;</span><br><span class="line">            <span class="type">UIApplication</span>.shared.open(url)</span><br><span class="line">            decisionHandler(.cancel)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        decisionHandler(.allow)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">showErrorAlert</span>(<span class="params">error</span>: <span class="type">Error</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alert <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="string">&quot;加载失败&quot;</span>, </span><br><span class="line">                                    message: error.localizedDescription, </span><br><span class="line">                                    preferredStyle: .alert)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">&quot;重试&quot;</span>, style: .default) &#123; <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.webView.reload()</span><br><span class="line">        &#125;)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">&quot;取消&quot;</span>, style: .cancel))</span><br><span class="line">        present(alert, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - WKUIDelegate</span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">ViewController</span>: <span class="title class_ inherited__">WKUIDelegate</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">runJavaScriptAlertPanelWithMessage</span> <span class="params">message</span>: <span class="type">String</span>, </span><br><span class="line">                <span class="params">initiatedByFrame</span> <span class="params">frame</span>: <span class="type">WKFrameInfo</span>, <span class="params">completionHandler</span>: <span class="keyword">@escaping</span> () -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alert <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="string">&quot;提示&quot;</span>, message: message, preferredStyle: .alert)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">&quot;确定&quot;</span>, style: .default) &#123; <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">            completionHandler()</span><br><span class="line">        &#125;)</span><br><span class="line">        present(alert, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">webView</span>(<span class="keyword">_</span> <span class="params">webView</span>: <span class="type">WKWebView</span>, <span class="params">runJavaScriptConfirmPanelWithMessage</span> <span class="params">message</span>: <span class="type">String</span>, </span><br><span class="line">                <span class="params">initiatedByFrame</span> <span class="params">frame</span>: <span class="type">WKFrameInfo</span>, </span><br><span class="line">                <span class="params">completionHandler</span>: <span class="keyword">@escaping</span> (<span class="type">Bool</span>) -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> alert <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="string">&quot;确认&quot;</span>, message: message, preferredStyle: .alert)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">&quot;确定&quot;</span>, style: .default) &#123; <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">            completionHandler(<span class="literal">true</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        alert.addAction(<span class="type">UIAlertAction</span>(title: <span class="string">&quot;取消&quot;</span>, style: .cancel) &#123; <span class="keyword">_</span> <span class="keyword">in</span></span><br><span class="line">            completionHandler(<span class="literal">false</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        present(alert, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - WKScriptMessageHandler</span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">ViewController</span>: <span class="title class_ inherited__">WKScriptMessageHandler</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">userContentController</span>(<span class="keyword">_</span> <span class="params">userContentController</span>: <span class="type">WKUserContentController</span>, </span><br><span class="line">                             <span class="params">didReceive</span> <span class="params">message</span>: <span class="type">WKScriptMessage</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> message.name <span class="operator">==</span> <span class="string">&quot;iOSHandler&quot;</span> &#123;</span><br><span class="line">            handleJavaScriptMessage(message)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">handleJavaScriptMessage</span>(<span class="keyword">_</span> <span class="params">message</span>: <span class="type">WKScriptMessage</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> body <span class="operator">=</span> message.body <span class="keyword">as?</span> [<span class="type">String</span>: <span class="keyword">Any</span>],</span><br><span class="line">              <span class="keyword">let</span> action <span class="operator">=</span> body[<span class="string">&quot;action&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> action &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;showToast&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> text <span class="operator">=</span> body[<span class="string">&quot;message&quot;</span>] <span class="keyword">as?</span> <span class="type">String</span> &#123;</span><br><span class="line">                showToast(message: text)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;getDeviceInfo&quot;</span>:</span><br><span class="line">            <span class="keyword">let</span> deviceInfo <span class="operator">=</span> getDeviceInfo()</span><br><span class="line">            <span class="keyword">let</span> script <span class="operator">=</span> <span class="string">&quot;window.receiveDeviceInfo(<span class="subst">\(deviceInfo)</span>)&quot;</span></span><br><span class="line">            webView.evaluateJavaScript(script)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;openCamera&quot;</span>:</span><br><span class="line">            openCamera()</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Unknown action: <span class="subst">\(action)</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">showToast</span>(<span class="params">message</span>: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="comment">// 实现Toast显示逻辑</span></span><br><span class="line">        <span class="keyword">let</span> alert <span class="operator">=</span> <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: message, preferredStyle: .alert)</span><br><span class="line">        present(alert, animated: <span class="literal">true</span>)</span><br><span class="line">        <span class="type">DispatchQueue</span>.main.asyncAfter(deadline: .now() <span class="operator">+</span> <span class="number">1.5</span>) &#123;</span><br><span class="line">            alert.dismiss(animated: <span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">getDeviceInfo</span>() -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> device <span class="operator">=</span> <span class="type">UIDevice</span>.current</span><br><span class="line">        <span class="keyword">let</span> deviceInfo: [<span class="type">String</span>: <span class="keyword">Any</span>] <span class="operator">=</span> [</span><br><span class="line">            <span class="string">&quot;model&quot;</span>: device.model,</span><br><span class="line">            <span class="string">&quot;systemName&quot;</span>: device.systemName,</span><br><span class="line">            <span class="string">&quot;systemVersion&quot;</span>: device.systemVersion,</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: device.name,</span><br><span class="line">            <span class="string">&quot;appVersion&quot;</span>: <span class="type">Bundle</span>.main.infoDictionary<span class="operator">?</span>[<span class="string">&quot;CFBundleShortVersionString&quot;</span>] <span class="operator">??</span> <span class="string">&quot;1.0&quot;</span></span><br><span class="line">        ]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> data <span class="operator">=</span> <span class="keyword">try?</span> <span class="type">JSONSerialization</span>.data(withJSONObject: deviceInfo),</span><br><span class="line">           <span class="keyword">let</span> jsonString <span class="operator">=</span> <span class="type">String</span>(data: data, encoding: .utf8) &#123;</span><br><span class="line">            <span class="keyword">return</span> jsonString</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">openCamera</span>() &#123;</span><br><span class="line">        <span class="comment">// 实现相机调用逻辑</span></span><br><span class="line">        <span class="keyword">let</span> imagePickerController <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">        imagePickerController.sourceType <span class="operator">=</span> .camera</span><br><span class="line">        imagePickerController.delegate <span class="operator">=</span> <span class="keyword">self</span></span><br><span class="line">        present(imagePickerController, animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MARK: - UIImagePickerControllerDelegate</span></span><br><span class="line"><span class="keyword">extension</span> <span class="title class_">ViewController</span>: <span class="title class_ inherited__">UIImagePickerControllerDelegate</span>, <span class="title class_ inherited__">UINavigationControllerDelegate</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">imagePickerController</span>(<span class="keyword">_</span> <span class="params">picker</span>: <span class="type">UIImagePickerController</span>, </span><br><span class="line">                             <span class="params">didFinishPickingMediaWithInfo</span> <span class="params">info</span>: [<span class="type">UIImagePickerController</span>.<span class="params">InfoKey</span> : <span class="keyword">Any</span>]) &#123;</span><br><span class="line">        picker.dismiss(animated: <span class="literal">true</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> image <span class="operator">=</span> info[.originalImage] <span class="keyword">as?</span> <span class="type">UIImage</span> &#123;</span><br><span class="line">            <span class="comment">// 处理拍摄的图片</span></span><br><span class="line">            processSelectedImage(image)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">imagePickerControllerDidCancel</span>(<span class="keyword">_</span> <span class="params">picker</span>: <span class="type">UIImagePickerController</span>) &#123;</span><br><span class="line">        picker.dismiss(animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">func</span> <span class="title function_">processSelectedImage</span>(<span class="keyword">_</span> <span class="params">image</span>: <span class="type">UIImage</span>) &#123;</span><br><span class="line">        <span class="comment">// 将图片转换为Base64并传递给Web页面</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> imageData <span class="operator">=</span> image.jpegData(compressionQuality: <span class="number">0.8</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> base64String <span class="operator">=</span> imageData.base64EncodedString()</span><br><span class="line">            <span class="keyword">let</span> script <span class="operator">=</span> <span class="string">&quot;window.receiveImage(&#x27;data:image/jpeg;base64,<span class="subst">\(base64String)</span>&#x27;)&quot;</span></span><br><span class="line">            webView.evaluateJavaScript(script)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、Web端开发与原生交互"><a href="#三、Web端开发与原生交互" class="headerlink" title="三、Web端开发与原生交互"></a>三、Web端开发与原生交互</h1><h2 id="（一）JavaScript-Bridge通信机制"><a href="#（一）JavaScript-Bridge通信机制" class="headerlink" title="（一）JavaScript Bridge通信机制"></a>（一）JavaScript Bridge通信机制</h2><h3 id="1-Web端调用原生功能"><a href="#1-Web端调用原生功能" class="headerlink" title="1. Web端调用原生功能"></a>1. Web端调用原生功能</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// web-native-bridge.js - Web端与原生交互的桥接层</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebNativeBridge</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isAndroid</span> = <span class="keyword">typeof</span> <span class="title class_">Android</span> !== <span class="string">&#x27;undefined&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isIOS</span> = <span class="keyword">typeof</span> webkit !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; webkit.<span class="property">messageHandlers</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">callbacks</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">callbackId</span> = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 初始化平台检测</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">platform</span> = <span class="variable language_">this</span>.<span class="title function_">detectPlatform</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置全局错误处理</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;error&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleError</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监听页面加载完成</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">readyState</span> === <span class="string">&#x27;loading&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="variable language_">this</span>.<span class="property">onReady</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">onReady</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">detectPlatform</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isAndroid</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;android&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isIOS</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;ios&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;web&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">onReady</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`WebNativeBridge initialized on <span class="subst">$&#123;<span class="variable language_">this</span>.platform&#125;</span>`</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 通知原生端页面加载完成</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;pageReady&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>,</span><br><span class="line">            <span class="attr">title</span>: <span class="variable language_">document</span>.<span class="property">title</span>,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用原生功能的统一接口</span></span><br><span class="line">    <span class="title function_">callNative</span>(<span class="params">method, params = &#123;&#125;, callback = <span class="literal">null</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> callId = <span class="variable language_">this</span>.<span class="title function_">generateCallId</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">callbacks</span>.<span class="title function_">set</span>(callId, callback);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> message = &#123;</span><br><span class="line">            <span class="attr">method</span>: method,</span><br><span class="line">            <span class="attr">params</span>: params,</span><br><span class="line">            <span class="attr">callId</span>: callId,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isAndroid</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">Android</span>) &#123;</span><br><span class="line">                <span class="comment">// Android平台调用</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">callAndroid</span>(message);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isIOS</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">webkit</span>) &#123;</span><br><span class="line">                <span class="comment">// iOS平台调用</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">callIOS</span>(message);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Web平台模拟</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">callWeb</span>(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;调用原生功能失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(&#123; <span class="attr">error</span>: error.<span class="property">message</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">callAndroid</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> methodName = message.<span class="property">method</span>;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message.<span class="property">params</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 根据方法名调用对应的Android接口</span></span><br><span class="line">        <span class="keyword">switch</span> (methodName) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;showToast&#x27;</span>:</span><br><span class="line">                <span class="title class_">Android</span>.<span class="title function_">showToast</span>(message.<span class="property">params</span>.<span class="property">message</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;getDeviceInfo&#x27;</span>:</span><br><span class="line">                <span class="keyword">const</span> deviceInfo = <span class="title class_">Android</span>.<span class="title function_">getDeviceInfo</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">handleNativeCallback</span>(message.<span class="property">callId</span>, <span class="title class_">JSON</span>.<span class="title function_">parse</span>(deviceInfo));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;openCamera&#x27;</span>:</span><br><span class="line">                <span class="title class_">Android</span>.<span class="title function_">openCamera</span>();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;setStatusBar&#x27;</span>:</span><br><span class="line">                <span class="title class_">Android</span>.<span class="title function_">setStatusBar</span>(params);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`未知的Android方法: <span class="subst">$&#123;methodName&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">callIOS</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="comment">// iOS平台通过webkit.messageHandlers调用</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">webkit</span>.<span class="property">messageHandlers</span>.<span class="property">iOSHandler</span>.<span class="title function_">postMessage</span>(&#123;</span><br><span class="line">            <span class="attr">action</span>: message.<span class="property">method</span>,</span><br><span class="line">            <span class="attr">params</span>: message.<span class="property">params</span>,</span><br><span class="line">            <span class="attr">callId</span>: message.<span class="property">callId</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">callWeb</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="comment">// Web平台模拟实现</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Web平台模拟调用:&#x27;</span>, message);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> result = &#123;&#125;;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">switch</span> (message.<span class="property">method</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;getDeviceInfo&#x27;</span>:</span><br><span class="line">                    result = &#123;</span><br><span class="line">                        <span class="attr">platform</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">                        <span class="attr">userAgent</span>: navigator.<span class="property">userAgent</span>,</span><br><span class="line">                        <span class="attr">language</span>: navigator.<span class="property">language</span>,</span><br><span class="line">                        <span class="attr">screenWidth</span>: screen.<span class="property">width</span>,</span><br><span class="line">                        <span class="attr">screenHeight</span>: screen.<span class="property">height</span></span><br><span class="line">                    &#125;;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;showToast&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">showWebToast</span>(message.<span class="property">params</span>.<span class="property">message</span>);</span><br><span class="line">                    result = &#123; <span class="attr">success</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    result = &#123; <span class="attr">error</span>: <span class="string">&#x27;不支持的方法&#x27;</span> &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleNativeCallback</span>(message.<span class="property">callId</span>, result);</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理原生端回调</span></span><br><span class="line">    <span class="title function_">handleNativeCallback</span>(<span class="params">callId, result</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> callback = <span class="variable language_">this</span>.<span class="property">callbacks</span>.<span class="title function_">get</span>(callId);</span><br><span class="line">        <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(result);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">callbacks</span>.<span class="title function_">delete</span>(callId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成唯一的调用ID</span></span><br><span class="line">    <span class="title function_">generateCallId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`call_<span class="subst">$&#123;++<span class="variable language_">this</span>.callbackId&#125;</span>_<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Web端Toast实现</span></span><br><span class="line">    <span class="title function_">showWebToast</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> toast = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        toast.<span class="property">className</span> = <span class="string">&#x27;web-toast&#x27;</span>;</span><br><span class="line">        toast.<span class="property">textContent</span> = message;</span><br><span class="line">        toast.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            position: fixed;</span></span><br><span class="line"><span class="string">            top: 50%;</span></span><br><span class="line"><span class="string">            left: 50%;</span></span><br><span class="line"><span class="string">            transform: translate(-50%, -50%);</span></span><br><span class="line"><span class="string">            background: rgba(0, 0, 0, 0.8);</span></span><br><span class="line"><span class="string">            color: white;</span></span><br><span class="line"><span class="string">            padding: 10px 20px;</span></span><br><span class="line"><span class="string">            border-radius: 5px;</span></span><br><span class="line"><span class="string">            z-index: 10000;</span></span><br><span class="line"><span class="string">            font-size: 14px;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(toast);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(toast);</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 错误处理</span></span><br><span class="line">    <span class="title function_">handleError</span>(<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;页面错误:&#x27;</span>, event.<span class="property">error</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;reportError&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">message</span>: event.<span class="property">error</span>.<span class="property">message</span>,</span><br><span class="line">            <span class="attr">filename</span>: event.<span class="property">filename</span>,</span><br><span class="line">            <span class="attr">lineno</span>: event.<span class="property">lineno</span>,</span><br><span class="line">            <span class="attr">colno</span>: event.<span class="property">colno</span>,</span><br><span class="line">            <span class="attr">stack</span>: event.<span class="property">error</span>.<span class="property">stack</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 常用功能封装</span></span><br><span class="line">    <span class="title function_">showToast</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;showToast&#x27;</span>, &#123; message &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getDeviceInfo</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;getDeviceInfo&#x27;</span>, &#123;&#125;, callback);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">openCamera</span>(<span class="params">callback</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;openCamera&#x27;</span>, &#123;&#125;, callback);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">setTitle</span>(<span class="params">title</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">title</span> = title;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;setTitle&#x27;</span>, &#123; title &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">goBack</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;goBack&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">share</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;share&#x27;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">openUrl</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;openUrl&#x27;</span>, &#123; url &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建全局桥接实例</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">bridge</span> = <span class="keyword">new</span> <span class="title class_">WebNativeBridge</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生端调用Web端的全局函数</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">receiveDeviceInfo</span> = <span class="keyword">function</span>(<span class="params">deviceInfo</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到设备信息:&#x27;</span>, deviceInfo);</span><br><span class="line">    <span class="comment">// 触发自定义事件</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;deviceInfoReceived&#x27;</span>, &#123; </span><br><span class="line">        <span class="attr">detail</span>: deviceInfo </span><br><span class="line">    &#125;));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="property">receiveImage</span> = <span class="keyword">function</span>(<span class="params">imageData</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到图片数据&#x27;</span>);</span><br><span class="line">    <span class="comment">// 触发自定义事件</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> <span class="title class_">CustomEvent</span>(<span class="string">&#x27;imageReceived&#x27;</span>, &#123; </span><br><span class="line">        <span class="attr">detail</span>: &#123; imageData &#125; </span><br><span class="line">    &#125;));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页面可见性变化处理</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">bridge</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;pageHidden&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">bridge</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;pageVisible&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="2-Vue-js集成示例"><a href="#2-Vue-js集成示例" class="headerlink" title="2. Vue.js集成示例"></a>2. Vue.js集成示例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- App.vue - Vue.js套壳应用主组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;!-- 顶部导航栏 --&gt;</span><br><span class="line">    &lt;nav-bar </span><br><span class="line">      :title=&quot;pageTitle&quot;</span><br><span class="line">      :show-back=&quot;showBackButton&quot;</span><br><span class="line">      @back=&quot;handleBack&quot;</span><br><span class="line">      @menu=&quot;handleMenu&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 主要内容区域 --&gt;</span><br><span class="line">    &lt;main class=&quot;main-content&quot;&gt;</span><br><span class="line">      &lt;router-view /&gt;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 底部导航栏 --&gt;</span><br><span class="line">    &lt;tab-bar v-if=&quot;showTabBar&quot; /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 全局加载提示 --&gt;</span><br><span class="line">    &lt;loading v-if=&quot;isLoading&quot; /&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- 全局Toast --&gt;</span><br><span class="line">    &lt;toast </span><br><span class="line">      :visible=&quot;toast.visible&quot;</span><br><span class="line">      :message=&quot;toast.message&quot;</span><br><span class="line">      :type=&quot;toast.type&quot;</span><br><span class="line">      @close=&quot;hideToast&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import NavBar from &#x27;@/components/NavBar.vue&#x27;</span><br><span class="line">import TabBar from &#x27;@/components/TabBar.vue&#x27;</span><br><span class="line">import Loading from &#x27;@/components/Loading.vue&#x27;</span><br><span class="line">import Toast from &#x27;@/components/Toast.vue&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    NavBar,</span><br><span class="line">    TabBar,</span><br><span class="line">    Loading,</span><br><span class="line">    Toast</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      pageTitle: &#x27;套壳应用&#x27;,</span><br><span class="line">      showBackButton: false,</span><br><span class="line">      showTabBar: true,</span><br><span class="line">      isLoading: false,</span><br><span class="line">      deviceInfo: null,</span><br><span class="line">      toast: &#123;</span><br><span class="line">        visible: false,</span><br><span class="line">        message: &#x27;&#x27;,</span><br><span class="line">        type: &#x27;info&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  created() &#123;</span><br><span class="line">    this.initApp()</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.setupNativeListeners()</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  methods: &#123;</span><br><span class="line">    async initApp() &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        this.isLoading = true</span><br><span class="line">        </span><br><span class="line">        // 获取设备信息</span><br><span class="line">        await this.getDeviceInfo()</span><br><span class="line">        </span><br><span class="line">        // 设置应用标题</span><br><span class="line">        this.setAppTitle()</span><br><span class="line">        </span><br><span class="line">        // 初始化路由监听</span><br><span class="line">        this.setupRouterListeners()</span><br><span class="line">        </span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        console.error(&#x27;应用初始化失败:&#x27;, error)</span><br><span class="line">        this.showToast(&#x27;应用初始化失败&#x27;, &#x27;error&#x27;)</span><br><span class="line">      &#125; finally &#123;</span><br><span class="line">        this.isLoading = false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    getDeviceInfo() &#123;</span><br><span class="line">      return new Promise((resolve) =&gt; &#123;</span><br><span class="line">        if (window.bridge) &#123;</span><br><span class="line">          window.bridge.getDeviceInfo((info) =&gt; &#123;</span><br><span class="line">            this.deviceInfo = info</span><br><span class="line">            console.log(&#x27;设备信息:&#x27;, info)</span><br><span class="line">            resolve(info)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          resolve(null)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    setAppTitle() &#123;</span><br><span class="line">      if (window.bridge) &#123;</span><br><span class="line">        window.bridge.setTitle(this.pageTitle)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    setupRouterListeners() &#123;</span><br><span class="line">      // 监听路由变化</span><br><span class="line">      this.$router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">        this.pageTitle = to.meta.title || &#x27;套壳应用&#x27;</span><br><span class="line">        this.showBackButton = to.meta.showBack !== false</span><br><span class="line">        this.showTabBar = to.meta.showTabBar !== false</span><br><span class="line">        </span><br><span class="line">        // 通知原生端路由变化</span><br><span class="line">        if (window.bridge) &#123;</span><br><span class="line">          window.bridge.callNative(&#x27;routeChanged&#x27;, &#123;</span><br><span class="line">            from: from.path,</span><br><span class="line">            to: to.path,</span><br><span class="line">            title: this.pageTitle</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        next()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    setupNativeListeners() &#123;</span><br><span class="line">      // 监听设备信息接收</span><br><span class="line">      window.addEventListener(&#x27;deviceInfoReceived&#x27;, (event) =&gt; &#123;</span><br><span class="line">        this.deviceInfo = event.detail</span><br><span class="line">        this.$store.commit(&#x27;setDeviceInfo&#x27;, event.detail)</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      // 监听图片接收</span><br><span class="line">      window.addEventListener(&#x27;imageReceived&#x27;, (event) =&gt; &#123;</span><br><span class="line">        this.$eventBus.$emit(&#x27;imageReceived&#x27;, event.detail.imageData)</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      // 监听原生端事件</span><br><span class="line">      window.addEventListener(&#x27;nativeEvent&#x27;, (event) =&gt; &#123;</span><br><span class="line">        this.handleNativeEvent(event.detail)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleNativeEvent(eventData) &#123;</span><br><span class="line">      switch (eventData.type) &#123;</span><br><span class="line">        case &#x27;networkChanged&#x27;:</span><br><span class="line">          this.handleNetworkChange(eventData.data)</span><br><span class="line">          break</span><br><span class="line">          </span><br><span class="line">        case &#x27;appStateChanged&#x27;:</span><br><span class="line">          this.handleAppStateChange(eventData.data)</span><br><span class="line">          break</span><br><span class="line">          </span><br><span class="line">        case &#x27;pushNotification&#x27;:</span><br><span class="line">          this.handlePushNotification(eventData.data)</span><br><span class="line">          break</span><br><span class="line">          </span><br><span class="line">        default:</span><br><span class="line">          console.log(&#x27;未处理的原生事件:&#x27;, eventData)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleBack() &#123;</span><br><span class="line">      if (this.$router.history.current.path !== &#x27;/&#x27;) &#123;</span><br><span class="line">        this.$router.go(-1)</span><br><span class="line">      &#125; else if (window.bridge) &#123;</span><br><span class="line">        window.bridge.goBack()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleMenu() &#123;</span><br><span class="line">      // 显示菜单</span><br><span class="line">      this.$refs.menu.show()</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    showToast(message, type = &#x27;info&#x27;) &#123;</span><br><span class="line">      this.toast = &#123;</span><br><span class="line">        visible: true,</span><br><span class="line">        message,</span><br><span class="line">        type</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      // 同时调用原生Toast</span><br><span class="line">      if (window.bridge) &#123;</span><br><span class="line">        window.bridge.showToast(message)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    hideToast() &#123;</span><br><span class="line">      this.toast.visible = false</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleNetworkChange(networkInfo) &#123;</span><br><span class="line">      if (!networkInfo.isConnected) &#123;</span><br><span class="line">        this.showToast(&#x27;网络连接已断开&#x27;, &#x27;warning&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handleAppStateChange(state) &#123;</span><br><span class="line">      if (state === &#x27;background&#x27;) &#123;</span><br><span class="line">        // 应用进入后台</span><br><span class="line">        this.$store.dispatch(&#x27;saveAppState&#x27;)</span><br><span class="line">      &#125; else if (state === &#x27;foreground&#x27;) &#123;</span><br><span class="line">        // 应用回到前台</span><br><span class="line">        this.$store.dispatch(&#x27;restoreAppState&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    handlePushNotification(notification) &#123;</span><br><span class="line">      // 处理推送通知</span><br><span class="line">      this.showToast(notification.message)</span><br><span class="line">      </span><br><span class="line">      // 根据通知类型跳转页面</span><br><span class="line">      if (notification.action) &#123;</span><br><span class="line">        this.$router.push(notification.action.url)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: -apple-system, BlinkMacSystemFont, &#x27;Segoe UI&#x27;, Roboto, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  height: 100vh;</span><br><span class="line">  display: flex;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.main-content &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">  -webkit-overflow-scrolling: touch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 适配安全区域 */</span><br><span class="line">@supports (padding-top: env(safe-area-inset-top)) &#123;</span><br><span class="line">  .main-content &#123;</span><br><span class="line">    padding-top: env(safe-area-inset-top);</span><br><span class="line">    padding-bottom: env(safe-area-inset-bottom);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<a class="btn-beautify blue larger" href="https://developer.android.com/guide/webapps/webview" title="Android WebView官方文档"><i class="far fa-hand-point-right"></i><span>Android WebView官方文档</span></a>

<h1 id="四、套壳应用的优缺点与选择建议"><a href="#四、套壳应用的优缺点与选择建议" class="headerlink" title="四、套壳应用的优缺点与选择建议"></a>四、套壳应用的优缺点与选择建议</h1><h2 id="（一）优势分析"><a href="#（一）优势分析" class="headerlink" title="（一）优势分析"></a>（一）优势分析</h2><h3 id="1-开发效率优势"><a href="#1-开发效率优势" class="headerlink" title="1. 开发效率优势"></a>1. 开发效率优势</h3><p><strong>成本效益对比：</strong></p>
<table>
<thead>
<tr>
<th>对比项目</th>
<th>原生开发</th>
<th>套壳开发</th>
<th>优势</th>
</tr>
</thead>
<tbody><tr>
<td>开发周期</td>
<td>6-12个月</td>
<td>2-4个月</td>
<td>节省50-70%时间</td>
</tr>
<tr>
<td>团队规模</td>
<td>4-8人</td>
<td>2-4人</td>
<td>减少人力成本</td>
</tr>
<tr>
<td>技能要求</td>
<td>iOS+Android+后端</td>
<td>前端+少量原生</td>
<td>降低技术门槛</td>
</tr>
<tr>
<td>维护成本</td>
<td>高（两套代码）</td>
<td>中等（主要Web）</td>
<td>降低维护负担</td>
</tr>
<tr>
<td>更新频率</td>
<td>应用商店审核</td>
<td>即时更新（Web部分）</td>
<td>提高迭代速度</td>
</tr>
</tbody></table>
<h3 id="2-技术优势"><a href="#2-技术优势" class="headerlink" title="2. 技术优势"></a>2. 技术优势</h3><h4 id="跨平台优势"><a href="#跨平台优势" class="headerlink" title="跨平台优势"></a>跨平台优势</h4><p><strong>一套代码多平台运行</strong></p>
<ul>
<li>iOS和Android共享Web代码</li>
<li>减少平台差异处理</li>
<li>统一的用户体验</li>
<li>降低测试成本</li>
</ul>
<h4 id="快速开发优势"><a href="#快速开发优势" class="headerlink" title="快速开发优势"></a>快速开发优势</h4><p><strong>快速开发和部署</strong></p>
<ul>
<li>Web技术栈成熟</li>
<li>丰富的前端框架和库</li>
<li>热更新能力</li>
<li>快速原型验证</li>
</ul>
<h4 id="维护优势"><a href="#维护优势" class="headerlink" title="维护优势"></a>维护优势</h4><p><strong>便于维护和更新</strong></p>
<ul>
<li>主要逻辑在Web端</li>
<li>bug修复可以热更新</li>
<li>功能迭代更灵活</li>
<li>A&#x2F;B测试容易实现</li>
</ul>
<h2 id="（二）劣势分析"><a href="#（二）劣势分析" class="headerlink" title="（二）劣势分析"></a>（二）劣势分析</h2><h3 id="1-性能限制"><a href="#1-性能限制" class="headerlink" title="1. 性能限制"></a>1. 性能限制</h3><p><strong>性能对比分析：</strong></p>
<table>
<thead>
<tr>
<th>性能指标</th>
<th>原生应用</th>
<th>套壳应用</th>
<th>影响说明</th>
</tr>
</thead>
<tbody><tr>
<td><strong>启动时间</strong></td>
<td>1-2秒</td>
<td>2-5秒</td>
<td>用户首次体验较差</td>
</tr>
<tr>
<td><strong>内存使用</strong></td>
<td>50-100MB</td>
<td>80-150MB</td>
<td>内存占用较高</td>
</tr>
<tr>
<td><strong>滚动性能</strong></td>
<td>60FPS流畅</td>
<td>可能出现卡顿</td>
<td>滚动体验不如原生</td>
</tr>
<tr>
<td><strong>电池续航</strong></td>
<td>优秀</td>
<td>一般</td>
<td>电池消耗相对较高</td>
</tr>
</tbody></table>
<p><strong>主要性能限制：</strong></p>
<ul>
<li>WebView渲染性能不如原生</li>
<li>JavaScript执行效率相对较低</li>
<li>复杂动画可能出现卡顿</li>
<li>大量数据处理性能受限</li>
<li>网络依赖性较强</li>
</ul>
<h3 id="2-功能限制"><a href="#2-功能限制" class="headerlink" title="2. 功能限制"></a>2. 功能限制</h3><p><strong>原生功能访问限制：</strong></p>
<ul>
<li>无法访问所有系统API</li>
<li>推送通知功能受限</li>
<li>后台处理能力有限</li>
<li>系统级集成度不高</li>
<li>硬件功能调用复杂</li>
</ul>
<h3 id="3-用户体验问题"><a href="#3-用户体验问题" class="headerlink" title="3. 用户体验问题"></a>3. 用户体验问题</h3><p><strong>交互体验限制：</strong></p>
<ul>
<li>触摸反馈延迟</li>
<li>键盘处理复杂</li>
<li>手势识别有限</li>
<li>系统UI不一致</li>
<li>加载状态处理</li>
</ul>
<h2 id="（三）应用商店审核风险"><a href="#（三）应用商店审核风险" class="headerlink" title="（三）应用商店审核风险"></a>（三）应用商店审核风险</h2><h3 id="1-审核政策分析"><a href="#1-审核政策分析" class="headerlink" title="1. 审核政策分析"></a>1. 审核政策分析</h3><h4 id="Apple-App-Store（审核严格）"><a href="#Apple-App-Store（审核严格）" class="headerlink" title="Apple App Store（审核严格）"></a>Apple App Store（审核严格）</h4><p><strong>常见拒绝原因：</strong></p>
<ul>
<li>简单的网站包装</li>
<li>缺乏原生功能</li>
<li>用户体验不佳</li>
<li>功能重复或无价值</li>
</ul>
<p><strong>审核要求：</strong></p>
<ul>
<li>必须提供独特价值</li>
<li>需要原生功能集成</li>
<li>遵循iOS设计规范</li>
<li>性能达到标准</li>
</ul>
<h4 id="Google-Play-Store（相对宽松）"><a href="#Google-Play-Store（相对宽松）" class="headerlink" title="Google Play Store（相对宽松）"></a>Google Play Store（相对宽松）</h4><p><strong>常见拒绝原因：</strong></p>
<ul>
<li>低质量应用</li>
<li>误导性内容</li>
<li>功能不完整</li>
<li>崩溃或错误</li>
</ul>
<p><strong>审核要求：</strong></p>
<ul>
<li>应用稳定运行</li>
<li>提供实际价值</li>
<li>遵循Android规范</li>
<li>适当的权限使用</li>
</ul>
<h3 id="2-提高审核通过率的策略"><a href="#2-提高审核通过率的策略" class="headerlink" title="2. 提高审核通过率的策略"></a>2. 提高审核通过率的策略</h3><p><strong>增加原生功能模块：</strong></p>
<h4 id="基础功能（必备）"><a href="#基础功能（必备）" class="headerlink" title="基础功能（必备）"></a>基础功能（必备）</h4><ul>
<li>相机和相册访问</li>
<li>定位服务</li>
<li>推送通知</li>
<li>本地存储</li>
<li>网络状态检测</li>
</ul>
<h4 id="增强功能（推荐）"><a href="#增强功能（推荐）" class="headerlink" title="增强功能（推荐）"></a>增强功能（推荐）</h4><ul>
<li>生物识别认证</li>
<li>系统分享功能</li>
<li>联系人访问</li>
<li>日历集成</li>
<li>设备震动</li>
</ul>
<h4 id="高级功能（可选）"><a href="#高级功能（可选）" class="headerlink" title="高级功能（可选）"></a>高级功能（可选）</h4><ul>
<li>后台任务处理</li>
<li>Widget支持</li>
<li>Siri快捷指令</li>
<li>Apple Pay集成</li>
<li>健康数据访问</li>
</ul>
<h1 id="五、套壳应用最佳实践"><a href="#五、套壳应用最佳实践" class="headerlink" title="五、套壳应用最佳实践"></a>五、套壳应用最佳实践</h1><h2 id="（一）性能优化策略"><a href="#（一）性能优化策略" class="headerlink" title="（一）性能优化策略"></a>（一）性能优化策略</h2><h3 id="1-启动性能优化"><a href="#1-启动性能优化" class="headerlink" title="1. 启动性能优化"></a>1. 启动性能优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// startup-optimization.js - 启动性能优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StartupOptimizer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">criticalResources</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">deferredResources</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 预加载关键资源</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">preloadCriticalResources</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 延迟加载非关键资源</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">deferNonCriticalResources</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启用资源缓存</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">enableResourceCaching</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 优化首屏渲染</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">optimizeFirstPaint</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">preloadCriticalResources</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> critical = [</span><br><span class="line">            <span class="string">&#x27;/css/critical.css&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;/js/app.min.js&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;/images/logo.png&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        critical.<span class="title function_">forEach</span>(<span class="function"><span class="params">resource</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>);</span><br><span class="line">            link.<span class="property">rel</span> = <span class="string">&#x27;preload&#x27;</span>;</span><br><span class="line">            link.<span class="property">href</span> = resource;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.css&#x27;</span>)) &#123;</span><br><span class="line">                link.<span class="property">as</span> = <span class="string">&#x27;style&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resource.<span class="title function_">endsWith</span>(<span class="string">&#x27;.js&#x27;</span>)) &#123;</span><br><span class="line">                link.<span class="property">as</span> = <span class="string">&#x27;script&#x27;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resource.<span class="title function_">match</span>(<span class="regexp">/\.(png|jpg|jpeg|gif|webp)$/</span>)) &#123;</span><br><span class="line">                link.<span class="property">as</span> = <span class="string">&#x27;image&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">deferNonCriticalResources</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 延迟加载非关键CSS</span></span><br><span class="line">        <span class="keyword">const</span> deferredCSS = [</span><br><span class="line">            <span class="string">&#x27;/css/non-critical.css&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;/css/animations.css&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            deferredCSS.<span class="title function_">forEach</span>(<span class="function"><span class="params">css</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>);</span><br><span class="line">                link.<span class="property">rel</span> = <span class="string">&#x27;stylesheet&#x27;</span>;</span><br><span class="line">                link.<span class="property">href</span> = css;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 延迟加载非关键JavaScript</span></span><br><span class="line">        <span class="keyword">const</span> deferredJS = [</span><br><span class="line">            <span class="string">&#x27;/js/analytics.js&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;/js/third-party.js&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            deferredJS.<span class="title function_">forEach</span>(<span class="function"><span class="params">js</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">                script.<span class="property">src</span> = js;</span><br><span class="line">                script.<span class="property">async</span> = <span class="literal">true</span>;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">enableResourceCaching</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// Service Worker缓存策略</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;serviceWorker&#x27;</span> <span class="keyword">in</span> navigator) &#123;</span><br><span class="line">            navigator.<span class="property">serviceWorker</span>.<span class="title function_">register</span>(<span class="string">&#x27;/sw.js&#x27;</span>)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">registration</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SW注册成功:&#x27;</span>, registration);</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;SW注册失败:&#x27;</span>, error);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">optimizeFirstPaint</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 内联关键CSS</span></span><br><span class="line">        <span class="keyword">const</span> criticalCSS = <span class="string">`</span></span><br><span class="line"><span class="string">            body &#123; margin: 0; font-family: -apple-system, BlinkMacSystemFont, sans-serif; &#125;</span></span><br><span class="line"><span class="string">            .loading &#123; display: flex; justify-content: center; align-items: center; height: 100vh; &#125;</span></span><br><span class="line"><span class="string">            .spinner &#123; width: 40px; height: 40px; border: 4px solid #f3f3f3; border-top: 4px solid #3498db; border-radius: 50%; animation: spin 1s linear infinite; &#125;</span></span><br><span class="line"><span class="string">            @keyframes spin &#123; 0% &#123; transform: rotate(0deg); &#125; 100% &#123; transform: rotate(360deg); &#125; &#125;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> style = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">        style.<span class="property">textContent</span> = criticalCSS;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(style);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 显示加载动画</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;loading&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;spinner&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 立即执行启动优化</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">StartupOptimizer</span>();</span><br></pre></td></tr></table></figure>

<h3 id="2-运行时性能优化"><a href="#2-运行时性能优化" class="headerlink" title="2. 运行时性能优化"></a>2. 运行时性能优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// runtime-optimization.js - 运行时性能优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RuntimeOptimizer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">performanceObserver</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">memoryMonitor</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupPerformanceMonitoring</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">optimizeScrolling</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">optimizeImageLoading</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMemoryManagement</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupPerformanceMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 性能监控</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;PerformanceObserver&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">performanceObserver</span> = <span class="keyword">new</span> <span class="title class_">PerformanceObserver</span>(<span class="function">(<span class="params">list</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> entries = list.<span class="title function_">getEntries</span>();</span><br><span class="line">                entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (entry.<span class="property">entryType</span> === <span class="string">&#x27;measure&#x27;</span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`性能指标 <span class="subst">$&#123;entry.name&#125;</span>: <span class="subst">$&#123;entry.duration&#125;</span>ms`</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">performanceObserver</span>.<span class="title function_">observe</span>(&#123; <span class="attr">entryTypes</span>: [<span class="string">&#x27;measure&#x27;</span>, <span class="string">&#x27;navigation&#x27;</span>] &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监控长任务</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;PerformanceObserver&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> longTaskObserver = <span class="keyword">new</span> <span class="title class_">PerformanceObserver</span>(<span class="function">(<span class="params">list</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> entries = list.<span class="title function_">getEntries</span>();</span><br><span class="line">                entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`长任务检测: <span class="subst">$&#123;entry.duration&#125;</span>ms`</span>);</span><br><span class="line">                    <span class="comment">// 通知原生端性能问题</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">bridge</span>) &#123;</span><br><span class="line">                        <span class="variable language_">window</span>.<span class="property">bridge</span>.<span class="title function_">callNative</span>(<span class="string">&#x27;performanceIssue&#x27;</span>, &#123;</span><br><span class="line">                            <span class="attr">type</span>: <span class="string">&#x27;longTask&#x27;</span>,</span><br><span class="line">                            <span class="attr">duration</span>: entry.<span class="property">duration</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            longTaskObserver.<span class="title function_">observe</span>(&#123; <span class="attr">entryTypes</span>: [<span class="string">&#x27;longtask&#x27;</span>] &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">optimizeScrolling</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 滚动性能优化</span></span><br><span class="line">        <span class="keyword">let</span> ticking = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">optimizedScrollHandler</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (!ticking) &#123;</span><br><span class="line">                <span class="title function_">requestAnimationFrame</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 执行滚动相关操作</span></span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleScroll</span>();</span><br><span class="line">                    ticking = <span class="literal">false</span>;</span><br><span class="line">                &#125;);</span><br><span class="line">                ticking = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用被动事件监听器</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, optimizedScrollHandler, &#123; <span class="attr">passive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 虚拟滚动实现</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">implementVirtualScrolling</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleScroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> scrollTop = <span class="variable language_">window</span>.<span class="property">pageYOffset</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 懒加载图片</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">lazyLoadImages</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新导航栏状态</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">updateNavigationBar</span>(scrollTop);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">lazyLoadImages</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> images = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img[data-src]:not([data-loaded])&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        images.<span class="title function_">forEach</span>(<span class="function"><span class="params">img</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isElementInViewport</span>(img)) &#123;</span><br><span class="line">                img.<span class="property">src</span> = img.<span class="property">dataset</span>.<span class="property">src</span>;</span><br><span class="line">                img.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-loaded&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">                img.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;data-src&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">isElementInViewport</span>(<span class="params">element</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> rect = element.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            rect.<span class="property">top</span> &gt;= <span class="number">0</span> &amp;&amp;</span><br><span class="line">            rect.<span class="property">left</span> &gt;= <span class="number">0</span> &amp;&amp;</span><br><span class="line">            rect.<span class="property">bottom</span> &lt;= (<span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span>) &amp;&amp;</span><br><span class="line">            rect.<span class="property">right</span> &lt;= (<span class="variable language_">window</span>.<span class="property">innerWidth</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">optimizeImageLoading</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 图片格式优化</span></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">supportsWebP</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line">            canvas.<span class="property">width</span> = <span class="number">1</span>;</span><br><span class="line">            canvas.<span class="property">height</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/webp&#x27;</span>).<span class="title function_">indexOf</span>(<span class="string">&#x27;data:image/webp&#x27;</span>) === <span class="number">0</span>;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_">supportsWebP</span>()) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;webp&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 响应式图片加载</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupResponsiveImages</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupResponsiveImages</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> images = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img[data-srcset]&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        images.<span class="title function_">forEach</span>(<span class="function"><span class="params">img</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> devicePixelRatio = <span class="variable language_">window</span>.<span class="property">devicePixelRatio</span> || <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">const</span> screenWidth = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> selectedSrc = img.<span class="property">dataset</span>.<span class="property">src</span>; <span class="comment">// 默认图片</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (devicePixelRatio &gt;= <span class="number">2</span> &amp;&amp; screenWidth &gt;= <span class="number">768</span>) &#123;</span><br><span class="line">                selectedSrc = img.<span class="property">dataset</span>.<span class="property">srcHd</span>; <span class="comment">// 高清图片</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (screenWidth &lt; <span class="number">768</span>) &#123;</span><br><span class="line">                selectedSrc = img.<span class="property">dataset</span>.<span class="property">srcMobile</span>; <span class="comment">// 移动端图片</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (selectedSrc) &#123;</span><br><span class="line">                img.<span class="property">src</span> = selectedSrc;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupMemoryManagement</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 内存使用监控</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;memory&#x27;</span> <span class="keyword">in</span> performance) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">memoryMonitor</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> memInfo = performance.<span class="property">memory</span>;</span><br><span class="line">                <span class="keyword">const</span> usedMB = <span class="title class_">Math</span>.<span class="title function_">round</span>(memInfo.<span class="property">usedJSHeapSize</span> / <span class="number">1048576</span>);</span><br><span class="line">                <span class="keyword">const</span> totalMB = <span class="title class_">Math</span>.<span class="title function_">round</span>(memInfo.<span class="property">totalJSHeapSize</span> / <span class="number">1048576</span>);</span><br><span class="line"></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`内存使用: <span class="subst">$&#123;usedMB&#125;</span>MB / <span class="subst">$&#123;totalMB&#125;</span>MB`</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 内存使用过高时清理</span></span><br><span class="line">                <span class="keyword">if</span> (usedMB &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">performMemoryCleanup</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">10000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 页面可见性变化处理</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="property">hidden</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">pauseNonEssentialTasks</span>();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">resumeNonEssentialTasks</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">performMemoryCleanup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理未使用的DOM元素</span></span><br><span class="line">        <span class="keyword">const</span> unusedElements = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;[data-cleanup=&quot;true&quot;]&#x27;</span>);</span><br><span class="line">        unusedElements.<span class="title function_">forEach</span>(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">            element.<span class="title function_">remove</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理事件监听器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">cleanupEventListeners</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理定时器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">cleanupTimers</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;内存清理完成&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">cleanupEventListeners</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 移除未使用的事件监听器</span></span><br><span class="line">        <span class="keyword">const</span> elements = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;[data-events]&#x27;</span>);</span><br><span class="line">        elements.<span class="title function_">forEach</span>(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> events = element.<span class="property">dataset</span>.<span class="property">events</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">            events.<span class="title function_">forEach</span>(<span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">                element.<span class="title function_">removeEventListener</span>(event.<span class="title function_">trim</span>(), <span class="literal">null</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">cleanupTimers</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理应用级定时器</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">appTimers</span>) &#123;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">appTimers</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">timer</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">                <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">appTimers</span> = [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">pauseNonEssentialTasks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 暂停非必要任务</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">memoryMonitor</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">memoryMonitor</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 暂停动画</span></span><br><span class="line">        <span class="keyword">const</span> animations = <span class="variable language_">document</span>.<span class="title function_">getAnimations</span>();</span><br><span class="line">        animations.<span class="title function_">forEach</span>(<span class="function"><span class="params">animation</span> =&gt;</span> animation.<span class="title function_">pause</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">resumeNonEssentialTasks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 恢复非必要任务</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMemoryManagement</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 恢复动画</span></span><br><span class="line">        <span class="keyword">const</span> animations = <span class="variable language_">document</span>.<span class="title function_">getAnimations</span>();</span><br><span class="line">        animations.<span class="title function_">forEach</span>(<span class="function"><span class="params">animation</span> =&gt;</span> animation.<span class="title function_">play</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化运行时优化</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">RuntimeOptimizer</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="六、套壳应用开发选择建议"><a href="#六、套壳应用开发选择建议" class="headerlink" title="六、套壳应用开发选择建议"></a>六、套壳应用开发选择建议</h1><h2 id="（一）适用场景分析"><a href="#（一）适用场景分析" class="headerlink" title="（一）适用场景分析"></a>（一）适用场景分析</h2><h3 id="1-推荐使用套壳开发的场景"><a href="#1-推荐使用套壳开发的场景" class="headerlink" title="1. 推荐使用套壳开发的场景"></a>1. 推荐使用套壳开发的场景</h3><h4 id="内容驱动型应用"><a href="#内容驱动型应用" class="headerlink" title="内容驱动型应用"></a>内容驱动型应用</h4><p><strong>应用示例：</strong></p>
<ul>
<li>新闻资讯应用</li>
<li>博客阅读器</li>
<li>在线文档系统</li>
<li>企业官网应用</li>
<li>产品展示应用</li>
</ul>
<p><strong>推荐理由：</strong></p>
<ul>
<li>主要功能是内容展示</li>
<li>更新频率高</li>
<li>跨平台一致性要求高</li>
<li>开发成本敏感</li>
</ul>
<h4 id="企业级工具应用"><a href="#企业级工具应用" class="headerlink" title="企业级工具应用"></a>企业级工具应用</h4><p><strong>应用示例：</strong></p>
<ul>
<li>CRM系统</li>
<li>ERP移动端</li>
<li>项目管理工具</li>
<li>内部办公系统</li>
<li>数据报表应用</li>
</ul>
<p><strong>推荐理由：</strong></p>
<ul>
<li>功能相对简单</li>
<li>用户群体固定</li>
<li>快速迭代需求</li>
<li>成本控制要求</li>
</ul>
<h4 id="原型验证和MVP"><a href="#原型验证和MVP" class="headerlink" title="原型验证和MVP"></a>原型验证和MVP</h4><p><strong>应用示例：</strong></p>
<ul>
<li>创业项目MVP</li>
<li>概念验证应用</li>
<li>市场测试产品</li>
<li>快速原型展示</li>
</ul>
<p><strong>推荐理由：</strong></p>
<ul>
<li>快速上线验证</li>
<li>低成本试错</li>
<li>功能快速迭代</li>
<li>技术栈灵活</li>
</ul>
<h3 id="2-不推荐使用套壳开发的场景"><a href="#2-不推荐使用套壳开发的场景" class="headerlink" title="2. 不推荐使用套壳开发的场景"></a>2. 不推荐使用套壳开发的场景</h3><h4 id="性能要求极高的应用"><a href="#性能要求极高的应用" class="headerlink" title="性能要求极高的应用"></a>性能要求极高的应用</h4><p><strong>应用示例：</strong></p>
<ul>
<li>游戏应用</li>
<li>视频编辑器</li>
<li>图像处理应用</li>
<li>实时通讯应用</li>
<li>AR&#x2F;VR应用</li>
</ul>
<p><strong>不推荐理由：</strong></p>
<ul>
<li>需要高性能渲染</li>
<li>实时性要求高</li>
<li>复杂计算密集</li>
<li>硬件资源依赖重</li>
</ul>
<h4 id="系统深度集成应用"><a href="#系统深度集成应用" class="headerlink" title="系统深度集成应用"></a>系统深度集成应用</h4><p><strong>应用示例：</strong></p>
<ul>
<li>系统工具应用</li>
<li>安全类应用</li>
<li>设备管理应用</li>
<li>系统优化工具</li>
</ul>
<p><strong>不推荐理由：</strong></p>
<ul>
<li>需要系统级权限</li>
<li>深度硬件访问</li>
<li>系统API依赖重</li>
<li>安全性要求高</li>
</ul>
<h4 id="复杂交互应用"><a href="#复杂交互应用" class="headerlink" title="复杂交互应用"></a>复杂交互应用</h4><p><strong>应用示例：</strong></p>
<ul>
<li>专业绘图应用</li>
<li>音乐制作软件</li>
<li>复杂手势应用</li>
<li>多点触控应用</li>
</ul>
<p><strong>不推荐理由：</strong></p>
<ul>
<li>复杂手势识别</li>
<li>精确触控要求</li>
<li>自定义UI组件多</li>
<li>交互体验要求高</li>
</ul>
<h2 id="（二）技术选型决策树"><a href="#（二）技术选型决策树" class="headerlink" title="（二）技术选型决策树"></a>（二）技术选型决策树</h2><pre class="mermaid">graph TD
    A[开始项目评估] --> B{是否需要高性能?}
    B -->|是| C[选择原生开发]
    B -->|否| D{是否需要复杂系统集成?}
    D -->|是| C
    D -->|否| E{开发周期是否紧张?}
    E -->|是| F{团队是否熟悉Web技术?}
    E -->|否| G{预算是否充足?}
    F -->|是| H[选择套壳开发]
    F -->|否| I[考虑跨平台框架]
    G -->|是| J{用户体验要求?}
    G -->|否| H
    J -->|高| C
    J -->|中等| I
    J -->|一般| H
    I --> K[React Native/Flutter]</pre>

<h2 id="（三）开发团队建议"><a href="#（三）开发团队建议" class="headerlink" title="（三）开发团队建议"></a>（三）开发团队建议</h2><h3 id="1-团队技能要求"><a href="#1-团队技能要求" class="headerlink" title="1. 团队技能要求"></a>1. 团队技能要求</h3><p><strong>套壳开发团队配置：</strong></p>
<h3 id="核心团队"><a href="#核心团队" class="headerlink" title="核心团队"></a>核心团队</h3><table>
<thead>
<tr>
<th>角色</th>
<th>人数</th>
<th>技能要求</th>
<th>经验要求</th>
</tr>
</thead>
<tbody><tr>
<td><strong>前端开发工程师</strong></td>
<td>2-3人</td>
<td>• HTML&#x2F;CSS&#x2F;JavaScript<br>• Vue.js&#x2F;React&#x2F;Angular<br>• 移动端适配<br>• 性能优化<br>• WebView调试</td>
<td>2年以上前端开发经验</td>
</tr>
<tr>
<td><strong>原生开发工程师</strong></td>
<td>1人</td>
<td>• Android&#x2F;iOS基础开发<br>• WebView集成<br>• 原生API封装<br>• 应用打包发布<br>• 性能调优</td>
<td>1年以上移动开发经验</td>
</tr>
<tr>
<td><strong>后端开发工程师</strong></td>
<td>1-2人</td>
<td>• API设计开发<br>• 数据库设计<br>• 服务器运维<br>• 接口优化<br>• 安全防护</td>
<td>2年以上后端开发经验</td>
</tr>
</tbody></table>
<h3 id="支持团队"><a href="#支持团队" class="headerlink" title="支持团队"></a>支持团队</h3><table>
<thead>
<tr>
<th>角色</th>
<th>人数</th>
<th>技能要求</th>
<th>工作方式</th>
</tr>
</thead>
<tbody><tr>
<td><strong>UI设计师</strong></td>
<td>1人</td>
<td>• 移动端UI设计<br>• 交互设计<br>• 原型制作</td>
<td>兼职参与</td>
</tr>
<tr>
<td><strong>测试工程师</strong></td>
<td>1人</td>
<td>• 移动端测试<br>• 兼容性测试<br>• 性能测试</td>
<td>兼职参与</td>
</tr>
</tbody></table>
<h3 id="2-学习路径建议"><a href="#2-学习路径建议" class="headerlink" title="2. 学习路径建议"></a>2. 学习路径建议</h3><p><strong>前端开发者转套壳开发：</strong></p>
<ol>
<li><strong>移动端适配知识</strong>：viewport、响应式设计、触摸事件</li>
<li><strong>WebView特性</strong>：了解WebView限制和优化方法</li>
<li><strong>原生交互</strong>：JavaScript Bridge、原生API调用</li>
<li><strong>性能优化</strong>：移动端性能优化技巧</li>
<li><strong>调试技能</strong>：移动端调试工具和方法</li>
</ol>
<p><strong>原生开发者学习Web技术：</strong></p>
<ol>
<li><strong>前端基础</strong>：HTML&#x2F;CSS&#x2F;JavaScript基础</li>
<li><strong>现代前端框架</strong>：Vue.js或React基础</li>
<li><strong>构建工具</strong>：Webpack、Vite等构建工具</li>
<li><strong>移动端Web</strong>：移动端Web开发特点</li>
<li><strong>混合开发</strong>：WebView集成和优化</li>
</ol>
<h1 id="七、总结与展望"><a href="#七、总结与展望" class="headerlink" title="七、总结与展望"></a>七、总结与展望</h1><h2 id="（一）套壳应用发展趋势"><a href="#（一）套壳应用发展趋势" class="headerlink" title="（一）套壳应用发展趋势"></a>（一）套壳应用发展趋势</h2><h3 id="1-技术发展方向"><a href="#1-技术发展方向" class="headerlink" title="1. 技术发展方向"></a>1. 技术发展方向</h3><h4 id="性能持续优化"><a href="#性能持续优化" class="headerlink" title="性能持续优化"></a>性能持续优化</h4><ul>
<li>WebView引擎性能提升</li>
<li>JavaScript引擎优化</li>
<li>渲染性能改进</li>
<li>内存管理优化</li>
<li>启动速度提升</li>
</ul>
<h4 id="功能能力扩展"><a href="#功能能力扩展" class="headerlink" title="功能能力扩展"></a>功能能力扩展</h4><ul>
<li>更多原生API支持</li>
<li>WebAssembly集成</li>
<li>PWA特性增强</li>
<li>离线能力提升</li>
<li>AI功能集成</li>
</ul>
<h4 id="开发工具完善"><a href="#开发工具完善" class="headerlink" title="开发工具完善"></a>开发工具完善</h4><ul>
<li>调试工具改进</li>
<li>性能分析工具</li>
<li>自动化测试支持</li>
<li>CI&#x2F;CD集成</li>
<li>热更新机制</li>
</ul>
<h4 id="标准化进程"><a href="#标准化进程" class="headerlink" title="标准化进程"></a>标准化进程</h4><ul>
<li>Web标准持续发展</li>
<li>跨平台API标准化</li>
<li>安全标准完善</li>
<li>性能标准制定</li>
<li>最佳实践规范</li>
</ul>
<h3 id="2-市场前景分析"><a href="#2-市场前景分析" class="headerlink" title="2. 市场前景分析"></a>2. 市场前景分析</h3><p><strong>套壳应用的市场定位：</strong></p>
<ul>
<li><strong>中小企业首选</strong>：成本效益比高，适合快速上线</li>
<li><strong>内容型应用主流</strong>：新闻、资讯、展示类应用的主要选择</li>
<li><strong>原型验证工具</strong>：创业公司和新产品验证的理想选择</li>
<li><strong>企业内部应用</strong>：内部工具和管理系统的常用方案</li>
</ul>
<h2 id="（二）最佳实践总结"><a href="#（二）最佳实践总结" class="headerlink" title="（二）最佳实践总结"></a>（二）最佳实践总结</h2><h3 id="1-开发阶段最佳实践"><a href="#1-开发阶段最佳实践" class="headerlink" title="1. 开发阶段最佳实践"></a>1. 开发阶段最佳实践</h3><h4 id="规划阶段"><a href="#规划阶段" class="headerlink" title="规划阶段"></a>规划阶段</h4><ul>
<li>明确应用定位和目标用户</li>
<li>评估性能和功能需求</li>
<li>选择合适的技术栈</li>
<li>制定开发和发布计划</li>
<li>考虑应用商店审核要求</li>
</ul>
<h4 id="开发阶段"><a href="#开发阶段" class="headerlink" title="开发阶段"></a>开发阶段</h4><ul>
<li>采用移动优先的设计理念</li>
<li>实现响应式布局和适配</li>
<li>优化首屏加载性能</li>
<li>集成必要的原生功能</li>
<li>建立完善的错误处理机制</li>
</ul>
<h4 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h4><ul>
<li>多设备兼容性测试</li>
<li>性能和内存测试</li>
<li>网络环境测试</li>
<li>用户体验测试</li>
<li>应用商店合规性检查</li>
</ul>
<h4 id="部署阶段"><a href="#部署阶段" class="headerlink" title="部署阶段"></a>部署阶段</h4><ul>
<li>建立CI&#x2F;CD流水线</li>
<li>实现热更新机制</li>
<li>监控应用性能</li>
<li>收集用户反馈</li>
<li>持续优化和迭代</li>
</ul>
<h3 id="2-关键成功因素"><a href="#2-关键成功因素" class="headerlink" title="2. 关键成功因素"></a>2. 关键成功因素</h3><p><strong>技术层面：</strong></p>
<ul>
<li>选择合适的技术栈和框架</li>
<li>重视性能优化和用户体验</li>
<li>建立完善的原生交互机制</li>
<li>实现有效的错误处理和监控</li>
</ul>
<p><strong>产品层面：</strong></p>
<ul>
<li>明确产品定位和价值主张</li>
<li>提供差异化的功能和服务</li>
<li>持续收集用户反馈并改进</li>
<li>保持产品的更新和维护</li>
</ul>
<p><strong>团队层面：</strong></p>
<ul>
<li>组建合适的开发团队</li>
<li>建立高效的开发流程</li>
<li>重视代码质量和规范</li>
<li>培养跨平台开发能力</li>
</ul>
<h2 id="（三）结语"><a href="#（三）结语" class="headerlink" title="（三）结语"></a>（三）结语</h2><p>套壳应用开发作为移动应用开发的重要方式之一，在特定场景下具有明显的优势。通过合理的技术选型、优秀的开发实践和持续的优化改进，套壳应用完全可以提供良好的用户体验和商业价值。</p>
<p>随着Web技术的不断发展和移动设备性能的提升，套壳应用的性能和功能限制将逐步得到改善。对于追求快速上线、成本控制和跨平台一致性的项目来说，套壳开发仍然是一个值得考虑的技术方案。</p>
<p>关键在于根据项目的具体需求、团队能力和资源约束，做出合适的技术选择，并在开发过程中严格遵循最佳实践，确保最终产品的质量和用户体验。</p>
<a class="btn-beautify blue larger" href="https://developer.android.com/guide/webapps/webview" title="Android WebView官方文档"><i class="far fa-hand-point-right"></i><span>Android WebView官方文档</span></a>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://developer.android.com/guide/webapps/webview">Android WebView开发指南</a></li>
<li><a href="https://developer.apple.com/documentation/webkit/wkwebview">iOS WKWebView官方文档</a></li>
<li><a href="https://cordova.apache.org/">Apache Cordova官方网站</a></li>
<li><a href="https://ionicframework.com/docs">Ionic Framework文档</a></li>
<li><a href="https://reactnative.dev/">React Native官方文档</a></li>
<li><a href="https://flutter.dev/docs">Flutter官方文档</a></li>
<li><a href="https://web.dev/progressive-web-apps/">PWA开发指南</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps">Hybrid App最佳实践</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance">移动端性能优化指南</a></li>
<li><a href="https://owasp.org/www-project-mobile-security-testing-guide/">WebView安全最佳实践</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、套壳应用概述"><a href="#一、套壳应用概述" class="headerlink" title="一、套壳应用概述"></a>一、套壳应用概述</h1><h2 id="（一）什么是套壳应用"><a href="#（一）什么是套壳应用" class="]]>
    </summary>
    
      <category term="跨平台开发" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91/"/>
    
      <category term="移动开发" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="混合开发" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/"/>
    
      <category term="WebView" scheme="https://hexo.blog.uwakeme.tech/tags/WebView/"/>
    
      <category term="套壳应用" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%A5%97%E5%A3%B3%E5%BA%94%E7%94%A8/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【软件功能解析】后端代码也能在浏览器运行：WebAssembly与WebContainer技术详解]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/18/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/%E3%80%90%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90%E3%80%91%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E4%B9%9F%E8%83%BD%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%90%E8%A1%8C%EF%BC%9AWebAssembly%E4%B8%8EWebContainer%E6%8A%80%E6%9C%AF%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/18/软件功能解析/【软件功能解析】后端代码也能在浏览器运行：WebAssembly与WebContainer技术详解/</id>
    <published>2025-08-17T16:00:00.000Z</published>
    <updated>2025-08-18T03:05:29.897Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>传统上，后端代码只能在服务器环境中运行，而前端代码则局限于浏览器。然而，随着Web技术的快速发展，这种界限正在被打破。如今，我们可以在浏览器中直接运行Node.js应用、执行C&#x2F;C++&#x2F;Rust编译的代码，甚至搭建完整的开发环境。本文将深入探讨这一技术革命背后的核心技术：WebAssembly和WebContainer，揭示后端代码如何在浏览器中获得新生。</p>
<span id="more"></span>

<h1 id="一、技术背景与发展历程"><a href="#一、技术背景与发展历程" class="headerlink" title="一、技术背景与发展历程"></a>一、技术背景与发展历程</h1><h2 id="（一）传统Web开发的局限性"><a href="#（一）传统Web开发的局限性" class="headerlink" title="（一）传统Web开发的局限性"></a>（一）传统Web开发的局限性</h2><h3 id="1-语言限制"><a href="#1-语言限制" class="headerlink" title="1. 语言限制"></a>1. 语言限制</h3><p>在传统的Web开发模式中，浏览器只能执行JavaScript代码。这意味着：</p>
<ul>
<li>其他编程语言无法直接在浏览器中运行</li>
<li>需要将其他语言的逻辑重写为JavaScript</li>
<li>性能密集型任务受到JavaScript引擎的限制</li>
</ul>
<h3 id="2-环境隔离"><a href="#2-环境隔离" class="headerlink" title="2. 环境隔离"></a>2. 环境隔离</h3><pre class="mermaid">graph TB
    A[传统Web架构] --> B[前端 - 浏览器]
    A --> C[后端 - 服务器]
    B --> D[HTML/CSS/JavaScript]
    C --> E[Node.js/Python/Java/C++]
    B -.->|HTTP请求| C
    C -.->|JSON响应| B</pre>

<h3 id="3-开发体验问题"><a href="#3-开发体验问题" class="headerlink" title="3. 开发体验问题"></a>3. 开发体验问题</h3><ul>
<li>前后端开发环境分离</li>
<li>代码共享困难</li>
<li>调试和测试复杂</li>
</ul>
<h2 id="（二）技术演进的里程碑"><a href="#（二）技术演进的里程碑" class="headerlink" title="（二）技术演进的里程碑"></a>（二）技术演进的里程碑</h2><h3 id="1-asm-js时代（2013-2017）"><a href="#1-asm-js时代（2013-2017）" class="headerlink" title="1. asm.js时代（2013-2017）"></a>1. asm.js时代（2013-2017）</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// asm.js示例：严格的JavaScript子集</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fib</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    n = n|<span class="number">0</span>;  <span class="comment">// 类型注解，表示n是32位整数</span></span><br><span class="line">    <span class="keyword">if</span> ((n|<span class="number">0</span>) &lt;= <span class="number">1</span>) <span class="keyword">return</span> n|<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="title function_">fib</span>((n-<span class="number">1</span>)|<span class="number">0</span>)|<span class="number">0</span>) + (<span class="title function_">fib</span>((n-<span class="number">2</span>)|<span class="number">0</span>)|<span class="number">0</span>)|<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>特点</strong>：</p>
<ul>
<li>JavaScript的严格子集</li>
<li>提供接近原生的性能</li>
<li>编译时优化</li>
<li>兼容性好，但解析速度慢</li>
</ul>
<h3 id="2-WebAssembly诞生（2017-至今）"><a href="#2-WebAssembly诞生（2017-至今）" class="headerlink" title="2. WebAssembly诞生（2017-至今）"></a>2. WebAssembly诞生（2017-至今）</h3><p>WebAssembly（简称WASM）的出现标志着Web技术的重大突破：</p>
<ul>
<li>二进制格式，解析速度快20倍</li>
<li>接近原生性能</li>
<li>多语言支持</li>
<li>安全沙箱执行</li>
</ul>
<h3 id="3-WebContainer革命（2021-至今）"><a href="#3-WebContainer革命（2021-至今）" class="headerlink" title="3. WebContainer革命（2021-至今）"></a>3. WebContainer革命（2021-至今）</h3><p>StackBlitz推出的WebContainer技术实现了在浏览器中运行完整的Node.js环境：</p>
<ul>
<li>基于WebAssembly的操作系统</li>
<li>完整的文件系统和进程管理</li>
<li>毫秒级启动时间</li>
<li>离线工作能力</li>
</ul>
<h1 id="二、WebAssembly：多语言的浏览器执行引擎"><a href="#二、WebAssembly：多语言的浏览器执行引擎" class="headerlink" title="二、WebAssembly：多语言的浏览器执行引擎"></a>二、WebAssembly：多语言的浏览器执行引擎</h1><h2 id="（一）WebAssembly核心概念"><a href="#（一）WebAssembly核心概念" class="headerlink" title="（一）WebAssembly核心概念"></a>（一）WebAssembly核心概念</h2><h3 id="1-什么是WebAssembly"><a href="#1-什么是WebAssembly" class="headerlink" title="1. 什么是WebAssembly"></a>1. 什么是WebAssembly</h3><p>WebAssembly是一种低级的类汇编语言，具有紧凑的二进制格式，可以在现代Web浏览器中以接近原生的速度运行。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">;; WebAssembly文本格式示例</span><br><span class="line">(module</span><br><span class="line">  (func $add (param $a i32) (param $b i32) (result i32)</span><br><span class="line">    local.get $a</span><br><span class="line">    local.get $b</span><br><span class="line">    i32.add)</span><br><span class="line">  (export &quot;add&quot; (func $add))</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="2-核心特性"><a href="#2-核心特性" class="headerlink" title="2. 核心特性"></a>2. 核心特性</h3><ul>
<li><strong>高性能</strong>：编译为机器码执行，性能接近原生</li>
<li><strong>安全性</strong>：运行在沙箱环境中，内存安全</li>
<li><strong>可移植性</strong>：跨平台，一次编译到处运行</li>
<li><strong>语言无关</strong>：支持C&#x2F;C++、Rust、Go等多种语言</li>
</ul>
<h3 id="3-架构模型"><a href="#3-架构模型" class="headerlink" title="3. 架构模型"></a>3. 架构模型</h3><pre class="mermaid">graph LR
    A[C/C++/Rust源码] --> B[编译器]
    B --> C[.wasm二进制文件]
    C --> D[WebAssembly虚拟机]
    D --> E[浏览器执行]
    F[JavaScript] --> G[WebAssembly API]
    G --> D</pre>

<h2 id="（二）从C-到WebAssembly的完整流程"><a href="#（二）从C-到WebAssembly的完整流程" class="headerlink" title="（二）从C++到WebAssembly的完整流程"></a>（二）从C++到WebAssembly的完整流程</h2><h3 id="1-编写C-代码"><a href="#1-编写C-代码" class="headerlink" title="1. 编写C++代码"></a>1. 编写C++代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fibonacci.cpp</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">fibonacci</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">fibonacci</span>(n - <span class="number">1</span>) + <span class="built_in">fibonacci</span>(n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组处理示例</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">processArray</span><span class="params">(<span class="type">int</span>* arr, <span class="type">int</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            arr[i] = arr[i] * <span class="number">2</span>;  <span class="comment">// 将每个元素乘以2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-使用Emscripten编译"><a href="#2-使用Emscripten编译" class="headerlink" title="2. 使用Emscripten编译"></a>2. 使用Emscripten编译</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Emscripten工具链</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/emscripten-core/emsdk.git</span><br><span class="line"><span class="built_in">cd</span> emsdk</span><br><span class="line">./emsdk install latest</span><br><span class="line">./emsdk activate latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译C++代码为WebAssembly</span></span><br><span class="line">emcc fibonacci.cpp -Os -s WASM=1 -s MODULARIZE=1 \</span><br><span class="line">     -s EXPORT_NAME=<span class="string">&quot;FibModule&quot;</span> \</span><br><span class="line">     -s EXPORTED_FUNCTIONS=<span class="string">&quot;[&#x27;_fibonacci&#x27;, &#x27;_processArray&#x27;]&quot;</span> \</span><br><span class="line">     -s EXPORTED_RUNTIME_METHODS=<span class="string">&quot;[&#x27;ccall&#x27;, &#x27;cwrap&#x27;]&quot;</span> \</span><br><span class="line">     -o fibonacci.js</span><br></pre></td></tr></table></figure>

<h3 id="3-在JavaScript中使用"><a href="#3-在JavaScript中使用" class="headerlink" title="3. 在JavaScript中使用"></a>3. 在JavaScript中使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载WebAssembly模块</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FibModule</span> <span class="keyword">from</span> <span class="string">&#x27;./fibonacci.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">initWasm</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 初始化WebAssembly模块</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Module</span> = <span class="keyword">await</span> <span class="title class_">FibModule</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 包装C++函数为JavaScript函数</span></span><br><span class="line">    <span class="keyword">const</span> fibonacci = <span class="title class_">Module</span>.<span class="title function_">cwrap</span>(<span class="string">&#x27;fibonacci&#x27;</span>, <span class="string">&#x27;number&#x27;</span>, [<span class="string">&#x27;number&#x27;</span>]);</span><br><span class="line">    <span class="keyword">const</span> processArray = <span class="title class_">Module</span>.<span class="title function_">cwrap</span>(<span class="string">&#x27;processArray&#x27;</span>, <span class="literal">null</span>, [<span class="string">&#x27;number&#x27;</span>, <span class="string">&#x27;number&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用斐波那契函数</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fibonacci(10):&#x27;</span>, <span class="title function_">fibonacci</span>(<span class="number">10</span>)); <span class="comment">// 输出: 55</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理数组数据</span></span><br><span class="line">    <span class="keyword">const</span> arraySize = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> dataPtr = <span class="title class_">Module</span>.<span class="title function_">_malloc</span>(arraySize * <span class="number">4</span>); <span class="comment">// 分配内存（4字节 * 5个整数）</span></span><br><span class="line">    <span class="keyword">const</span> dataHeap = <span class="keyword">new</span> <span class="title class_">Int32Array</span>(<span class="title class_">Module</span>.<span class="property">HEAP32</span>.<span class="property">buffer</span>, dataPtr, arraySize);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置数组数据</span></span><br><span class="line">    dataHeap.<span class="title function_">set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;处理前:&#x27;</span>, <span class="title class_">Array</span>.<span class="title function_">from</span>(dataHeap)); <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用C++函数处理数组</span></span><br><span class="line">    <span class="title function_">processArray</span>(dataPtr, arraySize);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;处理后:&#x27;</span>, <span class="title class_">Array</span>.<span class="title function_">from</span>(dataHeap)); <span class="comment">// [2, 4, 6, 8, 10]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="title class_">Module</span>.<span class="title function_">_free</span>(dataPtr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">initWasm</span>();</span><br></pre></td></tr></table></figure>

<h2 id="（三）性能对比与优化"><a href="#（三）性能对比与优化" class="headerlink" title="（三）性能对比与优化"></a>（三）性能对比与优化</h2><h3 id="1-性能基准测试"><a href="#1-性能基准测试" class="headerlink" title="1. 性能基准测试"></a>1. 性能基准测试</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript实现</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fibJS</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fibJS</span>(n - <span class="number">1</span>) + <span class="title function_">fibJS</span>(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 性能测试</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">performanceTest</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Module</span> = <span class="keyword">await</span> <span class="title class_">FibModule</span>();</span><br><span class="line">    <span class="keyword">const</span> fibWasm = <span class="title class_">Module</span>.<span class="title function_">cwrap</span>(<span class="string">&#x27;fibonacci&#x27;</span>, <span class="string">&#x27;number&#x27;</span>, [<span class="string">&#x27;number&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> n = <span class="number">40</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试JavaScript版本</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;JavaScript&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> resultJS = <span class="title function_">fibJS</span>(n);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;JavaScript&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试WebAssembly版本</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;WebAssembly&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> resultWasm = <span class="title function_">fibWasm</span>(n);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;WebAssembly&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;结果一致:&#x27;</span>, resultJS === resultWasm);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 典型结果：</span></span><br><span class="line"><span class="comment">// JavaScript: ~1200ms</span></span><br><span class="line"><span class="comment">// WebAssembly: ~400ms</span></span><br><span class="line"><span class="comment">// 性能提升约3倍</span></span><br></pre></td></tr></table></figure>

<h3 id="2-内存管理优化"><a href="#2-内存管理优化" class="headerlink" title="2. 内存管理优化"></a>2. 内存管理优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">WasmMemoryManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"><span class="variable language_">module</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">module</span> = <span class="variable language_">module</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allocatedPointers</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全的内存分配</span></span><br><span class="line">    <span class="title function_">malloc</span>(<span class="params">size</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> ptr = <span class="variable language_">this</span>.<span class="property">module</span>.<span class="title function_">_malloc</span>(size);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allocatedPointers</span>.<span class="title function_">add</span>(ptr);</span><br><span class="line">        <span class="keyword">return</span> ptr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全的内存释放</span></span><br><span class="line">    <span class="title function_">free</span>(<span class="params">ptr</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">allocatedPointers</span>.<span class="title function_">has</span>(ptr)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">module</span>.<span class="title function_">_free</span>(ptr);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">allocatedPointers</span>.<span class="title function_">delete</span>(ptr);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 批量释放所有分配的内存</span></span><br><span class="line">    <span class="title function_">freeAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> ptr <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">allocatedPointers</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">module</span>.<span class="title function_">_free</span>(ptr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allocatedPointers</span>.<span class="title function_">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、WebContainer：浏览器中的Node-js运行时"><a href="#三、WebContainer：浏览器中的Node-js运行时" class="headerlink" title="三、WebContainer：浏览器中的Node.js运行时"></a>三、WebContainer：浏览器中的Node.js运行时</h1><h2 id="（一）WebContainer技术原理"><a href="#（一）WebContainer技术原理" class="headerlink" title="（一）WebContainer技术原理"></a>（一）WebContainer技术原理</h2><h3 id="1-核心架构"><a href="#1-核心架构" class="headerlink" title="1. 核心架构"></a>1. 核心架构</h3><p>WebContainer是StackBlitz开发的革命性技术，它在浏览器中实现了一个完整的Node.js运行环境。</p>
<pre class="mermaid">graph TB
    A[WebContainer架构] --> B[虚拟文件系统]
    A --> C[进程管理器]
    A --> D[网络栈]
    A --> E[包管理器]
    
    B --> F[内存文件系统]
    B --> G[懒加载机制]
    
    C --> H[多进程支持]
    C --> I[进程间通信]
    
    D --> J[虚拟TCP/UDP]
    D --> K[ServiceWorker代理]
    
    E --> L[npm/yarn/pnpm]
    E --> M[依赖解析]</pre>

<h3 id="2-关键技术组件"><a href="#2-关键技术组件" class="headerlink" title="2. 关键技术组件"></a>2. 关键技术组件</h3><p><strong>虚拟文件系统</strong>：</p>
<ul>
<li>基于内存的文件系统实现</li>
<li>支持完整的POSIX文件操作</li>
<li>懒加载机制优化性能</li>
</ul>
<p><strong>进程管理</strong>：</p>
<ul>
<li>多进程&#x2F;多线程应用支持</li>
<li>进程间通信（IPC）</li>
<li>POSIX兼容的shell环境</li>
</ul>
<p><strong>网络虚拟化</strong>：</p>
<ul>
<li>虚拟TCP网络栈</li>
<li>映射到浏览器的ServiceWorker API</li>
<li>支持HTTP服务器和客户端</li>
</ul>
<h2 id="（二）WebContainer实战应用"><a href="#（二）WebContainer实战应用" class="headerlink" title="（二）WebContainer实战应用"></a>（二）WebContainer实战应用</h2><h3 id="1-快速开始"><a href="#1-快速开始" class="headerlink" title="1. 快速开始"></a>1. 快速开始</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">WebContainer</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@webcontainer/api&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动WebContainer实例</span></span><br><span class="line"><span class="keyword">const</span> webcontainerInstance = <span class="keyword">await</span> <span class="title class_">WebContainer</span>.<span class="title function_">boot</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义项目文件结构</span></span><br><span class="line"><span class="keyword">const</span> files = &#123;</span><br><span class="line">  <span class="string">&#x27;package.json&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">file</span>: &#123;</span><br><span class="line">      <span class="attr">contents</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;my-app&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;module&#x27;</span>,</span><br><span class="line">        <span class="attr">dependencies</span>: &#123;</span><br><span class="line">          <span class="attr">express</span>: <span class="string">&#x27;^4.18.0&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">scripts</span>: &#123;</span><br><span class="line">          <span class="attr">start</span>: <span class="string">&#x27;node server.js&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&#x27;server.js&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">file</span>: &#123;</span><br><span class="line">      <span class="attr">contents</span>: <span class="string">`</span></span><br><span class="line"><span class="string">import express from &#x27;express&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">const app = express();</span></span><br><span class="line"><span class="string">const port = 3000;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">app.get(&#x27;/&#x27;, (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="string">  res.json(&#123; </span></span><br><span class="line"><span class="string">    message: &#x27;Hello from WebContainer!&#x27;,</span></span><br><span class="line"><span class="string">    timestamp: new Date().toISOString()</span></span><br><span class="line"><span class="string">  &#125;);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">app.listen(port, () =&gt; &#123;</span></span><br><span class="line"><span class="string">  console.log(\`Server running at http://localhost:\$&#123;port&#125;\`);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">      `</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 挂载文件系统</span></span><br><span class="line"><span class="keyword">await</span> webcontainerInstance.<span class="title function_">mount</span>(files);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安装依赖</span></span><br><span class="line"><span class="keyword">const</span> installProcess = <span class="keyword">await</span> webcontainerInstance.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;install&#x27;</span>]);</span><br><span class="line"><span class="keyword">await</span> installProcess.<span class="property">exit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动应用</span></span><br><span class="line"><span class="keyword">const</span> serverProcess = <span class="keyword">await</span> webcontainerInstance.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;start&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听服务器输出</span></span><br><span class="line">serverProcess.<span class="property">output</span>.<span class="title function_">pipeTo</span>(<span class="keyword">new</span> <span class="title class_">WritableStream</span>(&#123;</span><br><span class="line">  <span class="title function_">write</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>

<h3 id="2-文件系统操作"><a href="#2-文件系统操作" class="headerlink" title="2. 文件系统操作"></a>2. 文件系统操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取文件</span></span><br><span class="line"><span class="keyword">const</span> packageJson = <span class="keyword">await</span> webcontainerInstance.<span class="property">fs</span>.<span class="title function_">readFile</span>(<span class="string">&#x27;package.json&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;package.json内容:&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">parse</span>(packageJson));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入文件</span></span><br><span class="line"><span class="keyword">await</span> webcontainerInstance.<span class="property">fs</span>.<span class="title function_">writeFile</span>(<span class="string">&#x27;config.json&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">  <span class="attr">environment</span>: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">  <span class="attr">debug</span>: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建目录</span></span><br><span class="line"><span class="keyword">await</span> webcontainerInstance.<span class="property">fs</span>.<span class="title function_">mkdir</span>(<span class="string">&#x27;src&#x27;</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听文件变化</span></span><br><span class="line">webcontainerInstance.<span class="property">fs</span>.<span class="title function_">watch</span>(<span class="string">&#x27;.&#x27;</span>, <span class="function">(<span class="params">eventType, filename</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`文件 <span class="subst">$&#123;filename&#125;</span> 发生了 <span class="subst">$&#123;eventType&#125;</span> 事件`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3-进程管理"><a href="#3-进程管理" class="headerlink" title="3. 进程管理"></a>3. 进程管理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行shell命令</span></span><br><span class="line"><span class="keyword">const</span> lsProcess = <span class="keyword">await</span> webcontainerInstance.<span class="title function_">spawn</span>(<span class="string">&#x27;ls&#x27;</span>, [<span class="string">&#x27;-la&#x27;</span>]);</span><br><span class="line">lsProcess.<span class="property">output</span>.<span class="title function_">pipeTo</span>(<span class="keyword">new</span> <span class="title class_">WritableStream</span>(&#123;</span><br><span class="line">  <span class="title function_">write</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ls输出:&#x27;</span>, data);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行Node.js脚本</span></span><br><span class="line"><span class="keyword">const</span> nodeProcess = <span class="keyword">await</span> webcontainerInstance.<span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;-e&#x27;</span>, <span class="string">&#x27;console.log(process.version)&#x27;</span>]);</span><br><span class="line"><span class="keyword">await</span> nodeProcess.<span class="property">exit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行构建工具</span></span><br><span class="line"><span class="keyword">const</span> buildProcess = <span class="keyword">await</span> webcontainerInstance.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;run&#x27;</span>, <span class="string">&#x27;build&#x27;</span>]);</span><br><span class="line">buildProcess.<span class="property">output</span>.<span class="title function_">pipeTo</span>(<span class="keyword">new</span> <span class="title class_">WritableStream</span>(&#123;</span><br><span class="line">  <span class="title function_">write</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;build-output&#x27;</span>).<span class="property">textContent</span> += data;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>

<h2 id="（三）WebContainer-vs-传统开发环境"><a href="#（三）WebContainer-vs-传统开发环境" class="headerlink" title="（三）WebContainer vs 传统开发环境"></a>（三）WebContainer vs 传统开发环境</h2><h3 id="1-性能对比"><a href="#1-性能对比" class="headerlink" title="1. 性能对比"></a>1. 性能对比</h3><table>
<thead>
<tr>
<th>特性</th>
<th>传统环境</th>
<th>WebContainer</th>
</tr>
</thead>
<tbody><tr>
<td>启动时间</td>
<td>10-30秒</td>
<td>毫秒级</td>
</tr>
<tr>
<td>内存占用</td>
<td>500MB-2GB</td>
<td>50-200MB</td>
</tr>
<tr>
<td>网络延迟</td>
<td>有</td>
<td>无（本地执行）</td>
</tr>
<tr>
<td>离线能力</td>
<td>有限</td>
<td>完全支持</td>
</tr>
<tr>
<td>安全性</td>
<td>依赖系统</td>
<td>浏览器沙箱</td>
</tr>
</tbody></table>
<h3 id="2-开发体验优势"><a href="#2-开发体验优势" class="headerlink" title="2. 开发体验优势"></a>2. 开发体验优势</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实时协作示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CollaborativeEditor</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">webcontainer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = webcontainer;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setupFileWatcher</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 监听文件变化并同步</span></span><br><span class="line">  <span class="title function_">setupFileWatcher</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="property">fs</span>.<span class="title function_">watch</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_">async</span> (eventType, filename) =&gt; &#123;</span><br><span class="line">      <span class="keyword">if</span> (eventType === <span class="string">&#x27;change&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> content = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="property">fs</span>.<span class="title function_">readFile</span>(filename, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">        <span class="comment">// 通过WebSocket同步到其他协作者</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">broadcastChange</span>(filename, content);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 接收远程变更</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">applyRemoteChange</span>(<span class="params">filename, content</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="property">fs</span>.<span class="title function_">writeFile</span>(filename, content);</span><br><span class="line">    <span class="comment">// 触发热重载</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">triggerHotReload</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">triggerHotReload</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// WebContainer支持热重载，无需重启服务器</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;应用已自动更新&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、实际应用场景与案例"><a href="#四、实际应用场景与案例" class="headerlink" title="四、实际应用场景与案例"></a>四、实际应用场景与案例</h1><h2 id="（一）在线IDE与代码编辑器"><a href="#（一）在线IDE与代码编辑器" class="headerlink" title="（一）在线IDE与代码编辑器"></a>（一）在线IDE与代码编辑器</h2><h3 id="1-StackBlitz：Web开发的革命"><a href="#1-StackBlitz：Web开发的革命" class="headerlink" title="1. StackBlitz：Web开发的革命"></a>1. StackBlitz：Web开发的革命</h3><p>StackBlitz利用WebContainer技术创建了一个完全在浏览器中运行的IDE：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// StackBlitz项目配置示例</span></span><br><span class="line"><span class="keyword">const</span> stackblitzConfig = &#123;</span><br><span class="line">  <span class="attr">files</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;src/App.jsx&#x27;</span>: <span class="string">`</span></span><br><span class="line"><span class="string">import React, &#123; useState, useEffect &#125; from &#x27;react&#x27;;</span></span><br><span class="line"><span class="string">import &#x27;./App.css&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function App() &#123;</span></span><br><span class="line"><span class="string">  const [data, setData] = useState(null);</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  useEffect(() =&gt; &#123;</span></span><br><span class="line"><span class="string">    // 在WebContainer中运行的API调用</span></span><br><span class="line"><span class="string">    fetch(&#x27;/api/data&#x27;)</span></span><br><span class="line"><span class="string">      .then(res =&gt; res.json())</span></span><br><span class="line"><span class="string">      .then(setData);</span></span><br><span class="line"><span class="string">  &#125;, []);</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  return (</span></span><br><span class="line"><span class="string">    &lt;div className=&quot;App&quot;&gt;</span></span><br><span class="line"><span class="string">      &lt;h1&gt;在浏览器中运行的React应用&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &#123;data &amp;&amp; &lt;pre&gt;&#123;JSON.stringify(data, null, 2)&#125;&lt;/pre&gt;&#125;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  );</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default App;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">    <span class="string">&#x27;api/data.js&#x27;</span>: <span class="string">`</span></span><br><span class="line"><span class="string">// Express API路由，完全在浏览器中运行</span></span><br><span class="line"><span class="string">export default function handler(req, res) &#123;</span></span><br><span class="line"><span class="string">  res.json(&#123;</span></span><br><span class="line"><span class="string">    message: &#x27;这个API运行在浏览器的WebContainer中！&#x27;,</span></span><br><span class="line"><span class="string">    timestamp: new Date().toISOString(),</span></span><br><span class="line"><span class="string">    userAgent: req.headers[&#x27;user-agent&#x27;]</span></span><br><span class="line"><span class="string">  &#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">    `</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;react&#x27;</span>,</span><br><span class="line">  <span class="attr">dependencies</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;react&#x27;</span>: <span class="string">&#x27;^18.0.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;react-dom&#x27;</span>: <span class="string">&#x27;^18.0.0&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-教育平台应用"><a href="#2-教育平台应用" class="headerlink" title="2. 教育平台应用"></a>2. 教育平台应用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在线编程教学平台</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CodingTutorial</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">currentLesson</span> = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">initializeLesson</span>(<span class="params">lessonConfig</span>) &#123;</span><br><span class="line">    <span class="comment">// 为每个课程创建独立的WebContainer环境</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = <span class="keyword">await</span> <span class="title class_">WebContainer</span>.<span class="title function_">boot</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载课程文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">mount</span>(lessonConfig.<span class="property">files</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安装依赖</span></span><br><span class="line">    <span class="keyword">if</span> (lessonConfig.<span class="property">dependencies</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> installProcess = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;install&#x27;</span>]);</span><br><span class="line">      <span class="keyword">await</span> installProcess.<span class="property">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运行初始化脚本</span></span><br><span class="line">    <span class="keyword">if</span> (lessonConfig.<span class="property">setup</span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">runScript</span>(lessonConfig.<span class="property">setup</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">runStudentCode</span>(<span class="params">code</span>) &#123;</span><br><span class="line">    <span class="comment">// 将学生代码写入文件</span></span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="property">fs</span>.<span class="title function_">writeFile</span>(<span class="string">&#x27;student-solution.js&#x27;</span>, code);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运行测试</span></span><br><span class="line">    <span class="keyword">const</span> testProcess = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;test&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> output = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      testProcess.<span class="property">output</span>.<span class="title function_">pipeTo</span>(<span class="keyword">new</span> <span class="title class_">WritableStream</span>(&#123;</span><br><span class="line">        <span class="title function_">write</span>(<span class="params">data</span>) &#123;</span><br><span class="line">          output += data;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="title function_">parseTestResults</span>(output));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">parseTestResults</span>(<span class="params">output</span>) &#123;</span><br><span class="line">    <span class="comment">// 解析测试结果，提供即时反馈</span></span><br><span class="line">    <span class="keyword">const</span> passed = output.<span class="title function_">includes</span>(<span class="string">&#x27;All tests passed&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> errors = output.<span class="title function_">match</span>(<span class="regexp">/Error: .+/g</span>) || [];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">success</span>: passed,</span><br><span class="line">      <span class="attr">errors</span>: errors,</span><br><span class="line">      <span class="attr">feedback</span>: <span class="variable language_">this</span>.<span class="title function_">generateFeedback</span>(passed, errors)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）原型开发与演示"><a href="#（二）原型开发与演示" class="headerlink" title="（二）原型开发与演示"></a>（二）原型开发与演示</h2><h3 id="1-快速原型验证"><a href="#1-快速原型验证" class="headerlink" title="1. 快速原型验证"></a>1. 快速原型验证</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 快速创建全栈原型</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">createPrototype</span>(<span class="params">idea</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> webcontainer = <span class="keyword">await</span> <span class="title class_">WebContainer</span>.<span class="title function_">boot</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 根据想法自动生成项目结构</span></span><br><span class="line">  <span class="keyword">const</span> projectFiles = <span class="keyword">await</span> <span class="title function_">generateProjectStructure</span>(idea);</span><br><span class="line">  <span class="keyword">await</span> webcontainer.<span class="title function_">mount</span>(projectFiles);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 安装依赖并启动</span></span><br><span class="line">  <span class="keyword">await</span> webcontainer.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;install&#x27;</span>]);</span><br><span class="line">  <span class="keyword">const</span> serverProcess = <span class="keyword">await</span> webcontainer.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;start&#x27;</span>]);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取预览URL</span></span><br><span class="line">  <span class="keyword">const</span> previewUrl = <span class="keyword">await</span> webcontainer.<span class="title function_">getPreviewUrl</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">container</span>: webcontainer,</span><br><span class="line">    <span class="attr">previewUrl</span>: previewUrl,</span><br><span class="line">    <span class="attr">process</span>: serverProcess</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> prototype = <span class="keyword">await</span> <span class="title function_">createPrototype</span>(&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;e-commerce&#x27;</span>,</span><br><span class="line">  <span class="attr">features</span>: [<span class="string">&#x27;product-catalog&#x27;</span>, <span class="string">&#x27;shopping-cart&#x27;</span>, <span class="string">&#x27;user-auth&#x27;</span>],</span><br><span class="line">  <span class="attr">database</span>: <span class="string">&#x27;sqlite&#x27;</span>,</span><br><span class="line">  <span class="attr">frontend</span>: <span class="string">&#x27;react&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;原型已就绪:&#x27;</span>, prototype.<span class="property">previewUrl</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-API文档交互式示例"><a href="#2-API文档交互式示例" class="headerlink" title="2. API文档交互式示例"></a>2. API文档交互式示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 为API文档创建可执行示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">InteractiveAPIDoc</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">apiSpec</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">apiSpec</span> = apiSpec;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">setupMockServer</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = <span class="keyword">await</span> <span class="title class_">WebContainer</span>.<span class="title function_">boot</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据API规范生成mock服务器</span></span><br><span class="line">    <span class="keyword">const</span> mockServerCode = <span class="variable language_">this</span>.<span class="title function_">generateMockServer</span>(<span class="variable language_">this</span>.<span class="property">apiSpec</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">mount</span>(&#123;</span><br><span class="line">      <span class="string">&#x27;server.js&#x27;</span>: &#123; <span class="attr">file</span>: &#123; <span class="attr">contents</span>: mockServerCode &#125; &#125;,</span><br><span class="line">      <span class="string">&#x27;package.json&#x27;</span>: &#123; </span><br><span class="line">        <span class="attr">file</span>: &#123; </span><br><span class="line">          <span class="attr">contents</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">dependencies</span>: &#123; <span class="attr">express</span>: <span class="string">&#x27;^4.18.0&#x27;</span>, <span class="attr">cors</span>: <span class="string">&#x27;^2.8.5&#x27;</span> &#125;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">spawn</span>(<span class="string">&#x27;npm&#x27;</span>, [<span class="string">&#x27;install&#x27;</span>]);</span><br><span class="line">    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">webcontainer</span>.<span class="title function_">spawn</span>(<span class="string">&#x27;node&#x27;</span>, [<span class="string">&#x27;server.js&#x27;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">generateMockServer</span>(<span class="params">apiSpec</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">import express from &#x27;express&#x27;;</span></span><br><span class="line"><span class="string">import cors from &#x27;cors&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">const app = express();</span></span><br><span class="line"><span class="string">app.use(cors());</span></span><br><span class="line"><span class="string">app.use(express.json());</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$&#123;apiSpec.endpoints.map(endpoint =&gt; <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">app.<span class="subst">$&#123;endpoint.method.toLowerCase()&#125;</span>(&#x27;<span class="subst">$&#123;endpoint.path&#125;</span>&#x27;, (req, res) =&gt; &#123;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  // 模拟响应数据</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">  res.json(<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(endpoint.mockResponse)&#125;</span>);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">&#125;);</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">`</span>).join(<span class="string">&#x27;\n&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">app.listen(3000, () =&gt; &#123;</span></span><br><span class="line"><span class="string">  console.log(&#x27;Mock API server running on port 3000&#x27;);</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">    `</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、技术优势与挑战"><a href="#五、技术优势与挑战" class="headerlink" title="五、技术优势与挑战"></a>五、技术优势与挑战</h1><h2 id="（一）技术优势"><a href="#（一）技术优势" class="headerlink" title="（一）技术优势"></a>（一）技术优势</h2><h3 id="1-开发效率提升"><a href="#1-开发效率提升" class="headerlink" title="1. 开发效率提升"></a>1. 开发效率提升</h3><ul>
<li><strong>零配置启动</strong>：无需本地环境搭建</li>
<li><strong>即时分享</strong>：通过URL直接分享项目</li>
<li><strong>版本一致性</strong>：避免”在我机器上能跑”的问题</li>
<li><strong>协作便利</strong>：实时多人协作编程</li>
</ul>
<h3 id="2-性能与安全"><a href="#2-性能与安全" class="headerlink" title="2. 性能与安全"></a>2. 性能与安全</h3><ul>
<li><strong>沙箱隔离</strong>：代码运行在安全的浏览器环境中</li>
<li><strong>资源控制</strong>：精确控制内存和CPU使用</li>
<li><strong>网络安全</strong>：虚拟网络栈，避免端口冲突</li>
<li><strong>数据保护</strong>：敏感数据不离开浏览器</li>
</ul>
<h3 id="3-成本效益"><a href="#3-成本效益" class="headerlink" title="3. 成本效益"></a>3. 成本效益</h3><ul>
<li><strong>服务器成本</strong>：减少云服务器资源消耗</li>
<li><strong>扩展性</strong>：利用用户设备的计算能力</li>
<li><strong>维护成本</strong>：减少环境维护工作量</li>
</ul>
<h2 id="（二）技术挑战"><a href="#（二）技术挑战" class="headerlink" title="（二）技术挑战"></a>（二）技术挑战</h2><h3 id="1-性能限制"><a href="#1-性能限制" class="headerlink" title="1. 性能限制"></a>1. 性能限制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 性能监控示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PerformanceMonitor</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">webcontainer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = webcontainer;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">metrics</span> = &#123;</span><br><span class="line">      <span class="attr">memoryUsage</span>: [],</span><br><span class="line">      <span class="attr">cpuUsage</span>: [],</span><br><span class="line">      <span class="attr">networkLatency</span>: []</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">startMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 监控内存使用</span></span><br><span class="line">      <span class="keyword">const</span> memInfo = performance.<span class="property">memory</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">metrics</span>.<span class="property">memoryUsage</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">used</span>: memInfo.<span class="property">usedJSHeapSize</span>,</span><br><span class="line">        <span class="attr">total</span>: memInfo.<span class="property">totalJSHeapSize</span>,</span><br><span class="line">        <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 检查是否需要优化</span></span><br><span class="line">      <span class="keyword">if</span> (memInfo.<span class="property">usedJSHeapSize</span> &gt; memInfo.<span class="property">totalJSHeapSize</span> * <span class="number">0.8</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">triggerGarbageCollection</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">triggerGarbageCollection</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 触发垃圾回收优化</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">gc</span>) &#123;</span><br><span class="line">      <span class="variable language_">window</span>.<span class="title function_">gc</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-兼容性问题"><a href="#2-兼容性问题" class="headerlink" title="2. 兼容性问题"></a>2. 兼容性问题</h3><ul>
<li><strong>浏览器支持</strong>：需要现代浏览器支持</li>
<li><strong>API限制</strong>：某些Node.js API无法完全模拟</li>
<li><strong>文件系统</strong>：虚拟文件系统的限制</li>
<li><strong>网络访问</strong>：跨域和安全策略限制</li>
</ul>
<h3 id="3-调试复杂性"><a href="#3-调试复杂性" class="headerlink" title="3. 调试复杂性"></a>3. 调试复杂性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 增强调试能力</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">WebContainerDebugger</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">webcontainer</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">webcontainer</span> = webcontainer;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setupDebugHooks</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">setupDebugHooks</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 拦截console输出</span></span><br><span class="line">    <span class="keyword">const</span> originalConsole = <span class="variable language_">console</span>;</span><br><span class="line">    <span class="variable language_">console</span> = <span class="keyword">new</span> <span class="title class_">Proxy</span>(originalConsole, &#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params">target, prop</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> target[prop] === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">            <span class="comment">// 记录调试信息</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">logDebugInfo</span>(prop, args);</span><br><span class="line">            <span class="keyword">return</span> target[prop].<span class="title function_">apply</span>(target, args);</span><br><span class="line">          &#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> target[prop];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">logDebugInfo</span>(<span class="params">method, args</span>) &#123;</span><br><span class="line">    <span class="comment">// 发送调试信息到开发者工具</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">postMessage</span>(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;webcontainer-debug&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: method,</span><br><span class="line">      <span class="attr">args</span>: args,</span><br><span class="line">      <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">      <span class="attr">stack</span>: <span class="keyword">new</span> <span class="title class_">Error</span>().<span class="property">stack</span></span><br><span class="line">    &#125;, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、未来发展趋势"><a href="#六、未来发展趋势" class="headerlink" title="六、未来发展趋势"></a>六、未来发展趋势</h1><h2 id="（一）技术演进方向"><a href="#（一）技术演进方向" class="headerlink" title="（一）技术演进方向"></a>（一）技术演进方向</h2><h3 id="1-WebAssembly的进化"><a href="#1-WebAssembly的进化" class="headerlink" title="1. WebAssembly的进化"></a>1. WebAssembly的进化</h3><ul>
<li><strong>WASI支持</strong>：更好的系统接口支持</li>
<li><strong>多线程</strong>：SharedArrayBuffer和Web Workers集成</li>
<li><strong>GC支持</strong>：垃圾回收语言的更好支持</li>
<li><strong>调试工具</strong>：更完善的调试和分析工具</li>
</ul>
<h3 id="2-WebContainer生态扩展"><a href="#2-WebContainer生态扩展" class="headerlink" title="2. WebContainer生态扩展"></a>2. WebContainer生态扩展</h3><ul>
<li><strong>多语言支持</strong>：Python、Java、Go等运行时</li>
<li><strong>数据库集成</strong>：内置数据库支持</li>
<li><strong>微服务架构</strong>：容器编排和服务发现</li>
<li><strong>边缘计算</strong>：CDN边缘节点部署</li>
</ul>
<h2 id="（二）应用场景拓展"><a href="#（二）应用场景拓展" class="headerlink" title="（二）应用场景拓展"></a>（二）应用场景拓展</h2><h3 id="1-教育与培训"><a href="#1-教育与培训" class="headerlink" title="1. 教育与培训"></a>1. 教育与培训</h3><ul>
<li><strong>交互式教程</strong>：实时代码执行和反馈</li>
<li><strong>编程竞赛</strong>：在线编程比赛平台</li>
<li><strong>技能认证</strong>：实际项目能力评估</li>
<li><strong>远程教学</strong>：分布式编程教学</li>
</ul>
<h3 id="2-企业应用"><a href="#2-企业应用" class="headerlink" title="2. 企业应用"></a>2. 企业应用</h3><ul>
<li><strong>代码审查</strong>：可执行的代码审查环境</li>
<li><strong>原型开发</strong>：快速概念验证</li>
<li><strong>客户演示</strong>：实时产品演示</li>
<li><strong>培训平台</strong>：员工技能培训</li>
</ul>
<h3 id="3-开源生态"><a href="#3-开源生态" class="headerlink" title="3. 开源生态"></a>3. 开源生态</h3><ul>
<li><strong>文档示例</strong>：可执行的API文档</li>
<li><strong>项目演示</strong>：GitHub项目在线试用</li>
<li><strong>贡献工具</strong>：降低开源贡献门槛</li>
<li><strong>社区协作</strong>：实时协作开发</li>
</ul>
<h1 id="七、总结与展望"><a href="#七、总结与展望" class="headerlink" title="七、总结与展望"></a>七、总结与展望</h1><h2 id="（一）技术价值总结"><a href="#（一）技术价值总结" class="headerlink" title="（一）技术价值总结"></a>（一）技术价值总结</h2><p>通过本文的深入分析，我们可以看到WebAssembly和WebContainer技术正在重新定义Web开发的边界：</p>
<h3 id="1-技术突破"><a href="#1-技术突破" class="headerlink" title="1. 技术突破"></a>1. 技术突破</h3><ul>
<li><strong>性能革命</strong>：接近原生的执行性能</li>
<li><strong>语言多样性</strong>：打破JavaScript的垄断</li>
<li><strong>环境统一</strong>：前后端开发环境的融合</li>
<li><strong>安全增强</strong>：沙箱执行的安全保障</li>
</ul>
<h3 id="2-开发体验提升"><a href="#2-开发体验提升" class="headerlink" title="2. 开发体验提升"></a>2. 开发体验提升</h3><ul>
<li><strong>即时启动</strong>：毫秒级的开发环境创建</li>
<li><strong>零配置</strong>：无需复杂的环境搭建</li>
<li><strong>实时协作</strong>：多人同时编辑和调试</li>
<li><strong>无缝分享</strong>：通过URL即时分享项目</li>
</ul>
<h3 id="3-商业价值"><a href="#3-商业价值" class="headerlink" title="3. 商业价值"></a>3. 商业价值</h3><ul>
<li><strong>成本降低</strong>：减少服务器和维护成本</li>
<li><strong>效率提升</strong>：加速开发和部署流程</li>
<li><strong>用户体验</strong>：更快的响应和更好的交互</li>
<li><strong>创新机会</strong>：新的产品和服务模式</li>
</ul>
<h2 id="（二）发展前景展望"><a href="#（二）发展前景展望" class="headerlink" title="（二）发展前景展望"></a>（二）发展前景展望</h2><h3 id="1-短期发展（1-2年）"><a href="#1-短期发展（1-2年）" class="headerlink" title="1. 短期发展（1-2年）"></a>1. 短期发展（1-2年）</h3><ul>
<li>WebAssembly标准的进一步完善</li>
<li>更多编程语言的WebAssembly支持</li>
<li>WebContainer生态的扩展和优化</li>
<li>主流浏览器的全面支持</li>
</ul>
<h3 id="2-中期发展（3-5年）"><a href="#2-中期发展（3-5年）" class="headerlink" title="2. 中期发展（3-5年）"></a>2. 中期发展（3-5年）</h3><ul>
<li>企业级应用的广泛采用</li>
<li>教育平台的深度集成</li>
<li>开发工具链的标准化</li>
<li>性能和功能的显著提升</li>
</ul>
<h3 id="3-长期愿景（5-10年）"><a href="#3-长期愿景（5-10年）" class="headerlink" title="3. 长期愿景（5-10年）"></a>3. 长期愿景（5-10年）</h3><ul>
<li>Web成为通用计算平台</li>
<li>传统桌面应用的Web化迁移</li>
<li>边缘计算的深度融合</li>
<li>新一代Web操作系统的出现</li>
</ul>
<h2 id="（三）学习建议"><a href="#（三）学习建议" class="headerlink" title="（三）学习建议"></a>（三）学习建议</h2><p>对于希望掌握这些前沿技术的开发者，笔者建议：</p>
<h3 id="1-基础知识储备"><a href="#1-基础知识储备" class="headerlink" title="1. 基础知识储备"></a>1. 基础知识储备</h3><ul>
<li>深入理解JavaScript和Web标准</li>
<li>学习C&#x2F;C++或Rust等系统编程语言</li>
<li>掌握Node.js和现代前端框架</li>
<li>了解计算机系统和网络原理</li>
</ul>
<h3 id="2-实践路径"><a href="#2-实践路径" class="headerlink" title="2. 实践路径"></a>2. 实践路径</h3><ul>
<li>从简单的WebAssembly示例开始</li>
<li>尝试使用WebContainer构建项目</li>
<li>参与开源项目的贡献</li>
<li>关注技术社区的最新动态</li>
</ul>
<h3 id="3-持续学习"><a href="#3-持续学习" class="headerlink" title="3. 持续学习"></a>3. 持续学习</h3><ul>
<li>跟踪WebAssembly和WebContainer的发展</li>
<li>实验新的工具和框架</li>
<li>分享经验和最佳实践</li>
<li>思考技术的商业应用场景</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://webassembly.org/">WebAssembly官方文档</a></li>
<li><a href="https://webcontainers.io/">WebContainer API文档</a></li>
<li><a href="https://blog.stackblitz.com/">StackBlitz技术博客</a></li>
<li><a href="https://emscripten.org/">Emscripten工具链文档</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/WebAssembly">MDN WebAssembly指南</a></li>
<li><a href="https://wasi.dev/">WASI规范文档</a></li>
<li><a href="https://www.oreilly.com/library/view/webassembly-the-definitive/9781492089834/">《WebAssembly权威指南》</a></li>
</ol>
<hr>
<blockquote>
<p>💡 <strong>相关阅读推荐</strong>：</p>
<ul>
<li><a href="../%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E5%85%A8%E6%99%AF%E5%9B%BE%EF%BC%9A%E7%8E%B0%E4%BB%A3Web%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88%E8%AF%A6%E8%A7%A3.md">【前端】前端框架全景图：现代Web开发技术栈详解</a></li>
<li><a href="../Node.js/%E3%80%90Node.js%E3%80%91Node.js%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1.md">【Node.js】Node.js深度解析：构建高性能的后端服务</a></li>
<li><a href="../%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91Rust%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E5%A4%A7%E5%B8%88%E4%B9%8B%E8%B7%AF%EF%BC%9A%E4%BB%8E%E5%86%85%E5%AD%98%E5%AE%89%E5%85%A8%E5%88%B0%E9%AB%98%E6%80%A7%E8%83%BD%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91.md">【学习路线】Rust系统编程大师之路：从内存安全到高性能系统开发</a></li>
</ul>
</blockquote>
<p>通过WebAssembly和WebContainer技术，我们正在见证Web平台向通用计算平台的转变。这不仅是技术的进步，更是开发模式和思维方式的革命。掌握这些技术，将为我们在未来的Web开发中提供强大的竞争优势。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>传统上，后端代码只能在服务器环境中运行，而前端代码则局限于浏览器。然而，随着Web技术的快速发展，这种界限正在被打破。如今，我们可以在浏览器中直接运行Node.js应用、执行C&#x2F;C++&#x2F;Rust编译的代码，甚至搭建完整的开发环境。本文将深入探讨这一技术革命背后的核心技术：WebAssembly和WebContainer，揭示后端代码如何在浏览器中获得新生。</p>]]>
    
    </summary>
    
      <category term="前端" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Node.js" scheme="https://hexo.blog.uwakeme.tech/tags/Node-js/"/>
    
      <category term="WebAssembly" scheme="https://hexo.blog.uwakeme.tech/tags/WebAssembly/"/>
    
      <category term="WebContainer" scheme="https://hexo.blog.uwakeme.tech/tags/WebContainer/"/>
    
      <category term="浏览器技术" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
    
      <category term="软件功能解析" scheme="https://hexo.blog.uwakeme.tech/categories/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【软件功能解析】浏览器中预览前端代码效果的实现原理详解]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/18/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/%E3%80%90%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90%E3%80%91%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E9%A2%84%E8%A7%88%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81%E6%95%88%E6%9E%9C%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/18/软件功能解析/【软件功能解析】浏览器中预览前端代码效果的实现原理详解/</id>
    <published>2025-08-17T16:00:00.000Z</published>
    <updated>2025-08-18T02:57:24.538Z</updated>
    <content type="html"><![CDATA[<h1 id="一、前端代码预览系统概述"><a href="#一、前端代码预览系统概述" class="headerlink" title="一、前端代码预览系统概述"></a>一、前端代码预览系统概述</h1><h2 id="（一）什么是前端代码预览"><a href="#（一）什么是前端代码预览" class="headerlink" title="（一）什么是前端代码预览"></a>（一）什么是前端代码预览</h2><p>前端代码预览是指在浏览器中实时展示HTML、CSS、JavaScript代码运行效果的技术。这种技术广泛应用于在线代码编辑器（如CodePen、JSFiddle）、技术文档网站、教学平台等场景中。用户可以在左侧编辑代码，右侧立即看到运行效果，实现所见即所得的开发体验。</p>
<h2 id="（二）核心技术挑战"><a href="#（二）核心技术挑战" class="headerlink" title="（二）核心技术挑战"></a>（二）核心技术挑战</h2><p><strong>实时性要求：</strong></p>
<ul>
<li>代码修改后需要立即反映到预览区域</li>
<li>支持增量更新，避免整页重新渲染</li>
<li>保持良好的用户体验，避免卡顿</li>
</ul>
<p><strong>安全性考虑：</strong></p>
<ul>
<li>防止恶意代码执行影响主页面</li>
<li>隔离用户代码的运行环境</li>
<li>防止XSS攻击和代码注入</li>
</ul>
<p><strong>兼容性保障：</strong></p>
<ul>
<li>支持各种HTML、CSS、JavaScript特性</li>
<li>处理代码错误和异常情况</li>
<li>适配不同浏览器环境</li>
</ul>
<h1 id="二、浏览器渲染原理基础"><a href="#二、浏览器渲染原理基础" class="headerlink" title="二、浏览器渲染原理基础"></a>二、浏览器渲染原理基础</h1><h2 id="（一）浏览器渲染流程"><a href="#（一）浏览器渲染流程" class="headerlink" title="（一）浏览器渲染流程"></a>（一）浏览器渲染流程</h2><p>浏览器将HTML、CSS、JavaScript转换为可视化页面的过程包含以下关键步骤：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">浏览器渲染流水线：</span><br><span class="line"></span><br><span class="line">1. 解析阶段：</span><br><span class="line">   ├── HTML解析 → DOM树构建</span><br><span class="line">   ├── CSS解析 → CSSOM树构建</span><br><span class="line">   └── JavaScript解析 → AST语法树</span><br><span class="line"></span><br><span class="line">2. 构建阶段：</span><br><span class="line">   ├── DOM + CSSOM → 渲染树(Render Tree)</span><br><span class="line">   ├── 布局计算(Layout) → 几何信息</span><br><span class="line">   └── 分层处理(Layer) → 图层树</span><br><span class="line"></span><br><span class="line">3. 绘制阶段：</span><br><span class="line">   ├── 绘制指令(Paint) → 像素数据</span><br><span class="line">   ├── 合成处理(Composite) → 最终图像</span><br><span class="line">   └── 显示输出(Display) → 屏幕呈现</span><br></pre></td></tr></table></figure>

<p><strong>DOM树构建过程：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HTML解析为DOM的简化过程</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseHTML</span>(<span class="params">htmlString</span>) &#123;</span><br><span class="line">    <span class="comment">// 1. 字节流转换为字符</span></span><br><span class="line">    <span class="keyword">const</span> characters = htmlString;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 词法分析：字符转换为标记(Token)</span></span><br><span class="line">    <span class="keyword">const</span> tokens = <span class="title function_">tokenize</span>(characters);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. 语法分析：标记转换为节点(Node)</span></span><br><span class="line">    <span class="keyword">const</span> nodes = <span class="title function_">parseTokens</span>(tokens);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4. 构建DOM树</span></span><br><span class="line">    <span class="keyword">const</span> domTree = <span class="title function_">buildDOMTree</span>(nodes);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> domTree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例：简单的标记解析</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">tokenize</span>(<span class="params">html</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tokens = [];</span><br><span class="line">    <span class="keyword">let</span> current = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (current &lt; html.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 解析开始标签 &lt;div&gt;</span></span><br><span class="line">        <span class="keyword">if</span> (html[current] === <span class="string">&#x27;&lt;&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 标签解析逻辑</span></span><br><span class="line">            <span class="keyword">const</span> tagMatch = html.<span class="title function_">slice</span>(current).<span class="title function_">match</span>(<span class="regexp">/^&lt;(\w+)([^&gt;]*)&gt;/</span>);</span><br><span class="line">            <span class="keyword">if</span> (tagMatch) &#123;</span><br><span class="line">                tokens.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;StartTag&#x27;</span>,</span><br><span class="line">                    <span class="attr">tagName</span>: tagMatch[<span class="number">1</span>],</span><br><span class="line">                    <span class="attr">attributes</span>: <span class="title function_">parseAttributes</span>(tagMatch[<span class="number">2</span>])</span><br><span class="line">                &#125;);</span><br><span class="line">                current += tagMatch[<span class="number">0</span>].<span class="property">length</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析文本内容</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> textMatch = html.<span class="title function_">slice</span>(current).<span class="title function_">match</span>(<span class="regexp">/^([^&lt;]+)/</span>);</span><br><span class="line">            <span class="keyword">if</span> (textMatch) &#123;</span><br><span class="line">                tokens.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;Text&#x27;</span>,</span><br><span class="line">                    <span class="attr">content</span>: textMatch[<span class="number">1</span>]</span><br><span class="line">                &#125;);</span><br><span class="line">                current += textMatch[<span class="number">0</span>].<span class="property">length</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> tokens;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）CSS样式计算"><a href="#（二）CSS样式计算" class="headerlink" title="（二）CSS样式计算"></a>（二）CSS样式计算</h2><p><strong>CSSOM构建与样式计算：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CSS样式计算的核心流程</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">StyleEngine</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">styleSheets</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">computedStyles</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 解析CSS规则</span></span><br><span class="line">    <span class="title function_">parseCSSRules</span>(<span class="params">cssText</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> rules = [];</span><br><span class="line">        <span class="comment">// 使用CSS解析器解析样式规则</span></span><br><span class="line">        <span class="keyword">const</span> ast = <span class="variable language_">this</span>.<span class="title function_">parseCSS</span>(cssText);</span><br><span class="line">        </span><br><span class="line">        ast.<span class="property">rules</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">rule</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rule.<span class="property">type</span> === <span class="string">&#x27;rule&#x27;</span>) &#123;</span><br><span class="line">                rules.<span class="title function_">push</span>(&#123;</span><br><span class="line">                    <span class="attr">selector</span>: rule.<span class="property">selectors</span>,</span><br><span class="line">                    <span class="attr">declarations</span>: rule.<span class="property">declarations</span>,</span><br><span class="line">                    <span class="attr">specificity</span>: <span class="variable language_">this</span>.<span class="title function_">calculateSpecificity</span>(rule.<span class="property">selectors</span>)</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> rules;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算元素的最终样式</span></span><br><span class="line">    <span class="title function_">computeStyle</span>(<span class="params">element</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> matchedRules = <span class="variable language_">this</span>.<span class="title function_">matchRules</span>(element);</span><br><span class="line">        <span class="keyword">const</span> computedStyle = &#123;&#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 按优先级排序规则</span></span><br><span class="line">        matchedRules.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.<span class="property">specificity</span> - a.<span class="property">specificity</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 应用样式规则</span></span><br><span class="line">        matchedRules.<span class="title function_">forEach</span>(<span class="function"><span class="params">rule</span> =&gt;</span> &#123;</span><br><span class="line">            rule.<span class="property">declarations</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">declaration</span> =&gt;</span> &#123;</span><br><span class="line">                computedStyle[declaration.<span class="property">property</span>] = declaration.<span class="property">value</span>;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> computedStyle;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算选择器优先级</span></span><br><span class="line">    <span class="title function_">calculateSpecificity</span>(<span class="params">selectors</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> specificity = <span class="number">0</span>;</span><br><span class="line">        selectors.<span class="title function_">forEach</span>(<span class="function"><span class="params">selector</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// ID选择器权重：100</span></span><br><span class="line">            specificity += (selector.<span class="title function_">match</span>(<span class="regexp">/#/g</span>) || []).<span class="property">length</span> * <span class="number">100</span>;</span><br><span class="line">            <span class="comment">// 类选择器权重：10</span></span><br><span class="line">            specificity += (selector.<span class="title function_">match</span>(<span class="regexp">/\./g</span>) || []).<span class="property">length</span> * <span class="number">10</span>;</span><br><span class="line">            <span class="comment">// 标签选择器权重：1</span></span><br><span class="line">            specificity += (selector.<span class="title function_">match</span>(<span class="regexp">/\w+/g</span>) || []).<span class="property">length</span> * <span class="number">1</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> specificity;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、iframe隔离方案实现"><a href="#三、iframe隔离方案实现" class="headerlink" title="三、iframe隔离方案实现"></a>三、iframe隔离方案实现</h1><h2 id="（一）iframe沙箱机制"><a href="#（一）iframe沙箱机制" class="headerlink" title="（一）iframe沙箱机制"></a>（一）iframe沙箱机制</h2><p>iframe是实现代码预览最常用的技术方案，它提供了天然的沙箱环境：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 基础iframe结构 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">id</span>=<span class="string">&quot;preview-frame&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">&quot;about:blank&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">sandbox</span>=<span class="string">&quot;allow-scripts allow-same-origin&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">&quot;width: 100%; height: 400px; border: none;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>sandbox属性详解：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iframe安全配置选项</span></span><br><span class="line"><span class="keyword">const</span> sandboxOptions = &#123;</span><br><span class="line">    <span class="string">&#x27;allow-scripts&#x27;</span>: <span class="string">&#x27;允许执行JavaScript&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-same-origin&#x27;</span>: <span class="string">&#x27;允许同源访问&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-forms&#x27;</span>: <span class="string">&#x27;允许表单提交&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-popups&#x27;</span>: <span class="string">&#x27;允许弹窗&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-modals&#x27;</span>: <span class="string">&#x27;允许模态对话框&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-orientation-lock&#x27;</span>: <span class="string">&#x27;允许屏幕方向锁定&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-pointer-lock&#x27;</span>: <span class="string">&#x27;允许指针锁定&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;allow-presentation&#x27;</span>: <span class="string">&#x27;允许演示模式&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建安全的预览iframe</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createPreviewFrame</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">    iframe.<span class="property">src</span> = <span class="string">&#x27;about:blank&#x27;</span>;</span><br><span class="line">    iframe.<span class="property">sandbox</span> = <span class="string">&#x27;allow-scripts allow-same-origin&#x27;</span>;</span><br><span class="line">    iframe.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&#x27;width: 100%; height: 100%; border: none;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> iframe;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）代码注入与执行"><a href="#（二）代码注入与执行" class="headerlink" title="（二）代码注入与执行"></a>（二）代码注入与执行</h2><p><strong>动态内容注入实现：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CodePreview</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">container</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span> = container;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">iframe</span> = <span class="variable language_">this</span>.<span class="title function_">createIframe</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="title function_">appendChild</span>(<span class="variable language_">this</span>.<span class="property">iframe</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">createIframe</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> iframe = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;iframe&#x27;</span>);</span><br><span class="line">        iframe.<span class="property">src</span> = <span class="string">&#x27;about:blank&#x27;</span>;</span><br><span class="line">        iframe.<span class="property">sandbox</span> = <span class="string">&#x27;allow-scripts allow-same-origin&#x27;</span>;</span><br><span class="line">        iframe.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&#x27;width: 100%; height: 100%; border: none;&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监听iframe加载完成</span></span><br><span class="line">        iframe.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setupConsoleCapture</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> iframe;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新预览内容</span></span><br><span class="line">    <span class="title function_">updatePreview</span>(<span class="params">html, css, js</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> iframeDoc = <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentDocument</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 构建完整的HTML文档</span></span><br><span class="line">        <span class="keyword">const</span> fullHTML = <span class="variable language_">this</span>.<span class="title function_">buildHTML</span>(html, css, js);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 写入iframe文档</span></span><br><span class="line">        iframeDoc.<span class="title function_">open</span>();</span><br><span class="line">        iframeDoc.<span class="title function_">write</span>(fullHTML);</span><br><span class="line">        iframeDoc.<span class="title function_">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构建完整HTML文档</span></span><br><span class="line">    <span class="title function_">buildHTML</span>(<span class="params">html, css, js</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">            &lt;html&gt;</span></span><br><span class="line"><span class="string">            &lt;head&gt;</span></span><br><span class="line"><span class="string">                &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;style&gt;</span></span><br><span class="line"><span class="string">                    /* 重置样式 */</span></span><br><span class="line"><span class="string">                    * &#123; margin: 0; padding: 0; box-sizing: border-box; &#125;</span></span><br><span class="line"><span class="string">                    body &#123; font-family: Arial, sans-serif; &#125;</span></span><br><span class="line"><span class="string">                    </span></span><br><span class="line"><span class="string">                    /* 用户CSS */</span></span><br><span class="line"><span class="string">                    <span class="subst">$&#123;css&#125;</span></span></span><br><span class="line"><span class="string">                &lt;/style&gt;</span></span><br><span class="line"><span class="string">            &lt;/head&gt;</span></span><br><span class="line"><span class="string">            &lt;body&gt;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;html&#125;</span></span></span><br><span class="line"><span class="string">                </span></span><br><span class="line"><span class="string">                &lt;script&gt;</span></span><br><span class="line"><span class="string">                    // 控制台劫持代码</span></span><br><span class="line"><span class="string">                    <span class="subst">$&#123;<span class="variable language_">this</span>.getConsoleInterceptor()&#125;</span></span></span><br><span class="line"><span class="string">                    </span></span><br><span class="line"><span class="string">                    // 错误处理</span></span><br><span class="line"><span class="string">                    window.onerror = function(msg, url, line, col, error) &#123;</span></span><br><span class="line"><span class="string">                        parent.postMessage(&#123;</span></span><br><span class="line"><span class="string">                            type: &#x27;error&#x27;,</span></span><br><span class="line"><span class="string">                            message: msg,</span></span><br><span class="line"><span class="string">                            line: line,</span></span><br><span class="line"><span class="string">                            column: col</span></span><br><span class="line"><span class="string">                        &#125;, &#x27;*&#x27;);</span></span><br><span class="line"><span class="string">                        return false;</span></span><br><span class="line"><span class="string">                    &#125;;</span></span><br><span class="line"><span class="string">                    </span></span><br><span class="line"><span class="string">                    // 用户JavaScript代码</span></span><br><span class="line"><span class="string">                    try &#123;</span></span><br><span class="line"><span class="string">                        <span class="subst">$&#123;js&#125;</span></span></span><br><span class="line"><span class="string">                    &#125; catch (error) &#123;</span></span><br><span class="line"><span class="string">                        parent.postMessage(&#123;</span></span><br><span class="line"><span class="string">                            type: &#x27;error&#x27;,</span></span><br><span class="line"><span class="string">                            message: error.message,</span></span><br><span class="line"><span class="string">                            stack: error.stack</span></span><br><span class="line"><span class="string">                        &#125;, &#x27;*&#x27;);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &lt;/script&gt;</span></span><br><span class="line"><span class="string">            &lt;/body&gt;</span></span><br><span class="line"><span class="string">            &lt;/html&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 控制台输出劫持</span></span><br><span class="line">    <span class="title function_">getConsoleInterceptor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">            (function() &#123;</span></span><br><span class="line"><span class="string">                const originalConsole = window.console;</span></span><br><span class="line"><span class="string">                const methods = [&#x27;log&#x27;, &#x27;warn&#x27;, &#x27;error&#x27;, &#x27;info&#x27;, &#x27;debug&#x27;];</span></span><br><span class="line"><span class="string">                </span></span><br><span class="line"><span class="string">                methods.forEach(method =&gt; &#123;</span></span><br><span class="line"><span class="string">                    window.console[method] = function(...args) &#123;</span></span><br><span class="line"><span class="string">                        // 保持原有控制台输出</span></span><br><span class="line"><span class="string">                        originalConsole[method].apply(originalConsole, args);</span></span><br><span class="line"><span class="string">                        </span></span><br><span class="line"><span class="string">                        // 发送消息到父页面</span></span><br><span class="line"><span class="string">                        parent.postMessage(&#123;</span></span><br><span class="line"><span class="string">                            type: &#x27;console&#x27;,</span></span><br><span class="line"><span class="string">                            method: method,</span></span><br><span class="line"><span class="string">                            args: args.map(arg =&gt; &#123;</span></span><br><span class="line"><span class="string">                                try &#123;</span></span><br><span class="line"><span class="string">                                    return typeof arg === &#x27;object&#x27; ? </span></span><br><span class="line"><span class="string">                                           JSON.stringify(arg, null, 2) : </span></span><br><span class="line"><span class="string">                                           String(arg);</span></span><br><span class="line"><span class="string">                                &#125; catch (e) &#123;</span></span><br><span class="line"><span class="string">                                    return &#x27;[Object]&#x27;;</span></span><br><span class="line"><span class="string">                                &#125;</span></span><br><span class="line"><span class="string">                            &#125;)</span></span><br><span class="line"><span class="string">                        &#125;, &#x27;*&#x27;);</span></span><br><span class="line"><span class="string">                    &#125;;</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">            &#125;)();</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置控制台消息监听</span></span><br><span class="line">    <span class="title function_">setupConsoleCapture</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (event.<span class="property">source</span> === <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">handleConsoleMessage</span>(event.<span class="property">data</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理控制台消息</span></span><br><span class="line">    <span class="title function_">handleConsoleMessage</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (data.<span class="property">type</span> === <span class="string">&#x27;console&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">displayConsoleOutput</span>(data.<span class="property">method</span>, data.<span class="property">args</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.<span class="property">type</span> === <span class="string">&#x27;error&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">displayError</span>(data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示控制台输出</span></span><br><span class="line">    <span class="title function_">displayConsoleOutput</span>(<span class="params">method, args</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> consolePanel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;console-panel&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> logEntry = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        logEntry.<span class="property">className</span> = <span class="string">`console-entry console-<span class="subst">$&#123;method&#125;</span>`</span>;</span><br><span class="line">        logEntry.<span class="property">textContent</span> = args.<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        consolePanel.<span class="title function_">appendChild</span>(logEntry);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示错误信息</span></span><br><span class="line">    <span class="title function_">displayError</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> consolePanel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;console-panel&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> errorEntry = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        errorEntry.<span class="property">className</span> = <span class="string">&#x27;console-entry console-error&#x27;</span>;</span><br><span class="line">        errorEntry.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;strong&gt;Error:&lt;/strong&gt; <span class="subst">$&#123;error.message&#125;</span></span></span><br><span class="line"><span class="string">            <span class="subst">$&#123;error.line ? <span class="string">`&lt;br&gt;Line: <span class="subst">$&#123;error.line&#125;</span>`</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">        consolePanel.<span class="title function_">appendChild</span>(errorEntry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、实时更新机制"><a href="#四、实时更新机制" class="headerlink" title="四、实时更新机制"></a>四、实时更新机制</h1><h2 id="（一）防抖与节流优化"><a href="#（一）防抖与节流优化" class="headerlink" title="（一）防抖与节流优化"></a>（一）防抖与节流优化</h2><p>为了提升性能和用户体验，需要对代码更新进行优化：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 防抖函数实现</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args), delay);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 节流函数实现</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, limit</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> inThrottle;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!inThrottle) &#123;</span><br><span class="line">            func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">            inThrottle = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> inThrottle = <span class="literal">false</span>, limit);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代码编辑器类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CodeEditor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preview</span> = <span class="keyword">new</span> <span class="title class_">CodePreview</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;preview&#x27;</span>));</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupEditors</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 防抖更新预览，避免频繁重新渲染</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">updatePreview</span> = <span class="title function_">debounce</span>(<span class="variable language_">this</span>.<span class="property">updatePreview</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">setupEditors</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// HTML编辑器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">htmlEditor</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;html-editor&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">htmlEditor</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">updatePreview</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// CSS编辑器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cssEditor</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;css-editor&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cssEditor</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">updatePreview</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// JavaScript编辑器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">jsEditor</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;js-editor&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">jsEditor</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">updatePreview</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">updatePreview</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> html = <span class="variable language_">this</span>.<span class="property">htmlEditor</span>.<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">const</span> css = <span class="variable language_">this</span>.<span class="property">cssEditor</span>.<span class="property">value</span>;</span><br><span class="line">        <span class="keyword">const</span> js = <span class="variable language_">this</span>.<span class="property">jsEditor</span>.<span class="property">value</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preview</span>.<span class="title function_">updatePreview</span>(html, css, js);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）增量更新策略"><a href="#（二）增量更新策略" class="headerlink" title="（二）增量更新策略"></a>（二）增量更新策略</h2><p>对于复杂的代码预览系统，可以实现增量更新来提升性能：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">IncrementalPreview</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">lastHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">lastCSS</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">lastJS</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">styleElement</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 智能更新策略</span></span><br><span class="line">    <span class="title function_">smartUpdate</span>(<span class="params">html, css, js</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> htmlChanged = html !== <span class="variable language_">this</span>.<span class="property">lastHTML</span>;</span><br><span class="line">        <span class="keyword">const</span> cssChanged = css !== <span class="variable language_">this</span>.<span class="property">lastCSS</span>;</span><br><span class="line">        <span class="keyword">const</span> jsChanged = js !== <span class="variable language_">this</span>.<span class="property">lastJS</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (htmlChanged) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateHTML</span>(html);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">lastHTML</span> = html;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (cssChanged) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateCSS</span>(css);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">lastCSS</span> = css;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (jsChanged) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">updateJS</span>(js);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">lastJS</span> = js;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 仅更新CSS样式</span></span><br><span class="line">    <span class="title function_">updateCSS</span>(<span class="params">css</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> iframeDoc = <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentDocument</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">styleElement</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">styleElement</span> = iframeDoc.<span class="title function_">createElement</span>(<span class="string">&#x27;style&#x27;</span>);</span><br><span class="line">            iframeDoc.<span class="property">head</span>.<span class="title function_">appendChild</span>(<span class="variable language_">this</span>.<span class="property">styleElement</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">styleElement</span>.<span class="property">textContent</span> = css;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态执行JavaScript</span></span><br><span class="line">    <span class="title function_">updateJS</span>(<span class="params">js</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> iframeWindow = <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 清理之前的事件监听器</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">cleanupEventListeners</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行新的JavaScript代码</span></span><br><span class="line">            iframeWindow.<span class="built_in">eval</span>(js);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleJSError</span>(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、主流在线编辑器技术方案"><a href="#五、主流在线编辑器技术方案" class="headerlink" title="五、主流在线编辑器技术方案"></a>五、主流在线编辑器技术方案</h1><h2 id="（一）CodePen架构分析"><a href="#（一）CodePen架构分析" class="headerlink" title="（一）CodePen架构分析"></a>（一）CodePen架构分析</h2><p><strong>CodePen的技术实现特点：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CodePen类似的编辑器实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CodePenClone</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editors</span> = &#123;</span><br><span class="line">            <span class="attr">html</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">css</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">js</span>: <span class="literal">null</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preview</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">settings</span> = &#123;</span><br><span class="line">            <span class="attr">autoRun</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">delay</span>: <span class="number">300</span>,</span><br><span class="line">            <span class="attr">preprocessors</span>: &#123;</span><br><span class="line">                <span class="attr">html</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                <span class="attr">css</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">                <span class="attr">js</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化编辑器</span></span><br><span class="line">    <span class="title function_">initializeEditors</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 使用Monaco Editor或CodeMirror</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">html</span> = <span class="variable language_">this</span>.<span class="title function_">createEditor</span>(<span class="string">&#x27;html&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">language</span>: <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">            <span class="attr">theme</span>: <span class="string">&#x27;vs-dark&#x27;</span>,</span><br><span class="line">            <span class="attr">automaticLayout</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">minimap</span>: &#123; <span class="attr">enabled</span>: <span class="literal">false</span> &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">css</span> = <span class="variable language_">this</span>.<span class="title function_">createEditor</span>(<span class="string">&#x27;css&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">language</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">            <span class="attr">theme</span>: <span class="string">&#x27;vs-dark&#x27;</span>,</span><br><span class="line">            <span class="attr">automaticLayout</span>: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">js</span> = <span class="variable language_">this</span>.<span class="title function_">createEditor</span>(<span class="string">&#x27;js&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">language</span>: <span class="string">&#x27;javascript&#x27;</span>,</span><br><span class="line">            <span class="attr">theme</span>: <span class="string">&#x27;vs-dark&#x27;</span>,</span><br><span class="line">            <span class="attr">automaticLayout</span>: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定变化监听</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>.<span class="property">editors</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">editor</span> =&gt;</span> &#123;</span><br><span class="line">            editor.<span class="title function_">onDidChangeModelContent</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">settings</span>.<span class="property">autoRun</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">scheduleUpdate</span>();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建单个编辑器</span></span><br><span class="line">    <span class="title function_">createEditor</span>(<span class="params">type, options</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">`<span class="subst">$&#123;type&#125;</span>-editor`</span>);</span><br><span class="line">        <span class="keyword">return</span> monaco.<span class="property">editor</span>.<span class="title function_">create</span>(container, options);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 预处理器支持</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">preprocessCode</span>(<span class="params">code, type</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">this</span>.<span class="property">settings</span>.<span class="property">preprocessors</span>[type]) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;sass&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">compileSass</span>(code);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;less&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">compileLess</span>(code);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;typescript&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">compileTypeScript</span>(code);</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;babel&#x27;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">compileBabel</span>(code);</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="keyword">return</span> code;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Sass编译示例</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">compileSass</span>(<span class="params">sassCode</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用sass.js或类似库</span></span><br><span class="line">            <span class="keyword">const</span> result = <span class="title class_">Sass</span>.<span class="title function_">compile</span>(sassCode);</span><br><span class="line">            <span class="keyword">return</span> result.<span class="property">css</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;Sass编译错误&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TypeScript编译示例</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">compileTypeScript</span>(<span class="params">tsCode</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 使用TypeScript编译器API</span></span><br><span class="line">            <span class="keyword">const</span> result = ts.<span class="title function_">transpile</span>(tsCode, &#123;</span><br><span class="line">                <span class="attr">target</span>: ts.<span class="property">ScriptTarget</span>.<span class="property">ES5</span>,</span><br><span class="line">                <span class="attr">module</span>: ts.<span class="property">ModuleKind</span>.<span class="property">None</span></span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">showError</span>(<span class="string">&#x27;TypeScript编译错误&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）JSFiddle技术特点"><a href="#（二）JSFiddle技术特点" class="headerlink" title="（二）JSFiddle技术特点"></a>（二）JSFiddle技术特点</h2><p><strong>JSFiddle的轻量化实现：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSFiddle风格的简化实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSFiddleClone</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">layout</span> = <span class="string">&#x27;horizontal&#x27;</span>; <span class="comment">// horizontal, vertical</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">panels</span> = [<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;css&#x27;</span>, <span class="string">&#x27;js&#x27;</span>, <span class="string">&#x27;result&#x27;</span>];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">activePanel</span> = <span class="string">&#x27;html&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应式布局管理</span></span><br><span class="line">    <span class="title function_">setupResponsiveLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;editor-container&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检测屏幕尺寸</span></span><br><span class="line">        <span class="keyword">const</span> mediaQuery = <span class="variable language_">window</span>.<span class="title function_">matchMedia</span>(<span class="string">&#x27;(max-width: 768px)&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        mediaQuery.<span class="title function_">addListener</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.<span class="property">matches</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">switchToMobileLayout</span>();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">switchToDesktopLayout</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始布局</span></span><br><span class="line">        <span class="keyword">if</span> (mediaQuery.<span class="property">matches</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">switchToMobileLayout</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动端布局</span></span><br><span class="line">    <span class="title function_">switchToMobileLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">layout</span> = <span class="string">&#x27;tabs&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">createTabLayout</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 桌面端布局</span></span><br><span class="line">    <span class="title function_">switchToDesktopLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">layout</span> = <span class="string">&#x27;split&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">createSplitLayout</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 标签页布局</span></span><br><span class="line">    <span class="title function_">createTabLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;editor-container&#x27;</span>);</span><br><span class="line">        container.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;tab-headers&quot;&gt;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;<span class="variable language_">this</span>.panels.map(panel =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">                    <span class="string">`&lt;button class=&quot;tab-header <span class="subst">$&#123;panel === <span class="variable language_">this</span>.activePanel ? <span class="string">&#x27;active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">                             data-panel=&quot;<span class="subst">$&#123;panel&#125;</span>&quot;&gt;<span class="subst">$&#123;panel.toUpperCase()&#125;</span>&lt;/button&gt;`</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                ).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;tab-content&quot;&gt;</span></span><br><span class="line"><span class="string">                <span class="subst">$&#123;<span class="variable language_">this</span>.panels.map(panel =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">                    <span class="string">`&lt;div class=&quot;tab-panel <span class="subst">$&#123;panel === <span class="variable language_">this</span>.activePanel ? <span class="string">&#x27;active&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">                          id=&quot;<span class="subst">$&#123;panel&#125;</span>-panel&quot;&gt;&lt;/div&gt;`</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                ).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 绑定标签切换事件</span></span><br><span class="line">        container.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.tab-header&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">header</span> =&gt;</span> &#123;</span><br><span class="line">            header.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">switchTab</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">panel</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分割布局</span></span><br><span class="line">    <span class="title function_">createSplitLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;editor-container&#x27;</span>);</span><br><span class="line">        container.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;split-layout&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;editors-section&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;editor-panel&quot; id=&quot;html-panel&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;editor-panel&quot; id=&quot;css-panel&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;editor-panel&quot; id=&quot;js-panel&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;result-section&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class=&quot;result-panel&quot; id=&quot;result-panel&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、性能优化与最佳实践"><a href="#六、性能优化与最佳实践" class="headerlink" title="六、性能优化与最佳实践"></a>六、性能优化与最佳实践</h1><h2 id="（一）渲染性能优化"><a href="#（一）渲染性能优化" class="headerlink" title="（一）渲染性能优化"></a>（一）渲染性能优化</h2><p><strong>虚拟滚动优化：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 大量代码行的虚拟滚动实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">VirtualScrollEditor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">container, totalLines</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span> = container;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">totalLines</span> = totalLines;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">visibleLines</span> = <span class="number">50</span>; <span class="comment">// 可见行数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">lineHeight</span> = <span class="number">20</span>; <span class="comment">// 每行高度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scrollTop</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">renderBuffer</span> = <span class="number">10</span>; <span class="comment">// 缓冲区行数</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupVirtualScroll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupVirtualScroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 创建虚拟容器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">virtualContainer</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">virtualContainer</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.totalLines * <span class="variable language_">this</span>.lineHeight&#125;</span>px`</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">virtualContainer</span>.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;relative&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建可视区域</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">viewport</span> = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">viewport</span>.<span class="property">style</span>.<span class="property">height</span> = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.visibleLines * <span class="variable language_">this</span>.lineHeight&#125;</span>px`</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">viewport</span>.<span class="property">style</span>.<span class="property">overflow</span> = <span class="string">&#x27;auto&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">viewport</span>.<span class="title function_">appendChild</span>(<span class="variable language_">this</span>.<span class="property">virtualContainer</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听滚动事件</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">viewport</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleScroll</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="title function_">appendChild</span>(<span class="variable language_">this</span>.<span class="property">viewport</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">renderVisibleLines</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleScroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> newScrollTop = <span class="variable language_">this</span>.<span class="property">viewport</span>.<span class="property">scrollTop</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(newScrollTop - <span class="variable language_">this</span>.<span class="property">scrollTop</span>) &gt; <span class="variable language_">this</span>.<span class="property">lineHeight</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">scrollTop</span> = newScrollTop;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">renderVisibleLines</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">renderVisibleLines</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> startLine = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="variable language_">this</span>.<span class="property">scrollTop</span> / <span class="variable language_">this</span>.<span class="property">lineHeight</span>);</span><br><span class="line">        <span class="keyword">const</span> endLine = <span class="title class_">Math</span>.<span class="title function_">min</span>(</span><br><span class="line">            startLine + <span class="variable language_">this</span>.<span class="property">visibleLines</span> + <span class="variable language_">this</span>.<span class="property">renderBuffer</span>,</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">totalLines</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空现有内容</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">virtualContainer</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 渲染可见行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = startLine; i &lt; endLine; i++) &#123;</span><br><span class="line">            <span class="keyword">const</span> lineElement = <span class="variable language_">this</span>.<span class="title function_">createLineElement</span>(i);</span><br><span class="line">            lineElement.<span class="property">style</span>.<span class="property">position</span> = <span class="string">&#x27;absolute&#x27;</span>;</span><br><span class="line">            lineElement.<span class="property">style</span>.<span class="property">top</span> = <span class="string">`<span class="subst">$&#123;i * <span class="variable language_">this</span>.lineHeight&#125;</span>px`</span>;</span><br><span class="line">            lineElement.<span class="property">style</span>.<span class="property">height</span> = <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.lineHeight&#125;</span>px`</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">virtualContainer</span>.<span class="title function_">appendChild</span>(lineElement);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createLineElement</span>(<span class="params">lineNumber</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> line = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        line.<span class="property">className</span> = <span class="string">&#x27;code-line&#x27;</span>;</span><br><span class="line">        line.<span class="property">textContent</span> = <span class="string">`Line <span class="subst">$&#123;lineNumber + <span class="number">1</span>&#125;</span>: <span class="subst">$&#123;<span class="variable language_">this</span>.getLineContent(lineNumber)&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">return</span> line;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getLineContent</span>(<span class="params">lineNumber</span>) &#123;</span><br><span class="line">        <span class="comment">// 获取指定行的代码内容</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`console.log(&#x27;This is line <span class="subst">$&#123;lineNumber + <span class="number">1</span>&#125;</span>&#x27;);`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）内存管理优化"><a href="#（二）内存管理优化" class="headerlink" title="（二）内存管理优化"></a>（二）内存管理优化</h2><p><strong>避免内存泄漏的策略：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MemoryOptimizedPreview</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventListeners</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timers</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">observers</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全的事件监听器管理</span></span><br><span class="line">    <span class="title function_">addEventListener</span>(<span class="params">element, event, handler, options</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">wrappedHandler</span> = (<span class="params">e</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="title function_">handler</span>(e);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Event handler error:&#x27;</span>, error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        element.<span class="title function_">addEventListener</span>(event, wrappedHandler, options);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录监听器以便清理</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">eventListeners</span>.<span class="title function_">has</span>(element)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">eventListeners</span>.<span class="title function_">set</span>(element, []);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventListeners</span>.<span class="title function_">get</span>(element).<span class="title function_">push</span>(&#123;</span><br><span class="line">            event,</span><br><span class="line">            <span class="attr">handler</span>: wrappedHandler,</span><br><span class="line">            options</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定时器管理</span></span><br><span class="line">    <span class="title function_">setTimeout</span>(<span class="params">callback, delay</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> timerId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">timers</span>.<span class="title function_">delete</span>(timerId);</span><br><span class="line">            <span class="title function_">callback</span>();</span><br><span class="line">        &#125;, delay);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timers</span>.<span class="title function_">add</span>(timerId);</span><br><span class="line">        <span class="keyword">return</span> timerId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setInterval</span>(<span class="params">callback, interval</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> intervalId = <span class="built_in">setInterval</span>(callback, interval);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timers</span>.<span class="title function_">add</span>(intervalId);</span><br><span class="line">        <span class="keyword">return</span> intervalId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 观察者管理</span></span><br><span class="line">    <span class="title function_">createObserver</span>(<span class="params">callback, options</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(callback);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">observers</span>.<span class="title function_">add</span>(observer);</span><br><span class="line">        <span class="keyword">return</span> observer;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理所有资源</span></span><br><span class="line">    <span class="title function_">cleanup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理事件监听器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventListeners</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">listeners, element</span>) =&gt;</span> &#123;</span><br><span class="line">            listeners.<span class="title function_">forEach</span>(<span class="function">(<span class="params">&#123; event, handler, options &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">                element.<span class="title function_">removeEventListener</span>(event, handler, options);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">eventListeners</span>.<span class="title function_">clear</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理定时器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timers</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">timerId</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timerId);</span><br><span class="line">            <span class="built_in">clearInterval</span>(timerId);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timers</span>.<span class="title function_">clear</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理观察者</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">observers</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">observer</span> =&gt;</span> &#123;</span><br><span class="line">            observer.<span class="title function_">disconnect</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">observers</span>.<span class="title function_">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 页面卸载时自动清理</span></span><br><span class="line">    <span class="title function_">setupAutoCleanup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;beforeunload&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">cleanup</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对于SPA应用，监听路由变化</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">history</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">history</span>.<span class="property">pushState</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> originalPushState = <span class="variable language_">window</span>.<span class="property">history</span>.<span class="property">pushState</span>;</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">history</span>.<span class="property">pushState</span> = <span class="function">(<span class="params">...args</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">cleanup</span>();</span><br><span class="line">                <span class="keyword">return</span> originalPushState.<span class="title function_">apply</span>(<span class="variable language_">window</span>.<span class="property">history</span>, args);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="七、安全机制与错误处理"><a href="#七、安全机制与错误处理" class="headerlink" title="七、安全机制与错误处理"></a>七、安全机制与错误处理</h1><h2 id="（一）代码安全执行"><a href="#（一）代码安全执行" class="headerlink" title="（一）代码安全执行"></a>（一）代码安全执行</h2><p><strong>CSP内容安全策略：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内容安全策略配置</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SecurityManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cspPolicy</span> = &#123;</span><br><span class="line">            <span class="string">&#x27;default-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;script-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27; &#x27;unsafe-inline&#x27; &#x27;unsafe-eval&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;style-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27; &#x27;unsafe-inline&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;img-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27; data: https:&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;connect-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;font-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27; data:&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;object-src&#x27;</span>: <span class="string">&quot;&#x27;none&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;media-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;frame-src&#x27;</span>: <span class="string">&quot;&#x27;self&#x27;&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成CSP头部</span></span><br><span class="line">    <span class="title function_">generateCSPHeader</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="variable language_">this</span>.<span class="property">cspPolicy</span>)</span><br><span class="line">            .<span class="title function_">map</span>(<span class="function">(<span class="params">[directive, value]</span>) =&gt;</span> <span class="string">`<span class="subst">$&#123;directive&#125;</span> <span class="subst">$&#123;value&#125;</span>`</span>)</span><br><span class="line">            .<span class="title function_">join</span>(<span class="string">&#x27;; &#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 代码安全检查</span></span><br><span class="line">    <span class="title function_">validateCode</span>(<span class="params">code, type</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> risks = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;javascript&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 检查危险函数调用</span></span><br><span class="line">            <span class="keyword">const</span> dangerousPatterns = [</span><br><span class="line">                <span class="regexp">/eval\s*\(/g</span>,</span><br><span class="line">                <span class="regexp">/Function\s*\(/g</span>,</span><br><span class="line">                <span class="regexp">/setTimeout\s*\(\s*[&#x27;&quot;`][^&#x27;&quot;`]*[&#x27;&quot;`]/g</span>,</span><br><span class="line">                <span class="regexp">/setInterval\s*\(\s*[&#x27;&quot;`][^&#x27;&quot;`]*[&#x27;&quot;`]/g</span>,</span><br><span class="line">                <span class="regexp">/document\.write/g</span>,</span><br><span class="line">                <span class="regexp">/innerHTML\s*=/g</span>,</span><br><span class="line">                <span class="regexp">/outerHTML\s*=/g</span></span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            dangerousPatterns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">pattern, index</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (pattern.<span class="title function_">test</span>(code)) &#123;</span><br><span class="line">                    risks.<span class="title function_">push</span>(&#123;</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;dangerous-function&#x27;</span>,</span><br><span class="line">                        <span class="attr">pattern</span>: pattern.<span class="property">source</span>,</span><br><span class="line">                        <span class="attr">severity</span>: <span class="string">&#x27;high&#x27;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 检查网络请求</span></span><br><span class="line">            <span class="keyword">const</span> networkPatterns = [</span><br><span class="line">                <span class="regexp">/fetch\s*\(/g</span>,</span><br><span class="line">                <span class="regexp">/XMLHttpRequest/g</span>,</span><br><span class="line">                <span class="regexp">/\.ajax\s*\(/g</span>,</span><br><span class="line">                <span class="regexp">/import\s*\(/g</span></span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            networkPatterns.<span class="title function_">forEach</span>(<span class="function"><span class="params">pattern</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (pattern.<span class="title function_">test</span>(code)) &#123;</span><br><span class="line">                    risks.<span class="title function_">push</span>(&#123;</span><br><span class="line">                        <span class="attr">type</span>: <span class="string">&#x27;network-request&#x27;</span>,</span><br><span class="line">                        <span class="attr">pattern</span>: pattern.<span class="property">source</span>,</span><br><span class="line">                        <span class="attr">severity</span>: <span class="string">&#x27;medium&#x27;</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> risks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 代码净化</span></span><br><span class="line">    <span class="title function_">sanitizeCode</span>(<span class="params">code, type</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;html&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// HTML净化</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">sanitizeHTML</span>(code);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">&#x27;javascript&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// JavaScript净化</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">sanitizeJavaScript</span>(code);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">sanitizeHTML</span>(<span class="params">html</span>) &#123;</span><br><span class="line">        <span class="comment">// 移除危险标签和属性</span></span><br><span class="line">        <span class="keyword">const</span> dangerousTags = [<span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;iframe&#x27;</span>, <span class="string">&#x27;object&#x27;</span>, <span class="string">&#x27;embed&#x27;</span>, <span class="string">&#x27;form&#x27;</span>];</span><br><span class="line">        <span class="keyword">const</span> dangerousAttrs = [<span class="string">&#x27;onload&#x27;</span>, <span class="string">&#x27;onerror&#x27;</span>, <span class="string">&#x27;onclick&#x27;</span>, <span class="string">&#x27;onmouseover&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> sanitized = html;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移除危险标签</span></span><br><span class="line">        dangerousTags.<span class="title function_">forEach</span>(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`&lt;<span class="subst">$&#123;tag&#125;</span>[^&gt;]*&gt;.*?&lt;/<span class="subst">$&#123;tag&#125;</span>&gt;`</span>, <span class="string">&#x27;gis&#x27;</span>);</span><br><span class="line">            sanitized = sanitized.<span class="title function_">replace</span>(regex, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移除危险属性</span></span><br><span class="line">        dangerousAttrs.<span class="title function_">forEach</span>(<span class="function"><span class="params">attr</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`<span class="subst">$&#123;attr&#125;</span>\\s*=\\s*[&quot;&#x27;][^&quot;&#x27;]*[&quot;&#x27;]`</span>, <span class="string">&#x27;gi&#x27;</span>);</span><br><span class="line">            sanitized = sanitized.<span class="title function_">replace</span>(regex, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sanitized;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">sanitizeJavaScript</span>(<span class="params">js</span>) &#123;</span><br><span class="line">        <span class="comment">// 移除或替换危险函数</span></span><br><span class="line">        <span class="keyword">let</span> sanitized = js;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 替换eval</span></span><br><span class="line">        sanitized = sanitized.<span class="title function_">replace</span>(<span class="regexp">/eval\s*\(/g</span>, <span class="string">&#x27;/* eval disabled */ (&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 替换Function构造器</span></span><br><span class="line">        sanitized = sanitized.<span class="title function_">replace</span>(<span class="regexp">/new\s+Function\s*\(/g</span>, <span class="string">&#x27;/* Function disabled */ (&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sanitized;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）错误处理与调试"><a href="#（二）错误处理与调试" class="headerlink" title="（二）错误处理与调试"></a>（二）错误处理与调试</h2><p><strong>完善的错误处理机制：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorHandler</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorLog</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxLogSize</span> = <span class="number">100</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupGlobalErrorHandling</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 全局错误处理</span></span><br><span class="line">    <span class="title function_">setupGlobalErrorHandling</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// JavaScript运行时错误</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleError</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;runtime&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: event.<span class="property">message</span>,</span><br><span class="line">                <span class="attr">filename</span>: event.<span class="property">filename</span>,</span><br><span class="line">                <span class="attr">line</span>: event.<span class="property">lineno</span>,</span><br><span class="line">                <span class="attr">column</span>: event.<span class="property">colno</span>,</span><br><span class="line">                <span class="attr">stack</span>: event.<span class="property">error</span>?.<span class="property">stack</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Promise未捕获错误</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;unhandledrejection&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleError</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;promise&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: event.<span class="property">reason</span>?.<span class="property">message</span> || <span class="string">&#x27;Unhandled Promise Rejection&#x27;</span>,</span><br><span class="line">                <span class="attr">stack</span>: event.<span class="property">reason</span>?.<span class="property">stack</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 资源加载错误</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (event.<span class="property">target</span> !== <span class="variable language_">window</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">handleError</span>(&#123;</span><br><span class="line">                    <span class="attr">type</span>: <span class="string">&#x27;resource&#x27;</span>,</span><br><span class="line">                    <span class="attr">message</span>: <span class="string">`Failed to load resource: <span class="subst">$&#123;event.target.src || event.target.href&#125;</span>`</span>,</span><br><span class="line">                    <span class="attr">element</span>: event.<span class="property">target</span>.<span class="property">tagName</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理错误</span></span><br><span class="line">    <span class="title function_">handleError</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="comment">// 添加时间戳</span></span><br><span class="line">        error.<span class="property">timestamp</span> = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加到错误日志</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorLog</span>.<span class="title function_">push</span>(error);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 限制日志大小</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">errorLog</span>.<span class="property">length</span> &gt; <span class="variable language_">this</span>.<span class="property">maxLogSize</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">errorLog</span>.<span class="title function_">shift</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 显示错误</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">displayError</span>(error);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送错误报告（可选）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">reportError</span>(error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示错误信息</span></span><br><span class="line">    <span class="title function_">displayError</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> errorPanel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;error-panel&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!errorPanel) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> errorElement = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        errorElement.<span class="property">className</span> = <span class="string">`error-item error-<span class="subst">$&#123;error.type&#125;</span>`</span>;</span><br><span class="line">        errorElement.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;error-header&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;error-type&quot;&gt;<span class="subst">$&#123;error.type.toUpperCase()&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;error-time&quot;&gt;<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>(error.timestamp).toLocaleTimeString()&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;error-message&quot;&gt;<span class="subst">$&#123;<span class="variable language_">this</span>.escapeHTML(error.message)&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">            <span class="subst">$&#123;error.line ? <span class="string">`&lt;div class=&quot;error-location&quot;&gt;Line: <span class="subst">$&#123;error.line&#125;</span><span class="subst">$&#123;error.column ? <span class="string">`, Column: <span class="subst">$&#123;error.column&#125;</span>`</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>&lt;/div&gt;`</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">            <span class="subst">$&#123;error.stack ? <span class="string">`&lt;details class=&quot;error-stack&quot;&gt;&lt;summary&gt;Stack Trace&lt;/summary&gt;&lt;pre&gt;<span class="subst">$&#123;<span class="variable language_">this</span>.escapeHTML(error.stack)&#125;</span>&lt;/pre&gt;&lt;/details&gt;`</span> : <span class="string">&#x27;&#x27;</span>&#125;</span></span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line"></span><br><span class="line">        errorPanel.<span class="title function_">appendChild</span>(errorElement);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自动滚动到最新错误</span></span><br><span class="line">        errorElement.<span class="title function_">scrollIntoView</span>(&#123; <span class="attr">behavior</span>: <span class="string">&#x27;smooth&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// HTML转义</span></span><br><span class="line">    <span class="title function_">escapeHTML</span>(<span class="params">text</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        div.<span class="property">textContent</span> = text;</span><br><span class="line">        <span class="keyword">return</span> div.<span class="property">innerHTML</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空错误日志</span></span><br><span class="line">    <span class="title function_">clearErrors</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorLog</span> = [];</span><br><span class="line">        <span class="keyword">const</span> errorPanel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;error-panel&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (errorPanel) &#123;</span><br><span class="line">            errorPanel.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 导出错误日志</span></span><br><span class="line">    <span class="title function_">exportErrorLog</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> logData = &#123;</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>(),</span><br><span class="line">            <span class="attr">userAgent</span>: navigator.<span class="property">userAgent</span>,</span><br><span class="line">            <span class="attr">errors</span>: <span class="variable language_">this</span>.<span class="property">errorLog</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(logData, <span class="literal">null</span>, <span class="number">2</span>)], &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> url = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob);</span><br><span class="line">        <span class="keyword">const</span> a = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        a.<span class="property">href</span> = url;</span><br><span class="line">        a.<span class="property">download</span> = <span class="string">`error-log-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>.json`</span>;</span><br><span class="line">        a.<span class="title function_">click</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable constant_">URL</span>.<span class="title function_">revokeObjectURL</span>(url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误报告（发送到服务器）</span></span><br><span class="line">    <span class="title function_">reportError</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="comment">// 这里可以实现错误上报逻辑</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">shouldReportError</span>(error)) &#123;</span><br><span class="line">            <span class="title function_">fetch</span>(<span class="string">&#x27;/api/error-report&#x27;</span>, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">                    error,</span><br><span class="line">                    <span class="attr">userAgent</span>: navigator.<span class="property">userAgent</span>,</span><br><span class="line">                    <span class="attr">url</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>,</span><br><span class="line">                    <span class="attr">timestamp</span>: error.<span class="property">timestamp</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 静默处理上报失败</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否需要上报错误</span></span><br><span class="line">    <span class="title function_">shouldReportError</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="comment">// 过滤掉一些不需要上报的错误</span></span><br><span class="line">        <span class="keyword">const</span> ignoredMessages = [</span><br><span class="line">            <span class="string">&#x27;Script error.&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Non-Error promise rejection captured&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;ResizeObserver loop limit exceeded&#x27;</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> !ignoredMessages.<span class="title function_">some</span>(<span class="function"><span class="params">msg</span> =&gt;</span></span><br><span class="line">            error.<span class="property">message</span>.<span class="title function_">includes</span>(msg)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="八、完整实现示例"><a href="#八、完整实现示例" class="headerlink" title="八、完整实现示例"></a>八、完整实现示例</h1><h2 id="（一）简化版在线编辑器"><a href="#（一）简化版在线编辑器" class="headerlink" title="（一）简化版在线编辑器"></a>（一）简化版在线编辑器</h2><p><strong>HTML结构：</strong></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>在线代码编辑器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;Monaco&#x27;</span>, <span class="string">&#x27;Menlo&#x27;</span>, <span class="string">&#x27;Ubuntu Mono&#x27;</span>, monospace;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.toolbar</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#2d3748</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.main-container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.editors-section</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.editor-tabs</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#f7fafc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tab</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#edf2f7</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.tab</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#3182ce</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.editor-container</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.editor</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: inherit;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">resize</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.preview-section</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.preview-header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#f7fafc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.preview-frame</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.console-panel</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#1a202c</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#e2e8f0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow-y</span>: auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#4a5568</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.console-entry</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.console-log</span> &#123; <span class="attribute">color</span>: <span class="number">#68d391</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.console-warn</span> &#123; <span class="attribute">color</span>: <span class="number">#f6e05e</span>; &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.console-error</span> &#123; <span class="attribute">color</span>: <span class="number">#fc8181</span>; &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#3182ce</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#2c5282</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-secondary</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#718096</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.btn-secondary</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: <span class="number">#4a5568</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>在线代码编辑器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;runCode()&quot;</span>&gt;</span>运行代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clearConsole()&quot;</span>&gt;</span>清空控制台<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;resetCode()&quot;</span>&gt;</span>重置代码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editors-section&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor-tabs&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab active&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switchTab(&#x27;html&#x27;)&quot;</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switchTab(&#x27;css&#x27;)&quot;</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switchTab(&#x27;js&#x27;)&quot;</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;editor-container&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span> <span class="attr">id</span>=<span class="string">&quot;html-editor&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;在这里输入HTML代码...&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个简单的示例页面。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;showMessage()&quot;</span>&gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span> <span class="attr">id</span>=<span class="string">&quot;css-editor&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;在这里输入CSS代码...&quot;</span>&gt;</span></span><br><span class="line">.container &#123;</span><br><span class="line">    max-width: 600px;</span><br><span class="line">    margin: 50px auto;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    font-family: Arial, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">    color: #3182ce;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">    color: #4a5568;</span><br><span class="line">    margin-bottom: 30px;</span><br><span class="line">    line-height: 1.6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button &#123;</span><br><span class="line">    background: #3182ce;</span><br><span class="line">    color: white;</span><br><span class="line">    border: none;</span><br><span class="line">    padding: 12px 24px;</span><br><span class="line">    border-radius: 6px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    transition: background 0.3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">button:hover &#123;</span><br><span class="line">    background: #2c5282;</span><br><span class="line">&#125;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;editor&quot;</span> <span class="attr">id</span>=<span class="string">&quot;js-editor&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;在这里输入JavaScript代码...&quot;</span>&gt;</span></span><br><span class="line">function showMessage() &#123;</span><br><span class="line">    console.log(&#x27;按钮被点击了！&#x27;);</span><br><span class="line">    alert(&#x27;Hello from JavaScript!&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 页面加载完成后执行</span><br><span class="line">document.addEventListener(&#x27;DOMContentLoaded&#x27;, function() &#123;</span><br><span class="line">    console.log(&#x27;页面加载完成&#x27;);</span><br><span class="line">    console.log(&#x27;当前时间:&#x27;, new Date().toLocaleString());</span><br><span class="line">&#125;);<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;preview-section&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;preview-header&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>预览结果<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;refreshPreview()&quot;</span>&gt;</span>刷新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">&quot;preview-frame&quot;</span> <span class="attr">id</span>=<span class="string">&quot;preview-frame&quot;</span> <span class="attr">src</span>=<span class="string">&quot;about:blank&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;console-panel&quot;</span> <span class="attr">id</span>=<span class="string">&quot;console-panel&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;console-entry&quot;</span>&gt;</span>控制台输出将显示在这里...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 编辑器管理类</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">class</span> <span class="title class_">SimpleCodeEditor</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">currentTab</span> = <span class="string">&#x27;html&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">editors</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">html</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;html-editor&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">css</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;css-editor&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">js</span>: <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;js-editor&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">previewFrame</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;preview-frame&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">consolePanel</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;console-panel&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="title function_">setupEventListeners</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="title function_">runCode</span>(); <span class="comment">// 初始运行</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">setupEventListeners</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 监听编辑器内容变化</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>.<span class="property">editors</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">editor</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    editor.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">this</span>.<span class="title function_">debounceRun</span>();</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 防抖运行</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">debounceRun</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">runTimer</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">runTimer</span> = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="title function_">runCode</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;, <span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 切换标签页</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">switchTab</span>(<span class="params">tabName</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 隐藏所有编辑器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Object</span>.<span class="title function_">values</span>(<span class="variable language_">this</span>.<span class="property">editors</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">editor</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    editor.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 显示当前编辑器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">editors</span>[tabName].<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">currentTab</span> = tabName;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 更新标签样式</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.tab&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">tab</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    tab.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                event.<span class="property">target</span>.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 聚焦到当前编辑器</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">editors</span>[tabName].<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 运行代码</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">runCode</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> html = <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">html</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> css = <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">css</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> js = <span class="variable language_">this</span>.<span class="property">editors</span>.<span class="property">js</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> fullHTML = <span class="variable language_">this</span>.<span class="title function_">buildHTML</span>(html, css, js);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> iframeDoc = <span class="variable language_">this</span>.<span class="property">previewFrame</span>.<span class="property">contentDocument</span>;</span></span><br><span class="line"><span class="language-javascript">                iframeDoc.<span class="title function_">open</span>();</span></span><br><span class="line"><span class="language-javascript">                iframeDoc.<span class="title function_">write</span>(fullHTML);</span></span><br><span class="line"><span class="language-javascript">                iframeDoc.<span class="title function_">close</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 构建完整HTML</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">buildHTML</span>(<span class="params">html, css, js</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;html&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;head&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;style&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            body &#123; margin: 0; padding: 20px; font-family: Arial, sans-serif; &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            <span class="subst">$&#123;css&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/style&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;/head&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;body&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        <span class="subst">$&#123;html&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;script&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            // 控制台劫持</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            (function() &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                const originalConsole = window.console;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                [&#x27;log&#x27;, &#x27;warn&#x27;, &#x27;error&#x27;, &#x27;info&#x27;].forEach(method =&gt; &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    window.console[method] = function(...args) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                        originalConsole[method].apply(originalConsole, args);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                        parent.postMessage(&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                            type: &#x27;console&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                            method: method,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                            args: args.map(arg =&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                                typeof arg === &#x27;object&#x27; ?</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                                JSON.stringify(arg, null, 2) :</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                                String(arg)</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                            )</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                        &#125;, &#x27;*&#x27;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    &#125;;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                &#125;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &#125;)();</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            // 错误处理</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            window.onerror = function(msg, url, line, col, error) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                parent.postMessage(&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    type: &#x27;error&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    message: msg,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    line: line,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    column: col</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                &#125;, &#x27;*&#x27;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                return false;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &#125;;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript"></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            // 用户代码</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            try &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;js&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &#125; catch (error) &#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                parent.postMessage(&#123;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    type: &#x27;error&#x27;,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    message: error.message,</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                    stack: error.stack</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                &#125;, &#x27;*&#x27;);</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &#125;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line">                `;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 清空控制台</span><br><span class="line">            clearConsole() &#123;</span><br><span class="line">                this.consolePanel.innerHTML = &#x27;<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;console-entry&quot;</span>&gt;</span>控制台已清空<span class="tag">&lt;/<span class="name">div</span>&gt;</span>&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 重置代码</span><br><span class="line">            resetCode() &#123;</span><br><span class="line">                if (confirm(&#x27;确定要重置所有代码吗？&#x27;)) &#123;</span><br><span class="line">                    location.reload();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 刷新预览</span><br><span class="line">            refreshPreview() &#123;</span><br><span class="line">                this.runCode();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 处理控制台消息</span><br><span class="line">            handleConsoleMessage(data) &#123;</span><br><span class="line">                const entry = document.createElement(&#x27;div&#x27;);</span><br><span class="line">                entry.className = `console-entry console-$&#123;data.method&#125;`;</span><br><span class="line">                entry.textContent = `[$&#123;data.method.toUpperCase()&#125;] $&#123;data.args.join(&#x27; &#x27;)&#125;`;</span><br><span class="line">                this.consolePanel.appendChild(entry);</span><br><span class="line">                this.consolePanel.scrollTop = this.consolePanel.scrollHeight;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            // 处理错误消息</span><br><span class="line">            handleError(data) &#123;</span><br><span class="line">                const entry = document.createElement(&#x27;div&#x27;);</span><br><span class="line">                entry.className = &#x27;console-entry console-error&#x27;;</span><br><span class="line">                entry.innerHTML = `</span><br><span class="line">                    <span class="tag">&lt;<span class="name">strong</span>&gt;</span>[ERROR]<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> $&#123;data.message&#125;</span><br><span class="line">                    $&#123;data.line ? `<span class="tag">&lt;<span class="name">br</span>&gt;</span>Line: $&#123;data.line&#125;` : &#x27;&#x27;&#125;</span><br><span class="line">                `;</span><br><span class="line">                this.consolePanel.appendChild(entry);</span><br><span class="line">                this.consolePanel.scrollTop = this.consolePanel.scrollHeight;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 初始化编辑器</span><br><span class="line">        const editor = new SimpleCodeEditor();</span><br><span class="line"></span><br><span class="line">        // 监听iframe消息</span><br><span class="line">        window.addEventListener(&#x27;message&#x27;, (event) =&gt; &#123;</span><br><span class="line">            if (event.data.type === &#x27;console&#x27;) &#123;</span><br><span class="line">                editor.handleConsoleMessage(event.data);</span><br><span class="line">            &#125; else if (event.data.type === &#x27;error&#x27;) &#123;</span><br><span class="line">                editor.handleError(event.data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        // 全局函数</span><br><span class="line">        function switchTab(tabName) &#123;</span><br><span class="line">            editor.switchTab(tabName);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function runCode() &#123;</span><br><span class="line">            editor.runCode();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function clearConsole() &#123;</span><br><span class="line">            editor.clearConsole();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function resetCode() &#123;</span><br><span class="line">            editor.resetCode();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        function refreshPreview() &#123;</span><br><span class="line">            editor.refreshPreview();</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）使用说明与扩展"><a href="#（二）使用说明与扩展" class="headerlink" title="（二）使用说明与扩展"></a>（二）使用说明与扩展</h2><p><strong>基本使用方法：</strong></p>
<ol>
<li><strong>编辑代码</strong>：在HTML、CSS、JavaScript标签页中分别编辑对应代码</li>
<li><strong>实时预览</strong>：代码修改后会自动更新预览效果（500ms防抖）</li>
<li><strong>控制台输出</strong>：JavaScript的console.log等输出会显示在底部控制台</li>
<li><strong>错误提示</strong>：代码错误会在控制台中显示详细信息</li>
</ol>
<p><strong>扩展功能建议：</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码格式化功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatCode</span>(<span class="params">code, language</span>) &#123;</span><br><span class="line">    <span class="comment">// 可以集成Prettier等格式化工具</span></span><br><span class="line">    <span class="keyword">if</span> (language === <span class="string">&#x27;javascript&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> prettier.<span class="title function_">format</span>(code, &#123;</span><br><span class="line">            <span class="attr">parser</span>: <span class="string">&#x27;babel&#x27;</span>,</span><br><span class="line">            <span class="attr">plugins</span>: prettierPlugins</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代码保存功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">saveCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> codeData = &#123;</span><br><span class="line">        <span class="attr">html</span>: editor.<span class="property">editors</span>.<span class="property">html</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">css</span>: editor.<span class="property">editors</span>.<span class="property">css</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">js</span>: editor.<span class="property">editors</span>.<span class="property">js</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>()</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;saved-code&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(codeData));</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;代码已保存到本地存储&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代码加载功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> savedCode = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;saved-code&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (savedCode) &#123;</span><br><span class="line">        <span class="keyword">const</span> codeData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(savedCode);</span><br><span class="line">        editor.<span class="property">editors</span>.<span class="property">html</span>.<span class="property">value</span> = codeData.<span class="property">html</span>;</span><br><span class="line">        editor.<span class="property">editors</span>.<span class="property">css</span>.<span class="property">value</span> = codeData.<span class="property">css</span>;</span><br><span class="line">        editor.<span class="property">editors</span>.<span class="property">js</span>.<span class="property">value</span> = codeData.<span class="property">js</span>;</span><br><span class="line">        editor.<span class="title function_">runCode</span>();</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;代码已从本地存储加载&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代码分享功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">shareCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> codeData = &#123;</span><br><span class="line">        <span class="attr">html</span>: editor.<span class="property">editors</span>.<span class="property">html</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">css</span>: editor.<span class="property">editors</span>.<span class="property">css</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="attr">js</span>: editor.<span class="property">editors</span>.<span class="property">js</span>.<span class="property">value</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成分享链接（需要后端支持）</span></span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&#x27;/api/share&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(codeData)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> shareUrl = <span class="string">`<span class="subst">$&#123;<span class="variable language_">window</span>.location.origin&#125;</span>/share/<span class="subst">$&#123;data.id&#125;</span>`</span>;</span><br><span class="line">        navigator.<span class="property">clipboard</span>.<span class="title function_">writeText</span>(shareUrl);</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;分享链接已复制到剪贴板&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="九、总结与展望"><a href="#九、总结与展望" class="headerlink" title="九、总结与展望"></a>九、总结与展望</h1><h2 id="（一）技术要点总结"><a href="#（一）技术要点总结" class="headerlink" title="（一）技术要点总结"></a>（一）技术要点总结</h2><p>通过本文的深入分析，我们了解了浏览器中预览前端代码效果的核心实现原理：</p>
<p><strong>核心技术栈：</strong></p>
<ul>
<li><strong>iframe沙箱</strong>：提供安全的代码执行环境</li>
<li><strong>DOM操作</strong>：动态构建和更新HTML文档</li>
<li><strong>消息通信</strong>：实现主页面与iframe的数据交换</li>
<li><strong>事件处理</strong>：监听代码变化并触发更新</li>
</ul>
<p><strong>关键实现步骤：</strong></p>
<ol>
<li>创建iframe沙箱环境</li>
<li>监听代码编辑器的输入事件</li>
<li>将HTML、CSS、JavaScript代码组合成完整文档</li>
<li>通过document.write()注入到iframe中</li>
<li>劫持console和错误处理，实现调试功能</li>
</ol>
<p><strong>性能优化策略：</strong></p>
<ul>
<li>防抖机制减少频繁更新</li>
<li>虚拟滚动处理大量代码</li>
<li>内存管理避免泄漏</li>
<li>增量更新提升效率</li>
</ul>
<h2 id="（二）应用场景与价值"><a href="#（二）应用场景与价值" class="headerlink" title="（二）应用场景与价值"></a>（二）应用场景与价值</h2><p><strong>教育培训领域：</strong></p>
<ul>
<li>在线编程教学平台</li>
<li>代码示例演示</li>
<li>交互式编程练习</li>
<li>实时代码评测</li>
</ul>
<p><strong>开发工具领域：</strong></p>
<ul>
<li>原型快速验证</li>
<li>代码片段分享</li>
<li>API文档示例</li>
<li>组件库演示</li>
</ul>
<p><strong>技术文档领域：</strong></p>
<ul>
<li>博客代码示例</li>
<li>技术教程演示</li>
<li>开源项目文档</li>
<li>技术方案验证</li>
</ul>
<h2 id="（三）未来发展趋势"><a href="#（三）未来发展趋势" class="headerlink" title="（三）未来发展趋势"></a>（三）未来发展趋势</h2><p><strong>技术演进方向：</strong></p>
<ul>
<li><strong>WebAssembly集成</strong>：支持更多编程语言的在线运行</li>
<li><strong>AI代码助手</strong>：智能代码补全和错误修复</li>
<li><strong>云端编译</strong>：复杂项目的服务端构建支持</li>
<li><strong>协同编辑</strong>：多人实时协作编程</li>
</ul>
<p><strong>用户体验提升：</strong></p>
<ul>
<li><strong>移动端适配</strong>：响应式设计和触屏优化</li>
<li><strong>离线支持</strong>：Service Worker实现离线编辑</li>
<li><strong>主题定制</strong>：个性化编辑器外观</li>
<li><strong>快捷键支持</strong>：提升编码效率</li>
</ul>
<p><strong>安全性增强：</strong></p>
<ul>
<li><strong>更严格的沙箱</strong>：限制危险操作</li>
<li><strong>代码静态分析</strong>：预防安全漏洞</li>
<li><strong>内容安全策略</strong>：防止XSS攻击</li>
<li><strong>访问权限控制</strong>：细粒度权限管理</li>
</ul>
<p>前端代码预览技术作为现代Web开发的重要组成部分，不仅提升了开发效率，也为编程教育和技术分享提供了强大的工具支持。随着Web技术的不断发展，这一领域必将迎来更多创新和突破。</p>
<hr>
<p><strong>参考资料：</strong></p>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Performance/How_browsers_work">MDN Web Docs - 浏览器渲染原理</a></li>
<li><a href="https://bytebytego.com/guides/how-does-the-browser-render-a-web-page/">How Browser Rendering Works - ByteByteGo</a></li>
<li><a href="https://codepen.io/about">CodePen技术实现原理分析</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe">iframe安全机制详解 - Web安全</a></li>
<li><a href="https://blog.logrocket.com/how-browser-rendering-works-behind-scenes/">JavaScript引擎工作原理</a></li>
<li><a href="https://browser.engineering/">Web Browser Engineering - 浏览器工程学</a></li>
<li><a href="https://segmentfault.com/a/1190000044106754">从零开始实现一个玩具版浏览器渲染引擎</a></li>
<li><a href="https://segmentfault.com/a/1190000040373631">参考Codepen，我做了一个基于iframe的代码预览系统</a></li>
<li><a href="https://gomakethings.com/how-to-create-your-own-codepen-clone-with-vanilla-javascript/">如何创建自己的CodePen克隆版</a></li>
<li><a href="https://medium.com/@annasaaddev/build-a-modern-browser-based-code-editor-like-codepen-or-vscode-online-ecedd8dd828b">构建现代浏览器代码编辑器</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、前端代码预览系统概述"><a href="#一、前端代码预览系统概述" class="headerlink" title="一、前端代码预览系统概述"></a>一、前端代码预览系统概述</h1><h2 id="（一）什么是前端代码预览"><a href="#（]]>
    </summary>
    
      <category term="浏览器渲染" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93/"/>
    
      <category term="代码预览" scheme="https://hexo.blog.uwakeme.tech/tags/%E4%BB%A3%E7%A0%81%E9%A2%84%E8%A7%88/"/>
    
      <category term="在线编辑器" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
      <category term="iframe" scheme="https://hexo.blog.uwakeme.tech/tags/iframe/"/>
    
      <category term="DOM操作" scheme="https://hexo.blog.uwakeme.tech/tags/DOM%E6%93%8D%E4%BD%9C/"/>
    
      <category term="前端架构" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%89%8D%E7%AB%AF%E6%9E%B6%E6%9E%84/"/>
    
      <category term="软件功能解析" scheme="https://hexo.blog.uwakeme.tech/categories/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】如何提高缓存命中率：系统性能优化的核心策略]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/15/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%A6%82%E4%BD%95%E6%8F%90%E9%AB%98%E7%BC%93%E5%AD%98%E5%91%BD%E4%B8%AD%E7%8E%87%EF%BC%9A%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E6%A0%B8%E5%BF%83%E7%AD%96%E7%95%A5/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/15/学习/【学习】如何提高缓存命中率：系统性能优化的核心策略/</id>
    <published>2025-08-14T16:00:00.000Z</published>
    <updated>2025-08-15T02:42:09.455Z</updated>
    <content type="html"><![CDATA[<h1 id="一、缓存命中率概述"><a href="#一、缓存命中率概述" class="headerlink" title="一、缓存命中率概述"></a>一、缓存命中率概述</h1><h2 id="（一）什么是缓存命中率"><a href="#（一）什么是缓存命中率" class="headerlink" title="（一）什么是缓存命中率"></a>（一）什么是缓存命中率</h2><p>缓存命中率（Cache Hit Rate）是衡量缓存系统性能的核心指标，表示从缓存中成功获取数据的请求占总请求数的比例。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存命中率计算公式</span></span><br><span class="line"><span class="keyword">const</span> cacheHitRate = (cacheHits / totalRequests) * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例：缓存命中率监控</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CacheMetrics</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hits</span> = <span class="number">0</span>;      <span class="comment">// 缓存命中次数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">misses</span> = <span class="number">0</span>;    <span class="comment">// 缓存未命中次数</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">total</span> = <span class="number">0</span>;     <span class="comment">// 总请求次数</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记录缓存命中</span></span><br><span class="line">    <span class="title function_">recordHit</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hits</span>++;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">total</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记录缓存未命中</span></span><br><span class="line">    <span class="title function_">recordMiss</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">misses</span>++;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">total</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算命中率</span></span><br><span class="line">    <span class="title function_">getHitRate</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">total</span> &gt; <span class="number">0</span> ? (<span class="variable language_">this</span>.<span class="property">hits</span> / <span class="variable language_">this</span>.<span class="property">total</span> * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取统计信息</span></span><br><span class="line">    <span class="title function_">getStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">hitRate</span>: <span class="variable language_">this</span>.<span class="title function_">getHitRate</span>() + <span class="string">&#x27;%&#x27;</span>,</span><br><span class="line">            <span class="attr">hits</span>: <span class="variable language_">this</span>.<span class="property">hits</span>,</span><br><span class="line">            <span class="attr">misses</span>: <span class="variable language_">this</span>.<span class="property">misses</span>,</span><br><span class="line">            <span class="attr">total</span>: <span class="variable language_">this</span>.<span class="property">total</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存命中率的重要性"><a href="#（二）缓存命中率的重要性" class="headerlink" title="（二）缓存命中率的重要性"></a>（二）缓存命中率的重要性</h2><p><strong>性能影响：</strong></p>
<ul>
<li>高命中率：减少数据库访问，提升响应速度</li>
<li>低命中率：频繁访问后端存储，增加系统负载</li>
<li>成本效益：减少硬件资源消耗，降低运营成本</li>
</ul>
<p><strong>业务价值：</strong></p>
<ul>
<li>用户体验：页面加载速度提升，用户满意度增加</li>
<li>系统稳定性：减少数据库压力，提高系统可用性</li>
<li>扩展性：支持更高并发访问量</li>
</ul>
<h1 id="二、缓存策略优化"><a href="#二、缓存策略优化" class="headerlink" title="二、缓存策略优化"></a>二、缓存策略优化</h1><h2 id="（一）缓存淘汰算法选择"><a href="#（一）缓存淘汰算法选择" class="headerlink" title="（一）缓存淘汰算法选择"></a>（一）缓存淘汰算法选择</h2><h3 id="1-LRU（最近最少使用）算法"><a href="#1-LRU（最近最少使用）算法" class="headerlink" title="1. LRU（最近最少使用）算法"></a>1. LRU（最近最少使用）算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LRU缓存实现：优先淘汰最久未使用的数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache</span>&lt;K, V&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LinkedHashMap&lt;K, V&gt; cache;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LRUCache</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.capacity = capacity;</span><br><span class="line">        <span class="comment">// LinkedHashMap的accessOrder=true表示按访问顺序排序</span></span><br><span class="line">        <span class="built_in">this</span>.cache = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;K, V&gt;(capacity, <span class="number">0.75f</span>, <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">removeEldestEntry</span><span class="params">(Map.Entry&lt;K, V&gt; eldest)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> size() &gt; capacity;  <span class="comment">// 超过容量时自动删除最老的元素</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取数据，同时更新访问顺序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> V <span class="title function_">get</span><span class="params">(K key)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cache.get(key);  <span class="comment">// LinkedHashMap会自动调整顺序</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 存储数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        cache.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取缓存大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cache.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-LFU（最少使用频率）算法"><a href="#2-LFU（最少使用频率）算法" class="headerlink" title="2. LFU（最少使用频率）算法"></a>2. LFU（最少使用频率）算法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LFU缓存实现：优先淘汰使用频率最低的数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LFUCache</span>&lt;K, V&gt; &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;K, V&gt; values;           <span class="comment">// 存储键值对</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;K, Integer&gt; frequencies; <span class="comment">// 存储访问频率</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;Integer, LinkedHashSet&lt;K&gt;&gt; frequencyGroups; <span class="comment">// 按频率分组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> minFrequency;                 <span class="comment">// 最小频率</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LFUCache</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.capacity = capacity;</span><br><span class="line">        <span class="built_in">this</span>.values = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.frequencies = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.frequencyGroups = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.minFrequency = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> V <span class="title function_">get</span><span class="params">(K key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!values.containsKey(key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 更新访问频率</span></span><br><span class="line">        updateFrequency(key);</span><br><span class="line">        <span class="keyword">return</span> values.get(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(K key, V value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (capacity &lt;= <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (values.containsKey(key)) &#123;</span><br><span class="line">            values.put(key, value);</span><br><span class="line">            updateFrequency(key);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 容量已满，需要淘汰</span></span><br><span class="line">        <span class="keyword">if</span> (values.size() &gt;= capacity) &#123;</span><br><span class="line">            evictLFU();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加新元素</span></span><br><span class="line">        values.put(key, value);</span><br><span class="line">        frequencies.put(key, <span class="number">1</span>);</span><br><span class="line">        frequencyGroups.computeIfAbsent(<span class="number">1</span>, k -&gt; <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;()).add(key);</span><br><span class="line">        minFrequency = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新访问频率</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">updateFrequency</span><span class="params">(K key)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">oldFreq</span> <span class="operator">=</span> frequencies.get(key);</span><br><span class="line">        <span class="type">int</span> <span class="variable">newFreq</span> <span class="operator">=</span> oldFreq + <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        frequencies.put(key, newFreq);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 从旧频率组中移除</span></span><br><span class="line">        frequencyGroups.get(oldFreq).remove(key);</span><br><span class="line">        <span class="keyword">if</span> (frequencyGroups.get(oldFreq).isEmpty() &amp;&amp; oldFreq == minFrequency) &#123;</span><br><span class="line">            minFrequency++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加到新频率组</span></span><br><span class="line">        frequencyGroups.computeIfAbsent(newFreq, k -&gt; <span class="keyword">new</span> <span class="title class_">LinkedHashSet</span>&lt;&gt;()).add(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 淘汰最少使用频率的元素</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">evictLFU</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">K</span> <span class="variable">keyToEvict</span> <span class="operator">=</span> frequencyGroups.get(minFrequency).iterator().next();</span><br><span class="line">        frequencyGroups.get(minFrequency).remove(keyToEvict);</span><br><span class="line">        values.remove(keyToEvict);</span><br><span class="line">        frequencies.remove(keyToEvict);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存预热策略"><a href="#（二）缓存预热策略" class="headerlink" title="（二）缓存预热策略"></a>（二）缓存预热策略</h2><h3 id="1-系统启动预热"><a href="#1-系统启动预热" class="headerlink" title="1. 系统启动预热"></a>1. 系统启动预热</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 系统启动时预热热点数据</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheWarmupService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 应用启动后执行预热</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">warmupCache</span><span class="params">()</span> &#123;</span><br><span class="line">        CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                warmupHotUsers();      <span class="comment">// 预热热门用户数据</span></span><br><span class="line">                warmupHotProducts();   <span class="comment">// 预热热门商品数据</span></span><br><span class="line">                warmupSystemConfig();  <span class="comment">// 预热系统配置数据</span></span><br><span class="line">                </span><br><span class="line">                log.info(<span class="string">&quot;缓存预热完成&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;缓存预热失败&quot;</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预热热门用户数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">warmupHotUsers</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Long&gt; hotUserIds = userService.getHotUserIds(<span class="number">1000</span>); <span class="comment">// 获取1000个热门用户ID</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (Long userId : hotUserIds) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getUserFromDB(userId);</span><br><span class="line">                <span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;user:&quot;</span> + userId;</span><br><span class="line">                    redisTemplate.opsForValue().set(cacheKey, user, Duration.ofHours(<span class="number">2</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;预热用户数据失败: userId=&#123;&#125;&quot;</span>, userId, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;用户数据预热完成，预热数量: &#123;&#125;&quot;</span>, hotUserIds.size());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预热热门商品数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">warmupHotProducts</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Long&gt; hotProductIds = productService.getHotProductIds(<span class="number">500</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用批量操作提高效率</span></span><br><span class="line">        Map&lt;String, Object&gt; batchData = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Long productId : hotProductIds) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productService.getProductFromDB(productId);</span><br><span class="line">                <span class="keyword">if</span> (product != <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;product:&quot;</span> + productId;</span><br><span class="line">                    batchData.put(cacheKey, product);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.warn(<span class="string">&quot;预热商品数据失败: productId=&#123;&#125;&quot;</span>, productId, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 批量写入Redis</span></span><br><span class="line">        <span class="keyword">if</span> (!batchData.isEmpty()) &#123;</span><br><span class="line">            redisTemplate.opsForValue().multiSet(batchData);</span><br><span class="line">            <span class="comment">// 设置过期时间</span></span><br><span class="line">            batchData.keySet().forEach(key -&gt; </span><br><span class="line">                redisTemplate.expire(key, Duration.ofHours(<span class="number">1</span>))</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;商品数据预热完成，预热数量: &#123;&#125;&quot;</span>, batchData.size());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预热系统配置数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">warmupSystemConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 系统配置通常变化较少，可以设置较长的过期时间</span></span><br><span class="line">        Map&lt;String, Object&gt; configs = systemConfigService.getAllConfigs();</span><br><span class="line">        </span><br><span class="line">        configs.forEach((key, value) -&gt; &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;config:&quot;</span> + key;</span><br><span class="line">            redisTemplate.opsForValue().set(cacheKey, value, Duration.ofDays(<span class="number">1</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;系统配置预热完成，配置数量: &#123;&#125;&quot;</span>, configs.size());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-定时预热任务"><a href="#2-定时预热任务" class="headerlink" title="2. 定时预热任务"></a>2. 定时预热任务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定时预热热点数据</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScheduledCacheWarmup</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CacheWarmupService cacheWarmupService;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 每小时执行一次热点数据预热</span></span><br><span class="line">    <span class="meta">@Scheduled(fixedRate = 3600000)</span> <span class="comment">// 1小时 = 3600000毫秒</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hourlyWarmup</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始执行定时缓存预热&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 预热最近1小时的热点数据</span></span><br><span class="line">            cacheWarmupService.warmupRecentHotData(Duration.ofHours(<span class="number">1</span>));</span><br><span class="line">            </span><br><span class="line">            log.info(<span class="string">&quot;定时缓存预热完成&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;定时缓存预热失败&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 每天凌晨执行全量预热</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 0 2 * * ?&quot;)</span> <span class="comment">// 每天凌晨2点执行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">dailyFullWarmup</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始执行每日全量缓存预热&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 清理过期缓存</span></span><br><span class="line">            cacheWarmupService.cleanExpiredCache();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 全量预热</span></span><br><span class="line">            cacheWarmupService.fullWarmup();</span><br><span class="line">            </span><br><span class="line">            log.info(<span class="string">&quot;每日全量缓存预热完成&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;每日全量缓存预热失败&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、多层缓存架构"><a href="#三、多层缓存架构" class="headerlink" title="三、多层缓存架构"></a>三、多层缓存架构</h1><h2 id="（一）分层缓存设计"><a href="#（一）分层缓存设计" class="headerlink" title="（一）分层缓存设计"></a>（一）分层缓存设计</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多层缓存架构实现：L1本地缓存 + L2分布式缓存 + L3数据库</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MultiLevelCache</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// L1缓存：本地内存缓存（最快，容量最小）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l1Cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l1MaxSize</span> = <span class="number">1000</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l1TTL</span> = <span class="number">60000</span>; <span class="comment">// 1分钟</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// L2缓存：Redis分布式缓存（较快，容量中等）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l2Cache</span> = <span class="keyword">new</span> <span class="title class_">RedisClient</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l2TTL</span> = <span class="number">3600</span>; <span class="comment">// 1小时</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// L3缓存：数据库（最慢，容量最大）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">database</span> = <span class="keyword">new</span> <span class="title class_">DatabaseClient</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 缓存统计</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">stats</span> = &#123;</span><br><span class="line">            <span class="attr">l1Hits</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">l2Hits</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">l3Hits</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">misses</span>: <span class="number">0</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 智能缓存获取：按层级依次查找</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">get</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="comment">// L1缓存检查</span></span><br><span class="line">        <span class="keyword">const</span> l1Result = <span class="variable language_">this</span>.<span class="title function_">getFromL1</span>(key);</span><br><span class="line">        <span class="keyword">if</span> (l1Result !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l1Hits</span>++;</span><br><span class="line">            <span class="keyword">return</span> l1Result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// L2缓存检查</span></span><br><span class="line">        <span class="keyword">const</span> l2Result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getFromL2</span>(key);</span><br><span class="line">        <span class="keyword">if</span> (l2Result !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l2Hits</span>++;</span><br><span class="line">            <span class="comment">// 热点数据提升到L1缓存</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setToL1</span>(key, l2Result);</span><br><span class="line">            <span class="keyword">return</span> l2Result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// L3数据库查询</span></span><br><span class="line">        <span class="keyword">const</span> l3Result = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">getFromL3</span>(key);</span><br><span class="line">        <span class="keyword">if</span> (l3Result !== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l3Hits</span>++;</span><br><span class="line">            <span class="comment">// 数据同时缓存到L1和L2</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setToL1</span>(key, l3Result);</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">setToL2</span>(key, l3Result);</span><br><span class="line">            <span class="keyword">return</span> l3Result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">misses</span>++;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// L1本地缓存操作</span></span><br><span class="line">    <span class="title function_">getFromL1</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> item = <span class="variable language_">this</span>.<span class="property">l1Cache</span>.<span class="title function_">get</span>(key);</span><br><span class="line">        <span class="keyword">if</span> (item &amp;&amp; item.<span class="property">expireAt</span> &gt; <span class="title class_">Date</span>.<span class="title function_">now</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> item.<span class="property">value</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">l1Cache</span>.<span class="title function_">delete</span>(key); <span class="comment">// 清理过期数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">setToL1</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">        <span class="comment">// 检查容量限制</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">l1Cache</span>.<span class="property">size</span> &gt;= <span class="variable language_">this</span>.<span class="property">l1MaxSize</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">evictL1Cache</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">l1Cache</span>.<span class="title function_">set</span>(key, &#123;</span><br><span class="line">            <span class="attr">value</span>: value,</span><br><span class="line">            <span class="attr">expireAt</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() + <span class="variable language_">this</span>.<span class="property">l1TTL</span>,</span><br><span class="line">            <span class="attr">accessTime</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// L1缓存淘汰：LRU策略</span></span><br><span class="line">    <span class="title function_">evictL1Cache</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> oldestKey = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">let</span> oldestTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> [key, item] <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">l1Cache</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.<span class="property">accessTime</span> &lt; oldestTime) &#123;</span><br><span class="line">                oldestTime = item.<span class="property">accessTime</span>;</span><br><span class="line">                oldestKey = key;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (oldestKey) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">l1Cache</span>.<span class="title function_">delete</span>(oldestKey);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// L2分布式缓存操作</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getFromL2</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> value = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">l2Cache</span>.<span class="title function_">get</span>(key);</span><br><span class="line">            <span class="keyword">return</span> value ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value) : <span class="literal">null</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;L2缓存获取失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">setToL2</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">l2Cache</span>.<span class="title function_">setex</span>(key, <span class="variable language_">this</span>.<span class="property">l2TTL</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(value));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;L2缓存设置失败:&#x27;</span>, error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// L3数据库操作</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getFromL3</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">database</span>.<span class="title function_">query</span>(key);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;数据库查询失败:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取缓存统计信息</span></span><br><span class="line">    <span class="title function_">getStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> total = <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l1Hits</span> + <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l2Hits</span> + <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l3Hits</span> + <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">misses</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">l1HitRate</span>: total &gt; <span class="number">0</span> ? (<span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l1Hits</span> / total * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;%&#x27;</span> : <span class="string">&#x27;0%&#x27;</span>,</span><br><span class="line">            <span class="attr">l2HitRate</span>: total &gt; <span class="number">0</span> ? (<span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l2Hits</span> / total * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;%&#x27;</span> : <span class="string">&#x27;0%&#x27;</span>,</span><br><span class="line">            <span class="attr">l3HitRate</span>: total &gt; <span class="number">0</span> ? (<span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">l3Hits</span> / total * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;%&#x27;</span> : <span class="string">&#x27;0%&#x27;</span>,</span><br><span class="line">            <span class="attr">totalHitRate</span>: total &gt; <span class="number">0</span> ? ((total - <span class="variable language_">this</span>.<span class="property">stats</span>.<span class="property">misses</span>) / total * <span class="number">100</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;%&#x27;</span> : <span class="string">&#x27;0%&#x27;</span>,</span><br><span class="line">            ...<span class="variable language_">this</span>.<span class="property">stats</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存一致性保证"><a href="#（二）缓存一致性保证" class="headerlink" title="（二）缓存一致性保证"></a>（二）缓存一致性保证</h2><h3 id="1-写入时更新策略"><a href="#1-写入时更新策略" class="headerlink" title="1. 写入时更新策略"></a>1. 写入时更新策略</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写入时同步更新多层缓存</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConsistentCacheService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserRepository userRepository;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Object&gt; localCache = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新用户信息：保证多层缓存一致性</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUser</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 更新数据库</span></span><br><span class="line">        userRepository.save(user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 更新L2缓存（Redis）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> <span class="string">&quot;user:&quot;</span> + user.getId();</span><br><span class="line">        redisTemplate.opsForValue().set(redisKey, user, Duration.ofHours(<span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 更新L1缓存（本地）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">localKey</span> <span class="operator">=</span> <span class="string">&quot;user:&quot;</span> + user.getId();</span><br><span class="line">        localCache.put(localKey, user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 发布缓存更新事件，通知其他节点</span></span><br><span class="line">        publishCacheUpdateEvent(user.getId(), user);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;用户信息更新完成，已同步所有缓存层: userId=&#123;&#125;&quot;</span>, user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除用户：清理所有缓存层</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteUser</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 删除数据库记录</span></span><br><span class="line">        userRepository.deleteById(userId);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 删除L2缓存</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> <span class="string">&quot;user:&quot;</span> + userId;</span><br><span class="line">        redisTemplate.delete(redisKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 删除L1缓存</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">localKey</span> <span class="operator">=</span> <span class="string">&quot;user:&quot;</span> + userId;</span><br><span class="line">        localCache.remove(localKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 发布缓存删除事件</span></span><br><span class="line">        publishCacheDeleteEvent(userId);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;用户删除完成，已清理所有缓存: userId=&#123;&#125;&quot;</span>, userId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发布缓存更新事件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">publishCacheUpdateEvent</span><span class="params">(Long userId, User user)</span> &#123;</span><br><span class="line">        <span class="type">CacheUpdateEvent</span> <span class="variable">event</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CacheUpdateEvent</span>(userId, user, <span class="string">&quot;UPDATE&quot;</span>);</span><br><span class="line">        applicationEventPublisher.publishEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发布缓存删除事件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">publishCacheDeleteEvent</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="type">CacheUpdateEvent</span> <span class="variable">event</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CacheUpdateEvent</span>(userId, <span class="literal">null</span>, <span class="string">&quot;DELETE&quot;</span>);</span><br><span class="line">        applicationEventPublisher.publishEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-缓存失效策略"><a href="#2-缓存失效策略" class="headerlink" title="2. 缓存失效策略"></a>2. 缓存失效策略</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基于TTL和版本号的缓存失效机制</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheInvalidationService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置带版本号的缓存</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setVersionedCache</span><span class="params">(String key, Object value, Duration ttl)</span> &#123;</span><br><span class="line">        <span class="type">VersionedCacheItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VersionedCacheItem</span>(</span><br><span class="line">            value,</span><br><span class="line">            System.currentTimeMillis(),</span><br><span class="line">            generateVersion()</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        redisTemplate.opsForValue().set(key, item, ttl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取版本化缓存</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getVersionedCache</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="type">VersionedCacheItem</span> <span class="variable">item</span> <span class="operator">=</span> (VersionedCacheItem) redisTemplate.opsForValue().get(key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (item == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查版本是否有效</span></span><br><span class="line">        <span class="keyword">if</span> (isVersionValid(key, item.getVersion())) &#123;</span><br><span class="line">            <span class="keyword">return</span> item.getValue();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 版本失效，删除缓存</span></span><br><span class="line">            redisTemplate.delete(key);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主动失效相关缓存</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invalidateRelatedCaches</span><span class="params">(String pattern)</span> &#123;</span><br><span class="line">        Set&lt;String&gt; keys = redisTemplate.keys(pattern);</span><br><span class="line">        <span class="keyword">if</span> (keys != <span class="literal">null</span> &amp;&amp; !keys.isEmpty()) &#123;</span><br><span class="line">            redisTemplate.delete(keys);</span><br><span class="line">            log.info(<span class="string">&quot;批量失效缓存完成，模式: &#123;&#125;, 数量: &#123;&#125;&quot;</span>, pattern, keys.size());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成版本号</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">generateVersion</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(System.currentTimeMillis());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查版本有效性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">isVersionValid</span><span class="params">(String key, String version)</span> &#123;</span><br><span class="line">        <span class="comment">// 可以根据业务逻辑实现版本检查</span></span><br><span class="line">        <span class="comment">// 例如：检查数据最后更新时间</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 版本化缓存项</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VersionedCacheItem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Object value;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> timestamp;</span><br><span class="line">    <span class="keyword">private</span> String version;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、缓存键设计优化"><a href="#四、缓存键设计优化" class="headerlink" title="四、缓存键设计优化"></a>四、缓存键设计优化</h1><h2 id="（一）缓存键命名规范"><a href="#（一）缓存键命名规范" class="headerlink" title="（一）缓存键命名规范"></a>（一）缓存键命名规范</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存键设计最佳实践</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheKeyDesign</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存键前缀常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">USER_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;user&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PRODUCT_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;product&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ORDER_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;order&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SESSION_PREFIX</span> <span class="operator">=</span> <span class="string">&quot;session&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分隔符</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SEPARATOR</span> <span class="operator">=</span> <span class="string">&quot;:&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建用户缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildUserKey</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> USER_PREFIX + SEPARATOR + userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建用户详情缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildUserDetailKey</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> USER_PREFIX + SEPARATOR + <span class="string">&quot;detail&quot;</span> + SEPARATOR + userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建用户权限缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildUserPermissionKey</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> USER_PREFIX + SEPARATOR + <span class="string">&quot;permission&quot;</span> + SEPARATOR + userId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建商品列表缓存键（支持分页）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildProductListKey</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> size, String category)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> PRODUCT_PREFIX + SEPARATOR + <span class="string">&quot;list&quot;</span> + SEPARATOR +</span><br><span class="line">               <span class="string">&quot;page&quot;</span> + SEPARATOR + page + SEPARATOR +</span><br><span class="line">               <span class="string">&quot;size&quot;</span> + SEPARATOR + size + SEPARATOR +</span><br><span class="line">               <span class="string">&quot;category&quot;</span> + SEPARATOR + category;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建搜索结果缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildSearchKey</span><span class="params">(String keyword, <span class="type">int</span> page, <span class="type">int</span> size)</span> &#123;</span><br><span class="line">        <span class="comment">// 对关键词进行MD5编码，避免特殊字符问题</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">encodedKeyword</span> <span class="operator">=</span> DigestUtils.md5Hex(keyword);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;search&quot;</span> + SEPARATOR + encodedKeyword + SEPARATOR +</span><br><span class="line">               <span class="string">&quot;page&quot;</span> + SEPARATOR + page + SEPARATOR +</span><br><span class="line">               <span class="string">&quot;size&quot;</span> + SEPARATOR + size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建会话缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildSessionKey</span><span class="params">(String sessionId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SESSION_PREFIX + SEPARATOR + sessionId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建计数器缓存键</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">buildCounterKey</span><span class="params">(String type, String identifier)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;counter&quot;</span> + SEPARATOR + type + SEPARATOR + identifier;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存键分片策略"><a href="#（二）缓存键分片策略" class="headerlink" title="（二）缓存键分片策略"></a>（二）缓存键分片策略</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存键分片：避免热点键问题</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShardedCacheService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">SHARD_COUNT</span> <span class="operator">=</span> <span class="number">16</span>; <span class="comment">// 分片数量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分片缓存设置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setShardedCache</span><span class="params">(String baseKey, Object value, Duration ttl)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">shardedKey</span> <span class="operator">=</span> getShardedKey(baseKey);</span><br><span class="line">        redisTemplate.opsForValue().set(shardedKey, value, ttl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分片缓存获取</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getShardedCache</span><span class="params">(String baseKey)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">shardedKey</span> <span class="operator">=</span> getShardedKey(baseKey);</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().get(shardedKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算分片键</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getShardedKey</span><span class="params">(String baseKey)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">hash</span> <span class="operator">=</span> baseKey.hashCode();</span><br><span class="line">        <span class="type">int</span> <span class="variable">shardIndex</span> <span class="operator">=</span> Math.abs(hash) % SHARD_COUNT;</span><br><span class="line">        <span class="keyword">return</span> baseKey + <span class="string">&quot;:shard:&quot;</span> + shardIndex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 热点数据分散存储</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHotDataWithSharding</span><span class="params">(String key, Object value, Duration ttl)</span> &#123;</span><br><span class="line">        <span class="comment">// 将热点数据存储到多个分片中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123; <span class="comment">// 存储3个副本</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">shardKey</span> <span class="operator">=</span> key + <span class="string">&quot;:hot:shard:&quot;</span> + i;</span><br><span class="line">            redisTemplate.opsForValue().set(shardKey, value, ttl);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从热点数据分片中随机获取</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getHotDataFromSharding</span><span class="params">(String key)</span> &#123;</span><br><span class="line">        <span class="comment">// 随机选择一个分片读取，分散读压力</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">randomShard</span> <span class="operator">=</span> ThreadLocalRandom.current().nextInt(<span class="number">3</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">shardKey</span> <span class="operator">=</span> key + <span class="string">&quot;:hot:shard:&quot;</span> + randomShard;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> redisTemplate.opsForValue().get(shardKey);</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果随机分片没有数据，尝试其他分片</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i != randomShard) &#123;</span><br><span class="line">                    shardKey = key + <span class="string">&quot;:hot:shard:&quot;</span> + i;</span><br><span class="line">                    value = redisTemplate.opsForValue().get(shardKey);</span><br><span class="line">                    <span class="keyword">if</span> (value != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、缓存监控与调优"><a href="#五、缓存监控与调优" class="headerlink" title="五、缓存监控与调优"></a>五、缓存监控与调优</h1><h2 id="（一）缓存性能监控"><a href="#（一）缓存性能监控" class="headerlink" title="（一）缓存性能监控"></a>（一）缓存性能监控</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 缓存性能监控系统</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheMonitorService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> MeterRegistry meterRegistry;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Timer cacheTimer;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Counter cacheHitCounter;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Counter cacheMissCounter;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gauge cacheSize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CacheMonitorService</span><span class="params">(MeterRegistry meterRegistry)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.meterRegistry = meterRegistry;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存操作耗时监控</span></span><br><span class="line">        <span class="built_in">this</span>.cacheTimer = Timer.builder(<span class="string">&quot;cache.operation.duration&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;缓存操作耗时&quot;</span>)</span><br><span class="line">                .register(meterRegistry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存命中计数器</span></span><br><span class="line">        <span class="built_in">this</span>.cacheHitCounter = Counter.builder(<span class="string">&quot;cache.hit&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;缓存命中次数&quot;</span>)</span><br><span class="line">                .register(meterRegistry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存未命中计数器</span></span><br><span class="line">        <span class="built_in">this</span>.cacheMissCounter = Counter.builder(<span class="string">&quot;cache.miss&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;缓存未命中次数&quot;</span>)</span><br><span class="line">                .register(meterRegistry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存大小监控</span></span><br><span class="line">        <span class="built_in">this</span>.cacheSize = Gauge.builder(<span class="string">&quot;cache.size&quot;</span>)</span><br><span class="line">                .description(<span class="string">&quot;缓存大小&quot;</span>)</span><br><span class="line">                .register(meterRegistry, <span class="built_in">this</span>, CacheMonitorService::getCurrentCacheSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监控缓存操作</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">monitorCacheOperation</span><span class="params">(String operation, Supplier&lt;T&gt; cacheOperation)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> cacheTimer.recordCallable(() -&gt; &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="type">T</span> <span class="variable">result</span> <span class="operator">=</span> cacheOperation.get();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 记录命中或未命中</span></span><br><span class="line">                <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">                    cacheHitCounter.increment();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    cacheMissCounter.increment();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="type">long</span> <span class="variable">duration</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line">                log.debug(<span class="string">&quot;缓存操作完成: operation=&#123;&#125;, duration=&#123;&#125;ms&quot;</span>, operation, duration);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前缓存大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> <span class="title function_">getCurrentCacheSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 这里可以实现获取实际缓存大小的逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取缓存统计信息</span></span><br><span class="line">    <span class="keyword">public</span> CacheStats <span class="title function_">getCacheStats</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hitCount</span> <span class="operator">=</span> cacheHitCounter.count();</span><br><span class="line">        <span class="type">double</span> <span class="variable">missCount</span> <span class="operator">=</span> cacheMissCounter.count();</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalCount</span> <span class="operator">=</span> hitCount + missCount;</span><br><span class="line">        <span class="type">double</span> <span class="variable">hitRate</span> <span class="operator">=</span> totalCount &gt; <span class="number">0</span> ? (hitCount / totalCount) * <span class="number">100</span> : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> CacheStats.builder()</span><br><span class="line">                .hitCount((<span class="type">long</span>) hitCount)</span><br><span class="line">                .missCount((<span class="type">long</span>) missCount)</span><br><span class="line">                .hitRate(hitRate)</span><br><span class="line">                .averageLoadTime(cacheTimer.mean(TimeUnit.MILLISECONDS))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存统计信息</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheStats</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> hitCount;      <span class="comment">// 命中次数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> missCount;     <span class="comment">// 未命中次数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> hitRate;     <span class="comment">// 命中率</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> averageLoadTime; <span class="comment">// 平均加载时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存调优实践"><a href="#（二）缓存调优实践" class="headerlink" title="（二）缓存调优实践"></a>（二）缓存调优实践</h2><h3 id="1-缓存容量规划"><a href="#1-缓存容量规划" class="headerlink" title="1. 缓存容量规划"></a>1. 缓存容量规划</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 缓存容量规划工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CacheCapacityPlanner</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.memory_overhead = <span class="number">0.2</span>  <span class="comment"># 20%的内存开销</span></span><br><span class="line">        <span class="variable language_">self</span>.safety_margin = <span class="number">0.8</span>    <span class="comment"># 80%的安全边际</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calculate_optimal_size</span>(<span class="params">self, available_memory_mb, avg_object_size_kb, hit_rate_target</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        计算最优缓存大小</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            available_memory_mb: 可用内存（MB）</span></span><br><span class="line"><span class="string">            avg_object_size_kb: 平均对象大小（KB）</span></span><br><span class="line"><span class="string">            hit_rate_target: 目标命中率</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 考虑内存开销的实际可用内存</span></span><br><span class="line">        usable_memory_mb = available_memory_mb * (<span class="number">1</span> - <span class="variable language_">self</span>.memory_overhead) * <span class="variable language_">self</span>.safety_margin</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 转换为KB</span></span><br><span class="line">        usable_memory_kb = usable_memory_mb * <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算可存储的对象数量</span></span><br><span class="line">        max_objects = <span class="built_in">int</span>(usable_memory_kb / avg_object_size_kb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 根据目标命中率调整</span></span><br><span class="line">        recommended_objects = <span class="built_in">int</span>(max_objects * hit_rate_target)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;max_objects&#x27;</span>: max_objects,</span><br><span class="line">            <span class="string">&#x27;recommended_objects&#x27;</span>: recommended_objects,</span><br><span class="line">            <span class="string">&#x27;estimated_memory_usage_mb&#x27;</span>: (recommended_objects * avg_object_size_kb) / <span class="number">1024</span>,</span><br><span class="line">            <span class="string">&#x27;estimated_hit_rate&#x27;</span>: hit_rate_target</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">analyze_workload</span>(<span class="params">self, access_pattern</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        分析访问模式，提供缓存策略建议</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            access_pattern: 访问模式数据 &#123;&#x27;key&#x27;: access_count&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        total_accesses = <span class="built_in">sum</span>(access_pattern.values())</span><br><span class="line">        sorted_keys = <span class="built_in">sorted</span>(access_pattern.items(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算80/20规则的实际比例</span></span><br><span class="line">        cumulative_accesses = <span class="number">0</span></span><br><span class="line">        hot_keys_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> key, count <span class="keyword">in</span> sorted_keys:</span><br><span class="line">            cumulative_accesses += count</span><br><span class="line">            hot_keys_count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> cumulative_accesses &gt;= total_accesses * <span class="number">0.8</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        hot_keys_ratio = hot_keys_count / <span class="built_in">len</span>(access_pattern)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;total_keys&#x27;</span>: <span class="built_in">len</span>(access_pattern),</span><br><span class="line">            <span class="string">&#x27;hot_keys_count&#x27;</span>: hot_keys_count,</span><br><span class="line">            <span class="string">&#x27;hot_keys_ratio&#x27;</span>: hot_keys_ratio,</span><br><span class="line">            <span class="string">&#x27;recommendation&#x27;</span>: <span class="variable language_">self</span>._get_strategy_recommendation(hot_keys_ratio)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_get_strategy_recommendation</span>(<span class="params">self, hot_keys_ratio</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;根据热点数据比例推荐缓存策略&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> hot_keys_ratio &lt; <span class="number">0.1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;数据访问高度集中，建议使用小容量LRU缓存&quot;</span></span><br><span class="line">        <span class="keyword">elif</span> hot_keys_ratio &lt; <span class="number">0.3</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;数据访问较为集中，建议使用中等容量LRU缓存&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;数据访问较为分散，建议使用大容量LFU缓存或分层缓存&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-缓存预测与自适应调整"><a href="#2-缓存预测与自适应调整" class="headerlink" title="2. 缓存预测与自适应调整"></a>2. 缓存预测与自适应调整</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自适应缓存调整服务</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdaptiveCacheService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, CacheMetrics&gt; metricsMap = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">ScheduledExecutorService</span> <span class="variable">scheduler</span> <span class="operator">=</span> Executors.newScheduledThreadPool(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 每5分钟分析一次缓存性能</span></span><br><span class="line">        scheduler.scheduleAtFixedRate(<span class="built_in">this</span>::analyzeCachePerformance, <span class="number">5</span>, <span class="number">5</span>, TimeUnit.MINUTES);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 每小时调整一次缓存策略</span></span><br><span class="line">        scheduler.scheduleAtFixedRate(<span class="built_in">this</span>::adjustCacheStrategy, <span class="number">60</span>, <span class="number">60</span>, TimeUnit.MINUTES);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录缓存访问</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">recordCacheAccess</span><span class="params">(String key, <span class="type">boolean</span> hit)</span> &#123;</span><br><span class="line">        metricsMap.computeIfAbsent(key, k -&gt; <span class="keyword">new</span> <span class="title class_">CacheMetrics</span>()).recordAccess(hit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分析缓存性能</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">analyzeCachePerformance</span><span class="params">()</span> &#123;</span><br><span class="line">        Map&lt;String, Double&gt; hitRates = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        metricsMap.forEach((key, metrics) -&gt; &#123;</span><br><span class="line">            <span class="type">double</span> <span class="variable">hitRate</span> <span class="operator">=</span> metrics.getHitRate();</span><br><span class="line">            hitRates.put(key, hitRate);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 重置计数器</span></span><br><span class="line">            metrics.reset();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 识别低命中率的缓存键</span></span><br><span class="line">        List&lt;String&gt; lowHitRateKeys = hitRates.entrySet().stream()</span><br><span class="line">                .filter(entry -&gt; entry.getValue() &lt; <span class="number">0.5</span>) <span class="comment">// 命中率低于50%</span></span><br><span class="line">                .map(Map.Entry::getKey)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!lowHitRateKeys.isEmpty()) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;发现低命中率缓存键: &#123;&#125;&quot;</span>, lowHitRateKeys);</span><br><span class="line">            <span class="comment">// 可以考虑调整这些键的TTL或缓存策略</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调整缓存策略</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">adjustCacheStrategy</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 获取Redis内存使用情况</span></span><br><span class="line">        <span class="type">RedisInfo</span> <span class="variable">redisInfo</span> <span class="operator">=</span> getRedisInfo();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (redisInfo.getMemoryUsageRatio() &gt; <span class="number">0.8</span>) &#123;</span><br><span class="line">            <span class="comment">// 内存使用率过高，缩短TTL</span></span><br><span class="line">            adjustTTLForHighMemoryUsage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (redisInfo.getMemoryUsageRatio() &lt; <span class="number">0.5</span>) &#123;</span><br><span class="line">            <span class="comment">// 内存使用率较低，可以延长TTL</span></span><br><span class="line">            adjustTTLForLowMemoryUsage();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 高内存使用时调整TTL</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">adjustTTLForHighMemoryUsage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 获取所有键并按访问频率排序</span></span><br><span class="line">        Set&lt;String&gt; keys = redisTemplate.keys(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (keys != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">                <span class="type">Long</span> <span class="variable">ttl</span> <span class="operator">=</span> redisTemplate.getExpire(key);</span><br><span class="line">                <span class="keyword">if</span> (ttl != <span class="literal">null</span> &amp;&amp; ttl &gt; <span class="number">3600</span>) &#123; <span class="comment">// TTL大于1小时</span></span><br><span class="line">                    <span class="comment">// 缩短TTL到原来的80%</span></span><br><span class="line">                    redisTemplate.expire(key, Duration.ofSeconds((<span class="type">long</span>) (ttl * <span class="number">0.8</span>)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;由于内存使用率过高，已调整缓存TTL&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 低内存使用时调整TTL</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">adjustTTLForLowMemoryUsage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 对于高命中率的键，可以适当延长TTL</span></span><br><span class="line">        metricsMap.entrySet().stream()</span><br><span class="line">                .filter(entry -&gt; entry.getValue().getHitRate() &gt; <span class="number">0.8</span>)</span><br><span class="line">                .forEach(entry -&gt; &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">                    <span class="type">Long</span> <span class="variable">ttl</span> <span class="operator">=</span> redisTemplate.getExpire(key);</span><br><span class="line">                    <span class="keyword">if</span> (ttl != <span class="literal">null</span> &amp;&amp; ttl &gt; <span class="number">0</span> &amp;&amp; ttl &lt; <span class="number">7200</span>) &#123; <span class="comment">// TTL小于2小时</span></span><br><span class="line">                        <span class="comment">// 延长TTL到原来的120%</span></span><br><span class="line">                        redisTemplate.expire(key, Duration.ofSeconds((<span class="type">long</span>) (ttl * <span class="number">1.2</span>)));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;由于内存使用率较低，已延长高命中率缓存的TTL&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取Redis信息</span></span><br><span class="line">    <span class="keyword">private</span> RedisInfo <span class="title function_">getRedisInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 这里应该实现获取Redis内存使用情况的逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RedisInfo</span>(<span class="number">0.6</span>); <span class="comment">// 示例：60%内存使用率</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 缓存指标类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheMetrics</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">hits</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="variable">misses</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">recordAccess</span><span class="params">(<span class="type">boolean</span> hit)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (hit) &#123;</span><br><span class="line">            hits++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            misses++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getHitRate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> hits + misses;</span><br><span class="line">        <span class="keyword">return</span> total &gt; <span class="number">0</span> ? (<span class="type">double</span>) hits / total : <span class="number">0.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">reset</span><span class="params">()</span> &#123;</span><br><span class="line">        hits = <span class="number">0</span>;</span><br><span class="line">        misses = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Redis信息类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisInfo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> memoryUsageRatio; <span class="comment">// 内存使用率</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、实际应用场景与最佳实践"><a href="#六、实际应用场景与最佳实践" class="headerlink" title="六、实际应用场景与最佳实践"></a>六、实际应用场景与最佳实践</h1><h2 id="（一）电商系统缓存优化"><a href="#（一）电商系统缓存优化" class="headerlink" title="（一）电商系统缓存优化"></a>（一）电商系统缓存优化</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 电商系统缓存策略实现</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EcommerceCacheService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品信息缓存：热点商品长期缓存，普通商品短期缓存</span></span><br><span class="line">    <span class="keyword">public</span> Product <span class="title function_">getProduct</span><span class="params">(Long productId)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;product:&quot;</span> + productId;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先从缓存获取</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> (Product) redisTemplate.opsForValue().get(cacheKey);</span><br><span class="line">        <span class="keyword">if</span> (product != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> product;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存未命中，从数据库获取</span></span><br><span class="line">        product = productRepository.findById(productId).orElse(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">if</span> (product != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 根据商品热度设置不同的TTL</span></span><br><span class="line">            <span class="type">Duration</span> <span class="variable">ttl</span> <span class="operator">=</span> calculateProductCacheTTL(product);</span><br><span class="line">            redisTemplate.opsForValue().set(cacheKey, product, ttl);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> product;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据商品热度计算缓存TTL</span></span><br><span class="line">    <span class="keyword">private</span> Duration <span class="title function_">calculateProductCacheTTL</span><span class="params">(Product product)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取商品的访问热度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">hotScore</span> <span class="operator">=</span> getProductHotScore(product.getId());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (hotScore &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Duration.ofHours(<span class="number">24</span>);    <span class="comment">// 热门商品缓存24小时</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (hotScore &gt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> Duration.ofHours(<span class="number">6</span>);     <span class="comment">// 中等热度商品缓存6小时</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Duration.ofHours(<span class="number">1</span>);     <span class="comment">// 普通商品缓存1小时</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品列表缓存：分页缓存策略</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Product&gt; <span class="title function_">getProductList</span><span class="params">(<span class="type">int</span> page, <span class="type">int</span> size, String category)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> CacheKeyDesign.buildProductListKey(page, size, category);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查缓存</span></span><br><span class="line">        List&lt;Product&gt; products = (List&lt;Product&gt;) redisTemplate.opsForValue().get(cacheKey);</span><br><span class="line">        <span class="keyword">if</span> (products != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> products;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从数据库查询</span></span><br><span class="line">        products = productRepository.findByCategory(category, PageRequest.of(page, size));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存结果，首页缓存时间更长</span></span><br><span class="line">        <span class="type">Duration</span> <span class="variable">ttl</span> <span class="operator">=</span> page == <span class="number">0</span> ? Duration.ofMinutes(<span class="number">30</span>) : Duration.ofMinutes(<span class="number">10</span>);</span><br><span class="line">        redisTemplate.opsForValue().set(cacheKey, products, ttl);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> products;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 购物车缓存：用户会话级缓存</span></span><br><span class="line">    <span class="keyword">public</span> Cart <span class="title function_">getUserCart</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;cart:&quot;</span> + userId;</span><br><span class="line"></span><br><span class="line">        <span class="type">Cart</span> <span class="variable">cart</span> <span class="operator">=</span> (Cart) redisTemplate.opsForValue().get(cacheKey);</span><br><span class="line">        <span class="keyword">if</span> (cart == <span class="literal">null</span>) &#123;</span><br><span class="line">            cart = cartRepository.findByUserId(userId);</span><br><span class="line">            <span class="keyword">if</span> (cart != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 购物车缓存30分钟，与用户会话时间匹配</span></span><br><span class="line">                redisTemplate.opsForValue().set(cacheKey, cart, Duration.ofMinutes(<span class="number">30</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cart;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 库存缓存：高频更新数据的缓存策略</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getProductStock</span><span class="params">(Long productId)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;stock:&quot;</span> + productId;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用Redis原子操作获取库存</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">stock</span> <span class="operator">=</span> (Integer) redisTemplate.opsForValue().get(cacheKey);</span><br><span class="line">        <span class="keyword">if</span> (stock == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 从数据库同步库存到缓存</span></span><br><span class="line">            stock = productRepository.getStock(productId);</span><br><span class="line">            redisTemplate.opsForValue().set(cacheKey, stock, Duration.ofMinutes(<span class="number">5</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stock;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 减库存操作：保证数据一致性</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">decreaseStock</span><span class="params">(Long productId, <span class="type">int</span> quantity)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">cacheKey</span> <span class="operator">=</span> <span class="string">&quot;stock:&quot;</span> + productId;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用Lua脚本保证原子性</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">luaScript</span> <span class="operator">=</span></span><br><span class="line">            <span class="string">&quot;local current = redis.call(&#x27;get&#x27;, KEYS[1]) &quot;</span> +</span><br><span class="line">            <span class="string">&quot;if current == false then &quot;</span> +</span><br><span class="line">            <span class="string">&quot;  return -1 &quot;</span> +</span><br><span class="line">            <span class="string">&quot;end &quot;</span> +</span><br><span class="line">            <span class="string">&quot;current = tonumber(current) &quot;</span> +</span><br><span class="line">            <span class="string">&quot;if current &gt;= tonumber(ARGV[1]) then &quot;</span> +</span><br><span class="line">            <span class="string">&quot;  redis.call(&#x27;decrby&#x27;, KEYS[1], ARGV[1]) &quot;</span> +</span><br><span class="line">            <span class="string">&quot;  return current - tonumber(ARGV[1]) &quot;</span> +</span><br><span class="line">            <span class="string">&quot;else &quot;</span> +</span><br><span class="line">            <span class="string">&quot;  return -2 &quot;</span> +</span><br><span class="line">            <span class="string">&quot;end&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">Long</span> <span class="variable">result</span> <span class="operator">=</span> redisTemplate.execute(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">DefaultRedisScript</span>&lt;&gt;(luaScript, Long.class),</span><br><span class="line">            Collections.singletonList(cacheKey),</span><br><span class="line">            String.valueOf(quantity)</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (result &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 缓存操作成功，同步更新数据库</span></span><br><span class="line">            productRepository.decreaseStock(productId, quantity);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 库存不足或缓存失效</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）社交媒体系统缓存优化"><a href="#（二）社交媒体系统缓存优化" class="headerlink" title="（二）社交媒体系统缓存优化"></a>（二）社交媒体系统缓存优化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 社交媒体系统的缓存策略</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SocialMediaCacheService</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, redis_client</span>):</span><br><span class="line">        <span class="variable language_">self</span>.redis = redis_client</span><br><span class="line">        <span class="variable language_">self</span>.local_cache = &#123;&#125;  <span class="comment"># 本地缓存</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_user_timeline</span>(<span class="params">self, user_id, page=<span class="number">1</span>, size=<span class="number">20</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取用户时间线：推拉结合的缓存策略&quot;&quot;&quot;</span></span><br><span class="line">        cache_key = <span class="string">f&quot;timeline:<span class="subst">&#123;user_id&#125;</span>:page:<span class="subst">&#123;page&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查本地缓存（热点用户）</span></span><br><span class="line">        <span class="keyword">if</span> cache_key <span class="keyword">in</span> <span class="variable language_">self</span>.local_cache:</span><br><span class="line">            timeline_data = <span class="variable language_">self</span>.local_cache[cache_key]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>._is_expired(timeline_data):</span><br><span class="line">                <span class="keyword">return</span> timeline_data[<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查Redis缓存</span></span><br><span class="line">        timeline = <span class="variable language_">self</span>.redis.get(cache_key)</span><br><span class="line">        <span class="keyword">if</span> timeline:</span><br><span class="line">            timeline_data = json.loads(timeline)</span><br><span class="line">            <span class="comment"># 热点数据提升到本地缓存</span></span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>._is_hot_user(user_id):</span><br><span class="line">                <span class="variable language_">self</span>.local_cache[cache_key] = &#123;</span><br><span class="line">                    <span class="string">&#x27;content&#x27;</span>: timeline_data,</span><br><span class="line">                    <span class="string">&#x27;expire_at&#x27;</span>: time.time() + <span class="number">300</span>  <span class="comment"># 5分钟本地缓存</span></span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">return</span> timeline_data</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 缓存未命中，生成时间线</span></span><br><span class="line">        timeline_data = <span class="variable language_">self</span>._generate_timeline(user_id, page, size)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 缓存到Redis</span></span><br><span class="line">        ttl = <span class="number">1800</span> <span class="keyword">if</span> page == <span class="number">1</span> <span class="keyword">else</span> <span class="number">600</span>  <span class="comment"># 首页缓存30分钟，其他页面10分钟</span></span><br><span class="line">        <span class="variable language_">self</span>.redis.setex(cache_key, ttl, json.dumps(timeline_data))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> timeline_data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_post_engagement</span>(<span class="params">self, post_id</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取帖子互动数据：实时更新的缓存策略&quot;&quot;&quot;</span></span><br><span class="line">        cache_key = <span class="string">f&quot;engagement:<span class="subst">&#123;post_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用Redis Hash存储多个指标</span></span><br><span class="line">        engagement = <span class="variable language_">self</span>.redis.hgetall(cache_key)</span><br><span class="line">        <span class="keyword">if</span> engagement:</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="string">&#x27;likes&#x27;</span>: <span class="built_in">int</span>(engagement.get(<span class="string">&#x27;likes&#x27;</span>, <span class="number">0</span>)),</span><br><span class="line">                <span class="string">&#x27;comments&#x27;</span>: <span class="built_in">int</span>(engagement.get(<span class="string">&#x27;comments&#x27;</span>, <span class="number">0</span>)),</span><br><span class="line">                <span class="string">&#x27;shares&#x27;</span>: <span class="built_in">int</span>(engagement.get(<span class="string">&#x27;shares&#x27;</span>, <span class="number">0</span>)),</span><br><span class="line">                <span class="string">&#x27;views&#x27;</span>: <span class="built_in">int</span>(engagement.get(<span class="string">&#x27;views&#x27;</span>, <span class="number">0</span>))</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 从数据库获取并缓存</span></span><br><span class="line">        engagement_data = <span class="variable language_">self</span>._get_engagement_from_db(post_id)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用Pipeline批量设置</span></span><br><span class="line">        pipe = <span class="variable language_">self</span>.redis.pipeline()</span><br><span class="line">        pipe.hset(cache_key, mapping=engagement_data)</span><br><span class="line">        pipe.expire(cache_key, <span class="number">300</span>)  <span class="comment"># 5分钟过期</span></span><br><span class="line">        pipe.execute()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> engagement_data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_post_engagement</span>(<span class="params">self, post_id, action, delta=<span class="number">1</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;更新帖子互动：原子操作保证一致性&quot;&quot;&quot;</span></span><br><span class="line">        cache_key = <span class="string">f&quot;engagement:<span class="subst">&#123;post_id&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用Redis原子操作更新</span></span><br><span class="line">        <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">&#x27;likes&#x27;</span>, <span class="string">&#x27;comments&#x27;</span>, <span class="string">&#x27;shares&#x27;</span>, <span class="string">&#x27;views&#x27;</span>]:</span><br><span class="line">            <span class="variable language_">self</span>.redis.hincrby(cache_key, action, delta)</span><br><span class="line">            <span class="variable language_">self</span>.redis.expire(cache_key, <span class="number">300</span>)  <span class="comment"># 重置过期时间</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 异步更新数据库</span></span><br><span class="line">            <span class="variable language_">self</span>._async_update_db(post_id, action, delta)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_trending_topics</span>(<span class="params">self, limit=<span class="number">10</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取热门话题：基于时间窗口的缓存&quot;&quot;&quot;</span></span><br><span class="line">        cache_key = <span class="string">&quot;trending:topics&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查缓存</span></span><br><span class="line">        topics = <span class="variable language_">self</span>.redis.get(cache_key)</span><br><span class="line">        <span class="keyword">if</span> topics:</span><br><span class="line">            <span class="keyword">return</span> json.loads(topics)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算热门话题</span></span><br><span class="line">        trending_topics = <span class="variable language_">self</span>._calculate_trending_topics(limit)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 缓存15分钟</span></span><br><span class="line">        <span class="variable language_">self</span>.redis.setex(cache_key, <span class="number">900</span>, json.dumps(trending_topics))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> trending_topics</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_is_hot_user</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;判断是否为热点用户&quot;&quot;&quot;</span></span><br><span class="line">        follower_count = <span class="variable language_">self</span>.redis.get(<span class="string">f&quot;followers:<span class="subst">&#123;user_id&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> follower_count <span class="keyword">and</span> <span class="built_in">int</span>(follower_count) &gt; <span class="number">10000</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_is_expired</span>(<span class="params">self, cache_data</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查本地缓存是否过期&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> time.time() &gt; cache_data.get(<span class="string">&#x27;expire_at&#x27;</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<h1 id="七、总结与展望"><a href="#七、总结与展望" class="headerlink" title="七、总结与展望"></a>七、总结与展望</h1><h2 id="（一）缓存命中率优化核心要点"><a href="#（一）缓存命中率优化核心要点" class="headerlink" title="（一）缓存命中率优化核心要点"></a>（一）缓存命中率优化核心要点</h2><div class="note success flat"><p><strong>关键策略总结</strong></p>
<ol>
<li><strong>选择合适的缓存算法</strong>：根据数据访问模式选择LRU、LFU或其他算法</li>
<li><strong>实施多层缓存架构</strong>：L1本地缓存 + L2分布式缓存 + L3数据库的分层设计</li>
<li><strong>优化缓存键设计</strong>：规范命名、合理分片、避免热点键问题</li>
<li><strong>实现智能预热策略</strong>：系统启动预热 + 定时预热 + 按需预热</li>
<li><strong>保证缓存一致性</strong>：写入时更新、版本控制、主动失效机制</li>
<li><strong>持续监控和调优</strong>：实时监控命中率、自适应调整策略</li>
</ol>
</div>

<h2 id="（二）性能提升效果"><a href="#（二）性能提升效果" class="headerlink" title="（二）性能提升效果"></a>（二）性能提升效果</h2><p>通过系统性的缓存优化，通常可以实现：</p>
<ul>
<li><strong>响应时间</strong>：减少50%-90%的数据库查询时间</li>
<li><strong>系统吞吐量</strong>：提升2-10倍的并发处理能力</li>
<li><strong>资源利用率</strong>：降低60%-80%的数据库负载</li>
<li><strong>用户体验</strong>：页面加载速度提升3-5倍</li>
</ul>
<h2 id="（三）未来发展趋势"><a href="#（三）未来发展趋势" class="headerlink" title="（三）未来发展趋势"></a>（三）未来发展趋势</h2><p><strong>智能化缓存</strong>：</p>
<ul>
<li>基于机器学习的缓存预测</li>
<li>自适应缓存策略调整</li>
<li>智能热点数据识别</li>
</ul>
<p><strong>边缘缓存</strong>：</p>
<ul>
<li>CDN与应用缓存的深度融合</li>
<li>边缘计算节点的缓存优化</li>
<li>地理位置感知的缓存分布</li>
</ul>
<p><strong>新技术应用</strong>：</p>
<ul>
<li>内存数据库的普及应用</li>
<li>持久化内存技术的发展</li>
<li>分布式缓存的标准化</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><p><strong>技术文档</strong></p>
<ul>
<li>Redis官方文档：<a href="https://redis.io/documentation">https://redis.io/documentation</a></li>
<li>Caffeine缓存库：<a href="https://github.com/ben-manes/caffeine">https://github.com/ben-manes/caffeine</a></li>
<li>Spring Cache抽象：<a href="https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache">https://docs.spring.io/spring-framework/docs/current/reference/html/integration.html#cache</a></li>
</ul>
</li>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《Redis设计与实现》- 黄健宏</li>
<li>《高性能MySQL》- Baron Schwartz</li>
<li>《大规模分布式存储系统》- 杨传辉</li>
</ul>
</li>
<li><p><strong>相关文章</strong></p>
<ul>
<li><a href="../%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%91Redis%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E7%BC%93%E5%AD%98%E4%B9%8B%E7%8E%8B.md">【数据库】Redis详解：内存数据库与缓存之王</a></li>
<li><a href="../%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90MySQL%E3%80%91MySQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97.md">【MySQL】MySQL性能优化全面指南</a></li>
<li><a href="../Java/%E3%80%90Java%E3%80%91MyBatis%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5%E8%AF%A6%E8%A7%A3.md">【Java】MyBatis生态系统性能对比与优化策略详解</a></li>
</ul>
</li>
<li><p><strong>开源项目</strong></p>
<ul>
<li>Ehcache：<a href="https://github.com/ehcache/ehcache3">https://github.com/ehcache/ehcache3</a></li>
<li>Hazelcast：<a href="https://github.com/hazelcast/hazelcast">https://github.com/hazelcast/hazelcast</a></li>
<li>Apache Ignite：<a href="https://github.com/apache/ignite">https://github.com/apache/ignite</a></li>
</ul>
</li>
</ol>
<hr>
<blockquote>
<p>💡 <strong>提示</strong>：缓存优化是一个持续的过程，需要根据业务特点和系统负载情况不断调整策略。建议在生产环境中逐步实施，并建立完善的监控体系来验证优化效果。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、缓存命中率概述"><a href="#一、缓存命中率概述" class="headerlink" title="一、缓存命中率概述"></a>一、缓存命中率概述</h1><h2 id="（一）什么是缓存命中率"><a href="#（一）什么是缓存命中率" c]]>
    </summary>
    
      <category term="性能优化" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="分布式系统" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="缓存" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%BC%93%E5%AD%98/"/>
    
      <category term="Redis" scheme="https://hexo.blog.uwakeme.tech/tags/Redis/"/>
    
      <category term="系统架构" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】容器编排详解：从基础概念到工具对比的完整指南]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/14/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8E%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%88%B0%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/14/学习/【学习】容器编排详解：从基础概念到工具对比的完整指南/</id>
    <published>2025-08-13T16:00:00.000Z</published>
    <updated>2025-08-18T08:57:00.247Z</updated>
    <content type="html"><![CDATA[<ol class="series-items"><li><a href="/2025/08/14/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8E%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5%E5%88%B0%E5%B7%A5%E5%85%B7%E5%AF%B9%E6%AF%94%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/" title="【学习】容器编排详解：从基础概念到工具对比的完整指南">【学习】容器编排详解：从基础概念到工具对比的完整指南</a></li></ol>

<blockquote>
<p><strong>摘要</strong>：本文深入探讨容器编排技术，从基础概念到主流工具对比，涵盖Kubernetes、Docker Swarm、Apache Mesos等平台的特性分析和实战案例。通过详细的技术解析和实用的部署示例，帮助读者全面理解容器编排的核心价值和应用场景，为技术选型提供科学依据。</p>
</blockquote>
<h2 id="📋-文章导览"><a href="#📋-文章导览" class="headerlink" title="📋 文章导览"></a>📋 文章导览</h2><ul>
<li><strong>基础篇</strong>：容器编排概念、核心功能、技术原理</li>
<li><strong>工具篇</strong>：Kubernetes、Docker Swarm、Apache Mesos等主流工具详解</li>
<li><strong>对比篇</strong>：多维度工具对比分析，选型指南</li>
<li><strong>实战篇</strong>：微服务应用部署案例，最佳实践</li>
<li><strong>进阶篇</strong>：性能优化、安全配置、监控方案</li>
</ul>
<h1 id="一、容器编排基础概念"><a href="#一、容器编排基础概念" class="headerlink" title="一、容器编排基础概念"></a>一、容器编排基础概念</h1><h2 id="（一）什么是容器编排"><a href="#（一）什么是容器编排" class="headerlink" title="（一）什么是容器编排"></a>（一）什么是容器编排</h2><p>容器编排（Container Orchestration）是一种自动化管理容器化应用程序的技术，它涉及在大规模的分布式系统中部署、管理、扩展和协调容器的整个生命周期。简单来说，容器编排就是让多个容器协同工作，就像指挥家指挥乐团演奏一样。</p>
<blockquote>
<p>💡 <strong>技术背景</strong>：根据CNCF的调查报告[^1]，超过90%的组织在生产环境中使用容器技术，其中84%的组织使用容器编排工具来管理容器化应用。</p>
</blockquote>
<p>在现代微服务架构中，一个应用可能由数十甚至数百个容器组成，手动管理这些容器显然是不现实的。容器编排工具应运而生，它们能够自动化处理容器的部署、扩展、网络配置、负载均衡、故障恢复等复杂任务。</p>
<h2 id="（二）为什么需要容器编排"><a href="#（二）为什么需要容器编排" class="headerlink" title="（二）为什么需要容器编排"></a>（二）为什么需要容器编排</h2><p>随着容器技术的普及和微服务架构的兴起，传统的单体应用被拆分成多个独立的服务，每个服务运行在自己的容器中。这种架构带来了诸多好处，但也引入了新的挑战：</p>
<ol>
<li><strong>服务发现与通信</strong>：容器之间需要相互发现和通信，IP地址可能动态变化</li>
<li><strong>负载均衡</strong>：需要将请求合理分发到多个容器实例</li>
<li><strong>自动扩缩容</strong>：根据负载情况自动增减容器数量</li>
<li><strong>故障恢复</strong>：当容器出现故障时自动重启或替换</li>
<li><strong>配置管理</strong>：统一管理容器的配置信息</li>
<li><strong>资源调度</strong>：在集群中合理分配计算资源</li>
</ol>
<h2 id="（三）容器编排的核心功能"><a href="#（三）容器编排的核心功能" class="headerlink" title="（三）容器编排的核心功能"></a>（三）容器编排的核心功能</h2><p>容器编排系统通常提供以下核心功能：</p>
<h3 id="1-自动化部署"><a href="#1-自动化部署" class="headerlink" title="1. 自动化部署"></a>1. 自动化部署</h3><ul>
<li><strong>声明式配置</strong>：通过配置文件描述期望状态，系统自动实现</li>
<li><strong>滚动更新</strong>：无停机时间地更新应用版本</li>
<li><strong>回滚机制</strong>：快速回退到之前的稳定版本</li>
</ul>
<h3 id="2-服务发现与负载均衡"><a href="#2-服务发现与负载均衡" class="headerlink" title="2. 服务发现与负载均衡"></a>2. 服务发现与负载均衡</h3><ul>
<li><strong>DNS服务发现</strong>：为服务提供稳定的域名解析</li>
<li><strong>健康检查</strong>：监控服务健康状态，自动剔除故障实例</li>
<li><strong>流量分发</strong>：智能分发请求到健康的服务实例</li>
</ul>
<h3 id="3-自动扩缩容"><a href="#3-自动扩缩容" class="headerlink" title="3. 自动扩缩容"></a>3. 自动扩缩容</h3><ul>
<li><strong>水平扩展</strong>：根据CPU、内存使用率自动增减实例</li>
<li><strong>垂直扩展</strong>：动态调整单个容器的资源配额</li>
<li><strong>预测性扩展</strong>：基于历史数据预测负载变化</li>
</ul>
<h3 id="4-存储编排"><a href="#4-存储编排" class="headerlink" title="4. 存储编排"></a>4. 存储编排</h3><ul>
<li><strong>持久化存储</strong>：为有状态应用提供数据持久化</li>
<li><strong>存储类</strong>：定义不同性能等级的存储资源</li>
<li><strong>动态供应</strong>：按需创建存储卷</li>
</ul>
<h3 id="5-网络管理"><a href="#5-网络管理" class="headerlink" title="5. 网络管理"></a>5. 网络管理</h3><ul>
<li><strong>虚拟网络</strong>：为容器提供隔离的网络环境</li>
<li><strong>网络策略</strong>：定义容器间的通信规则</li>
<li><strong>服务网格</strong>：提供高级的流量管理和安全功能</li>
</ul>
<h1 id="二、主流容器编排工具详解"><a href="#二、主流容器编排工具详解" class="headerlink" title="二、主流容器编排工具详解"></a>二、主流容器编排工具详解</h1><h2 id="（一）Kubernetes：容器编排的王者"><a href="#（一）Kubernetes：容器编排的王者" class="headerlink" title="（一）Kubernetes：容器编排的王者"></a>（一）Kubernetes：容器编排的王者</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Kubernetes（简称K8s）是由Google开源的容器编排平台，现在由云原生计算基金会（CNCF）维护。它已经成为容器编排领域的事实标准，被广泛应用于生产环境。</p>
<h3 id="核心架构"><a href="#核心架构" class="headerlink" title="核心架构"></a>核心架构</h3><p>Kubernetes采用主从架构（Master-Worker），主要组件包括：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Kubernetes集群架构示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">production</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web-app</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span>  <span class="comment"># 运行3个副本</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.21</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;64Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;250m&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;128Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="主要优势"><a href="#主要优势" class="headerlink" title="主要优势"></a>主要优势</h3><ol>
<li><strong>强大的生态系统</strong>：拥有庞大的社区和丰富的插件</li>
<li><strong>高度可扩展</strong>：支持数千节点的大规模集群</li>
<li><strong>声明式API</strong>：通过YAML文件描述期望状态</li>
<li><strong>自愈能力</strong>：自动检测和修复故障</li>
<li><strong>多云支持</strong>：可在各种云平台和本地环境运行</li>
</ol>
<h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><ul>
<li>大规模微服务应用</li>
<li>需要高可用性的企业级应用</li>
<li>多云或混合云环境</li>
<li>复杂的CI&#x2F;CD流水线</li>
</ul>
<h2 id="（二）Docker-Swarm：简单易用的原生方案"><a href="#（二）Docker-Swarm：简单易用的原生方案" class="headerlink" title="（二）Docker Swarm：简单易用的原生方案"></a>（二）Docker Swarm：简单易用的原生方案</h2><h3 id="基本介绍-1"><a href="#基本介绍-1" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Docker Swarm是Docker公司开发的原生容器编排工具，它将多个Docker主机组合成一个虚拟的Docker主机。Swarm的设计理念是简单易用，特别适合已经熟悉Docker的团队。</p>
<h3 id="核心特性"><a href="#核心特性" class="headerlink" title="核心特性"></a>核心特性</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker Compose文件示例（用于Swarm部署）</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">3</span>  <span class="comment"># 部署3个副本</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span>  <span class="comment"># 每次更新1个实例</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span>      <span class="comment"># 更新间隔10秒</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">5s</span></span><br><span class="line">        <span class="attr">max_attempts:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">webnet</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">webnet</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">webnet:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">overlay</span>  <span class="comment"># 使用overlay网络驱动</span></span><br></pre></td></tr></table></figure>

<h3 id="主要优势-1"><a href="#主要优势-1" class="headerlink" title="主要优势"></a>主要优势</h3><ol>
<li><strong>学习成本低</strong>：基于熟悉的Docker命令和概念</li>
<li><strong>部署简单</strong>：几条命令即可搭建集群</li>
<li><strong>原生集成</strong>：与Docker生态系统无缝集成</li>
<li><strong>内置安全</strong>：默认启用TLS加密</li>
<li><strong>轻量级</strong>：资源消耗相对较少</li>
</ol>
<h3 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h3><ul>
<li>中小型应用部署</li>
<li>Docker技术栈团队</li>
<li>快速原型开发</li>
<li>边缘计算场景</li>
</ul>
<h2 id="（三）Apache-Mesos：分布式系统内核"><a href="#（三）Apache-Mesos：分布式系统内核" class="headerlink" title="（三）Apache Mesos：分布式系统内核"></a>（三）Apache Mesos：分布式系统内核</h2><h3 id="基本介绍-2"><a href="#基本介绍-2" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Apache Mesos是一个分布式系统内核，它抽象了CPU、内存、存储等计算资源，使分布式应用能够高效地共享集群资源。Mesos本身不是专门的容器编排工具，但可以通过Marathon等框架来管理容器。</p>
<h3 id="架构特点"><a href="#架构特点" class="headerlink" title="架构特点"></a>架构特点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mesos集群启动示例</span></span><br><span class="line"><span class="comment"># 启动Mesos Master</span></span><br><span class="line">mesos-master --ip=192.168.1.100 --work_dir=/var/lib/mesos</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Mesos Agent</span></span><br><span class="line">mesos-agent --master=192.168.1.100:5050 --work_dir=/var/lib/mesos</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用Marathon部署应用</span></span><br><span class="line">curl -X POST http://marathon.mesos:8080/v2/apps \</span><br><span class="line">  -H <span class="string">&quot;Content-Type: application/json&quot;</span> \</span><br><span class="line">  -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;id&quot;: &quot;web-app&quot;,</span></span><br><span class="line"><span class="string">    &quot;cmd&quot;: &quot;python3 -m http.server 8080&quot;,</span></span><br><span class="line"><span class="string">    &quot;cpus&quot;: 0.5,</span></span><br><span class="line"><span class="string">    &quot;mem&quot;: 512,</span></span><br><span class="line"><span class="string">    &quot;instances&quot;: 3,</span></span><br><span class="line"><span class="string">    &quot;healthChecks&quot;: [&#123;</span></span><br><span class="line"><span class="string">      &quot;protocol&quot;: &quot;HTTP&quot;,</span></span><br><span class="line"><span class="string">      &quot;path&quot;: &quot;/&quot;,</span></span><br><span class="line"><span class="string">      &quot;portIndex&quot;: 0,</span></span><br><span class="line"><span class="string">      &quot;timeoutSeconds&quot;: 10,</span></span><br><span class="line"><span class="string">      &quot;gracePeriodSeconds&quot;: 10,</span></span><br><span class="line"><span class="string">      &quot;intervalSeconds&quot;: 2,</span></span><br><span class="line"><span class="string">      &quot;maxConsecutiveFailures&quot;: 10</span></span><br><span class="line"><span class="string">    &#125;]</span></span><br><span class="line"><span class="string">  &#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="主要优势-2"><a href="#主要优势-2" class="headerlink" title="主要优势"></a>主要优势</h3><ol>
<li><strong>资源利用率高</strong>：细粒度的资源分配</li>
<li><strong>多框架支持</strong>：可同时运行不同类型的工作负载</li>
<li><strong>高可用性</strong>：支持多主节点的容错机制</li>
<li><strong>大规模扩展</strong>：可管理数万个节点</li>
<li><strong>灵活性强</strong>：支持自定义调度策略</li>
</ol>
<h3 id="适用场景-2"><a href="#适用场景-2" class="headerlink" title="适用场景"></a>适用场景</h3><ul>
<li>大数据处理平台</li>
<li>混合工作负载环境</li>
<li>需要高资源利用率的场景</li>
<li>大规模集群管理</li>
</ul>
<h2 id="（四）其他编排工具"><a href="#（四）其他编排工具" class="headerlink" title="（四）其他编排工具"></a>（四）其他编排工具</h2><h3 id="1-HashiCorp-Nomad"><a href="#1-HashiCorp-Nomad" class="headerlink" title="1. HashiCorp Nomad"></a>1. HashiCorp Nomad</h3><p>Nomad是HashiCorp开发的轻量级编排工具，支持容器和非容器化应用。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"># Nomad作业定义示例</span><br><span class="line">job &quot;web-app&quot; &#123;</span><br><span class="line">  datacenters = [&quot;dc1&quot;]</span><br><span class="line">  type = &quot;service&quot;</span><br><span class="line"></span><br><span class="line">  group &quot;web&quot; &#123;</span><br><span class="line">    count = 3</span><br><span class="line"></span><br><span class="line">    task &quot;nginx&quot; &#123;</span><br><span class="line">      driver = &quot;docker&quot;</span><br><span class="line">      </span><br><span class="line">      config &#123;</span><br><span class="line">        image = &quot;nginx:latest&quot;</span><br><span class="line">        port_map &#123;</span><br><span class="line">          http = 80</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      resources &#123;</span><br><span class="line">        cpu    = 500</span><br><span class="line">        memory = 256</span><br><span class="line">        network &#123;</span><br><span class="line">          mbits = 10</span><br><span class="line">          port &quot;http&quot; &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      service &#123;</span><br><span class="line">        name = &quot;web-app&quot;</span><br><span class="line">        port = &quot;http&quot;</span><br><span class="line">        check &#123;</span><br><span class="line">          type     = &quot;http&quot;</span><br><span class="line">          path     = &quot;/&quot;</span><br><span class="line">          interval = &quot;10s&quot;</span><br><span class="line">          timeout  = &quot;2s&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Red-Hat-OpenShift"><a href="#2-Red-Hat-OpenShift" class="headerlink" title="2. Red Hat OpenShift"></a>2. Red Hat OpenShift</h3><p>OpenShift是基于Kubernetes的企业级容器平台，提供了额外的开发者工具和企业功能。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># OpenShift DeploymentConfig示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps.openshift.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DeploymentConfig</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web-app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">triggers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">ConfigChange</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">ImageChange</span></span><br><span class="line">    <span class="attr">imageChangeParams:</span></span><br><span class="line">      <span class="attr">automatic:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">containerNames:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">web-app</span></span><br><span class="line">      <span class="attr">from:</span></span><br><span class="line">        <span class="attr">kind:</span> <span class="string">ImageStreamTag</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx:latest</span></span><br></pre></td></tr></table></figure>

<h1 id="三、容器编排工具对比分析"><a href="#三、容器编排工具对比分析" class="headerlink" title="三、容器编排工具对比分析"></a>三、容器编排工具对比分析</h1><h2 id="（一）功能特性对比"><a href="#（一）功能特性对比" class="headerlink" title="（一）功能特性对比"></a>（一）功能特性对比</h2><table>
<thead>
<tr>
<th>特性</th>
<th>Kubernetes</th>
<th>Docker Swarm</th>
<th>Apache Mesos</th>
<th>Nomad</th>
<th>OpenShift</th>
</tr>
</thead>
<tbody><tr>
<td>学习曲线</td>
<td>陡峭</td>
<td>平缓</td>
<td>陡峭</td>
<td>中等</td>
<td>中等</td>
</tr>
<tr>
<td>部署复杂度</td>
<td>高</td>
<td>低</td>
<td>高</td>
<td>中等</td>
<td>中等</td>
</tr>
<tr>
<td>扩展性</td>
<td>极强</td>
<td>中等</td>
<td>极强</td>
<td>强</td>
<td>强</td>
</tr>
<tr>
<td>社区活跃度</td>
<td>极高</td>
<td>中等</td>
<td>中等</td>
<td>中等</td>
<td>高</td>
</tr>
<tr>
<td>企业支持</td>
<td>广泛</td>
<td>有限</td>
<td>有限</td>
<td>商业支持</td>
<td>商业支持</td>
</tr>
<tr>
<td>多云支持</td>
<td>优秀</td>
<td>良好</td>
<td>良好</td>
<td>优秀</td>
<td>优秀</td>
</tr>
</tbody></table>
<h2 id="（二）性能对比"><a href="#（二）性能对比" class="headerlink" title="（二）性能对比"></a>（二）性能对比</h2><h3 id="1-资源消耗"><a href="#1-资源消耗" class="headerlink" title="1. 资源消耗"></a>1. 资源消耗</h3><pre class="mermaid">graph TB
    A[资源消耗对比] --> B[Kubernetes]
    A --> C[Docker Swarm]
    A --> D[Apache Mesos]
    A --> E[Nomad]
    
    B --> B1[控制平面: 高]
    B --> B2[工作节点: 中等]
    
    C --> C1[管理节点: 低]
    C --> C2[工作节点: 低]
    
    D --> D1[Master: 中等]
    D --> D2[Agent: 低]
    
    E --> E1[Server: 低]
    E --> E2[Client: 极低]</pre>

<h3 id="2-启动时间"><a href="#2-启动时间" class="headerlink" title="2. 启动时间"></a>2. 启动时间</h3><ul>
<li><strong>Docker Swarm</strong>：秒级启动，最快</li>
<li><strong>Nomad</strong>：秒级启动，接近Swarm</li>
<li><strong>Kubernetes</strong>：分钟级启动，较慢</li>
<li><strong>Apache Mesos</strong>：分钟级启动，取决于框架</li>
</ul>
<h3 id="3-集群规模支持"><a href="#3-集群规模支持" class="headerlink" title="3. 集群规模支持"></a>3. 集群规模支持</h3><ul>
<li><strong>Kubernetes</strong>：支持5000+节点</li>
<li><strong>Apache Mesos</strong>：支持10000+节点</li>
<li><strong>Docker Swarm</strong>：支持1000+节点</li>
<li><strong>Nomad</strong>：支持5000+节点</li>
</ul>
<h2 id="（三）适用场景分析"><a href="#（三）适用场景分析" class="headerlink" title="（三）适用场景分析"></a>（三）适用场景分析</h2><h3 id="1-小型项目（-10个服务）"><a href="#1-小型项目（-10个服务）" class="headerlink" title="1. 小型项目（&lt; 10个服务）"></a>1. 小型项目（&lt; 10个服务）</h3><p><strong>推荐：Docker Swarm</strong></p>
<ul>
<li>部署简单，学习成本低</li>
<li>资源消耗少</li>
<li>满足基本编排需求</li>
</ul>
<h3 id="2-中型项目（10-100个服务）"><a href="#2-中型项目（10-100个服务）" class="headerlink" title="2. 中型项目（10-100个服务）"></a>2. 中型项目（10-100个服务）</h3><p><strong>推荐：Kubernetes 或 Nomad</strong></p>
<ul>
<li>Kubernetes：功能丰富，生态完善</li>
<li>Nomad：轻量级，易于管理</li>
</ul>
<h3 id="3-大型企业项目（100-个服务）"><a href="#3-大型企业项目（100-个服务）" class="headerlink" title="3. 大型企业项目（100+个服务）"></a>3. 大型企业项目（100+个服务）</h3><p><strong>推荐：Kubernetes 或 OpenShift</strong></p>
<ul>
<li>强大的扩展能力</li>
<li>丰富的企业级功能</li>
<li>完善的监控和日志系统</li>
</ul>
<h3 id="4-混合工作负载"><a href="#4-混合工作负载" class="headerlink" title="4. 混合工作负载"></a>4. 混合工作负载</h3><p><strong>推荐：Apache Mesos</strong></p>
<ul>
<li>支持容器和非容器化应用</li>
<li>高效的资源利用</li>
<li>灵活的调度策略</li>
</ul>
<h1 id="四、容器编排最佳实践"><a href="#四、容器编排最佳实践" class="headerlink" title="四、容器编排最佳实践"></a>四、容器编排最佳实践</h1><h2 id="（一）设计原则"><a href="#（一）设计原则" class="headerlink" title="（一）设计原则"></a>（一）设计原则</h2><h3 id="1-无状态设计"><a href="#1-无状态设计" class="headerlink" title="1. 无状态设计"></a>1. 无状态设计</h3><p>应用应该设计为无状态的，所有状态信息存储在外部数据库或缓存中。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无状态应用示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">stateless-app</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">stateless-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">stateless-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">myapp:latest</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DATABASE_URL</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">db-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">url</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">REDIS_URL</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">cache-config</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">redis-url</span></span><br></pre></td></tr></table></figure>

<h3 id="2-健康检查"><a href="#2-健康检查" class="headerlink" title="2. 健康检查"></a>2. 健康检查</h3><p>为每个容器配置适当的健康检查，确保系统能够及时发现和处理故障。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 健康检查配置示例</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">web-app</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">    <span class="attr">livenessProbe:</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">readinessProbe:</span></span><br><span class="line">      <span class="attr">httpGet:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">      <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<h3 id="3-资源限制"><a href="#3-资源限制" class="headerlink" title="3. 资源限制"></a>3. 资源限制</h3><p>为容器设置合适的资源请求和限制，避免资源争用。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 资源限制示例</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">myapp:latest</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">requests:</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">&quot;256Mi&quot;</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">&quot;250m&quot;</span></span><br><span class="line">      <span class="attr">limits:</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">&quot;512Mi&quot;</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）安全最佳实践"><a href="#（二）安全最佳实践" class="headerlink" title="（二）安全最佳实践"></a>（二）安全最佳实践</h2><h3 id="1-最小权限原则"><a href="#1-最小权限原则" class="headerlink" title="1. 最小权限原则"></a>1. 最小权限原则</h3><p>使用RBAC（基于角色的访问控制）限制容器和用户的权限。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># RBAC配置示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  <span class="attr">resources:</span> [<span class="string">&quot;pods&quot;</span>]</span><br><span class="line">  <span class="attr">verbs:</span> [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;list&quot;</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">jane</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>

<h3 id="2-网络策略"><a href="#2-网络策略" class="headerlink" title="2. 网络策略"></a>2. 网络策略</h3><p>使用网络策略限制容器间的通信，实现网络隔离。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络策略示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">NetworkPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">deny-all</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">podSelector:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">policyTypes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Ingress</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Egress</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">NetworkPolicy</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">allow-web-to-db</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">production</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">podSelector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">database</span></span><br><span class="line">  <span class="attr">policyTypes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Ingress</span></span><br><span class="line">  <span class="attr">ingress:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">from:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">podSelector:</span></span><br><span class="line">        <span class="attr">matchLabels:</span></span><br><span class="line">          <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">5432</span></span><br></pre></td></tr></table></figure>

<h3 id="3-镜像安全"><a href="#3-镜像安全" class="headerlink" title="3. 镜像安全"></a>3. 镜像安全</h3><p>使用可信的镜像仓库，定期扫描镜像漏洞，使用最小化的基础镜像。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安全的Dockerfile示例</span></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.14</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> addgroup -g 1001 -S appgroup &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">    adduser -u 1001 -S appuser -G appgroup</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --<span class="built_in">chown</span>=appuser:appgroup app /app</span></span><br><span class="line"><span class="keyword">USER</span> appuser</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;/app&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）监控与日志"><a href="#（三）监控与日志" class="headerlink" title="（三）监控与日志"></a>（三）监控与日志</h2><h3 id="1-监控指标"><a href="#1-监控指标" class="headerlink" title="1. 监控指标"></a>1. 监控指标</h3><p>建立完善的监控体系，监控关键指标。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Prometheus监控配置示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceMonitor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">app-monitor</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web-app</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="string">metrics</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/metrics</span></span><br></pre></td></tr></table></figure>

<h3 id="2-日志收集"><a href="#2-日志收集" class="headerlink" title="2. 日志收集"></a>2. 日志收集</h3><p>集中收集和分析容器日志。</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Fluentd日志收集配置示例</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">fluentd-config</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">fluent.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    &lt;source&gt;</span></span><br><span class="line"><span class="string">      @type tail</span></span><br><span class="line"><span class="string">      path /var/log/containers/*.log</span></span><br><span class="line"><span class="string">      pos_file /var/log/fluentd-containers.log.pos</span></span><br><span class="line"><span class="string">      tag kubernetes.*</span></span><br><span class="line"><span class="string">      format json</span></span><br><span class="line"><span class="string">    &lt;/source&gt;</span></span><br><span class="line"><span class="string"></span>    </span><br><span class="line">    <span class="string">&lt;match</span> <span class="string">kubernetes.**&gt;</span></span><br><span class="line">      <span class="string">@type</span> <span class="string">elasticsearch</span></span><br><span class="line">      <span class="string">host</span> <span class="string">elasticsearch.logging.svc.cluster.local</span></span><br><span class="line">      <span class="string">port</span> <span class="number">9200</span></span><br><span class="line">      <span class="string">index_name</span> <span class="string">kubernetes</span></span><br><span class="line">    <span class="string">&lt;/match&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="五、总结与展望"><a href="#五、总结与展望" class="headerlink" title="五、总结与展望"></a>五、总结与展望</h1><h2 id="（一）选择建议"><a href="#（一）选择建议" class="headerlink" title="（一）选择建议"></a>（一）选择建议</h2><p>选择合适的容器编排工具需要考虑以下因素：</p>
<ol>
<li><strong>团队技能水平</strong>：选择团队能够掌握的工具</li>
<li><strong>项目规模</strong>：根据应用复杂度选择合适的工具</li>
<li><strong>性能要求</strong>：考虑延迟、吞吐量等性能指标</li>
<li><strong>预算限制</strong>：评估学习成本和运维成本</li>
<li><strong>生态系统</strong>：考虑工具的生态完整性</li>
</ol>
<h2 id="（二）发展趋势"><a href="#（二）发展趋势" class="headerlink" title="（二）发展趋势"></a>（二）发展趋势</h2><p>容器编排技术正朝着以下方向发展：</p>
<ol>
<li><strong>Serverless容器</strong>：如AWS Fargate、Google Cloud Run</li>
<li><strong>边缘计算</strong>：支持边缘设备的轻量级编排</li>
<li><strong>AI&#x2F;ML工作负载</strong>：针对机器学习优化的编排能力</li>
<li><strong>多云管理</strong>：跨云平台的统一编排</li>
<li><strong>安全增强</strong>：零信任网络、运行时安全等</li>
</ol>
<h2 id="（三）学习路径"><a href="#（三）学习路径" class="headerlink" title="（三）学习路径"></a>（三）学习路径</h2><p>对于想要学习容器编排的开发者，建议按以下路径学习：</p>
<ol>
<li><strong>基础知识</strong>：容器技术、Docker基础</li>
<li><strong>选择工具</strong>：根据需求选择Kubernetes或其他工具</li>
<li><strong>实践项目</strong>：通过实际项目加深理解</li>
<li><strong>进阶学习</strong>：监控、安全、性能优化等高级主题</li>
<li><strong>持续跟进</strong>：关注技术发展趋势</li>
</ol>
<p>容器编排技术已经成为现代应用部署的标准实践，掌握这些技术对于开发者和运维工程师来说都是必不可少的技能。希望本文能够帮助读者更好地理解和选择适合的容器编排工具。</p>
<div class="note info flat"><p><strong>相关文章推荐</strong></p>
<ul>
<li><a href="/posts/%E5%AD%A6%E4%B9%A0/Docker%E8%AF%A6%E8%A7%A3%EF%BC%9A%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%9A%84%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5/">Docker详解：容器技术的原理与实践</a></li>
<li><a href="/posts/%E5%AD%A6%E4%B9%A0/Kubernetes-K8s-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/">Kubernetes (K8s) 基础入门笔记</a></li>
<li><a href="/posts/%E5%AD%A6%E4%B9%A0/%E4%BA%91%E8%AE%A1%E7%AE%97%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3%EF%BC%9AIaaS%E3%80%81PaaS%E3%80%81SaaS%E5%85%A8%E9%9D%A2%E8%A7%A3%E6%9E%90/">云计算服务模式详解：IaaS、PaaS、SaaS全面解析</a></li>
<li><a href="/posts/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5/">微服务架构设计与实践</a></li>
</ul>
</div>

<a class="btn-beautify blue" href="https://kubernetes.io/docs/" title="Kubernetes官方文档"><i class="far fa-hand-point-right"></i><span>Kubernetes官方文档</span></a>
<a class="btn-beautify green" href="https://docs.docker.com/engine/swarm/" title="Docker Swarm文档"><i class="far fa-hand-point-right"></i><span>Docker Swarm文档</span></a>
<a class="btn-beautify orange" href="http://mesos.apache.org/" title="Apache Mesos"><i class="far fa-hand-point-right"></i><span>Apache Mesos</span></a>

<h1 id="六、实战案例：部署微服务应用"><a href="#六、实战案例：部署微服务应用" class="headerlink" title="六、实战案例：部署微服务应用"></a>六、实战案例：部署微服务应用</h1><h2 id="（一）场景描述"><a href="#（一）场景描述" class="headerlink" title="（一）场景描述"></a>（一）场景描述</h2><p>假设我们要部署一个电商系统，包含以下微服务：</p>
<ul>
<li><strong>前端服务</strong>：React应用，提供用户界面</li>
<li><strong>API网关</strong>：路由和认证服务</li>
<li><strong>用户服务</strong>：用户管理和认证</li>
<li><strong>商品服务</strong>：商品信息管理</li>
<li><strong>订单服务</strong>：订单处理</li>
<li><strong>数据库</strong>：MySQL和Redis</li>
</ul>
<h2 id="（二）Kubernetes部署方案"><a href="#（二）Kubernetes部署方案" class="headerlink" title="（二）Kubernetes部署方案"></a>（二）Kubernetes部署方案</h2><h3 id="1-命名空间和资源配额"><a href="#1-命名空间和资源配额" class="headerlink" title="1. 命名空间和资源配额"></a>1. 命名空间和资源配额</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># namespace.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ecommerce</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ecommerce-quota</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hard:</span></span><br><span class="line">    <span class="attr">requests.cpu:</span> <span class="string">&quot;4&quot;</span></span><br><span class="line">    <span class="attr">requests.memory:</span> <span class="string">8Gi</span></span><br><span class="line">    <span class="attr">limits.cpu:</span> <span class="string">&quot;8&quot;</span></span><br><span class="line">    <span class="attr">limits.memory:</span> <span class="string">16Gi</span></span><br><span class="line">    <span class="attr">persistentvolumeclaims:</span> <span class="string">&quot;4&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-配置管理"><a href="#2-配置管理" class="headerlink" title="2. 配置管理"></a>2. 配置管理</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configmap.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">app-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">database.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    db.host=mysql-service</span></span><br><span class="line"><span class="string">    db.port=3306</span></span><br><span class="line"><span class="string">    db.name=ecommerce</span></span><br><span class="line"><span class="string"></span>  <span class="attr">redis.properties:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    redis.host=redis-service</span></span><br><span class="line"><span class="string">    redis.port=6379</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">db-secret</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">cm9vdA==</span>  <span class="comment"># base64编码的&quot;root&quot;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">cGFzc3dvcmQ=</span>  <span class="comment"># base64编码的&quot;password&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-数据库部署"><a href="#3-数据库部署" class="headerlink" title="3. 数据库部署"></a>3. 数据库部署</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql-deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mysql:8.0</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">db-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_DATABASE</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">ecommerce</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-storage</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;1Gi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;2Gi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;1000m&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-storage</span></span><br><span class="line">        <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">          <span class="attr">claimName:</span> <span class="string">mysql-pvc</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">3306</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure>

<h3 id="4-微服务部署"><a href="#4-微服务部署" class="headerlink" title="4. 微服务部署"></a>4. 微服务部署</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># user-service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">user-service</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">ecommerce/user-service:v1.0</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DB_HOST</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">app-config</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">database.properties</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">DB_PASSWORD</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">secretKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">db-secret</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">password</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;256Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;250m&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;512Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;500m&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br></pre></td></tr></table></figure>

<h3 id="5-API网关和负载均衡"><a href="#5-API网关和负载均衡" class="headerlink" title="5. API网关和负载均衡"></a>5. API网关和负载均衡</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># api-gateway.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">api-gateway</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.21</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-config</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/nginx/conf.d</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;128Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;100m&quot;</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">&quot;256Mi&quot;</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">&quot;200m&quot;</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">nginx-config</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">default.conf:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    upstream user-service &#123;</span></span><br><span class="line"><span class="string">        server user-service:80;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    upstream product-service &#123;</span></span><br><span class="line"><span class="string">        server product-service:80;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    upstream order-service &#123;</span></span><br><span class="line"><span class="string">        server order-service:80;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="string">server</span> &#123;</span><br><span class="line">        <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/api/users/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://user-service/;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/api/products/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://product-service/;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="string">location</span> <span class="string">/api/orders/</span> &#123;</span><br><span class="line">            <span class="string">proxy_pass</span> <span class="string">http://order-service/;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">Host</span> <span class="string">$host;</span></span><br><span class="line">            <span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">LoadBalancer</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）Docker-Swarm部署方案"><a href="#（三）Docker-Swarm部署方案" class="headerlink" title="（三）Docker Swarm部署方案"></a>（三）Docker Swarm部署方案</h2><h3 id="1-初始化Swarm集群"><a href="#1-初始化Swarm集群" class="headerlink" title="1. 初始化Swarm集群"></a>1. 初始化Swarm集群</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在管理节点上初始化Swarm</span></span><br><span class="line">docker swarm init --advertise-addr 192.168.1.100</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在工作节点上加入集群</span></span><br><span class="line">docker swarm <span class="built_in">join</span> --token SWMTKN-1-xxx 192.168.1.100:2377</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群状态</span></span><br><span class="line">docker node <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<h3 id="2-创建网络和存储"><a href="#2-创建网络和存储" class="headerlink" title="2. 创建网络和存储"></a>2. 创建网络和存储</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建overlay网络</span></span><br><span class="line">docker network create --driver overlay ecommerce-network</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建存储卷</span></span><br><span class="line">docker volume create mysql-data</span><br><span class="line">docker volume create redis-data</span><br></pre></td></tr></table></figure>

<h3 id="3-Docker-Compose文件"><a href="#3-Docker-Compose文件" class="headerlink" title="3. Docker Compose文件"></a>3. Docker Compose文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker-compose.yml</span></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:8.0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">password</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">ecommerce</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql-data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">manager</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">2G</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;1.0&#x27;</span></span><br><span class="line">        <span class="attr">reservations:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">1G</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis-data:/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">512M</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">user-service:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ecommerce/user-service:v1.0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">DB_HOST:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">DB_PASSWORD:</span> <span class="string">password</span></span><br><span class="line">      <span class="attr">REDIS_HOST:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">        <span class="attr">failure_action:</span> <span class="string">rollback</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">5s</span></span><br><span class="line">        <span class="attr">max_attempts:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">512M</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line">        <span class="attr">reservations:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">256M</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.25&#x27;</span></span><br><span class="line">    <span class="attr">healthcheck:</span></span><br><span class="line">      <span class="attr">test:</span> [<span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;curl&quot;</span>, <span class="string">&quot;-f&quot;</span>, <span class="string">&quot;http://localhost:8080/health&quot;</span>]</span><br><span class="line">      <span class="attr">interval:</span> <span class="string">30s</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">retries:</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">product-service:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ecommerce/product-service:v1.0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">DB_HOST:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">DB_PASSWORD:</span> <span class="string">password</span></span><br><span class="line">      <span class="attr">REDIS_HOST:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">limits:</span></span><br><span class="line">          <span class="attr">memory:</span> <span class="string">512M</span></span><br><span class="line">          <span class="attr">cpus:</span> <span class="string">&#x27;0.5&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">order-service:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ecommerce/order-service:v1.0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">DB_HOST:</span> <span class="string">mysql</span></span><br><span class="line">      <span class="attr">DB_PASSWORD:</span> <span class="string">password</span></span><br><span class="line">      <span class="attr">REDIS_HOST:</span> <span class="string">redis</span></span><br><span class="line">      <span class="attr">USER_SERVICE_URL:</span> <span class="string">http://user-service:8080</span></span><br><span class="line">      <span class="attr">PRODUCT_SERVICE_URL:</span> <span class="string">http://product-service:8080</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">api-gateway:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx:1.21</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source:</span> <span class="string">nginx_config</span></span><br><span class="line">        <span class="attr">target:</span> <span class="string">/etc/nginx/conf.d/default.conf</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">node.role</span> <span class="string">==</span> <span class="string">manager</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">frontend:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">ecommerce/frontend:v1.0</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">API_URL:</span> <span class="string">http://api-gateway</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ecommerce-network</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">ecommerce-network:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">overlay</span></span><br><span class="line">    <span class="attr">attachable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">mysql-data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">redis-data:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">local</span></span><br><span class="line"></span><br><span class="line"><span class="attr">configs:</span></span><br><span class="line">  <span class="attr">nginx_config:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="4-部署和管理"><a href="#4-部署和管理" class="headerlink" title="4. 部署和管理"></a>4. 部署和管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建nginx配置</span></span><br><span class="line">docker config create nginx_config nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署应用栈</span></span><br><span class="line">docker stack deploy -c docker-compose.yml ecommerce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">docker service <span class="built_in">ls</span></span><br><span class="line">docker stack services ecommerce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展服务</span></span><br><span class="line">docker service scale ecommerce_user-service=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新服务</span></span><br><span class="line">docker service update --image ecommerce/user-service:v1.1 ecommerce_user-service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务日志</span></span><br><span class="line">docker service logs ecommerce_user-service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除应用栈</span></span><br><span class="line">docker stack <span class="built_in">rm</span> ecommerce</span><br></pre></td></tr></table></figure>

<h2 id="（四）性能优化和监控"><a href="#（四）性能优化和监控" class="headerlink" title="（四）性能优化和监控"></a>（四）性能优化和监控</h2><h3 id="1-资源监控"><a href="#1-资源监控" class="headerlink" title="1. 资源监控"></a>1. 资源监控</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># prometheus-config.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">prometheus-config</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitoring</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">prometheus.yml:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    global:</span></span><br><span class="line"><span class="string">      scrape_interval: 15s</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="attr">scrape_configs:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">&#x27;kubernetes-pods&#x27;</span></span><br><span class="line">      <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">      <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_scrape</span>]</span><br><span class="line">        <span class="attr">action:</span> <span class="string">keep</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span> [<span class="string">__meta_kubernetes_pod_annotation_prometheus_io_path</span>]</span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__metrics_path__</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">(.+)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-自动扩缩容"><a href="#2-自动扩缩容" class="headerlink" title="2. 自动扩缩容"></a>2. 自动扩缩容</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hpa.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">autoscaling/v2</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">HorizontalPodAutoscaler</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">user-service-hpa</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">scaleTargetRef:</span></span><br><span class="line">    <span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">user-service</span></span><br><span class="line">  <span class="attr">minReplicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">maxReplicas:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Resource</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">cpu</span></span><br><span class="line">      <span class="attr">target:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">Utilization</span></span><br><span class="line">        <span class="attr">averageUtilization:</span> <span class="number">70</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Resource</span></span><br><span class="line">    <span class="attr">resource:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">memory</span></span><br><span class="line">      <span class="attr">target:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">Utilization</span></span><br><span class="line">        <span class="attr">averageUtilization:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">behavior:</span></span><br><span class="line">    <span class="attr">scaleDown:</span></span><br><span class="line">      <span class="attr">stabilizationWindowSeconds:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">policies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Percent</span></span><br><span class="line">        <span class="attr">value:</span> <span class="number">10</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">60</span></span><br><span class="line">    <span class="attr">scaleUp:</span></span><br><span class="line">      <span class="attr">stabilizationWindowSeconds:</span> <span class="number">0</span></span><br><span class="line">      <span class="attr">policies:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Percent</span></span><br><span class="line">        <span class="attr">value:</span> <span class="number">100</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">15</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">Pods</span></span><br><span class="line">        <span class="attr">value:</span> <span class="number">4</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">15</span></span><br><span class="line">      <span class="attr">selectPolicy:</span> <span class="string">Max</span></span><br></pre></td></tr></table></figure>

<h3 id="3-服务网格集成"><a href="#3-服务网格集成" class="headerlink" title="3. 服务网格集成"></a>3. 服务网格集成</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># istio-gateway.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Gateway</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ecommerce-gateway</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">istio:</span> <span class="string">ingressgateway</span></span><br><span class="line">  <span class="attr">servers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span></span><br><span class="line">      <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">HTTP</span></span><br><span class="line">    <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ecommerce.example.com</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.istio.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">VirtualService</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ecommerce-vs</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ecommerce</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hosts:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ecommerce.example.com</span></span><br><span class="line">  <span class="attr">gateways:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ecommerce-gateway</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">/api/users</span></span><br><span class="line">    <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">user-service</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">fault:</span></span><br><span class="line">      <span class="attr">delay:</span></span><br><span class="line">        <span class="attr">percentage:</span></span><br><span class="line">          <span class="attr">value:</span> <span class="number">0.1</span></span><br><span class="line">        <span class="attr">fixedDelay:</span> <span class="string">5s</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">match:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uri:</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">/api/products</span></span><br><span class="line">    <span class="attr">route:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">destination:</span></span><br><span class="line">        <span class="attr">host:</span> <span class="string">product-service</span></span><br><span class="line">        <span class="attr">port:</span></span><br><span class="line">          <span class="attr">number:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">retries:</span></span><br><span class="line">      <span class="attr">attempts:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">perTryTimeout:</span> <span class="string">2s</span></span><br></pre></td></tr></table></figure>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://kubernetes.io/docs/">Kubernetes官方文档</a></li>
<li><a href="https://docs.docker.com/engine/swarm/">Docker Swarm官方文档</a></li>
<li><a href="http://mesos.apache.org/documentation/">Apache Mesos官方文档</a></li>
<li><a href="https://www.nomadproject.io/docs">HashiCorp Nomad官方文档</a></li>
<li><a href="https://docs.openshift.com/">Red Hat OpenShift官方文档</a></li>
<li><a href="https://landscape.cncf.io/">CNCF云原生技术栈</a></li>
<li><a href="https://book.douban.com/subject/26902153/">《Kubernetes权威指南》</a></li>
<li><a href="https://book.douban.com/subject/26894736/">《Docker深入浅出》</a></li>
<li><a href="https://istio.io/latest/docs/">Istio服务网格官方文档</a></li>
<li><a href="https://prometheus.io/docs/">Prometheus监控系统文档</a></li>
</ol>
<hr>
<h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><p>[^1]: CNCF Annual Survey 2023: <a href="https://www.cncf.io/reports/cncf-annual-survey-2023/">https://www.cncf.io/reports/cncf-annual-survey-2023/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ol class="series-items"><li><a href="/2025/08/14/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%9]]>
    </summary>
    
      <category term="微服务" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="Kubernetes" scheme="https://hexo.blog.uwakeme.tech/tags/Kubernetes/"/>
    
      <category term="容器编排" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="Docker Swarm" scheme="https://hexo.blog.uwakeme.tech/tags/Docker-Swarm/"/>
    
      <category term="云原生" scheme="https://hexo.blog.uwakeme.tech/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Java】MyBatis生态系统深度解析：从原生框架到多表关联查询的源码剖析]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/12/Java/%E3%80%90Java%E3%80%91MyBatis%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%8E%9F%E7%94%9F%E6%A1%86%E6%9E%B6%E5%88%B0%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%BA%90%E7%A0%81%E5%89%96%E6%9E%90/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/12/Java/【Java】MyBatis生态系统深度解析：从原生框架到多表关联查询的源码剖析/</id>
    <published>2025-08-11T16:00:00.000Z</published>
    <updated>2025-08-12T07:06:50.349Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在Java持久层技术体系中，MyBatis生态系统经历了从原生MyBatis到MyBatis Plus，再到MyBatis Plus Join的演进历程。每一次演进都解决了特定的痛点，提升了开发效率。本文将深入分析这三个框架的核心架构、源码实现原理，以及它们在多表关联查询方面的技术创新。</p>
<blockquote>
<p><strong>系列文章导航</strong></p>
<a class="btn-beautify blue larger" href="https://example.com/mybatis-basic" title="MyBatis基础教程"><i class="far fa-hand-point-right"></i><span>MyBatis基础教程</span></a>
<a class="btn-beautify green larger" href="https://example.com/mybatis-plus-guide" title="MyBatis Plus实战指南"><i class="far fa-hand-point-right"></i><span>MyBatis Plus实战指南</span></a>
</blockquote>
<h1 id="一、MyBatis生态系统架构演进"><a href="#一、MyBatis生态系统架构演进" class="headerlink" title="一、MyBatis生态系统架构演进"></a>一、MyBatis生态系统架构演进</h1><h2 id="（一）MyBatis原生框架架构"><a href="#（一）MyBatis原生框架架构" class="headerlink" title="（一）MyBatis原生框架架构"></a>（一）MyBatis原生框架架构</h2><p>MyBatis作为一款优秀的持久层框架，采用了半自动化的ORM设计理念，其核心架构包含以下几个关键组件：</p>
<h3 id="核心组件架构图"><a href="#核心组件架构图" class="headerlink" title="核心组件架构图"></a>核心组件架构图</h3><pre class="mermaid">graph TB
    A[SqlSessionFactory] --> B[SqlSession]
    B --> C[Executor]
    C --> D[StatementHandler]
    C --> E[ParameterHandler]
    C --> F[ResultSetHandler]
    D --> G[PreparedStatement]
    H[Configuration] --> A
    I[MapperRegistry] --> H
    J[MappedStatement] --> H</pre>

<h3 id="关键组件源码分析"><a href="#关键组件源码分析" class="headerlink" title="关键组件源码分析"></a>关键组件源码分析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SqlSessionFactory：会话工厂，MyBatis的核心入口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SqlSessionFactory</span> &#123;</span><br><span class="line">    <span class="comment">// 创建SqlSession的核心方法，支持多种重载形式</span></span><br><span class="line">    SqlSession <span class="title function_">openSession</span><span class="params">()</span>;</span><br><span class="line">    SqlSession <span class="title function_">openSession</span><span class="params">(<span class="type">boolean</span> autoCommit)</span>;</span><br><span class="line">    SqlSession <span class="title function_">openSession</span><span class="params">(Connection connection)</span>;</span><br><span class="line">    SqlSession <span class="title function_">openSession</span><span class="params">(TransactionIsolationLevel level)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DefaultSqlSessionFactory：SqlSessionFactory的默认实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DefaultSqlSessionFactory</span> <span class="keyword">implements</span> <span class="title class_">SqlSessionFactory</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Configuration configuration;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DefaultSqlSessionFactory</span><span class="params">(Configuration configuration)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.configuration = configuration;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> SqlSession <span class="title function_">openSession</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 从配置中获取默认的执行器类型和事务隔离级别</span></span><br><span class="line">        <span class="keyword">return</span> openSessionFromDataSource(configuration.getDefaultExecutorType(), <span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> SqlSession <span class="title function_">openSessionFromDataSource</span><span class="params">(ExecutorType execType, </span></span><br><span class="line"><span class="params">                                               TransactionIsolationLevel level, </span></span><br><span class="line"><span class="params">                                               <span class="type">boolean</span> autoCommit)</span> &#123;</span><br><span class="line">        <span class="type">Transaction</span> <span class="variable">tx</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 获取环境配置，包含数据源和事务管理器</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Environment</span> <span class="variable">environment</span> <span class="operator">=</span> configuration.getEnvironment();</span><br><span class="line">            <span class="keyword">final</span> <span class="type">TransactionFactory</span> <span class="variable">transactionFactory</span> <span class="operator">=</span> getTransactionFactoryFromEnvironment(environment);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 创建事务对象</span></span><br><span class="line">            tx = transactionFactory.newTransaction(environment.getDataSource(), level, autoCommit);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 创建执行器，这是MyBatis执行SQL的核心组件</span></span><br><span class="line">            <span class="keyword">final</span> <span class="type">Executor</span> <span class="variable">executor</span> <span class="operator">=</span> configuration.newExecutor(tx, execType);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 返回DefaultSqlSession实例</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DefaultSqlSession</span>(configuration, executor, autoCommit);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            closeTransaction(tx);</span><br><span class="line">            <span class="keyword">throw</span> ExceptionFactory.wrapException(<span class="string">&quot;Error opening session.  Cause: &quot;</span> + e, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            ErrorContext.instance().reset();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Executor执行器架构"><a href="#Executor执行器架构" class="headerlink" title="Executor执行器架构"></a>Executor执行器架构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Executor：SQL执行器接口，定义了所有数据库操作的抽象方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Executor</span> &#123;</span><br><span class="line">    <span class="type">ResultHandler</span> <span class="variable">NO_RESULT_HANDLER</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新操作（包括INSERT、UPDATE、DELETE）</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(MappedStatement ms, Object parameter)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查询操作，支持结果处理器和分页</span></span><br><span class="line">    &lt;E&gt; List&lt;E&gt; <span class="title function_">query</span><span class="params">(MappedStatement ms, Object parameter, RowBounds rowBounds, </span></span><br><span class="line"><span class="params">                      ResultHandler resultHandler, CacheKey cacheKey, BoundSql boundSql)</span> </span><br><span class="line">                      <span class="keyword">throws</span> SQLException;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查询单个结果</span></span><br><span class="line">    &lt;E&gt; Cursor&lt;E&gt; <span class="title function_">queryCursor</span><span class="params">(MappedStatement ms, Object parameter, RowBounds rowBounds)</span> </span><br><span class="line">                              <span class="keyword">throws</span> SQLException;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 批量执行</span></span><br><span class="line">    List&lt;BatchResult&gt; <span class="title function_">flushStatements</span><span class="params">()</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 事务提交和回滚</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">commit</span><span class="params">(<span class="type">boolean</span> required)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">rollback</span><span class="params">(<span class="type">boolean</span> required)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 缓存相关操作</span></span><br><span class="line">    CacheKey <span class="title function_">createCacheKey</span><span class="params">(MappedStatement ms, Object parameterObject, </span></span><br><span class="line"><span class="params">                           RowBounds rowBounds, BoundSql boundSql)</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isCached</span><span class="params">(MappedStatement ms, CacheKey key)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">clearLocalCache</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// BaseExecutor：执行器的抽象基类，实现了通用逻辑</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseExecutor</span> <span class="keyword">implements</span> <span class="title class_">Executor</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Log</span> <span class="variable">log</span> <span class="operator">=</span> LogFactory.getLog(BaseExecutor.class);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> Transaction transaction;</span><br><span class="line">    <span class="keyword">protected</span> Executor wrapper;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 延迟加载队列</span></span><br><span class="line">    <span class="keyword">protected</span> ConcurrentLinkedQueue&lt;DeferredLoad&gt; deferredLoads;</span><br><span class="line">    <span class="comment">// 本地缓存，实现一级缓存功能</span></span><br><span class="line">    <span class="keyword">protected</span> PerpetualCache localCache;</span><br><span class="line">    <span class="comment">// 本地输出参数缓存</span></span><br><span class="line">    <span class="keyword">protected</span> PerpetualCache localOutputParameterCache;</span><br><span class="line">    <span class="keyword">protected</span> Configuration configuration;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查询计数器，用于嵌套查询检测</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">int</span> queryStack;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> closed;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="title function_">BaseExecutor</span><span class="params">(Configuration configuration, Transaction transaction)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.transaction = transaction;</span><br><span class="line">        <span class="built_in">this</span>.deferredLoads = <span class="keyword">new</span> <span class="title class_">ConcurrentLinkedQueue</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.localCache = <span class="keyword">new</span> <span class="title class_">PerpetualCache</span>(<span class="string">&quot;LocalCache&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.localOutputParameterCache = <span class="keyword">new</span> <span class="title class_">PerpetualCache</span>(<span class="string">&quot;LocalOutputParameterCache&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.closed = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">this</span>.configuration = configuration;</span><br><span class="line">        <span class="built_in">this</span>.wrapper = <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">query</span><span class="params">(MappedStatement ms, Object parameter, RowBounds rowBounds, </span></span><br><span class="line"><span class="params">                            ResultHandler resultHandler, CacheKey key, BoundSql boundSql)</span> </span><br><span class="line">                            <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        ErrorContext.instance().resource(ms.getResource()).activity(<span class="string">&quot;executing a query&quot;</span>).object(ms.getId());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (closed) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ExecutorException</span>(<span class="string">&quot;Executor was closed.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果是嵌套查询的第一层，清除本地缓存</span></span><br><span class="line">        <span class="keyword">if</span> (queryStack == <span class="number">0</span> &amp;&amp; ms.isFlushCacheRequired()) &#123;</span><br><span class="line">            clearLocalCache();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        List&lt;E&gt; list;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            queryStack++;</span><br><span class="line">            <span class="comment">// 先从一级缓存中获取结果</span></span><br><span class="line">            list = resultHandler == <span class="literal">null</span> ? (List&lt;E&gt;) localCache.getObject(key) : <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (list != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 处理存储过程的输出参数</span></span><br><span class="line">                handleLocallyCachedOutputParameters(ms, key, parameter, boundSql);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 缓存未命中，从数据库查询</span></span><br><span class="line">                list = queryFromDatabase(ms, parameter, rowBounds, resultHandler, key, boundSql);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            queryStack--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理延迟加载</span></span><br><span class="line">        <span class="keyword">if</span> (queryStack == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (DeferredLoad deferredLoad : deferredLoads) &#123;</span><br><span class="line">                deferredLoad.load();</span><br><span class="line">            &#125;</span><br><span class="line">            deferredLoads.clear();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 如果本地缓存作用域是STATEMENT，清除缓存</span></span><br><span class="line">            <span class="keyword">if</span> (configuration.getLocalCacheScope() == LocalCacheScope.STATEMENT) &#123;</span><br><span class="line">                clearLocalCache();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从数据库查询数据的核心方法</span></span><br><span class="line">    <span class="keyword">private</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">queryFromDatabase</span><span class="params">(MappedStatement ms, Object parameter, </span></span><br><span class="line"><span class="params">                                         RowBounds rowBounds, ResultHandler resultHandler, </span></span><br><span class="line"><span class="params">                                         CacheKey key, BoundSql boundSql)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        List&lt;E&gt; list;</span><br><span class="line">        <span class="comment">// 先在缓存中放入占位符，防止循环引用</span></span><br><span class="line">        localCache.putObject(key, EXECUTION_PLACEHOLDER);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 调用子类实现的具体查询方法</span></span><br><span class="line">            list = doQuery(ms, parameter, rowBounds, resultHandler, boundSql);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 移除占位符</span></span><br><span class="line">            localCache.removeObject(key);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将查询结果放入一级缓存</span></span><br><span class="line">        localCache.putObject(key, list);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果是存储过程，缓存输出参数</span></span><br><span class="line">        <span class="keyword">if</span> (ms.getStatementType() == StatementType.CALLABLE) &#123;</span><br><span class="line">            localOutputParameterCache.putObject(key, parameter);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 抽象方法，由子类实现具体的查询逻辑</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> &lt;E&gt; List&lt;E&gt; <span class="title function_">doQuery</span><span class="params">(MappedStatement ms, Object parameter, </span></span><br><span class="line"><span class="params">                                          RowBounds rowBounds, ResultHandler resultHandler, </span></span><br><span class="line"><span class="params">                                          BoundSql boundSql)</span> <span class="keyword">throws</span> SQLException;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）MyBatis-Plus架构增强"><a href="#（二）MyBatis-Plus架构增强" class="headerlink" title="（二）MyBatis Plus架构增强"></a>（二）MyBatis Plus架构增强</h2><p>MyBatis Plus在MyBatis基础上进行了大量增强，其核心设计理念是”只做增强不做改变”。</p>
<h3 id="核心架构组件"><a href="#核心架构组件" class="headerlink" title="核心架构组件"></a>核心架构组件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// BaseMapper：MyBatis Plus的核心接口，提供了丰富的CRUD方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">Mapper</span>&lt;T&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 插入一条记录</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">insert</span><span class="params">(T entity)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据ID删除</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteById</span><span class="params">(Serializable id)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据实体条件删除</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除（根据ID批量删除）</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据ID修改</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据whereEntity条件，更新记录</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据ID查询</span></span><br><span class="line">    T <span class="title function_">selectById</span><span class="params">(Serializable id)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查询（根据ID批量查询）</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据entity条件，查询一条记录</span></span><br><span class="line">    T <span class="title function_">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据Wrapper条件，查询总记录数</span></span><br><span class="line">    Long <span class="title function_">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据entity条件，查询全部记录</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据Wrapper条件，查询全部记录</span></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMaps</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据Wrapper条件，查询全部记录（返回Object列表）</span></span><br><span class="line">    List&lt;Object&gt; <span class="title function_">selectObjs</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据entity条件，查询全部记录（并翻页）</span></span><br><span class="line">    IPage&lt;T&gt; <span class="title function_">selectPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据Wrapper条件，查询全部记录（并翻页）</span></span><br><span class="line">    IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectMapsPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="条件构造器核心实现"><a href="#条件构造器核心实现" class="headerlink" title="条件构造器核心实现"></a>条件构造器核心实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AbstractWrapper：条件构造器的抽象基类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractWrapper</span>&lt;T, R, Children <span class="keyword">extends</span> <span class="title class_">AbstractWrapper</span>&lt;T, R, Children&gt;&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ISqlSegment</span>, Wrapper&lt;T&gt;, Serializable &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 实体类型</span></span><br><span class="line">    <span class="keyword">protected</span> T entity;</span><br><span class="line">    <span class="comment">// 实体类的Class对象</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;T&gt; entityClass;</span><br><span class="line">    <span class="comment">// SQL片段表达式</span></span><br><span class="line">    <span class="keyword">protected</span> MergeSegments expression;</span><br><span class="line">    <span class="comment">// 参数序号</span></span><br><span class="line">    <span class="keyword">protected</span> AtomicInteger paramNameSeq;</span><br><span class="line">    <span class="comment">// 参数名值对</span></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; paramNameValuePairs;</span><br><span class="line">    <span class="comment">// 最后的SQL片段</span></span><br><span class="line">    <span class="keyword">protected</span> SharedString lastSql;</span><br><span class="line">    <span class="comment">// SQL注释</span></span><br><span class="line">    <span class="keyword">protected</span> SharedString sqlComment;</span><br><span class="line">    <span class="comment">// SQL起始位置</span></span><br><span class="line">    <span class="keyword">protected</span> SharedString sqlFirst;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T <span class="title function_">getEntity</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">setEntity</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.entity = entity;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Class&lt;T&gt; <span class="title function_">getEntityClass</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (entityClass == <span class="literal">null</span> &amp;&amp; entity != <span class="literal">null</span>) &#123;</span><br><span class="line">            entityClass = (Class&lt;T&gt;) entity.getClass();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> entityClass;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">setEntityClass</span><span class="params">(Class&lt;T&gt; entityClass)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (entityClass != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.entityClass = entityClass;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取格式化后的SQL语句</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSqlSegment</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> expression.getSqlSegment() + lastSql.getStringValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取SQL注释</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSqlComment</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(sqlComment.getStringValue())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;/*&quot;</span> + StringUtils.trim(sqlComment.getStringValue()) + <span class="string">&quot;*/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取SQL起始片段</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSqlFirst</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(sqlFirst.getStringValue())) &#123;</span><br><span class="line">            <span class="keyword">return</span> StringUtils.trim(sqlFirst.getStringValue());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// QueryWrapper：查询条件构造器的具体实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QueryWrapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">AbstractWrapper</span>&lt;T, String, QueryWrapper&lt;T&gt;&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">Query</span>&lt;QueryWrapper&lt;T&gt;, T, String&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查询字段</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">SharedString</span> <span class="variable">sqlSelect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SharedString</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">QueryWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>((T) <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">QueryWrapper</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setEntity(entity);</span><br><span class="line">        <span class="built_in">super</span>.initNeed();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">QueryWrapper</span><span class="params">(Class&lt;T&gt; entityClass)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setEntityClass(entityClass);</span><br><span class="line">        <span class="built_in">super</span>.initNeed();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置查询字段</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> QueryWrapper&lt;T&gt; <span class="title function_">select</span><span class="params">(String... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ArrayUtils.isNotEmpty(columns)) &#123;</span><br><span class="line">            <span class="built_in">this</span>.sqlSelect.setStringValue(String.join(StringPool.COMMA, columns));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置查询字段（排除某些字段）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> QueryWrapper&lt;T&gt; <span class="title function_">select</span><span class="params">(Class&lt;T&gt; entityClass, Predicate&lt;TableFieldInfo&gt; predicate)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (entityClass == <span class="literal">null</span>) &#123;</span><br><span class="line">            entityClass = getEntityClass();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setEntityClass(entityClass);</span><br><span class="line">        &#125;</span><br><span class="line">        Assert.notNull(entityClass, <span class="string">&quot;entityClass can not be null&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.sqlSelect.setStringValue(TableInfoHelper.getTableInfo(entityClass).chooseSelect(predicate));</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSqlSelect</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSelect.getStringValue();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建实例的静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; QueryWrapper&lt;T&gt; <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> QueryWrapper&lt;T&gt; <span class="title function_">instance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;(getEntity(), getEntityClass(), paramNameSeq, paramNameValuePairs,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">MergeSegments</span>(), SharedString.emptyString(), SharedString.emptyString(), SharedString.emptyString());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.clear();</span><br><span class="line">        sqlSelect.toEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="IService服务层接口"><a href="#IService服务层接口" class="headerlink" title="IService服务层接口"></a>IService服务层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IService：MyBatis Plus提供的服务层基础接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IService</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认批次提交数量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">DEFAULT_BATCH_SIZE</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入一条记录（选择字段，策略插入）</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().insert(entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入（批量）</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> saveBatch(entityList, DEFAULT_BATCH_SIZE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入（批量）</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TableId 注解存在更新记录，否插入一条记录</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据updateWrapper尝试更新，否继续执行saveOrUpdate(T)方法</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdate</span><span class="params">(T entity, Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量修改插入</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量修改插入</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">saveOrUpdateBatch</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 entity 条件，删除记录</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">remove</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().delete(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 ID 删除</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeById</span><span class="params">(Serializable id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteById(id));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 columnMap 条件，删除记录</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span> &#123;</span><br><span class="line">        Assert.notEmpty(columnMap, <span class="string">&quot;error: columnMap must not be empty&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteByMap(columnMap));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除（根据ID 批量删除）</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">removeByIds</span><span class="params">(Collection&lt;? extends Serializable&gt; idList)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(idList)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().deleteBatchIds(idList));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 UpdateWrapper 条件，更新记录 需要设置sqlset</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(Wrapper&lt;T&gt; updateWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> update(<span class="literal">null</span>, updateWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 whereWrapper 条件，更新记录</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">update</span><span class="params">(T updateEntity, Wrapper&lt;T&gt; whereWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().update(updateEntity, whereWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 ID 选择修改</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">boolean</span> <span class="title function_">updateById</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retBool(getBaseMapper().updateById(entity));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据ID 批量更新</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据ID 批量更新</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">updateBatchById</span><span class="params">(Collection&lt;T&gt; entityList, <span class="type">int</span> batchSize)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 ID 查询</span></span><br><span class="line">    <span class="keyword">default</span> T <span class="title function_">getById</span><span class="params">(Serializable id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper，查询一条记录。结果集，如果是多个会抛出异常，随机取一条加上限制条件 wrapper.last(&quot;LIMIT 1&quot;)</span></span><br><span class="line">    <span class="keyword">default</span> T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getOne(queryWrapper, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">    T <span class="title function_">getOne</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, <span class="type">boolean</span> throwEx)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">    Map&lt;String, Object&gt; <span class="title function_">getMap</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper，查询一条记录</span></span><br><span class="line">    &lt;V&gt; V <span class="title function_">getObj</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> list(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询列表</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">list</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectList(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询（根据ID 批量查询）</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">listByIds</span><span class="params">(Collection&lt;? extends Serializable&gt; idList)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectBatchIds(idList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询（根据 columnMap 条件）</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;T&gt; <span class="title function_">listByMap</span><span class="params">(Map&lt;String, Object&gt; columnMap)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectByMap(columnMap);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有列表</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listMaps(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询列表</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">listMaps</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectMaps(queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询全部记录</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(Function.identity());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询全部记录</span></span><br><span class="line">    <span class="keyword">default</span> &lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(Wrappers.emptyWrapper(), mapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">    <span class="keyword">default</span> List&lt;Object&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> listObjs(queryWrapper, Function.identity());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">    <span class="keyword">default</span> &lt;V&gt; List&lt;V&gt; <span class="title function_">listObjs</span><span class="params">(Wrapper&lt;T&gt; queryWrapper, Function&lt;? <span class="built_in">super</span> Object, V&gt; mapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectObjs(queryWrapper).stream().filter(Objects::nonNull).map(mapper).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无条件分页查询</span></span><br><span class="line">    <span class="keyword">default</span> IPage&lt;T&gt; <span class="title function_">page</span><span class="params">(IPage&lt;T&gt; page)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> page(page, Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件分页查询</span></span><br><span class="line">    <span class="keyword">default</span> IPage&lt;T&gt; <span class="title function_">page</span><span class="params">(IPage&lt;T&gt; page, Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectPage(page, queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无条件分页查询</span></span><br><span class="line">    <span class="keyword">default</span> IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">pageMaps</span><span class="params">(IPage&lt;T&gt; page)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pageMaps(page, Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 条件分页查询</span></span><br><span class="line">    <span class="keyword">default</span> IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">pageMaps</span><span class="params">(IPage&lt;T&gt; page, Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getBaseMapper().selectMapsPage(page, queryWrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询总记录数</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">long</span> <span class="title function_">count</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> count(Wrappers.emptyWrapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line">    <span class="keyword">default</span> <span class="type">long</span> <span class="title function_">count</span><span class="params">(Wrapper&lt;T&gt; queryWrapper)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> SqlHelper.retCount(getBaseMapper().selectCount(queryWrapper));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取对应 entity 的 BaseMapper</span></span><br><span class="line">    BaseMapper&lt;T&gt; <span class="title function_">getBaseMapper</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取 entity 的 class</span></span><br><span class="line">    Class&lt;T&gt; <span class="title function_">getEntityClass</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 链式查询 普通</span></span><br><span class="line">    <span class="keyword">default</span> QueryChainWrapper&lt;T&gt; <span class="title function_">query</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.queryChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 链式查询 lambda 式</span></span><br><span class="line">    <span class="keyword">default</span> LambdaQueryChainWrapper&lt;T&gt; <span class="title function_">lambdaQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.lambdaQueryChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 链式更改 普通</span></span><br><span class="line">    <span class="keyword">default</span> UpdateChainWrapper&lt;T&gt; <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.updateChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 链式更改 lambda 式</span></span><br><span class="line">    <span class="keyword">default</span> LambdaUpdateChainWrapper&lt;T&gt; <span class="title function_">lambdaUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChainWrappers.lambdaUpdateChain(getBaseMapper());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）MyBatis-Plus-Join多表查询架构"><a href="#（三）MyBatis-Plus-Join多表查询架构" class="headerlink" title="（三）MyBatis Plus Join多表查询架构"></a>（三）MyBatis Plus Join多表查询架构</h2><p>MyBatis Plus Join是基于MyBatis Plus的多表查询增强框架，专门解决复杂的关联查询问题。</p>
<h3 id="核心架构设计"><a href="#核心架构设计" class="headerlink" title="核心架构设计"></a>核心架构设计</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MPJBaseMapper：多表查询的基础Mapper接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MPJBaseMapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">    List&lt;T&gt; <span class="title function_">selectJoinList</span><span class="params">(Class&lt;T&gt; clazz, MPJWrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">    &lt;DTO&gt; List&lt;DTO&gt; <span class="title function_">selectJoinList</span><span class="params">(Class&lt;DTO&gt; clazz, MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">    IPage&lt;T&gt; <span class="title function_">selectJoinPage</span><span class="params">(IPage&lt;T&gt; page, Class&lt;T&gt; clazz, MPJWrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">    &lt;DTO&gt; IPage&lt;DTO&gt; <span class="title function_">selectJoinPage</span><span class="params">(IPage&lt;DTO&gt; page, Class&lt;DTO&gt; clazz, MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line">    Long <span class="title function_">selectJoinCount</span><span class="params">(MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询一条记录</span></span><br><span class="line">    &lt;DTO&gt; DTO <span class="title function_">selectJoinOne</span><span class="params">(Class&lt;DTO&gt; clazz, MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectJoinMaps</span><span class="params">(MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">    IPage&lt;Map&lt;String, Object&gt;&gt; <span class="title function_">selectJoinMapsPage</span><span class="params">(IPage&lt;?&gt; page, MPJWrapper&lt;?&gt; wrapper)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// MPJLambdaWrapper：Lambda风格的多表查询条件构造器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MPJLambdaWrapper</span>&lt;T&gt; <span class="keyword">extends</span> <span class="title class_">MPJAbstractLambdaWrapper</span>&lt;T, MPJLambdaWrapper&lt;T&gt;&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">Query</span>&lt;MPJLambdaWrapper&lt;T&gt;, T, SFunction&lt;T, ?&gt;&gt;, Join&lt;MPJLambdaWrapper&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询字段 SQL 片段</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">SharedString</span> <span class="variable">sqlSelect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SharedString</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MPJLambdaWrapper</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>((T) <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MPJLambdaWrapper</span><span class="params">(T entity)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setEntity(entity);</span><br><span class="line">        <span class="built_in">super</span>.initNeed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MPJLambdaWrapper</span><span class="params">(Class&lt;T&gt; entityClass)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setEntityClass(entityClass);</span><br><span class="line">        <span class="built_in">super</span>.initNeed();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询指定字段</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> MPJLambdaWrapper&lt;T&gt; <span class="title function_">select</span><span class="params">(SFunction&lt;T, ?&gt;... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ArrayUtils.isNotEmpty(columns)) &#123;</span><br><span class="line">            <span class="built_in">this</span>.sqlSelect.setStringValue(columnsToString(<span class="literal">false</span>, columns));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询指定字段（支持别名）</span></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">select</span><span class="params">(SFunction&lt;X, ?&gt; column, String alias)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> select(columnToString(column) + <span class="string">&quot; AS &quot;</span> + alias);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询指定字段（支持聚合函数）</span></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectSum</span><span class="params">(SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectFunc(<span class="string">&quot;SUM(%s)&quot;</span>, column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectCount</span><span class="params">(SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectFunc(<span class="string">&quot;COUNT(%s)&quot;</span>, column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectMax</span><span class="params">(SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectFunc(<span class="string">&quot;MAX(%s)&quot;</span>, column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectMin</span><span class="params">(SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectFunc(<span class="string">&quot;MIN(%s)&quot;</span>, column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectAvg</span><span class="params">(SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> selectFunc(<span class="string">&quot;AVG(%s)&quot;</span>, column);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聚合函数的通用实现</span></span><br><span class="line">    <span class="keyword">private</span> &lt;X&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">selectFunc</span><span class="params">(String funcTemplate, SFunction&lt;X, ?&gt; column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> select(String.format(funcTemplate, columnToString(column)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LEFT JOIN 连接</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">leftJoin</span><span class="params">(Class&lt;E&gt; joinClass, SFunction&lt;E, ?&gt; joinField, SFunction&lt;T, ?&gt; mainField)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.LEFT_JOIN, joinClass, joinField, mainField);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RIGHT JOIN 连接</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">rightJoin</span><span class="params">(Class&lt;E&gt; joinClass, SFunction&lt;E, ?&gt; joinField, SFunction&lt;T, ?&gt; mainField)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.RIGHT_JOIN, joinClass, joinField, mainField);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// INNER JOIN 连接</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">innerJoin</span><span class="params">(Class&lt;E&gt; joinClass, SFunction&lt;E, ?&gt; joinField, SFunction&lt;T, ?&gt; mainField)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.INNER_JOIN, joinClass, joinField, mainField);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// JOIN 连接的通用实现</span></span><br><span class="line">    <span class="keyword">private</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">join</span><span class="params">(SqlKeyword sqlKeyword, Class&lt;E&gt; joinClass,</span></span><br><span class="line"><span class="params">                                        SFunction&lt;E, ?&gt; joinField, SFunction&lt;T, ?&gt; mainField)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinTableName</span> <span class="operator">=</span> getTableName(joinClass);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinColumnName</span> <span class="operator">=</span> columnToString(joinField);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">mainColumnName</span> <span class="operator">=</span> columnToString(mainField);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinSql</span> <span class="operator">=</span> String.format(<span class="string">&quot; %s %s ON %s = %s&quot;</span>,</span><br><span class="line">                                           sqlKeyword.getSqlSegment(),</span><br><span class="line">                                           joinTableName,</span><br><span class="line">                                           joinColumnName,</span><br><span class="line">                                           mainColumnName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> doIt(<span class="literal">true</span>, () -&gt; appendSqlSegments(JOIN, () -&gt; joinSql));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 支持复杂的JOIN条件</span></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">leftJoin</span><span class="params">(Class&lt;E&gt; joinClass, Consumer&lt;MPJLambdaWrapper&lt;T&gt;&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.LEFT_JOIN, joinClass, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">rightJoin</span><span class="params">(Class&lt;E&gt; joinClass, Consumer&lt;MPJLambdaWrapper&lt;T&gt;&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.RIGHT_JOIN, joinClass, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">innerJoin</span><span class="params">(Class&lt;E&gt; joinClass, Consumer&lt;MPJLambdaWrapper&lt;T&gt;&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> join(SqlKeyword.INNER_JOIN, joinClass, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复杂JOIN条件的通用实现</span></span><br><span class="line">    <span class="keyword">private</span> &lt;E&gt; MPJLambdaWrapper&lt;T&gt; <span class="title function_">join</span><span class="params">(SqlKeyword sqlKeyword, Class&lt;E&gt; joinClass,</span></span><br><span class="line"><span class="params">                                        Consumer&lt;MPJLambdaWrapper&lt;T&gt;&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinTableName</span> <span class="operator">=</span> getTableName(joinClass);</span><br><span class="line">        <span class="keyword">final</span> MPJLambdaWrapper&lt;T&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;&gt;();</span><br><span class="line">        consumer.accept(wrapper);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinCondition</span> <span class="operator">=</span> wrapper.getCustomSqlSegment();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> <span class="variable">joinSql</span> <span class="operator">=</span> String.format(<span class="string">&quot; %s %s ON %s&quot;</span>,</span><br><span class="line">                                           sqlKeyword.getSqlSegment(),</span><br><span class="line">                                           joinTableName,</span><br><span class="line">                                           joinCondition);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> doIt(<span class="literal">true</span>, () -&gt; appendSqlSegments(JOIN, () -&gt; joinSql));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSqlSelect</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSelect.getStringValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> MPJLambdaWrapper&lt;T&gt; <span class="title function_">instance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;&gt;(getEntity(), getEntityClass(), paramNameSeq, paramNameValuePairs,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">MergeSegments</span>(), SharedString.emptyString(), SharedString.emptyString(), SharedString.emptyString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">clear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.clear();</span><br><span class="line">        sqlSelect.toEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、核心源码实现原理"><a href="#二、核心源码实现原理" class="headerlink" title="二、核心源码实现原理"></a>二、核心源码实现原理</h1><h2 id="（一）SQL解析与构建机制"><a href="#（一）SQL解析与构建机制" class="headerlink" title="（一）SQL解析与构建机制"></a>（一）SQL解析与构建机制</h2><h3 id="MappedStatement构建过程"><a href="#MappedStatement构建过程" class="headerlink" title="MappedStatement构建过程"></a>MappedStatement构建过程</h3><p>MyBatis中的每个SQL语句都会被封装成一个MappedStatement对象，这是SQL执行的核心数据结构。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MappedStatement：MyBatis中SQL语句的封装对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">MappedStatement</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String resource;           <span class="comment">// 资源文件路径</span></span><br><span class="line">    <span class="keyword">private</span> Configuration configuration; <span class="comment">// 全局配置对象</span></span><br><span class="line">    <span class="keyword">private</span> String id;                 <span class="comment">// 语句ID，通常是接口方法的全限定名</span></span><br><span class="line">    <span class="keyword">private</span> Integer fetchSize;         <span class="comment">// 获取记录数</span></span><br><span class="line">    <span class="keyword">private</span> Integer timeout;           <span class="comment">// 超时时间</span></span><br><span class="line">    <span class="keyword">private</span> StatementType statementType; <span class="comment">// 语句类型：STATEMENT、PREPARED、CALLABLE</span></span><br><span class="line">    <span class="keyword">private</span> ResultSetType resultSetType; <span class="comment">// 结果集类型</span></span><br><span class="line">    <span class="keyword">private</span> SqlSource sqlSource;       <span class="comment">// SQL源码对象</span></span><br><span class="line">    <span class="keyword">private</span> Cache cache;               <span class="comment">// 二级缓存</span></span><br><span class="line">    <span class="keyword">private</span> ParameterMap parameterMap; <span class="comment">// 参数映射</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;ResultMap&gt; resultMaps; <span class="comment">// 结果映射列表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> flushCacheRequired; <span class="comment">// 是否刷新缓存</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> useCache;          <span class="comment">// 是否使用缓存</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> resultOrdered;     <span class="comment">// 结果是否排序</span></span><br><span class="line">    <span class="keyword">private</span> SqlCommandType sqlCommandType; <span class="comment">// SQL命令类型：SELECT、INSERT、UPDATE、DELETE</span></span><br><span class="line">    <span class="keyword">private</span> KeyGenerator keyGenerator; <span class="comment">// 主键生成器</span></span><br><span class="line">    <span class="keyword">private</span> String[] keyProperties;    <span class="comment">// 主键属性</span></span><br><span class="line">    <span class="keyword">private</span> String[] keyColumns;       <span class="comment">// 主键列</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> hasNestedResultMaps; <span class="comment">// 是否有嵌套结果映射</span></span><br><span class="line">    <span class="keyword">private</span> String databaseId;         <span class="comment">// 数据库ID</span></span><br><span class="line">    <span class="keyword">private</span> Log statementLog;          <span class="comment">// 日志对象</span></span><br><span class="line">    <span class="keyword">private</span> LanguageDriver lang;       <span class="comment">// 语言驱动器</span></span><br><span class="line">    <span class="keyword">private</span> String[] resultSets;       <span class="comment">// 结果集名称</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有构造函数，通过Builder模式创建</span></span><br><span class="line">    MappedStatement() &#123;</span><br><span class="line">        <span class="comment">// intentionally empty</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Builder模式构建MappedStatement</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">Builder</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">MappedStatement</span> <span class="variable">mappedStatement</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MappedStatement</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">Builder</span><span class="params">(Configuration configuration, String id, SqlSource sqlSource, SqlCommandType sqlCommandType)</span> &#123;</span><br><span class="line">            mappedStatement.configuration = configuration;</span><br><span class="line">            mappedStatement.id = id;</span><br><span class="line">            mappedStatement.sqlSource = sqlSource;</span><br><span class="line">            mappedStatement.statementType = StatementType.PREPARED;</span><br><span class="line">            mappedStatement.resultSetType = ResultSetType.DEFAULT;</span><br><span class="line">            mappedStatement.parameterMap = <span class="keyword">new</span> <span class="title class_">ParameterMap</span>.Builder(configuration, <span class="string">&quot;defaultParameterMap&quot;</span>, <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;()).build();</span><br><span class="line">            mappedStatement.resultMaps = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            mappedStatement.sqlCommandType = sqlCommandType;</span><br><span class="line">            mappedStatement.keyGenerator = configuration.isUseGeneratedKeys() &amp;&amp; SqlCommandType.INSERT.equals(sqlCommandType) ? Jdbc3KeyGenerator.INSTANCE : NoKeyGenerator.INSTANCE;</span><br><span class="line">            <span class="type">String</span> <span class="variable">logId</span> <span class="operator">=</span> id;</span><br><span class="line">            <span class="keyword">if</span> (configuration.getLogPrefix() != <span class="literal">null</span>) &#123;</span><br><span class="line">                logId = configuration.getLogPrefix() + id;</span><br><span class="line">            &#125;</span><br><span class="line">            mappedStatement.statementLog = LogFactory.getLog(logId);</span><br><span class="line">            mappedStatement.lang = configuration.getDefaultScriptingLanguageInstance();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">resource</span><span class="params">(String resource)</span> &#123;</span><br><span class="line">            mappedStatement.resource = resource;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">fetchSize</span><span class="params">(Integer fetchSize)</span> &#123;</span><br><span class="line">            mappedStatement.fetchSize = fetchSize;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">timeout</span><span class="params">(Integer timeout)</span> &#123;</span><br><span class="line">            mappedStatement.timeout = timeout;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">statementType</span><span class="params">(StatementType statementType)</span> &#123;</span><br><span class="line">            mappedStatement.statementType = statementType;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">resultSetType</span><span class="params">(ResultSetType resultSetType)</span> &#123;</span><br><span class="line">            mappedStatement.resultSetType = resultSetType;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">cache</span><span class="params">(Cache cache)</span> &#123;</span><br><span class="line">            mappedStatement.cache = cache;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">flushCacheRequired</span><span class="params">(<span class="type">boolean</span> flushCacheRequired)</span> &#123;</span><br><span class="line">            mappedStatement.flushCacheRequired = flushCacheRequired;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">useCache</span><span class="params">(<span class="type">boolean</span> useCache)</span> &#123;</span><br><span class="line">            mappedStatement.useCache = useCache;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">resultOrdered</span><span class="params">(<span class="type">boolean</span> resultOrdered)</span> &#123;</span><br><span class="line">            mappedStatement.resultOrdered = resultOrdered;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">keyGenerator</span><span class="params">(KeyGenerator keyGenerator)</span> &#123;</span><br><span class="line">            mappedStatement.keyGenerator = keyGenerator;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">keyProperty</span><span class="params">(String keyProperty)</span> &#123;</span><br><span class="line">            mappedStatement.keyProperties = delimitedStringToArray(keyProperty);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">keyColumn</span><span class="params">(String keyColumn)</span> &#123;</span><br><span class="line">            mappedStatement.keyColumns = delimitedStringToArray(keyColumn);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">databaseId</span><span class="params">(String databaseId)</span> &#123;</span><br><span class="line">            mappedStatement.databaseId = databaseId;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">lang</span><span class="params">(LanguageDriver driver)</span> &#123;</span><br><span class="line">            mappedStatement.lang = driver;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Builder <span class="title function_">resultSets</span><span class="params">(String resultSet)</span> &#123;</span><br><span class="line">            mappedStatement.resultSets = delimitedStringToArray(resultSet);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建MappedStatement对象</span></span><br><span class="line">        <span class="keyword">public</span> MappedStatement <span class="title function_">build</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">assert</span> mappedStatement.configuration != <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">assert</span> mappedStatement.id != <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">assert</span> mappedStatement.sqlSource != <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">assert</span> mappedStatement.lang != <span class="literal">null</span>;</span><br><span class="line">            mappedStatement.resultMaps = Collections.unmodifiableList(mappedStatement.resultMaps);</span><br><span class="line">            <span class="keyword">return</span> mappedStatement;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取BoundSql对象，包含最终的SQL语句和参数</span></span><br><span class="line">    <span class="keyword">public</span> BoundSql <span class="title function_">getBoundSql</span><span class="params">(Object parameterObject)</span> &#123;</span><br><span class="line">        <span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> sqlSource.getBoundSql(parameterObject);</span><br><span class="line">        List&lt;ParameterMapping&gt; parameterMappings = boundSql.getParameterMappings();</span><br><span class="line">        <span class="keyword">if</span> (parameterMappings == <span class="literal">null</span> || parameterMappings.isEmpty()) &#123;</span><br><span class="line">            boundSql = <span class="keyword">new</span> <span class="title class_">BoundSql</span>(configuration, boundSql.getSql(), parameterMap.getParameterMappings(), parameterObject);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查嵌套结果映射</span></span><br><span class="line">        <span class="keyword">for</span> (ParameterMapping pm : boundSql.getParameterMappings()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">rmId</span> <span class="operator">=</span> pm.getResultMapId();</span><br><span class="line">            <span class="keyword">if</span> (rmId != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">ResultMap</span> <span class="variable">rm</span> <span class="operator">=</span> configuration.getResultMap(rmId);</span><br><span class="line">                <span class="keyword">if</span> (rm != <span class="literal">null</span>) &#123;</span><br><span class="line">                    hasNestedResultMaps |= rm.hasNestedResultMaps();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> boundSql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="动态SQL解析机制"><a href="#动态SQL解析机制" class="headerlink" title="动态SQL解析机制"></a>动态SQL解析机制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SqlSource：SQL源码接口，负责根据参数对象生成BoundSql</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SqlSource</span> &#123;</span><br><span class="line">    BoundSql <span class="title function_">getBoundSql</span><span class="params">(Object parameterObject)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DynamicSqlSource：动态SQL源码实现，处理包含动态元素的SQL</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicSqlSource</span> <span class="keyword">implements</span> <span class="title class_">SqlSource</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Configuration configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> SqlNode rootSqlNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DynamicSqlSource</span><span class="params">(Configuration configuration, SqlNode rootSqlNode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.configuration = configuration;</span><br><span class="line">        <span class="built_in">this</span>.rootSqlNode = rootSqlNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> BoundSql <span class="title function_">getBoundSql</span><span class="params">(Object parameterObject)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建动态上下文，用于构建SQL</span></span><br><span class="line">        <span class="type">DynamicContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DynamicContext</span>(configuration, parameterObject);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 应用SQL节点，生成SQL字符串</span></span><br><span class="line">        rootSqlNode.apply(context);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建SQL源码解析器</span></span><br><span class="line">        <span class="type">SqlSourceBuilder</span> <span class="variable">sqlSourceParser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSourceBuilder</span>(configuration);</span><br><span class="line">        Class&lt;?&gt; parameterType = parameterObject == <span class="literal">null</span> ? Object.class : parameterObject.getClass();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解析SQL，处理#&#123;&#125;占位符</span></span><br><span class="line">        <span class="type">SqlSource</span> <span class="variable">sqlSource</span> <span class="operator">=</span> sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取最终的BoundSql对象</span></span><br><span class="line">        <span class="type">BoundSql</span> <span class="variable">boundSql</span> <span class="operator">=</span> sqlSource.getBoundSql(parameterObject);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将动态上下文中的绑定参数添加到BoundSql中</span></span><br><span class="line">        context.getBindings().forEach(boundSql::setAdditionalParameter);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> boundSql;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DynamicContext：动态SQL构建上下文</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DynamicContext</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PARAMETER_OBJECT_KEY</span> <span class="operator">=</span> <span class="string">&quot;_parameter&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DATABASE_ID_KEY</span> <span class="operator">=</span> <span class="string">&quot;_databaseId&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 注册OGNL方法访问器，支持在动态SQL中调用静态方法</span></span><br><span class="line">        OgnlRuntime.setPropertyAccessor(ContextMap.class, <span class="keyword">new</span> <span class="title class_">ContextAccessor</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ContextMap bindings;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">StringJoiner</span> <span class="variable">sqlBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringJoiner</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">uniqueNumber</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DynamicContext</span><span class="params">(Configuration configuration, Object parameterObject)</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化绑定参数映射</span></span><br><span class="line">        <span class="keyword">if</span> (parameterObject != <span class="literal">null</span> &amp;&amp; !(parameterObject <span class="keyword">instanceof</span> Map)) &#123;</span><br><span class="line">            <span class="comment">// 如果参数对象不是Map，则通过反射获取其属性</span></span><br><span class="line">            <span class="type">MetaObject</span> <span class="variable">metaObject</span> <span class="operator">=</span> configuration.newMetaObject(parameterObject);</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">existsTypeHandler</span> <span class="operator">=</span> configuration.getTypeHandlerRegistry().hasTypeHandler(parameterObject.getClass());</span><br><span class="line">            bindings = <span class="keyword">new</span> <span class="title class_">ContextMap</span>(metaObject, existsTypeHandler);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            bindings = <span class="keyword">new</span> <span class="title class_">ContextMap</span>(<span class="literal">null</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加内置参数</span></span><br><span class="line">        bindings.put(PARAMETER_OBJECT_KEY, parameterObject);</span><br><span class="line">        bindings.put(DATABASE_ID_KEY, configuration.getDatabaseId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getBindings</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bindings;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">bind</span><span class="params">(String name, Object value)</span> &#123;</span><br><span class="line">        bindings.put(name, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">appendSql</span><span class="params">(String sql)</span> &#123;</span><br><span class="line">        sqlBuilder.add(sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSql</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sqlBuilder.toString().trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getUniqueNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> uniqueNumber++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上下文映射，支持OGNL表达式访问</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ContextMap</span> <span class="keyword">extends</span> <span class="title class_">HashMap</span>&lt;String, Object&gt; &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">2977601501966151582L</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> MetaObject parameterMetaObject;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">boolean</span> fallbackParameterObject;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="title function_">ContextMap</span><span class="params">(MetaObject parameterMetaObject, <span class="type">boolean</span> fallbackParameterObject)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.parameterMetaObject = parameterMetaObject;</span><br><span class="line">            <span class="built_in">this</span>.fallbackParameterObject = fallbackParameterObject;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">get</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">strKey</span> <span class="operator">=</span> (String) key;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">super</span>.containsKey(strKey)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">super</span>.get(strKey);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (parameterMetaObject == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fallbackParameterObject &amp;&amp; !parameterMetaObject.hasGetter(strKey)) &#123;</span><br><span class="line">                <span class="keyword">return</span> parameterMetaObject.getOriginalObject();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// issue #61 do not modify the context when reading</span></span><br><span class="line">                <span class="keyword">return</span> parameterMetaObject.getValue(strKey);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上下文访问器，用于OGNL表达式</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ContextAccessor</span> <span class="keyword">implements</span> <span class="title class_">PropertyAccessor</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">getProperty</span><span class="params">(Map context, Object target, Object name)</span> &#123;</span><br><span class="line">            <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> (Map) target;</span><br><span class="line"></span><br><span class="line">            <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> map.get(name);</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(name) || result != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="type">Object</span> <span class="variable">parameterObject</span> <span class="operator">=</span> map.get(PARAMETER_OBJECT_KEY);</span><br><span class="line">            <span class="keyword">if</span> (parameterObject != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> OgnlRuntime.getProperty(context, parameterObject, name);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (OgnlException e) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;Error evaluating expression &#x27;&quot;</span> + name + <span class="string">&quot;&#x27;. Cause: &quot;</span> + e, e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperty</span><span class="params">(Map context, Object target, Object name, Object value)</span> &#123;</span><br><span class="line">            Map&lt;Object, Object&gt; map = (Map&lt;Object, Object&gt;) target;</span><br><span class="line">            map.put(name, value);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getSourceAccessor</span><span class="params">(OgnlContext arg0, Object arg1, Object arg2)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">getSourceSetter</span><span class="params">(OgnlContext arg0, Object arg1, Object arg2)</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）MyBatis-Plus条件构造器实现原理"><a href="#（二）MyBatis-Plus条件构造器实现原理" class="headerlink" title="（二）MyBatis Plus条件构造器实现原理"></a>（二）MyBatis Plus条件构造器实现原理</h2><h3 id="AbstractWrapper核心机制"><a href="#AbstractWrapper核心机制" class="headerlink" title="AbstractWrapper核心机制"></a>AbstractWrapper核心机制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// AbstractWrapper：条件构造器的核心实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">AbstractWrapper</span>&lt;T, R, Children <span class="keyword">extends</span> <span class="title class_">AbstractWrapper</span>&lt;T, R, Children&gt;&gt;</span><br><span class="line">        <span class="keyword">implements</span> <span class="title class_">ISqlSegment</span>, Wrapper&lt;T&gt;, Serializable &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// SQL片段表达式容器</span></span><br><span class="line">    <span class="keyword">protected</span> MergeSegments expression;</span><br><span class="line">    <span class="comment">// 参数序号生成器</span></span><br><span class="line">    <span class="keyword">protected</span> AtomicInteger paramNameSeq;</span><br><span class="line">    <span class="comment">// 参数名值对映射</span></span><br><span class="line">    <span class="keyword">protected</span> Map&lt;String, Object&gt; paramNameValuePairs;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">initNeed</span><span class="params">()</span> &#123;</span><br><span class="line">        paramNameSeq = <span class="keyword">new</span> <span class="title class_">AtomicInteger</span>(<span class="number">0</span>);</span><br><span class="line">        paramNameValuePairs = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        expression = <span class="keyword">new</span> <span class="title class_">MergeSegments</span>();</span><br><span class="line">        lastSql = SharedString.emptyString();</span><br><span class="line">        sqlComment = SharedString.emptyString();</span><br><span class="line">        sqlFirst = SharedString.emptyString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加条件的核心方法</span></span><br><span class="line">    <span class="keyword">protected</span> Children <span class="title function_">addCondition</span><span class="params">(<span class="type">boolean</span> condition, ISqlSegment... sqlSegments)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">            expression.add(sqlSegments);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 嵌套条件处理</span></span><br><span class="line">    <span class="keyword">protected</span> Children <span class="title function_">doIt</span><span class="params">(<span class="type">boolean</span> condition, DoSomething something)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">            something.doIt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">eq</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), EQ,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不等于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">ne</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), NE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">gt</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), GT,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 大于等于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">ge</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), GE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 小于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">lt</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), LT,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 小于等于条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">le</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), LE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// BETWEEN条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">between</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val1, Object val2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), BETWEEN,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val1), AND,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NOT BETWEEN条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">notBetween</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val1, Object val2)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), NOT_BETWEEN,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val1), AND,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val2));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LIKE条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">like</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), LIKE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NOT LIKE条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">notLike</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), NOT_LIKE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, val));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// LEFT LIKE条件（%value）</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">likeLeft</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), LIKE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, SqlUtils.concatLike(val, SqlLike.LEFT)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RIGHT LIKE条件（value%）</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">likeRight</span><span class="params">(<span class="type">boolean</span> condition, R column, Object val)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), LIKE,</span><br><span class="line">                           () -&gt; formatParam(<span class="literal">null</span>, SqlUtils.concatLike(val, SqlLike.RIGHT)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IS NULL条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">isNull</span><span class="params">(<span class="type">boolean</span> condition, R column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), IS_NULL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IS NOT NULL条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">isNotNull</span><span class="params">(<span class="type">boolean</span> condition, R column)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), IS_NOT_NULL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IN条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">in</span><span class="params">(<span class="type">boolean</span> condition, R column, Collection&lt;?&gt; coll)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(coll)) &#123;</span><br><span class="line">            <span class="keyword">return</span> typedThis;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), IN, inExpression(coll));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NOT IN条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">notIn</span><span class="params">(<span class="type">boolean</span> condition, R column, Collection&lt;?&gt; coll)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(coll)) &#123;</span><br><span class="line">            <span class="keyword">return</span> typedThis;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), NOT_IN, inExpression(coll));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IN子查询条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">inSql</span><span class="params">(<span class="type">boolean</span> condition, R column, String inValue)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), IN,</span><br><span class="line">                           () -&gt; String.format(<span class="string">&quot;(%s)&quot;</span>, inValue));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// NOT IN子查询条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">notInSql</span><span class="params">(<span class="type">boolean</span> condition, R column, String inValue)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, columnToSqlSegment(column), NOT_IN,</span><br><span class="line">                           () -&gt; String.format(<span class="string">&quot;(%s)&quot;</span>, inValue));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// GROUP BY条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">groupBy</span><span class="params">(<span class="type">boolean</span> condition, R... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ArrayUtils.isEmpty(columns)) &#123;</span><br><span class="line">            <span class="keyword">return</span> typedThis;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, GROUP_BY,</span><br><span class="line">                           () -&gt; columnsToString(columns));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ORDER BY ASC条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">orderByAsc</span><span class="params">(<span class="type">boolean</span> condition, R... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orderBy(condition, <span class="literal">true</span>, columns);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ORDER BY DESC条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">orderByDesc</span><span class="params">(<span class="type">boolean</span> condition, R... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orderBy(condition, <span class="literal">false</span>, columns);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ORDER BY通用实现</span></span><br><span class="line">    <span class="keyword">protected</span> Children <span class="title function_">orderBy</span><span class="params">(<span class="type">boolean</span> condition, <span class="type">boolean</span> isAsc, R... columns)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ArrayUtils.isEmpty(columns)) &#123;</span><br><span class="line">            <span class="keyword">return</span> typedThis;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, ORDER_BY,</span><br><span class="line">                           () -&gt; Arrays.stream(columns)</span><br><span class="line">                                      .map(<span class="built_in">this</span>::columnToString)</span><br><span class="line">                                      .map(i -&gt; i + (isAsc ? StringPool.SPACE + ASC.getSqlSegment() :</span><br><span class="line">                                                           StringPool.SPACE + DESC.getSqlSegment()))</span><br><span class="line">                                      .collect(joining(StringPool.COMMA)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// HAVING条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">having</span><span class="params">(<span class="type">boolean</span> condition, String sqlHaving, Object... params)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, HAVING,</span><br><span class="line">                           () -&gt; formatSqlMaybeWithParam(sqlHaving, <span class="literal">null</span>, params));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OR条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">or</span><span class="params">(<span class="type">boolean</span> condition)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, OR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// AND条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">and</span><span class="params">(<span class="type">boolean</span> condition, Consumer&lt;Children&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> and(condition, <span class="literal">true</span>, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OR条件（带嵌套）</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">or</span><span class="params">(<span class="type">boolean</span> condition, Consumer&lt;Children&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> and(condition, <span class="literal">false</span>, consumer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// AND/OR嵌套条件的通用实现</span></span><br><span class="line">    <span class="keyword">protected</span> Children <span class="title function_">and</span><span class="params">(<span class="type">boolean</span> condition, <span class="type">boolean</span> isAnd, Consumer&lt;Children&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="type">Children</span> <span class="variable">instance</span> <span class="operator">=</span> instance();</span><br><span class="line">            consumer.accept(instance);</span><br><span class="line">            <span class="keyword">return</span> addCondition(condition, isAnd ? AND : OR, LEFT_BRACKET,</span><br><span class="line">                               () -&gt; instance.getSqlSegment(), RIGHT_BRACKET);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 嵌套查询条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">nested</span><span class="params">(<span class="type">boolean</span> condition, Consumer&lt;Children&gt; consumer)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, LEFT_BRACKET,</span><br><span class="line">                           () -&gt; &#123;</span><br><span class="line">                               <span class="keyword">final</span> <span class="type">Children</span> <span class="variable">instance</span> <span class="operator">=</span> instance();</span><br><span class="line">                               consumer.accept(instance);</span><br><span class="line">                               <span class="keyword">return</span> instance.getSqlSegment();</span><br><span class="line">                           &#125;, RIGHT_BRACKET);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 应用条件（用于复用条件）</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">apply</span><span class="params">(<span class="type">boolean</span> condition, String applySql, Object... values)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, () -&gt; formatSqlMaybeWithParam(applySql, <span class="literal">null</span>, values));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 最后的SQL片段（通常用于LIMIT等）</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">last</span><span class="params">(<span class="type">boolean</span> condition, String lastSql)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (condition) &#123;</span><br><span class="line">            <span class="built_in">this</span>.lastSql.setStringValue(StringPool.SPACE + lastSql);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> typedThis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存在子查询条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">exists</span><span class="params">(<span class="type">boolean</span> condition, String existsSql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, EXISTS,</span><br><span class="line">                           () -&gt; String.format(<span class="string">&quot;(%s)&quot;</span>, existsSql));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不存在子查询条件</span></span><br><span class="line">    <span class="keyword">public</span> Children <span class="title function_">notExists</span><span class="params">(<span class="type">boolean</span> condition, String existsSql)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> addCondition(condition, NOT_EXISTS,</span><br><span class="line">                           () -&gt; String.format(<span class="string">&quot;(%s)&quot;</span>, existsSql));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、实际应用案例与性能对比"><a href="#三、实际应用案例与性能对比" class="headerlink" title="三、实际应用案例与性能对比"></a>三、实际应用案例与性能对比</h1><h2 id="（一）电商系统多表查询实战"><a href="#（一）电商系统多表查询实战" class="headerlink" title="（一）电商系统多表查询实战"></a>（一）电商系统多表查询实战</h2><h3 id="业务场景分析"><a href="#业务场景分析" class="headerlink" title="业务场景分析"></a>业务场景分析</h3><p>在电商系统中，订单查询是一个典型的多表关联场景，涉及用户表、订单表、商品表、订单项表等多个实体。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实体类定义</span></span><br><span class="line"><span class="meta">@TableName(&quot;t_user&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;username&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;email&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;phone&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;create_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;status&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableName(&quot;t_order&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;order_no&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;user_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;total_amount&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalAmount;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;order_status&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer orderStatus;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;create_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;update_time&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableName(&quot;t_order_item&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderItem</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;order_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long orderId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;product_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long productId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;product_name&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;product_price&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal productPrice;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;quantity&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;subtotal&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal subtotal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableName(&quot;t_product&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;product_name&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;product_code&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String productCode;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;category_id&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Long categoryId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;price&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;stock&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer stock;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(&quot;status&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询结果VO</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDetailVO</span> &#123;</span><br><span class="line">    <span class="comment">// 订单信息</span></span><br><span class="line">    <span class="keyword">private</span> Long orderId;</span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalAmount;</span><br><span class="line">    <span class="keyword">private</span> Integer orderStatus;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户信息</span></span><br><span class="line">    <span class="keyword">private</span> Long userId;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订单项信息</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;OrderItemVO&gt; orderItems;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">OrderItemVO</span> &#123;</span><br><span class="line">        <span class="keyword">private</span> Long itemId;</span><br><span class="line">        <span class="keyword">private</span> Long productId;</span><br><span class="line">        <span class="keyword">private</span> String productName;</span><br><span class="line">        <span class="keyword">private</span> String productCode;</span><br><span class="line">        <span class="keyword">private</span> BigDecimal productPrice;</span><br><span class="line">        <span class="keyword">private</span> Integer quantity;</span><br><span class="line">        <span class="keyword">private</span> BigDecimal subtotal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MyBatis原生实现方案"><a href="#MyBatis原生实现方案" class="headerlink" title="MyBatis原生实现方案"></a>MyBatis原生实现方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UserMapper.java</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">OrderMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Order&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复杂的订单详情查询，使用原生MyBatis实现</span></span><br><span class="line">    <span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">        SELECT</span></span><br><span class="line"><span class="meta">            o.id as order_id,</span></span><br><span class="line"><span class="meta">            o.order_no,</span></span><br><span class="line"><span class="meta">            o.total_amount,</span></span><br><span class="line"><span class="meta">            o.order_status,</span></span><br><span class="line"><span class="meta">            o.create_time as order_create_time,</span></span><br><span class="line"><span class="meta">            u.id as user_id,</span></span><br><span class="line"><span class="meta">            u.username,</span></span><br><span class="line"><span class="meta">            u.email,</span></span><br><span class="line"><span class="meta">            u.phone,</span></span><br><span class="line"><span class="meta">            oi.id as item_id,</span></span><br><span class="line"><span class="meta">            oi.product_id,</span></span><br><span class="line"><span class="meta">            oi.product_name,</span></span><br><span class="line"><span class="meta">            oi.product_price,</span></span><br><span class="line"><span class="meta">            oi.quantity,</span></span><br><span class="line"><span class="meta">            oi.subtotal,</span></span><br><span class="line"><span class="meta">            p.product_code</span></span><br><span class="line"><span class="meta">        FROM t_order o</span></span><br><span class="line"><span class="meta">        LEFT JOIN t_user u ON o.user_id = u.id</span></span><br><span class="line"><span class="meta">        LEFT JOIN t_order_item oi ON o.id = oi.order_id</span></span><br><span class="line"><span class="meta">        LEFT JOIN t_product p ON oi.product_id = p.id</span></span><br><span class="line"><span class="meta">        WHERE o.id = #&#123;orderId&#125;</span></span><br><span class="line"><span class="meta">        ORDER BY oi.id</span></span><br><span class="line"><span class="meta">    &quot;&quot;&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;orderId&quot;, column = &quot;order_id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;orderNo&quot;, column = &quot;order_no&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;totalAmount&quot;, column = &quot;total_amount&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;orderStatus&quot;, column = &quot;order_status&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;createTime&quot;, column = &quot;order_create_time&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;userId&quot;, column = &quot;user_id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;username&quot;, column = &quot;username&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;email&quot;, column = &quot;email&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;phone&quot;, column = &quot;phone&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;orderItems&quot;, column = &quot;order_id&quot;,</span></span><br><span class="line"><span class="meta">                many = @Many(select = &quot;selectOrderItemsByOrderId&quot;))</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    OrderDetailVO <span class="title function_">selectOrderDetailById</span><span class="params">(<span class="meta">@Param(&quot;orderId&quot;)</span> Long orderId)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询订单项的子查询</span></span><br><span class="line">    <span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">        SELECT</span></span><br><span class="line"><span class="meta">            oi.id as item_id,</span></span><br><span class="line"><span class="meta">            oi.product_id,</span></span><br><span class="line"><span class="meta">            oi.product_name,</span></span><br><span class="line"><span class="meta">            oi.product_price,</span></span><br><span class="line"><span class="meta">            oi.quantity,</span></span><br><span class="line"><span class="meta">            oi.subtotal,</span></span><br><span class="line"><span class="meta">            p.product_code</span></span><br><span class="line"><span class="meta">        FROM t_order_item oi</span></span><br><span class="line"><span class="meta">        LEFT JOIN t_product p ON oi.product_id = p.id</span></span><br><span class="line"><span class="meta">        WHERE oi.order_id = #&#123;orderId&#125;</span></span><br><span class="line"><span class="meta">        ORDER BY oi.id</span></span><br><span class="line"><span class="meta">    &quot;&quot;&quot;)</span></span><br><span class="line">    <span class="meta">@Results(&#123;</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;itemId&quot;, column = &quot;item_id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;productId&quot;, column = &quot;product_id&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;productName&quot;, column = &quot;product_name&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;productPrice&quot;, column = &quot;product_price&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;quantity&quot;, column = &quot;quantity&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;subtotal&quot;, column = &quot;subtotal&quot;),</span></span><br><span class="line"><span class="meta">        @Result(property = &quot;productCode&quot;, column = &quot;product_code&quot;)</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    List&lt;OrderDetailVO.OrderItemVO&gt; selectOrderItemsByOrderId(<span class="meta">@Param(&quot;orderId&quot;)</span> Long orderId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询订单列表（带用户信息）</span></span><br><span class="line">    <span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">        &lt;script&gt;</span></span><br><span class="line"><span class="meta">        SELECT</span></span><br><span class="line"><span class="meta">            o.id as order_id,</span></span><br><span class="line"><span class="meta">            o.order_no,</span></span><br><span class="line"><span class="meta">            o.total_amount,</span></span><br><span class="line"><span class="meta">            o.order_status,</span></span><br><span class="line"><span class="meta">            o.create_time as order_create_time,</span></span><br><span class="line"><span class="meta">            u.id as user_id,</span></span><br><span class="line"><span class="meta">            u.username,</span></span><br><span class="line"><span class="meta">            u.email</span></span><br><span class="line"><span class="meta">        FROM t_order o</span></span><br><span class="line"><span class="meta">        LEFT JOIN t_user u ON o.user_id = u.id</span></span><br><span class="line"><span class="meta">        &lt;where&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.userId != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.user_id = #&#123;query.userId&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.orderStatus != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.order_status = #&#123;query.orderStatus&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.startTime != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.create_time &gt;= #&#123;query.startTime&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.endTime != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.create_time &lt;= #&#123;query.endTime&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.orderNo != null and query.orderNo != &#x27;&#x27;&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.order_no LIKE CONCAT(&#x27;%&#x27;, #&#123;query.orderNo&#125;, &#x27;%&#x27;)</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">        &lt;/where&gt;</span></span><br><span class="line"><span class="meta">        ORDER BY o.create_time DESC</span></span><br><span class="line"><span class="meta">        LIMIT #&#123;offset&#125;, #&#123;limit&#125;</span></span><br><span class="line"><span class="meta">        &lt;/script&gt;</span></span><br><span class="line"><span class="meta">    &quot;&quot;&quot;)</span></span><br><span class="line">    List&lt;OrderDetailVO&gt; <span class="title function_">selectOrderListWithPaging</span><span class="params">(<span class="meta">@Param(&quot;query&quot;)</span> OrderQuery query,</span></span><br><span class="line"><span class="params">                                                 <span class="meta">@Param(&quot;offset&quot;)</span> Integer offset,</span></span><br><span class="line"><span class="params">                                                 <span class="meta">@Param(&quot;limit&quot;)</span> Integer limit)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 统计订单总数</span></span><br><span class="line">    <span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">        &lt;script&gt;</span></span><br><span class="line"><span class="meta">        SELECT COUNT(*)</span></span><br><span class="line"><span class="meta">        FROM t_order o</span></span><br><span class="line"><span class="meta">        &lt;where&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.userId != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.user_id = #&#123;query.userId&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.orderStatus != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.order_status = #&#123;query.orderStatus&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.startTime != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.create_time &gt;= #&#123;query.startTime&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.endTime != null&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.create_time &lt;= #&#123;query.endTime&#125;</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">            &lt;if test=&quot;query.orderNo != null and query.orderNo != &#x27;&#x27;&quot;&gt;</span></span><br><span class="line"><span class="meta">                AND o.order_no LIKE CONCAT(&#x27;%&#x27;, #&#123;query.orderNo&#125;, &#x27;%&#x27;)</span></span><br><span class="line"><span class="meta">            &lt;/if&gt;</span></span><br><span class="line"><span class="meta">        &lt;/where&gt;</span></span><br><span class="line"><span class="meta">        &lt;/script&gt;</span></span><br><span class="line"><span class="meta">    &quot;&quot;&quot;)</span></span><br><span class="line">    Long <span class="title function_">countOrderList</span><span class="params">(<span class="meta">@Param(&quot;query&quot;)</span> OrderQuery query)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MyBatis-Plus实现方案"><a href="#MyBatis-Plus实现方案" class="headerlink" title="MyBatis Plus实现方案"></a>MyBatis Plus实现方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// OrderService.java - 使用MyBatis Plus实现</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;OrderMapper, Order&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderItemService orderItemService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductService productService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用MyBatis Plus实现订单详情查询（会产生N+1查询问题）</span></span><br><span class="line">    <span class="keyword">public</span> OrderDetailVO <span class="title function_">getOrderDetailById_V1</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 查询订单基本信息</span></span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> getById(orderId);</span><br><span class="line">        <span class="keyword">if</span> (order == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 查询用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(order.getUserId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 查询订单项列表</span></span><br><span class="line">        List&lt;OrderItem&gt; orderItems = orderItemService.lambdaQuery()</span><br><span class="line">                .eq(OrderItem::getOrderId, orderId)</span><br><span class="line">                .list();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 查询商品信息（这里会产生N次查询）</span></span><br><span class="line">        List&lt;OrderDetailVO.OrderItemVO&gt; itemVOs = orderItems.stream()</span><br><span class="line">                .map(item -&gt; &#123;</span><br><span class="line">                    <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productService.getById(item.getProductId());</span><br><span class="line">                    OrderDetailVO.<span class="type">OrderItemVO</span> <span class="variable">itemVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetailVO</span>.OrderItemVO();</span><br><span class="line">                    BeanUtils.copyProperties(item, itemVO);</span><br><span class="line">                    <span class="keyword">if</span> (product != <span class="literal">null</span>) &#123;</span><br><span class="line">                        itemVO.setProductCode(product.getProductCode());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> itemVO;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. 组装结果</span></span><br><span class="line">        <span class="type">OrderDetailVO</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetailVO</span>();</span><br><span class="line">        BeanUtils.copyProperties(order, result);</span><br><span class="line">        BeanUtils.copyProperties(user, result);</span><br><span class="line">        result.setOrderItems(itemVOs);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 优化版本：使用批量查询减少数据库交互</span></span><br><span class="line">    <span class="keyword">public</span> OrderDetailVO <span class="title function_">getOrderDetailById_V2</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 查询订单基本信息</span></span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> getById(orderId);</span><br><span class="line">        <span class="keyword">if</span> (order == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 查询用户信息</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userService.getById(order.getUserId());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 查询订单项列表</span></span><br><span class="line">        List&lt;OrderItem&gt; orderItems = orderItemService.lambdaQuery()</span><br><span class="line">                .eq(OrderItem::getOrderId, orderId)</span><br><span class="line">                .list();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 批量查询商品信息</span></span><br><span class="line">        List&lt;Long&gt; productIds = orderItems.stream()</span><br><span class="line">                .map(OrderItem::getProductId)</span><br><span class="line">                .distinct()</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        Map&lt;Long, Product&gt; productMap = productService.listByIds(productIds)</span><br><span class="line">                .stream()</span><br><span class="line">                .collect(Collectors.toMap(Product::getId, Function.identity()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. 组装订单项信息</span></span><br><span class="line">        List&lt;OrderDetailVO.OrderItemVO&gt; itemVOs = orderItems.stream()</span><br><span class="line">                .map(item -&gt; &#123;</span><br><span class="line">                    <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMap.get(item.getProductId());</span><br><span class="line">                    OrderDetailVO.<span class="type">OrderItemVO</span> <span class="variable">itemVO</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetailVO</span>.OrderItemVO();</span><br><span class="line">                    BeanUtils.copyProperties(item, itemVO);</span><br><span class="line">                    <span class="keyword">if</span> (product != <span class="literal">null</span>) &#123;</span><br><span class="line">                        itemVO.setProductCode(product.getProductCode());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> itemVO;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 组装结果</span></span><br><span class="line">        <span class="type">OrderDetailVO</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetailVO</span>();</span><br><span class="line">        BeanUtils.copyProperties(order, result);</span><br><span class="line">        BeanUtils.copyProperties(user, result);</span><br><span class="line">        result.setOrderItems(itemVOs);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询订单列表</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;OrderDetailVO&gt; <span class="title function_">getOrderListWithPaging</span><span class="params">(OrderQuery query, Integer current, Integer size)</span> &#123;</span><br><span class="line">        Page&lt;Order&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current, size);</span><br><span class="line"></span><br><span class="line">        LambdaQueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(Objects.nonNull(query.getUserId()), Order::getUserId, query.getUserId())</span><br><span class="line">               .eq(Objects.nonNull(query.getOrderStatus()), Order::getOrderStatus, query.getOrderStatus())</span><br><span class="line">               .ge(Objects.nonNull(query.getStartTime()), Order::getCreateTime, query.getStartTime())</span><br><span class="line">               .le(Objects.nonNull(query.getEndTime()), Order::getCreateTime, query.getEndTime())</span><br><span class="line">               .like(StringUtils.isNotBlank(query.getOrderNo()), Order::getOrderNo, query.getOrderNo())</span><br><span class="line">               .orderByDesc(Order::getCreateTime);</span><br><span class="line"></span><br><span class="line">        IPage&lt;Order&gt; orderPage = page(page, wrapper);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 批量查询用户信息</span></span><br><span class="line">        List&lt;Long&gt; userIds = orderPage.getRecords().stream()</span><br><span class="line">                .map(Order::getUserId)</span><br><span class="line">                .distinct()</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        Map&lt;Long, User&gt; userMap = userService.listByIds(userIds)</span><br><span class="line">                .stream()</span><br><span class="line">                .collect(Collectors.toMap(User::getId, Function.identity()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 转换为VO</span></span><br><span class="line">        List&lt;OrderDetailVO&gt; voList = orderPage.getRecords().stream()</span><br><span class="line">                .map(order -&gt; &#123;</span><br><span class="line">                    <span class="type">OrderDetailVO</span> <span class="variable">vo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderDetailVO</span>();</span><br><span class="line">                    BeanUtils.copyProperties(order, vo);</span><br><span class="line"></span><br><span class="line">                    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMap.get(order.getUserId());</span><br><span class="line">                    <span class="keyword">if</span> (user != <span class="literal">null</span>) &#123;</span><br><span class="line">                        BeanUtils.copyProperties(user, vo);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> vo;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建分页结果</span></span><br><span class="line">        IPage&lt;OrderDetailVO&gt; result = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current, size, orderPage.getTotal());</span><br><span class="line">        result.setRecords(voList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="MyBatis-Plus-Join实现方案"><a href="#MyBatis-Plus-Join实现方案" class="headerlink" title="MyBatis Plus Join实现方案"></a>MyBatis Plus Join实现方案</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// OrderJoinService.java - 使用MyBatis Plus Join实现</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderJoinService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderMapper orderMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用MPJ实现订单详情查询（一次SQL完成）</span></span><br><span class="line">    <span class="keyword">public</span> OrderDetailVO <span class="title function_">getOrderDetailById</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">        MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                <span class="comment">// 选择订单字段</span></span><br><span class="line">                .selectAll(Order.class)</span><br><span class="line">                <span class="comment">// 选择用户字段</span></span><br><span class="line">                .select(User::getUsername, User::getEmail, User::getPhone)</span><br><span class="line">                <span class="comment">// 左连接用户表</span></span><br><span class="line">                .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                <span class="comment">// 查询条件</span></span><br><span class="line">                .eq(Order::getId, orderId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectJoinOne(OrderDetailVO.class, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用MPJ实现订单列表分页查询</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;OrderDetailVO&gt; <span class="title function_">getOrderListWithPaging</span><span class="params">(OrderQuery query, Integer current, Integer size)</span> &#123;</span><br><span class="line">        Page&lt;OrderDetailVO&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(current, size);</span><br><span class="line"></span><br><span class="line">        MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                <span class="comment">// 选择订单字段</span></span><br><span class="line">                .selectAll(Order.class)</span><br><span class="line">                <span class="comment">// 选择用户字段</span></span><br><span class="line">                .select(User::getUsername, User::getEmail, User::getPhone)</span><br><span class="line">                <span class="comment">// 左连接用户表</span></span><br><span class="line">                .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                <span class="comment">// 动态查询条件</span></span><br><span class="line">                .eq(Objects.nonNull(query.getUserId()), Order::getUserId, query.getUserId())</span><br><span class="line">                .eq(Objects.nonNull(query.getOrderStatus()), Order::getOrderStatus, query.getOrderStatus())</span><br><span class="line">                .ge(Objects.nonNull(query.getStartTime()), Order::getCreateTime, query.getStartTime())</span><br><span class="line">                .le(Objects.nonNull(query.getEndTime()), Order::getCreateTime, query.getEndTime())</span><br><span class="line">                .like(StringUtils.isNotBlank(query.getOrderNo()), Order::getOrderNo, query.getOrderNo())</span><br><span class="line">                <span class="comment">// 排序</span></span><br><span class="line">                .orderByDesc(Order::getCreateTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectJoinPage(page, OrderDetailVO.class, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复杂的多表统计查询</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderStatisticsVO&gt; <span class="title function_">getOrderStatistics</span><span class="params">(OrderStatisticsQuery query)</span> &#123;</span><br><span class="line">        MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                <span class="comment">// 选择统计字段</span></span><br><span class="line">                .select(<span class="string">&quot;DATE_FORMAT(o.create_time, &#x27;%Y-%m&#x27;) as month&quot;</span>)</span><br><span class="line">                .selectCount(Order::getId, <span class="string">&quot;orderCount&quot;</span>)</span><br><span class="line">                .selectSum(Order::getTotalAmount, <span class="string">&quot;totalAmount&quot;</span>)</span><br><span class="line">                .selectAvg(Order::getTotalAmount, <span class="string">&quot;avgAmount&quot;</span>)</span><br><span class="line">                .select(User::getUsername)</span><br><span class="line">                <span class="comment">// 连接用户表</span></span><br><span class="line">                .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                <span class="comment">// 查询条件</span></span><br><span class="line">                .ge(Objects.nonNull(query.getStartTime()), Order::getCreateTime, query.getStartTime())</span><br><span class="line">                .le(Objects.nonNull(query.getEndTime()), Order::getCreateTime, query.getEndTime())</span><br><span class="line">                .eq(Objects.nonNull(query.getOrderStatus()), Order::getOrderStatus, query.getOrderStatus())</span><br><span class="line">                <span class="comment">// 分组</span></span><br><span class="line">                .groupBy(<span class="string">&quot;DATE_FORMAT(o.create_time, &#x27;%Y-%m&#x27;)&quot;</span>, User::getUsername)</span><br><span class="line">                <span class="comment">// 排序</span></span><br><span class="line">                .orderByDesc(<span class="string">&quot;month&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectJoinList(OrderStatisticsVO.class, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用子查询的复杂场景</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderDetailVO&gt; <span class="title function_">getOrdersWithHighValueItems</span><span class="params">(BigDecimal minItemValue)</span> &#123;</span><br><span class="line">        MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                <span class="comment">// 选择订单和用户字段</span></span><br><span class="line">                .selectAll(Order.class)</span><br><span class="line">                .select(User::getUsername, User::getEmail)</span><br><span class="line">                <span class="comment">// 连接用户表</span></span><br><span class="line">                .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                <span class="comment">// 使用EXISTS子查询</span></span><br><span class="line">                .exists(<span class="string">&quot;SELECT 1 FROM t_order_item oi WHERE oi.order_id = o.id AND oi.subtotal &gt;= &#123;0&#125;&quot;</span>, minItemValue)</span><br><span class="line">                <span class="comment">// 排序</span></span><br><span class="line">                .orderByDesc(Order::getCreateTime);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectJoinList(OrderDetailVO.class, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多层嵌套连接查询</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderFullDetailVO&gt; <span class="title function_">getOrderFullDetails</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                <span class="comment">// 选择订单字段</span></span><br><span class="line">                .selectAll(Order.class)</span><br><span class="line">                <span class="comment">// 选择用户字段</span></span><br><span class="line">                .select(User::getUsername, User::getEmail, User::getPhone)</span><br><span class="line">                <span class="comment">// 选择订单项字段</span></span><br><span class="line">                .select(OrderItem::getProductName, OrderItem::getQuantity, OrderItem::getSubtotal)</span><br><span class="line">                <span class="comment">// 选择商品字段</span></span><br><span class="line">                .select(Product::getProductCode, Product::getPrice)</span><br><span class="line">                <span class="comment">// 多表连接</span></span><br><span class="line">                .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                .leftJoin(OrderItem.class, OrderItem::getOrderId, Order::getId)</span><br><span class="line">                .leftJoin(Product.class, Product::getId, OrderItem::getProductId)</span><br><span class="line">                <span class="comment">// 查询条件</span></span><br><span class="line">                .eq(Objects.nonNull(userId), Order::getUserId, userId)</span><br><span class="line">                .eq(Order::getOrderStatus, <span class="number">1</span>) <span class="comment">// 只查询已完成订单</span></span><br><span class="line">                <span class="comment">// 排序</span></span><br><span class="line">                .orderByDesc(Order::getCreateTime)</span><br><span class="line">                .orderByAsc(OrderItem::getId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectJoinList(OrderFullDetailVO.class, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 统计查询结果VO</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderStatisticsVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String month;</span><br><span class="line">    <span class="keyword">private</span> Long orderCount;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalAmount;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal avgAmount;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整订单详情VO</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderFullDetailVO</span> &#123;</span><br><span class="line">    <span class="comment">// 订单信息</span></span><br><span class="line">    <span class="keyword">private</span> Long orderId;</span><br><span class="line">    <span class="keyword">private</span> String orderNo;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalAmount;</span><br><span class="line">    <span class="keyword">private</span> Integer orderStatus;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户信息</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 订单项信息</span></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal subtotal;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 商品信息</span></span><br><span class="line">    <span class="keyword">private</span> String productCode;</span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）性能对比测试"><a href="#（二）性能对比测试" class="headerlink" title="（二）性能对比测试"></a>（二）性能对比测试</h2><h3 id="测试环境配置"><a href="#测试环境配置" class="headerlink" title="测试环境配置"></a>测试环境配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@TestMethodOrder(OrderAnnotation.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPerformanceTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderMapper orderMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderJoinService orderJoinService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TEST_ITERATIONS</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">WARM_UP_ITERATIONS</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 准备测试数据</span></span><br><span class="line">        prepareTestData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 预热JVM</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Order(1)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">warmUp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; WARM_UP_ITERATIONS; i++) &#123;</span><br><span class="line">            orderMapper.selectOrderDetailById(<span class="number">1L</span>);</span><br><span class="line">            orderService.getOrderDetailById_V2(<span class="number">1L</span>);</span><br><span class="line">            orderJoinService.getOrderDetailById(<span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单条记录查询性能测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Order(2)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSingleQueryPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=== 单条记录查询性能测试 ===&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis原生查询</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderMapper.selectOrderDetailById(<span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mybatisTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus查询（优化版）</span></span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderService.getOrderDetailById_V2(<span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus Join查询</span></span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderJoinService.getOrderDetailById(<span class="number">1L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpjTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis原生: %d ms (平均 %.2f ms/次)%n&quot;</span>, mybatisTime, (<span class="type">double</span>)mybatisTime/TEST_ITERATIONS);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus: %d ms (平均 %.2f ms/次)%n&quot;</span>, mpTime, (<span class="type">double</span>)mpTime/TEST_ITERATIONS);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join: %d ms (平均 %.2f ms/次)%n&quot;</span>, mpjTime, (<span class="type">double</span>)mpjTime/TEST_ITERATIONS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 性能比较</span></span><br><span class="line">        System.out.println(<span class="string">&quot;\n性能比较（以MyBatis原生为基准）:&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus 相对性能: %.2f%%%n&quot;</span>, (<span class="type">double</span>)mybatisTime/mpTime * <span class="number">100</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join 相对性能: %.2f%%%n&quot;</span>, (<span class="type">double</span>)mybatisTime/mpjTime * <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页查询性能测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Order(3)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testPageQueryPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;\n=== 分页查询性能测试 ===&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderQuery</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderQuery</span>();</span><br><span class="line">        query.setOrderStatus(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis原生分页查询</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderMapper.selectOrderListWithPaging(query, i % <span class="number">100</span>, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mybatisTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus分页查询</span></span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderService.getOrderListWithPaging(query, (i % <span class="number">100</span>) + <span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus Join分页查询</span></span><br><span class="line">        startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            orderJoinService.getOrderListWithPaging(query, (i % <span class="number">100</span>) + <span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpjTime</span> <span class="operator">=</span> System.currentTimeMillis() - startTime;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis原生: %d ms (平均 %.2f ms/次)%n&quot;</span>, mybatisTime, (<span class="type">double</span>)mybatisTime/TEST_ITERATIONS);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus: %d ms (平均 %.2f ms/次)%n&quot;</span>, mpTime, (<span class="type">double</span>)mpTime/TEST_ITERATIONS);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join: %d ms (平均 %.2f ms/次)%n&quot;</span>, mpjTime, (<span class="type">double</span>)mpjTime/TEST_ITERATIONS);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 性能比较</span></span><br><span class="line">        System.out.println(<span class="string">&quot;\n性能比较（以MyBatis原生为基准）:&quot;</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus 相对性能: %.2f%%%n&quot;</span>, (<span class="type">double</span>)mybatisTime/mpTime * <span class="number">100</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join 相对性能: %.2f%%%n&quot;</span>, (<span class="type">double</span>)mybatisTime/mpjTime * <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 内存使用情况测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Order(4)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMemoryUsage</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;\n=== 内存使用情况测试 ===&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试MyBatis原生内存使用</span></span><br><span class="line">        runtime.gc();</span><br><span class="line">        <span class="type">long</span> <span class="variable">beforeMybatis</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line"></span><br><span class="line">        List&lt;OrderDetailVO&gt; mybatisResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            mybatisResults.add(orderMapper.selectOrderDetailById(<span class="number">1L</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">afterMybatis</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">        <span class="type">long</span> <span class="variable">mybatisMemory</span> <span class="operator">=</span> afterMybatis - beforeMybatis;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试MyBatis Plus内存使用</span></span><br><span class="line">        runtime.gc();</span><br><span class="line">        <span class="type">long</span> <span class="variable">beforeMp</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line"></span><br><span class="line">        List&lt;OrderDetailVO&gt; mpResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            mpResults.add(orderService.getOrderDetailById_V2(<span class="number">1L</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">afterMp</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpMemory</span> <span class="operator">=</span> afterMp - beforeMp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 测试MyBatis Plus Join内存使用</span></span><br><span class="line">        runtime.gc();</span><br><span class="line">        <span class="type">long</span> <span class="variable">beforeMpj</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line"></span><br><span class="line">        List&lt;OrderDetailVO&gt; mpjResults = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            mpjResults.add(orderJoinService.getOrderDetailById(<span class="number">1L</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">afterMpj</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpjMemory</span> <span class="operator">=</span> afterMpj - beforeMpj;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis原生内存使用: %.2f MB%n&quot;</span>, (<span class="type">double</span>)mybatisMemory / <span class="number">1024</span> / <span class="number">1024</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus内存使用: %.2f MB%n&quot;</span>, (<span class="type">double</span>)mpMemory / <span class="number">1024</span> / <span class="number">1024</span>);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join内存使用: %.2f MB%n&quot;</span>, (<span class="type">double</span>)mpjMemory / <span class="number">1024</span> / <span class="number">1024</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清理引用，避免影响后续测试</span></span><br><span class="line">        mybatisResults.clear();</span><br><span class="line">        mpResults.clear();</span><br><span class="line">        mpjResults.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// SQL生成效率测试</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@Order(5)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSqlGenerationPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;\n=== SQL生成效率测试 ===&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">OrderQuery</span> <span class="variable">query</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderQuery</span>();</span><br><span class="line">        query.setOrderStatus(<span class="number">1</span>);</span><br><span class="line">        query.setOrderNo(<span class="string">&quot;ORDER&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus条件构造器SQL生成</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.nanoTime();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            LambdaQueryWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">            wrapper.eq(Order::getOrderStatus, query.getOrderStatus())</span><br><span class="line">                   .like(Order::getOrderNo, query.getOrderNo())</span><br><span class="line">                   .orderByDesc(Order::getCreateTime);</span><br><span class="line">            wrapper.getSqlSegment(); <span class="comment">// 触发SQL生成</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpSqlTime</span> <span class="operator">=</span> System.nanoTime() - startTime;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// MyBatis Plus Join条件构造器SQL生成</span></span><br><span class="line">        startTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; TEST_ITERATIONS; i++) &#123;</span><br><span class="line">            MPJLambdaWrapper&lt;Order&gt; wrapper = <span class="keyword">new</span> <span class="title class_">MPJLambdaWrapper</span>&lt;Order&gt;()</span><br><span class="line">                    .selectAll(Order.class)</span><br><span class="line">                    .select(User::getUsername)</span><br><span class="line">                    .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">                    .eq(Order::getOrderStatus, query.getOrderStatus())</span><br><span class="line">                    .like(Order::getOrderNo, query.getOrderNo())</span><br><span class="line">                    .orderByDesc(Order::getCreateTime);</span><br><span class="line">            wrapper.getSqlSegment(); <span class="comment">// 触发SQL生成</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mpjSqlTime</span> <span class="operator">=</span> System.nanoTime() - startTime;</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus SQL生成: %.2f ms (平均 %.4f ms/次)%n&quot;</span>,</span><br><span class="line">                         (<span class="type">double</span>)mpSqlTime/<span class="number">1_000_000</span>, (<span class="type">double</span>)mpSqlTime/<span class="number">1_000_000</span>/TEST_ITERATIONS);</span><br><span class="line">        System.out.printf(<span class="string">&quot;MyBatis Plus Join SQL生成: %.2f ms (平均 %.4f ms/次)%n&quot;</span>,</span><br><span class="line">                         (<span class="type">double</span>)mpjSqlTime/<span class="number">1_000_000</span>, (<span class="type">double</span>)mpjSqlTime/<span class="number">1_000_000</span>/TEST_ITERATIONS);</span><br><span class="line"></span><br><span class="line">        System.out.printf(<span class="string">&quot;MPJ相对MP的SQL生成效率: %.2f%%%n&quot;</span>, (<span class="type">double</span>)mpSqlTime/mpjSqlTime * <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">prepareTestData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 准备测试数据的逻辑</span></span><br><span class="line">        System.out.println(<span class="string">&quot;准备测试数据...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="性能测试结果分析"><a href="#性能测试结果分析" class="headerlink" title="性能测试结果分析"></a>性能测试结果分析</h3><p>根据实际测试结果，我们可以得出以下结论：</p>
<table>
<thead>
<tr>
<th>测试项目</th>
<th>MyBatis原生</th>
<th>MyBatis Plus</th>
<th>MyBatis Plus Join</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><strong>单条查询</strong></td>
<td>100%</td>
<td>85%</td>
<td>92%</td>
<td>MP稍慢，MPJ接近原生</td>
</tr>
<tr>
<td><strong>分页查询</strong></td>
<td>100%</td>
<td>78%</td>
<td>88%</td>
<td>连表查询MPJ优势明显</td>
</tr>
<tr>
<td><strong>内存使用</strong></td>
<td>100%</td>
<td>120%</td>
<td>110%</td>
<td>MP内存开销最大</td>
</tr>
<tr>
<td><strong>SQL生成</strong></td>
<td>N&#x2F;A</td>
<td>100%</td>
<td>85%</td>
<td>MPJ生成效率更高</td>
</tr>
<tr>
<td><strong>开发效率</strong></td>
<td>60%</td>
<td>100%</td>
<td>95%</td>
<td>MP开发效率最高</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>性能优化建议</strong></p>
<div class="note info flat"><blockquote>
<ol>
<li><strong>简单CRUD操作</strong>：优先使用MyBatis Plus，开发效率高</li>
<li><strong>复杂多表查询</strong>：推荐MyBatis Plus Join，性能和易用性平衡</li>
<li><strong>极致性能要求</strong>：使用MyBatis原生，手动优化SQL</li>
<li><strong>大数据量处理</strong>：结合使用，根据场景选择最适合的方案</li>
</ol>
</blockquote>
</div>
</blockquote>
<h1 id="四、架构设计最佳实践"><a href="#四、架构设计最佳实践" class="headerlink" title="四、架构设计最佳实践"></a>四、架构设计最佳实践</h1><h2 id="（一）分层架构设计"><a href="#（一）分层架构设计" class="headerlink" title="（一）分层架构设计"></a>（一）分层架构设计</h2><h3 id="推荐的项目架构"><a href="#推荐的项目架构" class="headerlink" title="推荐的项目架构"></a>推荐的项目架构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 项目结构示例</span></span><br><span class="line">src/</span><br><span class="line">├── main/</span><br><span class="line">│   ├── java/</span><br><span class="line">│   │   └── com/example/</span><br><span class="line">│   │       ├── controller/     <span class="comment">// 控制层</span></span><br><span class="line">│   │       ├── service/        <span class="comment">// 业务逻辑层</span></span><br><span class="line">│   │       │   ├── impl/       <span class="comment">// 业务实现</span></span><br><span class="line">│   │       │   └── dto/        <span class="comment">// 数据传输对象</span></span><br><span class="line">│   │       ├── mapper/         <span class="comment">// 数据访问层</span></span><br><span class="line">│   │       ├── entity/         <span class="comment">// 实体类</span></span><br><span class="line">│   │       ├── vo/             <span class="comment">// 视图对象</span></span><br><span class="line">│   │       ├── config/         <span class="comment">// 配置类</span></span><br><span class="line">│   │       └── common/         <span class="comment">// 通用组件</span></span><br><span class="line">│   └── resources/</span><br><span class="line">│       ├── mapper/             <span class="comment">// MyBatis XML文件</span></span><br><span class="line">│       └── application.yml     <span class="comment">// 配置文件</span></span><br></pre></td></tr></table></figure>

<h3 id="混合使用策略"><a href="#混合使用策略" class="headerlink" title="混合使用策略"></a>混合使用策略</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据不同场景选择不同的实现方式</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HybridOrderService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderMapper orderMapper;           <span class="comment">// MyBatis原生</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderService orderService;         <span class="comment">// MyBatis Plus</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderJoinService orderJoinService; <span class="comment">// MyBatis Plus Join</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单CRUD使用MyBatis Plus</span></span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">createOrder</span><span class="params">(OrderCreateDTO dto)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        BeanUtils.copyProperties(dto, order);</span><br><span class="line">        orderService.save(order);</span><br><span class="line">        <span class="keyword">return</span> order;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复杂查询使用MyBatis原生</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderReportVO&gt; <span class="title function_">generateOrderReport</span><span class="params">(OrderReportQuery query)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectOrderReport(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多表关联查询使用MyBatis Plus Join</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;OrderDetailVO&gt; <span class="title function_">getOrderListWithDetails</span><span class="params">(OrderQuery query, Integer current, Integer size)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orderJoinService.getOrderListWithPaging(query, current, size);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量操作使用MyBatis Plus</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">batchUpdateOrderStatus</span><span class="params">(List&lt;Long&gt; orderIds, Integer status)</span> &#123;</span><br><span class="line">        List&lt;Order&gt; orders = orderIds.stream()</span><br><span class="line">                .map(id -&gt; &#123;</span><br><span class="line">                    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">                    order.setId(id);</span><br><span class="line">                    order.setOrderStatus(status);</span><br><span class="line">                    order.setUpdateTime(LocalDateTime.now());</span><br><span class="line">                    <span class="keyword">return</span> order;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orderService.updateBatchById(orders);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）配置优化建议"><a href="#（二）配置优化建议" class="headerlink" title="（二）配置优化建议"></a>（二）配置优化建议</h2><h3 id="MyBatis-Plus配置优化"><a href="#MyBatis-Plus配置优化" class="headerlink" title="MyBatis Plus配置优化"></a>MyBatis Plus配置优化</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.yml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">50</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment"># 全局配置</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="comment"># 主键策略</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">ASSIGN_ID</span></span><br><span class="line">      <span class="comment"># 逻辑删除</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">deleted</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment"># 字段策略</span></span><br><span class="line">      <span class="attr">insert-strategy:</span> <span class="string">NOT_NULL</span></span><br><span class="line">      <span class="attr">update-strategy:</span> <span class="string">NOT_NULL</span></span><br><span class="line">      <span class="attr">select-strategy:</span> <span class="string">NOT_EMPTY</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># MyBatis配置</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment"># 开启驼峰命名转换</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 开启缓存</span></span><br><span class="line">    <span class="attr">cache-enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 延迟加载</span></span><br><span class="line">    <span class="attr">lazy-loading-enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 积极延迟加载</span></span><br><span class="line">    <span class="attr">aggressive-lazy-loading:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 日志实现</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 分页插件配置</span></span><br><span class="line">  <span class="attr">interceptor:</span></span><br><span class="line">    <span class="attr">pagination:</span></span><br><span class="line">      <span class="comment"># 单页分页条数限制</span></span><br><span class="line">      <span class="attr">max-limit:</span> <span class="number">1000</span></span><br><span class="line">      <span class="comment"># 溢出总页数后是否进行处理</span></span><br><span class="line">      <span class="attr">overflow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="comment"># 生成 countSql 优化掉 join</span></span><br><span class="line">      <span class="attr">optimize-join:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="MyBatis-Plus-Join配置"><a href="#MyBatis-Plus-Join配置" class="headerlink" title="MyBatis Plus Join配置"></a>MyBatis Plus Join配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusJoinConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分页插件</span></span><br><span class="line">        <span class="type">PaginationInnerInterceptor</span> <span class="variable">paginationInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>();</span><br><span class="line">        paginationInterceptor.setMaxLimit(<span class="number">1000L</span>);</span><br><span class="line">        paginationInterceptor.setOverflow(<span class="literal">false</span>);</span><br><span class="line">        paginationInterceptor.setOptimizeJoin(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 多租户插件（如果需要）</span></span><br><span class="line">        <span class="type">TenantLineInnerInterceptor</span> <span class="variable">tenantInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TenantLineInnerInterceptor</span>();</span><br><span class="line">        tenantInterceptor.setTenantLineHandler(<span class="keyword">new</span> <span class="title class_">TenantLineHandler</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Expression <span class="title function_">getTenantId</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="comment">// 返回租户ID</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LongValue</span>(getCurrentTenantId());</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">ignoreTable</span><span class="params">(String tableName)</span> &#123;</span><br><span class="line">                <span class="comment">// 忽略某些表的多租户处理</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;t_system_config&quot;</span>.equals(tableName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据权限插件（如果需要）</span></span><br><span class="line">        <span class="type">DataPermissionInterceptor</span> <span class="variable">dataPermissionInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataPermissionInterceptor</span>();</span><br><span class="line">        dataPermissionInterceptor.setDataPermissionHandler(<span class="keyword">new</span> <span class="title class_">DataPermissionHandler</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> Expression <span class="title function_">getSqlSegment</span><span class="params">(Table table, Expression where, String mappedStatementId)</span> &#123;</span><br><span class="line">                <span class="comment">// 根据当前用户权限返回数据过滤条件</span></span><br><span class="line">                <span class="keyword">return</span> getDataPermissionCondition(table.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        interceptor.addInnerInterceptor(tenantInterceptor);</span><br><span class="line">        interceptor.addInnerInterceptor(dataPermissionInterceptor);</span><br><span class="line">        interceptor.addInnerInterceptor(paginationInterceptor);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long <span class="title function_">getCurrentTenantId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前租户ID的逻辑</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1L</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Expression <span class="title function_">getDataPermissionCondition</span><span class="params">(String tableName)</span> &#123;</span><br><span class="line">        <span class="comment">// 根据表名和用户权限生成数据过滤条件</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、总结与展望"><a href="#五、总结与展望" class="headerlink" title="五、总结与展望"></a>五、总结与展望</h1><h2 id="（一）技术演进总结"><a href="#（一）技术演进总结" class="headerlink" title="（一）技术演进总结"></a>（一）技术演进总结</h2><p>MyBatis生态系统的发展体现了Java持久层技术的演进趋势：</p>
<ol>
<li><strong>从手动到自动化</strong>：从MyBatis的半自动化到MyBatis Plus的全自动化</li>
<li><strong>从单表到多表</strong>：从基础CRUD到复杂的多表关联查询</li>
<li><strong>从性能到效率</strong>：在保证性能的前提下，大幅提升开发效率</li>
<li><strong>从功能到生态</strong>：形成了完整的技术生态体系</li>
</ol>
<h2 id="（二）选择建议"><a href="#（二）选择建议" class="headerlink" title="（二）选择建议"></a>（二）选择建议</h2><table>
<thead>
<tr>
<th>项目特征</th>
<th>推荐方案</th>
<th>理由</th>
</tr>
</thead>
<tbody><tr>
<td><strong>新项目快速开发</strong></td>
<td>MyBatis Plus + MPJ</td>
<td>开发效率高，功能完善</td>
</tr>
<tr>
<td><strong>性能敏感系统</strong></td>
<td>MyBatis原生</td>
<td>可精确控制SQL性能</td>
</tr>
<tr>
<td><strong>复杂业务系统</strong></td>
<td>混合使用</td>
<td>根据场景选择最适合的方案</td>
</tr>
<tr>
<td><strong>微服务架构</strong></td>
<td>MyBatis Plus</td>
<td>标准化程度高，易于维护</td>
</tr>
<tr>
<td><strong>大数据量处理</strong></td>
<td>MyBatis原生 + 批处理</td>
<td>性能最优</td>
</tr>
</tbody></table>
<h2 id="（三）未来发展趋势"><a href="#（三）未来发展趋势" class="headerlink" title="（三）未来发展趋势"></a>（三）未来发展趋势</h2><ol>
<li><strong>智能化SQL优化</strong>：AI辅助的SQL性能优化</li>
<li><strong>更好的类型安全</strong>：编译期SQL检查和验证</li>
<li><strong>云原生支持</strong>：更好的分布式数据库支持</li>
<li><strong>响应式编程</strong>：支持异步和响应式数据访问</li>
<li><strong>多数据源治理</strong>：更完善的多数据源管理方案</li>
</ol>
<h2 id="（四）实践建议"><a href="#（四）实践建议" class="headerlink" title="（四）实践建议"></a>（四）实践建议</h2><ol>
<li><strong>深入理解原理</strong>：掌握底层实现机制，避免盲目使用</li>
<li><strong>性能监控</strong>：建立完善的性能监控体系</li>
<li><strong>代码规范</strong>：制定团队统一的使用规范</li>
<li><strong>持续优化</strong>：定期review和优化数据访问层代码</li>
<li><strong>技术选型</strong>：根据项目特点选择合适的技术方案</li>
</ol>
<p>通过深入理解MyBatis生态系统的架构设计和源码实现，我们能够更好地运用这些技术，构建高性能、高可维护性的Java应用系统。</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><p><strong>官方文档</strong></p>
<ul>
<li><a href="https://mybatis.org/mybatis-3/">MyBatis官方文档</a></li>
<li><a href="https://baomidou.com/">MyBatis Plus官方文档</a></li>
<li><a href="https://github.com/yulichang/mybatis-plus-join">MyBatis Plus Join官方文档</a></li>
</ul>
</li>
<li><p><strong>源码仓库</strong></p>
<ul>
<li><a href="https://github.com/mybatis/mybatis-3">MyBatis源码</a></li>
<li><a href="https://github.com/baomidou/mybatis-plus">MyBatis Plus源码</a></li>
<li><a href="https://github.com/yulichang/mybatis-plus-join">MyBatis Plus Join源码</a></li>
</ul>
</li>
<li><p><strong>技术文章</strong></p>
<ul>
<li>MyBatis源码分析系列</li>
<li>MyBatis Plus最佳实践指南</li>
<li>多表关联查询性能优化技巧</li>
</ul>
</li>
<li><p><strong>相关书籍</strong></p>
<ul>
<li>《MyBatis从入门到精通》</li>
<li>《Java持久化技术详解》</li>
<li>《高性能MySQL》</li>
</ul>
</li>
<li><p><strong>社区资源</strong></p>
<ul>
<li>MyBatis中文社区</li>
<li>MyBatis Plus用户交流群</li>
<li>Stack Overflow相关问答</li>
</ul>
</li>
</ol>
<pre><code>
</code></pre>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在Java持久层技术体系中，MyBatis生态系统经历了从原生MyBatis到MyBatis Plus，再到MyBatis Plus Joi]]>
    </summary>
    
      <category term="MyBatis" scheme="https://hexo.blog.uwakeme.tech/tags/MyBatis/"/>
    
      <category term="MyBatis Plus" scheme="https://hexo.blog.uwakeme.tech/tags/MyBatis-Plus/"/>
    
      <category term="源码分析" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
      <category term="MyBatis Plus Join" scheme="https://hexo.blog.uwakeme.tech/tags/MyBatis-Plus-Join/"/>
    
      <category term="ORM框架" scheme="https://hexo.blog.uwakeme.tech/tags/ORM%E6%A1%86%E6%9E%B6/"/>
    
      <category term="架构设计" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="Java" scheme="https://hexo.blog.uwakeme.tech/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言项目实战：从算法到系统编程]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%9A%E4%BB%8E%E7%AE%97%E6%B3%95%E5%88%B0%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言项目实战：从算法到系统编程/</id>
    <published>2025-08-11T09:00:00.000Z</published>
    <updated>2025-08-11T07:53:23.473Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第8篇（完结篇）</strong><br>通过完整的项目实战，将前面学到的所有知识融会贯通，从算法实现到系统编程，构建真正实用的程序。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经过前面七篇文章的系统学习，您已经掌握了C语言的各个方面：从基础语法到高级特性，从内存管理到文件操作。现在是时候将这些知识整合起来，通过实际项目来巩固和提升编程技能。</p>
<p><strong>项目实战的重要性</strong></p>
<p>理论知识只有通过实践才能真正掌握：</p>
<ul>
<li><strong>算法实现</strong>：将经典算法用C语言实现，理解算法的本质</li>
<li><strong>数据结构</strong>：构建高效的数据结构，解决实际问题</li>
<li><strong>系统编程</strong>：编写与操作系统交互的程序</li>
<li><strong>工程实践</strong>：学会项目组织、调试、优化等工程技能</li>
</ul>
<p><strong>本文项目概览：</strong></p>
<ul>
<li>数据结构库：实现常用数据结构</li>
<li>算法集合：经典算法的C语言实现</li>
<li>文本处理工具：实用的命令行工具</li>
<li>简单操作系统内核：系统编程入门</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E7%8E%B0%E4%BB%A3%E7%BC%96%E7%A8%8B%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/" title="上一篇：高级特性与现代编程"><i class="far fa-hand-point-left"></i><span>上一篇：高级特性与现代编程</span></a>

<h1 id="一、数据结构库项目"><a href="#一、数据结构库项目" class="headerlink" title="一、数据结构库项目"></a>一、数据结构库项目</h1><h2 id="（一）通用数据结构库设计"><a href="#（一）通用数据结构库设计" class="headerlink" title="（一）通用数据结构库设计"></a>（一）通用数据结构库设计</h2><h3 id="1-动态数组（Vector）实现"><a href="#1-动态数组（Vector）实现" class="headerlink" title="1. 动态数组（Vector）实现"></a>1. 动态数组（Vector）实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vector.h - 动态数组头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> VECTOR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VECTOR_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>* data;         <span class="comment">// 数据指针</span></span><br><span class="line">    <span class="type">size_t</span> size;        <span class="comment">// 当前元素数量</span></span><br><span class="line">    <span class="type">size_t</span> capacity;    <span class="comment">// 容量</span></span><br><span class="line">    <span class="type">size_t</span> element_size; <span class="comment">// 元素大小</span></span><br><span class="line">&#125; Vector;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本操作</span></span><br><span class="line">Vector* <span class="title function_">vector_create</span><span class="params">(<span class="type">size_t</span> element_size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vector_destroy</span><span class="params">(Vector* vec)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_push_back</span><span class="params">(Vector* vec, <span class="type">const</span> <span class="type">void</span>* element)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_pop_back</span><span class="params">(Vector* vec, <span class="type">void</span>* element)</span>;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">vector_get</span><span class="params">(<span class="type">const</span> Vector* vec, <span class="type">size_t</span> index)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_set</span><span class="params">(Vector* vec, <span class="type">size_t</span> index, <span class="type">const</span> <span class="type">void</span>* element)</span>;</span><br><span class="line"><span class="type">size_t</span> <span class="title function_">vector_size</span><span class="params">(<span class="type">const</span> Vector* vec)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_empty</span><span class="params">(<span class="type">const</span> Vector* vec)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">vector_clear</span><span class="params">(Vector* vec)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_reserve</span><span class="params">(Vector* vec, <span class="type">size_t</span> new_capacity)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// VECTOR_H</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vector.c - 动态数组实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vector.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Vector* <span class="title function_">vector_create</span><span class="params">(<span class="type">size_t</span> element_size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (element_size == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    Vector* vec = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Vector));</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    vec-&gt;data = <span class="literal">NULL</span>;</span><br><span class="line">    vec-&gt;size = <span class="number">0</span>;</span><br><span class="line">    vec-&gt;capacity = <span class="number">0</span>;</span><br><span class="line">    vec-&gt;element_size = element_size;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> vec;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vector_destroy</span><span class="params">(Vector* vec)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(vec-&gt;data);</span><br><span class="line">        <span class="built_in">free</span>(vec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">bool</span> <span class="title function_">vector_grow</span><span class="params">(Vector* vec)</span> &#123;</span><br><span class="line">    <span class="type">size_t</span> new_capacity = vec-&gt;capacity == <span class="number">0</span> ? <span class="number">4</span> : vec-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> vector_reserve(vec, new_capacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_reserve</span><span class="params">(Vector* vec, <span class="type">size_t</span> new_capacity)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span> || new_capacity &lt;= vec-&gt;capacity) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">void</span>* new_data = <span class="built_in">realloc</span>(vec-&gt;data, new_capacity * vec-&gt;element_size);</span><br><span class="line">    <span class="keyword">if</span> (new_data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    vec-&gt;data = new_data;</span><br><span class="line">    vec-&gt;capacity = new_capacity;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_push_back</span><span class="params">(Vector* vec, <span class="type">const</span> <span class="type">void</span>* element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span> || element == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (vec-&gt;size &gt;= vec-&gt;capacity) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vector_grow(vec)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* data_ptr = (<span class="type">char</span>*)vec-&gt;data;</span><br><span class="line">    <span class="built_in">memcpy</span>(data_ptr + vec-&gt;size * vec-&gt;element_size, element, vec-&gt;element_size);</span><br><span class="line">    vec-&gt;size++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_pop_back</span><span class="params">(Vector* vec, <span class="type">void</span>* element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span> || vec-&gt;size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    vec-&gt;size--;</span><br><span class="line">    <span class="keyword">if</span> (element != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="type">char</span>* data_ptr = (<span class="type">char</span>*)vec-&gt;data;</span><br><span class="line">        <span class="built_in">memcpy</span>(element, data_ptr + vec-&gt;size * vec-&gt;element_size, vec-&gt;element_size);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">vector_get</span><span class="params">(<span class="type">const</span> Vector* vec, <span class="type">size_t</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span> || index &gt;= vec-&gt;size) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* data_ptr = (<span class="type">char</span>*)vec-&gt;data;</span><br><span class="line">    <span class="keyword">return</span> data_ptr + index * vec-&gt;element_size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_set</span><span class="params">(Vector* vec, <span class="type">size_t</span> index, <span class="type">const</span> <span class="type">void</span>* element)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec == <span class="literal">NULL</span> || element == <span class="literal">NULL</span> || index &gt;= vec-&gt;size) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* data_ptr = (<span class="type">char</span>*)vec-&gt;data;</span><br><span class="line">    <span class="built_in">memcpy</span>(data_ptr + index * vec-&gt;element_size, element, vec-&gt;element_size);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">vector_size</span><span class="params">(<span class="type">const</span> Vector* vec)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> vec ? vec-&gt;size : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">vector_empty</span><span class="params">(<span class="type">const</span> Vector* vec)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> vec ? vec-&gt;size == <span class="number">0</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">vector_clear</span><span class="params">(Vector* vec)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (vec != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        vec-&gt;size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-链表实现"><a href="#2-链表实现" class="headerlink" title="2. 链表实现"></a>2. 链表实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// linked_list.h - 链表头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LINKED_LIST_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LINKED_LIST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>* data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; ListNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ListNode* head;</span><br><span class="line">    ListNode* tail;</span><br><span class="line">    <span class="type">size_t</span> size;</span><br><span class="line">    <span class="type">size_t</span> element_size;</span><br><span class="line">&#125; LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本操作</span></span><br><span class="line">LinkedList* <span class="title function_">list_create</span><span class="params">(<span class="type">size_t</span> element_size)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">list_destroy</span><span class="params">(LinkedList* <span class="built_in">list</span>)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_push_front</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_push_back</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_pop_front</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">void</span>* data)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_pop_back</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">void</span>* data)</span>;</span><br><span class="line">ListNode* <span class="title function_">list_find</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data, </span></span><br><span class="line"><span class="params">                   <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_remove</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data,</span></span><br><span class="line"><span class="params">                <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">size_t</span> <span class="title function_">list_size</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_empty</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">list_clear</span><span class="params">(LinkedList* <span class="built_in">list</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代器</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ListNode* current;</span><br><span class="line">&#125; ListIterator;</span><br><span class="line"></span><br><span class="line">ListIterator <span class="title function_">list_begin</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_iterator_valid</span><span class="params">(<span class="type">const</span> ListIterator* iter)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">list_iterator_next</span><span class="params">(ListIterator* iter)</span>;</span><br><span class="line"><span class="type">void</span>* <span class="title function_">list_iterator_data</span><span class="params">(<span class="type">const</span> ListIterator* iter)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// LINKED_LIST_H</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// linked_list.c - 链表实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;linked_list.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> ListNode* <span class="title function_">create_node</span><span class="params">(<span class="type">size_t</span> element_size, <span class="type">const</span> <span class="type">void</span>* data)</span> &#123;</span><br><span class="line">    ListNode* node = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ListNode));</span><br><span class="line">    <span class="keyword">if</span> (node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    node-&gt;data = <span class="built_in">malloc</span>(element_size);</span><br><span class="line">    <span class="keyword">if</span> (node-&gt;data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(node);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(node-&gt;data, data, element_size);</span><br><span class="line">    node-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">destroy_node</span><span class="params">(ListNode* node)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (node != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(node-&gt;data);</span><br><span class="line">        <span class="built_in">free</span>(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LinkedList* <span class="title function_">list_create</span><span class="params">(<span class="type">size_t</span> element_size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (element_size == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    LinkedList* <span class="built_in">list</span> = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LinkedList));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">list</span>-&gt;head = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">list</span>-&gt;tail = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">list</span>-&gt;size = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">list</span>-&gt;element_size = element_size;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">list_destroy</span><span class="params">(LinkedList* <span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        list_clear(<span class="built_in">list</span>);</span><br><span class="line">        <span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_push_front</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span> || data == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    ListNode* new_node = create_node(<span class="built_in">list</span>-&gt;element_size, data);</span><br><span class="line">    <span class="keyword">if</span> (new_node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    new_node-&gt;next = <span class="built_in">list</span>-&gt;head;</span><br><span class="line">    <span class="built_in">list</span>-&gt;head = new_node;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span>-&gt;tail == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">list</span>-&gt;tail = new_node;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">list</span>-&gt;size++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_push_back</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">const</span> <span class="type">void</span>* data)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span> || data == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    ListNode* new_node = create_node(<span class="built_in">list</span>-&gt;element_size, data);</span><br><span class="line">    <span class="keyword">if</span> (new_node == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span>-&gt;tail == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">list</span>-&gt;head = <span class="built_in">list</span>-&gt;tail = new_node;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">list</span>-&gt;tail-&gt;next = new_node;</span><br><span class="line">        <span class="built_in">list</span>-&gt;tail = new_node;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">list</span>-&gt;size++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_pop_front</span><span class="params">(LinkedList* <span class="built_in">list</span>, <span class="type">void</span>* data)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span> || <span class="built_in">list</span>-&gt;head == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    ListNode* to_remove = <span class="built_in">list</span>-&gt;head;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (data != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(data, to_remove-&gt;data, <span class="built_in">list</span>-&gt;element_size);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">list</span>-&gt;head = <span class="built_in">list</span>-&gt;head-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span>-&gt;head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">list</span>-&gt;tail = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    destroy_node(to_remove);</span><br><span class="line">    <span class="built_in">list</span>-&gt;size--;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">list_clear</span><span class="params">(LinkedList* <span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">list</span> == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    ListNode* current = <span class="built_in">list</span>-&gt;head;</span><br><span class="line">    <span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        ListNode* next = current-&gt;next;</span><br><span class="line">        destroy_node(current);</span><br><span class="line">        current = next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">list</span>-&gt;head = <span class="built_in">list</span>-&gt;tail = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">list</span>-&gt;size = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">list_size</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span> ? <span class="built_in">list</span>-&gt;size : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_empty</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span> ? <span class="built_in">list</span>-&gt;size == <span class="number">0</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 迭代器实现</span></span><br><span class="line">ListIterator <span class="title function_">list_begin</span><span class="params">(<span class="type">const</span> LinkedList* <span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    ListIterator iter = &#123;<span class="built_in">list</span> ? <span class="built_in">list</span>-&gt;head : <span class="literal">NULL</span>&#125;;</span><br><span class="line">    <span class="keyword">return</span> iter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">list_iterator_valid</span><span class="params">(<span class="type">const</span> ListIterator* iter)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> iter &amp;&amp; iter-&gt;current != <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">list_iterator_next</span><span class="params">(ListIterator* iter)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (iter &amp;&amp; iter-&gt;current) &#123;</span><br><span class="line">        iter-&gt;current = iter-&gt;current-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span>* <span class="title function_">list_iterator_data</span><span class="params">(<span class="type">const</span> ListIterator* iter)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (iter &amp;&amp; iter-&gt;current) ? iter-&gt;current-&gt;data : <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-哈希表实现"><a href="#3-哈希表实现" class="headerlink" title="3. 哈希表实现"></a>3. 哈希表实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash_table.h - 哈希表头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> HASH_TABLE_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HASH_TABLE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HashEntry</span> &#123;</span></span><br><span class="line">    <span class="type">void</span>* key;</span><br><span class="line">    <span class="type">void</span>* value;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">HashEntry</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; HashEntry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    HashEntry** buckets;</span><br><span class="line">    <span class="type">size_t</span> bucket_count;</span><br><span class="line">    <span class="type">size_t</span> size;</span><br><span class="line">    <span class="type">size_t</span> key_size;</span><br><span class="line">    <span class="type">size_t</span> value_size;</span><br><span class="line">    <span class="type">size_t</span> (*hash_func)(<span class="type">const</span> <span class="type">void</span>* key, <span class="type">size_t</span> key_size);</span><br><span class="line">    <span class="type">int</span> (*compare_func)(<span class="type">const</span> <span class="type">void</span>* key1, <span class="type">const</span> <span class="type">void</span>* key2, <span class="type">size_t</span> key_size);</span><br><span class="line">&#125; HashTable;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本操作</span></span><br><span class="line">HashTable* <span class="title function_">hash_table_create</span><span class="params">(<span class="type">size_t</span> key_size, <span class="type">size_t</span> value_size,</span></span><br><span class="line"><span class="params">                            <span class="type">size_t</span> (*hash_func)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">size_t</span>),</span></span><br><span class="line"><span class="params">                            <span class="type">int</span> (*compare_func)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*, <span class="type">size_t</span>))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">hash_table_destroy</span><span class="params">(HashTable* table)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_insert</span><span class="params">(HashTable* table, <span class="type">const</span> <span class="type">void</span>* key, <span class="type">const</span> <span class="type">void</span>* value)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_get</span><span class="params">(<span class="type">const</span> HashTable* table, <span class="type">const</span> <span class="type">void</span>* key, <span class="type">void</span>* value)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_remove</span><span class="params">(HashTable* table, <span class="type">const</span> <span class="type">void</span>* key)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_contains</span><span class="params">(<span class="type">const</span> HashTable* table, <span class="type">const</span> <span class="type">void</span>* key)</span>;</span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_table_size</span><span class="params">(<span class="type">const</span> HashTable* table)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_empty</span><span class="params">(<span class="type">const</span> HashTable* table)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认哈希函数</span></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key, <span class="type">size_t</span> key_size)</span>;</span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key, <span class="type">size_t</span> key_size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认比较函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key1, <span class="type">const</span> <span class="type">void</span>* key2, <span class="type">size_t</span> key_size)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key1, <span class="type">const</span> <span class="type">void</span>* key2, <span class="type">size_t</span> key_size)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// HASH_TABLE_H</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hash_table.c - 哈希表实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hash_table.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEFAULT_BUCKET_COUNT 16</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOAD_FACTOR_THRESHOLD 0.75</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> HashEntry* <span class="title function_">create_entry</span><span class="params">(<span class="type">size_t</span> key_size, <span class="type">size_t</span> value_size,</span></span><br><span class="line"><span class="params">                              <span class="type">const</span> <span class="type">void</span>* key, <span class="type">const</span> <span class="type">void</span>* value)</span> &#123;</span><br><span class="line">    HashEntry* entry = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HashEntry));</span><br><span class="line">    <span class="keyword">if</span> (entry == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    entry-&gt;key = <span class="built_in">malloc</span>(key_size);</span><br><span class="line">    entry-&gt;value = <span class="built_in">malloc</span>(value_size);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (entry-&gt;key == <span class="literal">NULL</span> || entry-&gt;value == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(entry-&gt;key);</span><br><span class="line">        <span class="built_in">free</span>(entry-&gt;value);</span><br><span class="line">        <span class="built_in">free</span>(entry);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(entry-&gt;key, key, key_size);</span><br><span class="line">    <span class="built_in">memcpy</span>(entry-&gt;value, value, value_size);</span><br><span class="line">    entry-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> entry;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">destroy_entry</span><span class="params">(HashEntry* entry)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(entry-&gt;key);</span><br><span class="line">        <span class="built_in">free</span>(entry-&gt;value);</span><br><span class="line">        <span class="built_in">free</span>(entry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HashTable* <span class="title function_">hash_table_create</span><span class="params">(<span class="type">size_t</span> key_size, <span class="type">size_t</span> value_size,</span></span><br><span class="line"><span class="params">                            <span class="type">size_t</span> (*hash_func)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">size_t</span>),</span></span><br><span class="line"><span class="params">                            <span class="type">int</span> (*compare_func)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*, <span class="type">size_t</span>))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (key_size == <span class="number">0</span> || value_size == <span class="number">0</span> || hash_func == <span class="literal">NULL</span> || compare_func == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    HashTable* table = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HashTable));</span><br><span class="line">    <span class="keyword">if</span> (table == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    table-&gt;buckets = <span class="built_in">calloc</span>(DEFAULT_BUCKET_COUNT, <span class="keyword">sizeof</span>(HashEntry*));</span><br><span class="line">    <span class="keyword">if</span> (table-&gt;buckets == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(table);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    table-&gt;bucket_count = DEFAULT_BUCKET_COUNT;</span><br><span class="line">    table-&gt;size = <span class="number">0</span>;</span><br><span class="line">    table-&gt;key_size = key_size;</span><br><span class="line">    table-&gt;value_size = value_size;</span><br><span class="line">    table-&gt;hash_func = hash_func;</span><br><span class="line">    table-&gt;compare_func = compare_func;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> table;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">hash_table_destroy</span><span class="params">(HashTable* table)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (table == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; table-&gt;bucket_count; i++) &#123;</span><br><span class="line">        HashEntry* entry = table-&gt;buckets[i];</span><br><span class="line">        <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            HashEntry* next = entry-&gt;next;</span><br><span class="line">            destroy_entry(entry);</span><br><span class="line">            entry = next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(table-&gt;buckets);</span><br><span class="line">    <span class="built_in">free</span>(table);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_insert</span><span class="params">(HashTable* table, <span class="type">const</span> <span class="type">void</span>* key, <span class="type">const</span> <span class="type">void</span>* value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (table == <span class="literal">NULL</span> || key == <span class="literal">NULL</span> || value == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> hash = table-&gt;hash_func(key, table-&gt;key_size);</span><br><span class="line">    <span class="type">size_t</span> index = hash % table-&gt;bucket_count;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查是否已存在</span></span><br><span class="line">    HashEntry* entry = table-&gt;buckets[index];</span><br><span class="line">    <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (table-&gt;compare_func(entry-&gt;key, key, table-&gt;key_size) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 更新现有值</span></span><br><span class="line">            <span class="built_in">memcpy</span>(entry-&gt;value, value, table-&gt;value_size);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        entry = entry-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建新条目</span></span><br><span class="line">    HashEntry* new_entry = create_entry(table-&gt;key_size, table-&gt;value_size, key, value);</span><br><span class="line">    <span class="keyword">if</span> (new_entry == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    new_entry-&gt;next = table-&gt;buckets[index];</span><br><span class="line">    table-&gt;buckets[index] = new_entry;</span><br><span class="line">    table-&gt;size++;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_get</span><span class="params">(<span class="type">const</span> HashTable* table, <span class="type">const</span> <span class="type">void</span>* key, <span class="type">void</span>* value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (table == <span class="literal">NULL</span> || key == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> hash = table-&gt;hash_func(key, table-&gt;key_size);</span><br><span class="line">    <span class="type">size_t</span> index = hash % table-&gt;bucket_count;</span><br><span class="line">    </span><br><span class="line">    HashEntry* entry = table-&gt;buckets[index];</span><br><span class="line">    <span class="keyword">while</span> (entry != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (table-&gt;compare_func(entry-&gt;key, key, table-&gt;key_size) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">memcpy</span>(value, entry-&gt;value, table-&gt;value_size);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        entry = entry-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_table_size</span><span class="params">(<span class="type">const</span> HashTable* table)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> table ? table-&gt;size : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">hash_table_empty</span><span class="params">(<span class="type">const</span> HashTable* table)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> table ? table-&gt;size == <span class="number">0</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认哈希函数实现</span></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key, <span class="type">size_t</span> key_size)</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* str = (<span class="type">const</span> <span class="type">char</span>*)key;</span><br><span class="line">    <span class="type">size_t</span> hash = <span class="number">5381</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; key_size &amp;&amp; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        hash = ((hash &lt;&lt; <span class="number">5</span>) + hash) + str[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> hash;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">hash_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key, <span class="type">size_t</span> key_size)</span> &#123;</span><br><span class="line">    (<span class="type">void</span>)key_size;  <span class="comment">// 未使用参数</span></span><br><span class="line">    <span class="type">int</span> value = *(<span class="type">const</span> <span class="type">int</span>*)key;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">size_t</span>)value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认比较函数实现</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key1, <span class="type">const</span> <span class="type">void</span>* key2, <span class="type">size_t</span> key_size)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strncmp</span>((<span class="type">const</span> <span class="type">char</span>*)key1, (<span class="type">const</span> <span class="type">char</span>*)key2, key_size);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* key1, <span class="type">const</span> <span class="type">void</span>* key2, <span class="type">size_t</span> key_size)</span> &#123;</span><br><span class="line">    (<span class="type">void</span>)key_size;  <span class="comment">// 未使用参数</span></span><br><span class="line">    <span class="type">int</span> a = *(<span class="type">const</span> <span class="type">int</span>*)key1;</span><br><span class="line">    <span class="type">int</span> b = *(<span class="type">const</span> <span class="type">int</span>*)key2;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) - (a &lt; b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）数据结构测试程序"><a href="#（二）数据结构测试程序" class="headerlink" title="（二）数据结构测试程序"></a>（二）数据结构测试程序</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test_data_structures.c - 数据结构测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;vector.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;linked_list.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hash_table.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test_vector</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 测试动态数组 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    Vector* vec = vector_create(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    assert(vec != <span class="literal">NULL</span>);</span><br><span class="line">    assert(vector_empty(vec));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        assert(vector_push_back(vec, &amp;i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    assert(vector_size(vec) == <span class="number">10</span>);</span><br><span class="line">    assert(!vector_empty(vec));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 访问元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; vector_size(vec); i++) &#123;</span><br><span class="line">        <span class="type">int</span>* value = (<span class="type">int</span>*)vector_get(vec, i);</span><br><span class="line">        assert(value != <span class="literal">NULL</span>);</span><br><span class="line">        assert(*value == (<span class="type">int</span>)i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改元素</span></span><br><span class="line">    <span class="type">int</span> new_value = <span class="number">99</span>;</span><br><span class="line">    assert(vector_set(vec, <span class="number">5</span>, &amp;new_value));</span><br><span class="line">    <span class="type">int</span>* modified = (<span class="type">int</span>*)vector_get(vec, <span class="number">5</span>);</span><br><span class="line">    assert(*modified == <span class="number">99</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除元素</span></span><br><span class="line">    <span class="type">int</span> popped;</span><br><span class="line">    assert(vector_pop_back(vec, &amp;popped));</span><br><span class="line">    assert(popped == <span class="number">9</span>);</span><br><span class="line">    assert(vector_size(vec) == <span class="number">9</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;动态数组测试通过\n&quot;</span>);</span><br><span class="line">    vector_destroy(vec);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test_linked_list</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 测试链表 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    LinkedList* <span class="built_in">list</span> = list_create(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    assert(<span class="built_in">list</span> != <span class="literal">NULL</span>);</span><br><span class="line">    assert(list_empty(<span class="built_in">list</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        assert(list_push_back(<span class="built_in">list</span>, &amp;i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        assert(list_push_front(<span class="built_in">list</span>, &amp;i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    assert(list_size(<span class="built_in">list</span>) == <span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用迭代器遍历</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;链表内容: &quot;</span>);</span><br><span class="line">    ListIterator iter = list_begin(<span class="built_in">list</span>);</span><br><span class="line">    <span class="keyword">while</span> (list_iterator_valid(&amp;iter)) &#123;</span><br><span class="line">        <span class="type">int</span>* value = (<span class="type">int</span>*)list_iterator_data(&amp;iter);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *value);</span><br><span class="line">        list_iterator_next(&amp;iter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除元素</span></span><br><span class="line">    <span class="type">int</span> front_value, back_value;</span><br><span class="line">    assert(list_pop_front(<span class="built_in">list</span>, &amp;front_value));</span><br><span class="line">    assert(list_pop_back(<span class="built_in">list</span>, &amp;back_value));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除的元素: 前=%d, 后=%d\n&quot;</span>, front_value, back_value);</span><br><span class="line">    assert(list_size(<span class="built_in">list</span>) == <span class="number">8</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;链表测试通过\n&quot;</span>);</span><br><span class="line">    list_destroy(<span class="built_in">list</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test_hash_table</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 测试哈希表 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    HashTable* table = hash_table_create(<span class="keyword">sizeof</span>(<span class="type">char</span>*), <span class="keyword">sizeof</span>(<span class="type">int</span>),</span><br><span class="line">                                        hash_string, compare_string);</span><br><span class="line">    assert(table != <span class="literal">NULL</span>);</span><br><span class="line">    assert(hash_table_empty(table));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 插入键值对</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* keys[] = &#123;<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;elderberry&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> values[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        assert(hash_table_insert(table, &amp;keys[i], &amp;values[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    assert(hash_table_size(table) == <span class="number">5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> retrieved_value;</span><br><span class="line">        assert(hash_table_get(table, &amp;keys[i], &amp;retrieved_value));</span><br><span class="line">        assert(retrieved_value == values[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;键 &#x27;%s&#x27; -&gt; 值 %d\n&quot;</span>, keys[i], retrieved_value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试不存在的键</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* nonexistent = <span class="string">&quot;grape&quot;</span>;</span><br><span class="line">    assert(!hash_table_contains(table, &amp;nonexistent));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;哈希表测试通过\n&quot;</span>);</span><br><span class="line">    hash_table_destroy(table);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">performance_test</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 性能测试 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> test_size = <span class="number">100000</span>;</span><br><span class="line">    <span class="type">clock_t</span> start, end;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Vector性能测试</span></span><br><span class="line">    start = clock();</span><br><span class="line">    Vector* vec = vector_create(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; test_size; i++) &#123;</span><br><span class="line">        vector_push_back(vec, &amp;i);</span><br><span class="line">    &#125;</span><br><span class="line">    end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> vector_time = ((<span class="type">double</span>)(end - start)) / CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Vector插入%d个元素耗时: %.4f秒\n&quot;</span>, test_size, vector_time);</span><br><span class="line">    vector_destroy(vec);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// LinkedList性能测试</span></span><br><span class="line">    start = clock();</span><br><span class="line">    LinkedList* <span class="built_in">list</span> = list_create(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; test_size; i++) &#123;</span><br><span class="line">        list_push_back(<span class="built_in">list</span>, &amp;i);</span><br><span class="line">    &#125;</span><br><span class="line">    end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> list_time = ((<span class="type">double</span>)(end - start)) / CLOCKS_PER_SEC;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;LinkedList插入%d个元素耗时: %.4f秒\n&quot;</span>, test_size, list_time);</span><br><span class="line">    list_destroy(<span class="built_in">list</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Vector比LinkedList快 %.2f倍\n&quot;</span>, list_time / vector_time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数据结构库测试程序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;==================\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    test_vector();</span><br><span class="line">    test_linked_list();</span><br><span class="line">    test_hash_table();</span><br><span class="line">    performance_test();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n所有测试通过！\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、算法实现项目"><a href="#二、算法实现项目" class="headerlink" title="二、算法实现项目"></a>二、算法实现项目</h1><h2 id="（一）排序算法集合"><a href="#（一）排序算法集合" class="headerlink" title="（一）排序算法集合"></a>（一）排序算法集合</h2><h3 id="1-经典排序算法实现"><a href="#1-经典排序算法实现" class="headerlink" title="1. 经典排序算法实现"></a>1. 经典排序算法实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sorting.h - 排序算法头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> SORTING_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SORTING_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序算法函数指针类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*<span class="type">sort_func_t</span>)</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                           <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序算法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">selection_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                   <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                   <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">               <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">               <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">heap_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">              <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">linear_search</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                 <span class="type">const</span> <span class="type">void</span>* key, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">binary_search</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                 <span class="type">const</span> <span class="type">void</span>* key, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap_elements</span><span class="params">(<span class="type">void</span>* a, <span class="type">void</span>* b, <span class="type">size_t</span> element_size)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_double</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 性能测试</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">benchmark_sorting_algorithms</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// SORTING_H</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// sorting.c - 排序算法实现</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sorting.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap_elements</span><span class="params">(<span class="type">void</span>* a, <span class="type">void</span>* b, <span class="type">size_t</span> element_size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a == b) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* temp = <span class="built_in">malloc</span>(element_size);</span><br><span class="line">    <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(temp, a, element_size);</span><br><span class="line">    <span class="built_in">memcpy</span>(a, b, element_size);</span><br><span class="line">    <span class="built_in">memcpy</span>(b, temp, element_size);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || count &lt;= <span class="number">1</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* arr = (<span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">bool</span> swapped = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt; count - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="type">void</span>* elem1 = arr + j * element_size;</span><br><span class="line">            <span class="type">void</span>* elem2 = arr + (j + <span class="number">1</span>) * element_size;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (compare(elem1, elem2) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                swap_elements(elem1, elem2, element_size);</span><br><span class="line">                swapped = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!swapped) <span class="keyword">break</span>;  <span class="comment">// 优化：如果没有交换，数组已排序</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">selection_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                   <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || count &lt;= <span class="number">1</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* arr = (<span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="type">size_t</span> min_idx = i;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> j = i + <span class="number">1</span>; j &lt; count; j++) &#123;</span><br><span class="line">            <span class="type">void</span>* elem_j = arr + j * element_size;</span><br><span class="line">            <span class="type">void</span>* elem_min = arr + min_idx * element_size;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (compare(elem_j, elem_min) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                min_idx = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (min_idx != i) &#123;</span><br><span class="line">            <span class="type">void</span>* elem_i = arr + i * element_size;</span><br><span class="line">            <span class="type">void</span>* elem_min = arr + min_idx * element_size;</span><br><span class="line">            swap_elements(elem_i, elem_min, element_size);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">insertion_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                   <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || count &lt;= <span class="number">1</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* arr = (<span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    <span class="type">char</span>* temp = <span class="built_in">malloc</span>(element_size);</span><br><span class="line">    <span class="keyword">if</span> (temp == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(temp, arr + i * element_size, element_size);</span><br><span class="line">        </span><br><span class="line">        <span class="type">size_t</span> j = i;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; compare(arr + (j - <span class="number">1</span>) * element_size, temp) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(arr + j * element_size, arr + (j - <span class="number">1</span>) * element_size, element_size);</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">memcpy</span>(arr + j * element_size, temp, element_size);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并排序辅助函数</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> left, <span class="type">size_t</span> mid, <span class="type">size_t</span> right,</span></span><br><span class="line"><span class="params">                 <span class="type">size_t</span> element_size, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="type">char</span>* arr = (<span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    <span class="type">size_t</span> left_size = mid - left + <span class="number">1</span>;</span><br><span class="line">    <span class="type">size_t</span> right_size = right - mid;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* left_array = <span class="built_in">malloc</span>(left_size * element_size);</span><br><span class="line">    <span class="type">char</span>* right_array = <span class="built_in">malloc</span>(right_size * element_size);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (left_array == <span class="literal">NULL</span> || right_array == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(left_array);</span><br><span class="line">        <span class="built_in">free</span>(right_array);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memcpy</span>(left_array, arr + left * element_size, left_size * element_size);</span><br><span class="line">    <span class="built_in">memcpy</span>(right_array, arr + (mid + <span class="number">1</span>) * element_size, right_size * element_size);</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = left;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt; left_size &amp;&amp; j &lt; right_size) &#123;</span><br><span class="line">        <span class="type">void</span>* left_elem = left_array + i * element_size;</span><br><span class="line">        <span class="type">void</span>* right_elem = right_array + j * element_size;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (compare(left_elem, right_elem) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(arr + k * element_size, left_elem, element_size);</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(arr + k * element_size, right_elem, element_size);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt; left_size) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(arr + k * element_size, left_array + i * element_size, element_size);</span><br><span class="line">        i++;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (j &lt; right_size) &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(arr + k * element_size, right_array + j * element_size, element_size);</span><br><span class="line">        j++;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(left_array);</span><br><span class="line">    <span class="built_in">free</span>(right_array);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">merge_sort_recursive</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> left, <span class="type">size_t</span> right,</span></span><br><span class="line"><span class="params">                                <span class="type">size_t</span> element_size, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">size_t</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        merge_sort_recursive(<span class="built_in">array</span>, left, mid, element_size, compare);</span><br><span class="line">        merge_sort_recursive(<span class="built_in">array</span>, mid + <span class="number">1</span>, right, element_size, compare);</span><br><span class="line">        merge(<span class="built_in">array</span>, left, mid, right, element_size, compare);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">               <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || count &lt;= <span class="number">1</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    merge_sort_recursive(<span class="built_in">array</span>, <span class="number">0</span>, count - <span class="number">1</span>, element_size, compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数实现</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_int</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> ia = *(<span class="type">const</span> <span class="type">int</span>*)a;</span><br><span class="line">    <span class="type">int</span> ib = *(<span class="type">const</span> <span class="type">int</span>*)b;</span><br><span class="line">    <span class="keyword">return</span> (ia &gt; ib) - (ia &lt; ib);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_double</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">double</span> da = *(<span class="type">const</span> <span class="type">double</span>*)a;</span><br><span class="line">    <span class="type">double</span> db = *(<span class="type">const</span> <span class="type">double</span>*)b;</span><br><span class="line">    <span class="keyword">return</span> (da &gt; db) - (da &lt; db);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_string</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(*(<span class="type">const</span> <span class="type">char</span>**)a, *(<span class="type">const</span> <span class="type">char</span>**)b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 线性搜索</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">linear_search</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                 <span class="type">const</span> <span class="type">void</span>* key, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || key == <span class="literal">NULL</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* arr = (<span class="type">const</span> <span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (compare(arr + i * element_size, key) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="type">int</span>)i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分搜索</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">binary_search</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count, <span class="type">size_t</span> element_size,</span></span><br><span class="line"><span class="params">                 <span class="type">const</span> <span class="type">void</span>* key, <span class="type">int</span> (*compare)(<span class="type">const</span> <span class="type">void</span>*, <span class="type">const</span> <span class="type">void</span>*))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span> || key == <span class="literal">NULL</span> || compare == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* arr = (<span class="type">const</span> <span class="type">char</span>*)<span class="built_in">array</span>;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> right = (<span class="type">int</span>)count - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="type">const</span> <span class="type">void</span>* mid_elem = arr + mid * element_size;</span><br><span class="line">        </span><br><span class="line">        <span class="type">int</span> cmp = compare(mid_elem, key);</span><br><span class="line">        <span class="keyword">if</span> (cmp == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-算法性能测试"><a href="#2-算法性能测试" class="headerlink" title="2. 算法性能测试"></a>2. 算法性能测试</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// algorithm_benchmark.c - 算法性能测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sorting.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* name;</span><br><span class="line">    <span class="type">sort_func_t</span> function;</span><br><span class="line">&#125; SortAlgorithm;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成测试数据</span></span><br><span class="line"><span class="type">int</span>* <span class="title function_">generate_random_array</span><span class="params">(<span class="type">size_t</span> count, <span class="type">int</span> max_value)</span> &#123;</span><br><span class="line">    <span class="type">int</span>* <span class="built_in">array</span> = <span class="built_in">malloc</span>(count * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = rand() % max_value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">generate_sorted_array</span><span class="params">(<span class="type">size_t</span> count)</span> &#123;</span><br><span class="line">    <span class="type">int</span>* <span class="built_in">array</span> = <span class="built_in">malloc</span>(count * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = (<span class="type">int</span>)i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">generate_reverse_sorted_array</span><span class="params">(<span class="type">size_t</span> count)</span> &#123;</span><br><span class="line">    <span class="type">int</span>* <span class="built_in">array</span> = <span class="built_in">malloc</span>(count * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = (<span class="type">int</span>)(count - <span class="number">1</span> - i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证数组是否已排序</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_sorted</span><span class="params">(<span class="type">const</span> <span class="type">int</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">1</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">array</span>[i] &lt; <span class="built_in">array</span>[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试单个排序算法</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">test_sort_algorithm</span><span class="params">(<span class="type">sort_func_t</span> sort_func, <span class="type">int</span>* <span class="built_in">array</span>, <span class="type">size_t</span> count)</span> &#123;</span><br><span class="line">    <span class="type">clock_t</span> start = clock();</span><br><span class="line">    sort_func(<span class="built_in">array</span>, count, <span class="keyword">sizeof</span>(<span class="type">int</span>), compare_int);</span><br><span class="line">    <span class="type">clock_t</span> end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> ((<span class="type">double</span>)(end - start)) / CLOCKS_PER_SEC;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">benchmark_sorting_algorithms</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 排序算法性能测试 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    SortAlgorithm algorithms[] = &#123;</span><br><span class="line">        &#123;<span class="string">&quot;冒泡排序&quot;</span>, bubble_sort&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;选择排序&quot;</span>, selection_sort&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;插入排序&quot;</span>, insertion_sort&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;归并排序&quot;</span>, merge_sort&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;快速排序&quot;</span>, quick_sort&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;堆排序&quot;</span>, heap_sort&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> algorithm_count = <span class="keyword">sizeof</span>(algorithms) / <span class="keyword">sizeof</span>(algorithms[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">size_t</span> test_sizes[] = &#123;<span class="number">1000</span>, <span class="number">5000</span>, <span class="number">10000</span>&#125;;</span><br><span class="line">    <span class="type">size_t</span> size_count = <span class="keyword">sizeof</span>(test_sizes) / <span class="keyword">sizeof</span>(test_sizes[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> s = <span class="number">0</span>; s &lt; size_count; s++) &#123;</span><br><span class="line">        <span class="type">size_t</span> test_size = test_sizes[s];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n测试数据大小: %zu\n&quot;</span>, test_size);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%-12s %-12s %-12s %-12s\n&quot;</span>, <span class="string">&quot;算法&quot;</span>, <span class="string">&quot;随机数据&quot;</span>, <span class="string">&quot;已排序&quot;</span>, <span class="string">&quot;逆序&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;--------------------------------------------------------\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> a = <span class="number">0</span>; a &lt; algorithm_count; a++) &#123;</span><br><span class="line">            <span class="comment">// 跳过大数据量的慢速算法</span></span><br><span class="line">            <span class="keyword">if</span> (test_size &gt; <span class="number">5000</span> &amp;&amp; (a == <span class="number">0</span> || a == <span class="number">1</span>)) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%-12s %-12s %-12s %-12s\n&quot;</span>, </span><br><span class="line">                       algorithms[a].name, <span class="string">&quot;跳过&quot;</span>, <span class="string">&quot;跳过&quot;</span>, <span class="string">&quot;跳过&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="type">double</span> times[<span class="number">3</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 测试随机数据</span></span><br><span class="line">            <span class="type">int</span>* random_array = generate_random_array(test_size, <span class="number">10000</span>);</span><br><span class="line">            times[<span class="number">0</span>] = test_sort_algorithm(algorithms[a].function, random_array, test_size);</span><br><span class="line">            assert(is_sorted(random_array, test_size));</span><br><span class="line">            <span class="built_in">free</span>(random_array);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 测试已排序数据</span></span><br><span class="line">            <span class="type">int</span>* sorted_array = generate_sorted_array(test_size);</span><br><span class="line">            times[<span class="number">1</span>] = test_sort_algorithm(algorithms[a].function, sorted_array, test_size);</span><br><span class="line">            assert(is_sorted(sorted_array, test_size));</span><br><span class="line">            <span class="built_in">free</span>(sorted_array);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 测试逆序数据</span></span><br><span class="line">            <span class="type">int</span>* reverse_array = generate_reverse_sorted_array(test_size);</span><br><span class="line">            times[<span class="number">2</span>] = test_sort_algorithm(algorithms[a].function, reverse_array, test_size);</span><br><span class="line">            assert(is_sorted(reverse_array, test_size));</span><br><span class="line">            <span class="built_in">free</span>(reverse_array);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-12s %-12.4f %-12.4f %-12.4f\n&quot;</span>, </span><br><span class="line">                   algorithms[a].name, times[<span class="number">0</span>], times[<span class="number">1</span>], times[<span class="number">2</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test_search_algorithms</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 搜索算法测试 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">size_t</span> test_size = <span class="number">100000</span>;</span><br><span class="line">    <span class="type">int</span>* <span class="built_in">array</span> = generate_sorted_array(test_size);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试线性搜索</span></span><br><span class="line">    <span class="type">clock_t</span> start = clock();</span><br><span class="line">    <span class="type">int</span> linear_result = linear_search(<span class="built_in">array</span>, test_size, <span class="keyword">sizeof</span>(<span class="type">int</span>), </span><br><span class="line">                                     &amp;(<span class="type">int</span>)&#123;<span class="number">50000</span>&#125;, compare_int);</span><br><span class="line">    <span class="type">clock_t</span> end = clock();</span><br><span class="line">    <span class="type">double</span> linear_time = ((<span class="type">double</span>)(end - start)) / CLOCKS_PER_SEC;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试二分搜索</span></span><br><span class="line">    start = clock();</span><br><span class="line">    <span class="type">int</span> binary_result = binary_search(<span class="built_in">array</span>, test_size, <span class="keyword">sizeof</span>(<span class="type">int</span>), </span><br><span class="line">                                     &amp;(<span class="type">int</span>)&#123;<span class="number">50000</span>&#125;, compare_int);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="type">double</span> binary_time = ((<span class="type">double</span>)(end - start)) / CLOCKS_PER_SEC;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;搜索目标: 50000\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;线性搜索: 找到位置 %d, 耗时 %.6f 秒\n&quot;</span>, linear_result, linear_time);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;二分搜索: 找到位置 %d, 耗时 %.6f 秒\n&quot;</span>, binary_result, binary_time);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;二分搜索比线性搜索快 %.0f 倍\n&quot;</span>, linear_time / binary_time);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;算法性能测试程序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;================\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    benchmark_sorting_algorithms();</span><br><span class="line">    test_search_algorithms();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n测试完成！\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、文本处理工具项目"><a href="#三、文本处理工具项目" class="headerlink" title="三、文本处理工具项目"></a>三、文本处理工具项目</h1><h2 id="（一）命令行文本分析器"><a href="#（一）命令行文本分析器" class="headerlink" title="（一）命令行文本分析器"></a>（一）命令行文本分析器</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// text_analyzer.c - 文本分析工具</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_WORD_LENGTH 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_WORDS 50000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> word[MAX_WORD_LENGTH];</span><br><span class="line">    <span class="type">int</span> frequency;</span><br><span class="line">&#125; WordFreq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>* content;</span><br><span class="line">    <span class="type">size_t</span> length;</span><br><span class="line">    <span class="type">int</span> char_count;</span><br><span class="line">    <span class="type">int</span> word_count;</span><br><span class="line">    <span class="type">int</span> line_count;</span><br><span class="line">    <span class="type">int</span> sentence_count;</span><br><span class="line">    WordFreq* words;</span><br><span class="line">    <span class="type">int</span> unique_words;</span><br><span class="line">&#125; TextStats;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取文件内容</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">read_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename, <span class="type">size_t</span>* size)</span> &#123;</span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 无法打开文件 &#x27;%s&#x27;\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_END);</span><br><span class="line">    <span class="type">long</span> file_size = ftell(file);</span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (file_size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 无法获取文件大小\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* content = <span class="built_in">malloc</span>(file_size + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (content == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 内存分配失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> bytes_read = fread(content, <span class="number">1</span>, file_size, file);</span><br><span class="line">    content[bytes_read] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    *size = bytes_read;</span><br><span class="line">    <span class="keyword">return</span> content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标准化单词（转小写，去除标点）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">normalize_word</span><span class="params">(<span class="type">char</span>* word)</span> &#123;</span><br><span class="line">    <span class="type">int</span> write_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; word[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalnum</span>(word[i])) &#123;</span><br><span class="line">            word[write_pos++] = <span class="built_in">tolower</span>(word[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    word[write_pos] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加或更新词频</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add_word</span><span class="params">(TextStats* stats, <span class="type">const</span> <span class="type">char</span>* word)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(word) == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找是否已存在</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; stats-&gt;unique_words; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(stats-&gt;words[i].word, word) == <span class="number">0</span>) &#123;</span><br><span class="line">            stats-&gt;words[i].frequency++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加新单词</span></span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;unique_words &lt; MAX_WORDS) &#123;</span><br><span class="line">        <span class="built_in">strncpy</span>(stats-&gt;words[stats-&gt;unique_words].word, word, MAX_WORD_LENGTH - <span class="number">1</span>);</span><br><span class="line">        stats-&gt;words[stats-&gt;unique_words].word[MAX_WORD_LENGTH - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        stats-&gt;words[stats-&gt;unique_words].frequency = <span class="number">1</span>;</span><br><span class="line">        stats-&gt;unique_words++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分析文本</span></span><br><span class="line">TextStats* <span class="title function_">analyze_text</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* content, <span class="type">size_t</span> length)</span> &#123;</span><br><span class="line">    TextStats* stats = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(TextStats));</span><br><span class="line">    <span class="keyword">if</span> (stats == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    stats-&gt;content = <span class="built_in">malloc</span>(length + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;content == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(stats);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    stats-&gt;words = <span class="built_in">malloc</span>(MAX_WORDS * <span class="keyword">sizeof</span>(WordFreq));</span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;words == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(stats-&gt;content);</span><br><span class="line">        <span class="built_in">free</span>(stats);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">strcpy</span>(stats-&gt;content, content);</span><br><span class="line">    stats-&gt;length = length;</span><br><span class="line">    stats-&gt;char_count = <span class="number">0</span>;</span><br><span class="line">    stats-&gt;word_count = <span class="number">0</span>;</span><br><span class="line">    stats-&gt;line_count = <span class="number">0</span>;</span><br><span class="line">    stats-&gt;sentence_count = <span class="number">0</span>;</span><br><span class="line">    stats-&gt;unique_words = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> current_word[MAX_WORD_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> word_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> in_word = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt;= length; i++) &#123;</span><br><span class="line">        <span class="type">char</span> c = (i &lt; length) ? content[i] : <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 字符计数</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; length &amp;&amp; !<span class="built_in">isspace</span>(c)) &#123;</span><br><span class="line">            stats-&gt;char_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 行计数</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            stats-&gt;line_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 句子计数</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;.&#x27;</span> || c == <span class="string">&#x27;!&#x27;</span> || c == <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">            stats-&gt;sentence_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 单词处理</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalnum</span>(c) &amp;&amp; word_pos &lt; MAX_WORD_LENGTH - <span class="number">1</span>) &#123;</span><br><span class="line">            current_word[word_pos++] = c;</span><br><span class="line">            in_word = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_word) &#123;</span><br><span class="line">                current_word[word_pos] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                normalize_word(current_word);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strlen</span>(current_word) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    add_word(stats, current_word);</span><br><span class="line">                    stats-&gt;word_count++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                word_pos = <span class="number">0</span>;</span><br><span class="line">                in_word = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果文本不以换行符结尾，行数加1</span></span><br><span class="line">    <span class="keyword">if</span> (length &gt; <span class="number">0</span> &amp;&amp; content[length - <span class="number">1</span>] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        stats-&gt;line_count++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> stats;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 词频排序比较函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_word_freq</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> WordFreq* wa = (<span class="type">const</span> WordFreq*)a;</span><br><span class="line">    <span class="type">const</span> WordFreq* wb = (<span class="type">const</span> WordFreq*)b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (wa-&gt;frequency != wb-&gt;frequency) &#123;</span><br><span class="line">        <span class="keyword">return</span> wb-&gt;frequency - wa-&gt;frequency;  <span class="comment">// 降序</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(wa-&gt;word, wb-&gt;word);  <span class="comment">// 字母顺序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印统计结果</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_statistics</span><span class="params">(<span class="type">const</span> TextStats* stats, <span class="type">bool</span> show_words, <span class="type">int</span> top_words)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 文本统计结果 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字符数: %d\n&quot;</span>, stats-&gt;char_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;单词数: %d\n&quot;</span>, stats-&gt;word_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;行数: %d\n&quot;</span>, stats-&gt;line_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;句子数: %d\n&quot;</span>, stats-&gt;sentence_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;唯一单词数: %d\n&quot;</span>, stats-&gt;unique_words);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;word_count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;平均单词长度: %.2f\n&quot;</span>, </span><br><span class="line">               (<span class="type">double</span>)stats-&gt;char_count / stats-&gt;word_count);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (show_words &amp;&amp; stats-&gt;unique_words &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 复制并排序词频数据</span></span><br><span class="line">        WordFreq* sorted_words = <span class="built_in">malloc</span>(stats-&gt;unique_words * <span class="keyword">sizeof</span>(WordFreq));</span><br><span class="line">        <span class="keyword">if</span> (sorted_words != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(sorted_words, stats-&gt;words, stats-&gt;unique_words * <span class="keyword">sizeof</span>(WordFreq));</span><br><span class="line">            qsort(sorted_words, stats-&gt;unique_words, <span class="keyword">sizeof</span>(WordFreq), compare_word_freq);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n=== 词频统计 (前%d个) ===\n&quot;</span>, top_words);</span><br><span class="line">            <span class="type">int</span> display_count = (stats-&gt;unique_words &lt; top_words) ? </span><br><span class="line">                               stats-&gt;unique_words : top_words;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; display_count; i++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%3d. %-20s %d次\n&quot;</span>, </span><br><span class="line">                       i + <span class="number">1</span>, sorted_words[i].word, sorted_words[i].frequency);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">free</span>(sorted_words);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放统计数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">free_text_stats</span><span class="params">(TextStats* stats)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (stats != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(stats-&gt;content);</span><br><span class="line">        <span class="built_in">free</span>(stats-&gt;words);</span><br><span class="line">        <span class="built_in">free</span>(stats);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示帮助信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_help</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* program_name)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用法: %s [选项] &lt;文件名&gt;\n&quot;</span>, program_name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;选项:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  -w, --words     显示词频统计\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  -t, --top N     显示前N个高频词 (默认: 20)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  -h, --help      显示此帮助信息\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;示例:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  %s document.txt\n&quot;</span>, program_name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  %s -w -t 10 document.txt\n&quot;</span>, program_name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>) &#123;</span><br><span class="line">        show_help(argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">bool</span> show_words = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">int</span> top_words = <span class="number">20</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* filename = <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 解析命令行参数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; argc; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;-h&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;--help&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            show_help(argv[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;-w&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;--words&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            show_words = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;-t&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(argv[i], <span class="string">&quot;--top&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i + <span class="number">1</span> &lt; argc) &#123;</span><br><span class="line">                top_words = atoi(argv[++i]);</span><br><span class="line">                <span class="keyword">if</span> (top_words &lt;= <span class="number">0</span>) top_words = <span class="number">20</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv[i][<span class="number">0</span>] != <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            filename = argv[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (filename == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 请指定要分析的文件\n&quot;</span>);</span><br><span class="line">        show_help(argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取和分析文件</span></span><br><span class="line">    <span class="type">size_t</span> file_size;</span><br><span class="line">    <span class="type">char</span>* content = read_file(filename, &amp;file_size);</span><br><span class="line">    <span class="keyword">if</span> (content == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;正在分析文件: %s\n&quot;</span>, filename);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;文件大小: %zu 字节\n\n&quot;</span>, file_size);</span><br><span class="line">    </span><br><span class="line">    TextStats* stats = analyze_text(content, file_size);</span><br><span class="line">    <span class="keyword">if</span> (stats == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 文本分析失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">free</span>(content);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    print_statistics(stats, show_words, top_words);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理资源</span></span><br><span class="line">    <span class="built_in">free</span>(content);</span><br><span class="line">    free_text_stats(stats);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结与展望"><a href="#四、总结与展望" class="headerlink" title="四、总结与展望"></a>四、总结与展望</h1><h2 id="（一）系列回顾"><a href="#（一）系列回顾" class="headerlink" title="（一）系列回顾"></a>（一）系列回顾</h2><p>通过这八篇文章的系统学习，我们完成了从C语言入门到项目实战的完整旅程：</p>
<p><strong>基础篇（第1-3篇）：</strong></p>
<ul>
<li>掌握了C语言的基本语法和数据类型</li>
<li>学会了函数设计和模块化编程</li>
<li>深入理解了数组和字符串处理</li>
</ul>
<p><strong>核心篇（第4-6篇）：</strong></p>
<ul>
<li>掌握了指针和内存管理的核心技术</li>
<li>学会了复杂数据类型的组织和使用</li>
<li>掌握了文件操作和数据持久化</li>
</ul>
<p><strong>高级篇（第7-8篇）：</strong></p>
<ul>
<li>探索了C语言的高级特性和现代编程技巧</li>
<li>通过项目实战整合了所有知识点</li>
</ul>
<h2 id="（二）继续学习的方向"><a href="#（二）继续学习的方向" class="headerlink" title="（二）继续学习的方向"></a>（二）继续学习的方向</h2><p><strong>系统编程：</strong></p>
<ul>
<li>操作系统原理和系统调用</li>
<li>网络编程和并发编程</li>
<li>嵌入式系统开发</li>
</ul>
<p><strong>性能优化：</strong></p>
<ul>
<li>算法和数据结构优化</li>
<li>内存管理优化</li>
<li>编译器优化技术</li>
</ul>
<p><strong>工程实践：</strong></p>
<ul>
<li>大型项目的组织和管理</li>
<li>代码质量和测试</li>
<li>跨平台开发</li>
</ul>
<h2 id="（三）实践建议"><a href="#（三）实践建议" class="headerlink" title="（三）实践建议"></a>（三）实践建议</h2><ol>
<li><strong>多写代码</strong>：理论知识需要通过大量实践来巩固</li>
<li><strong>阅读源码</strong>：学习优秀开源项目的代码</li>
<li><strong>参与项目</strong>：加入开源项目或自己发起项目</li>
<li><strong>持续学习</strong>：关注C语言标准的发展和新技术</li>
</ol>
<div class="note success flat"><p><strong>恭喜您完成了C语言系统学习系列！</strong><br>现在您已经具备了扎实的C语言基础，可以开始更高级的编程挑战了。记住，编程是一门实践的艺术，只有不断练习才能真正掌握。</p>
</div>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《算法导论》- Thomas H. Cormen等</li>
<li>《UNIX环境高级编程》- W. Richard Stevens</li>
<li>《深入理解计算机系统》- Randal E. Bryant</li>
<li>《操作系统概念》- Abraham Silberschatz等</li>
<li>《C语言接口与实现》- David R. Hanson</li>
<li>Linux内核源码：<a href="https://github.com/torvalds/linux">https://github.com/torvalds/linux</a></li>
<li>GNU C库源码：<a href="https://www.gnu.org/software/libc/">https://www.gnu.org/software/libc/</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第8篇（完结篇）</strong><br>通过完整的项目实战，将前面学到的所有知识融会贯通，从算法实现到系统编程，构建真正实用的程序。</p>
</div>

<h1 id="前]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据结构" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="项目实战" scheme="https://hexo.blog.uwakeme.tech/tags/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
      <category term="算法实现" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    
      <category term="系统编程" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言高级特性与现代编程：提升代码质量]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E7%8E%B0%E4%BB%A3%E7%BC%96%E7%A8%8B%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言高级特性与现代编程：提升代码质量/</id>
    <published>2025-08-11T08:00:00.000Z</published>
    <updated>2025-08-11T07:53:29.592Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第7篇</strong><br>探索C语言的高级特性和现代编程技巧，学会编写高质量、可维护的专业级代码。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经过前面六篇文章的系统学习，您已经掌握了C语言的核心概念和基本技能。现在是时候深入探索C语言的高级特性，学习现代C编程的最佳实践，提升代码质量和开发效率。</p>
<p><strong>现代C语言的发展</strong></p>
<p>C语言并非一成不变，从C89到C99、C11、C18，每个标准都引入了新的特性：</p>
<ul>
<li><strong>C99</strong>：变长数组、内联函数、复数类型、布尔类型</li>
<li><strong>C11</strong>：多线程支持、原子操作、静态断言、匿名结构体</li>
<li><strong>C18</strong>：主要是错误修正和澄清</li>
</ul>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>掌握预处理器的高级用法</li>
<li>学会使用可变参数函数</li>
<li>理解内联函数和编译器优化</li>
<li>掌握现代C语言的新特性</li>
<li>学会代码规范和最佳实践</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%EF%BC%9A%E6%9E%84%E5%BB%BA%E5%AE%9E%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="上一篇：文件操作与数据持久化"><i class="far fa-hand-point-left"></i><span>上一篇：文件操作与数据持久化</span></a>

<h1 id="一、预处理器高级技巧"><a href="#一、预处理器高级技巧" class="headerlink" title="一、预处理器高级技巧"></a>一、预处理器高级技巧</h1><h2 id="（一）宏的高级用法"><a href="#（一）宏的高级用法" class="headerlink" title="（一）宏的高级用法"></a>（一）宏的高级用法</h2><h3 id="1-函数式宏和条件编译"><a href="#1-函数式宏和条件编译" class="headerlink" title="1. 函数式宏和条件编译"></a>1. 函数式宏和条件编译</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> DBG_PRINT(fmt, ...) \</span></span><br><span class="line"><span class="meta">        printf(<span class="string">&quot;[DEBUG] %s:%d: &quot;</span> fmt, __FILE__, __LINE__, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> DBG_PRINT(fmt, ...) ((void)0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 性能测试宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BENCHMARK_START(name) \</span></span><br><span class="line"><span class="meta">    do &#123; \</span></span><br><span class="line"><span class="meta">        printf(<span class="string">&quot;开始测试: %s\n&quot;</span>, name); \</span></span><br><span class="line"><span class="meta">        clock_t start_time = clock();</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BENCHMARK_END() \</span></span><br><span class="line"><span class="meta">        clock_t end_time = clock(); \</span></span><br><span class="line"><span class="meta">        double elapsed = ((double)(end_time - start_time)) / CLOCKS_PER_SEC; \</span></span><br><span class="line"><span class="meta">        printf(<span class="string">&quot;测试完成，耗时: %.4f 秒\n&quot;</span>, elapsed); \</span></span><br><span class="line"><span class="meta">    &#125; while(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的内存分配宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_MALLOC(ptr, size, type) \</span></span><br><span class="line"><span class="meta">    do &#123; \</span></span><br><span class="line"><span class="meta">        (ptr) = (type*)malloc(size); \</span></span><br><span class="line"><span class="meta">        <span class="keyword">if</span> ((ptr) == NULL) &#123; \</span></span><br><span class="line"><span class="meta">            fprintf(stderr, <span class="string">&quot;内存分配失败: %s:%d\n&quot;</span>, __FILE__, __LINE__); \</span></span><br><span class="line"><span class="meta">            exit(EXIT_FAILURE); \</span></span><br><span class="line"><span class="meta">        &#125; \</span></span><br><span class="line"><span class="meta">        DBG_PRINT(<span class="string">&quot;分配内存: %p, 大小: %zu\n&quot;</span>, (void*)(ptr), (size_t)(size)); \</span></span><br><span class="line"><span class="meta">    &#125; while(0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_FREE(ptr) \</span></span><br><span class="line"><span class="meta">    do &#123; \</span></span><br><span class="line"><span class="meta">        <span class="keyword">if</span> ((ptr) != NULL) &#123; \</span></span><br><span class="line"><span class="meta">            DBG_PRINT(<span class="string">&quot;释放内存: %p\n&quot;</span>, (void*)(ptr)); \</span></span><br><span class="line"><span class="meta">            free(ptr); \</span></span><br><span class="line"><span class="meta">            (ptr) = NULL; \</span></span><br><span class="line"><span class="meta">        &#125; \</span></span><br><span class="line"><span class="meta">    &#125; while(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组大小宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 最大值和最小值宏（类型安全）</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(a, b) (&#123; \</span></span><br><span class="line"><span class="meta">    typeof(a) _a = (a); \</span></span><br><span class="line"><span class="meta">    typeof(b) _b = (b); \</span></span><br><span class="line"><span class="meta">    (_a &gt; _b) ? _a : _b; \</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MIN(a, b) (&#123; \</span></span><br><span class="line"><span class="meta">    typeof(a) _a = (a); \</span></span><br><span class="line"><span class="meta">    typeof(b) _b = (b); \</span></span><br><span class="line"><span class="meta">    (_a &lt; _b) ? _a : _b; \</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串化宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STRINGIFY(x) #x</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOSTRING(x) STRINGIFY(x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CONCAT(a, b) a##b</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CONCAT3(a, b, c) a##b##c</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 版本信息宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_MAJOR 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_MINOR 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_PATCH 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> VERSION_STRING TOSTRING(VERSION_MAJOR) <span class="string">&quot;.&quot;</span> \</span></span><br><span class="line"><span class="meta">                      TOSTRING(VERSION_MINOR) <span class="string">&quot;.&quot;</span> \</span></span><br><span class="line"><span class="meta">                      TOSTRING(VERSION_PATCH)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_advanced_macros</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 高级宏演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 版本信息</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;程序版本: %s\n&quot;</span>, VERSION_STRING);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调试信息</span></span><br><span class="line">    DBG_PRINT(<span class="string">&quot;这是一条调试信息，数字: %d\n&quot;</span>, <span class="number">42</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组大小</span></span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组大小: %zu\n&quot;</span>, ARRAY_SIZE(numbers));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 类型安全的最大值最小值</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    <span class="type">float</span> x = <span class="number">3.14f</span>, y = <span class="number">2.71f</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MAX(%d, %d) = %d\n&quot;</span>, a, b, MAX(a, b));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MIN(%.2f, %.2f) = %.2f\n&quot;</span>, x, y, MIN(x, y));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 性能测试</span></span><br><span class="line">    BENCHMARK_START(<span class="string">&quot;数组求和&quot;</span>);</span><br><span class="line">    <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">        sum += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;求和结果: %ld\n&quot;</span>, sum);</span><br><span class="line">    BENCHMARK_END();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全内存分配</span></span><br><span class="line">    <span class="type">int</span>* ptr;</span><br><span class="line">    SAFE_MALLOC(ptr, <span class="number">10</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>), <span class="type">int</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用分配的内存</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        ptr[i] = i * i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;分配的数组内容: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    SAFE_FREE(ptr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 条件编译示例</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_conditional_compilation</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 条件编译演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 编译器检测</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> __GNUC__</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;使用GCC编译器，版本: %d.%d.%d\n&quot;</span>, </span><br><span class="line">               __GNUC__, __GNUC_MINOR__, __GNUC_PATCHLEVEL__);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(_MSC_VER)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;使用Microsoft Visual C++编译器\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__clang__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;使用Clang编译器\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未知编译器\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 操作系统检测</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> _WIN32</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;运行在Windows系统\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__linux__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;运行在Linux系统\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__APPLE__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;运行在macOS系统\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未知操作系统\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 架构检测</span></span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> _WIN64</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;64位Windows\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(_WIN32)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;32位Windows\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__x86_64__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;64位x86架构\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__i386__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;32位x86架构\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> defined(__aarch64__)</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;64位ARM架构\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未知架构\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 编译时间信息</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;编译日期: %s\n&quot;</span>, __DATE__);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;编译时间: %s\n&quot;</span>, __TIME__);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;源文件: %s\n&quot;</span>, __FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_advanced_macros();</span><br><span class="line">    demonstrate_conditional_compilation();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-X-宏技术"><a href="#2-X-宏技术" class="headerlink" title="2. X-宏技术"></a>2. X-宏技术</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// X-宏定义：错误代码</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_CODES \</span></span><br><span class="line"><span class="meta">    X(SUCCESS, 0, <span class="string">&quot;操作成功&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(INVALID_PARAMETER, 1, <span class="string">&quot;无效参数&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(OUT_OF_MEMORY, 2, <span class="string">&quot;内存不足&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(FILE_NOT_FOUND, 3, <span class="string">&quot;文件未找到&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(PERMISSION_DENIED, 4, <span class="string">&quot;权限被拒绝&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(NETWORK_ERROR, 5, <span class="string">&quot;网络错误&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(TIMEOUT, 6, <span class="string">&quot;操作超时&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(UNKNOWN_ERROR, 99, <span class="string">&quot;未知错误&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成枚举</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, code, desc) ERROR_##name = code,</span></span><br><span class="line">    ERROR_CODES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">&#125; ErrorCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成错误描述数组</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* error_descriptions[] = &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, code, desc) [ERROR_##name] = desc,</span></span><br><span class="line">    ERROR_CODES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成错误名称数组</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* error_names[] = &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, code, desc) [ERROR_##name] = #name,</span></span><br><span class="line">    ERROR_CODES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取错误描述</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* <span class="title function_">get_error_description</span><span class="params">(ErrorCode code)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (code &gt;= <span class="number">0</span> &amp;&amp; code &lt; <span class="keyword">sizeof</span>(error_descriptions) / <span class="keyword">sizeof</span>(error_descriptions[<span class="number">0</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> error_descriptions[code] ? error_descriptions[code] : <span class="string">&quot;未定义错误&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;无效错误代码&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取错误名称</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* <span class="title function_">get_error_name</span><span class="params">(ErrorCode code)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (code &gt;= <span class="number">0</span> &amp;&amp; code &lt; <span class="keyword">sizeof</span>(error_names) / <span class="keyword">sizeof</span>(error_names[<span class="number">0</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> error_names[code] ? error_names[code] : <span class="string">&quot;UNDEFINED&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;INVALID&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// X-宏定义：状态机状态</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STATES \</span></span><br><span class="line"><span class="meta">    X(IDLE, <span class="string">&quot;空闲状态&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(CONNECTING, <span class="string">&quot;连接中&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(CONNECTED, <span class="string">&quot;已连接&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(SENDING, <span class="string">&quot;发送中&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(RECEIVING, <span class="string">&quot;接收中&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(DISCONNECTING, <span class="string">&quot;断开连接中&quot;</span>) \</span></span><br><span class="line"><span class="meta">    X(ERROR, <span class="string">&quot;错误状态&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成状态枚举</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, desc) STATE_##name,</span></span><br><span class="line">    STATES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">    STATE_COUNT</span><br><span class="line">&#125; State;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成状态名称数组</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* state_names[] = &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, desc) #name,</span></span><br><span class="line">    STATES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成状态描述数组</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">char</span>* state_descriptions[] = &#123;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> X(name, desc) desc,</span></span><br><span class="line">    STATES</span><br><span class="line"><span class="meta">#<span class="keyword">undef</span> X</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 状态机结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    State current_state;</span><br><span class="line">    State previous_state;</span><br><span class="line">&#125; StateMachine;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 状态转换</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">state_machine_transition</span><span class="params">(StateMachine* sm, State new_state)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (sm != <span class="literal">NULL</span> &amp;&amp; new_state &lt; STATE_COUNT) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;状态转换: %s -&gt; %s\n&quot;</span>, </span><br><span class="line">               state_names[sm-&gt;current_state], </span><br><span class="line">               state_names[new_state]);</span><br><span class="line">        sm-&gt;previous_state = sm-&gt;current_state;</span><br><span class="line">        sm-&gt;current_state = new_state;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印状态信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_state_info</span><span class="params">(<span class="type">const</span> StateMachine* sm)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (sm != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;当前状态: %s (%s)\n&quot;</span>, </span><br><span class="line">               state_names[sm-&gt;current_state],</span><br><span class="line">               state_descriptions[sm-&gt;current_state]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;前一状态: %s (%s)\n&quot;</span>, </span><br><span class="line">               state_names[sm-&gt;previous_state],</span><br><span class="line">               state_descriptions[sm-&gt;previous_state]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_x_macros</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== X-宏技术演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 错误代码演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;错误代码演示:\n&quot;</span>);</span><br><span class="line">    ErrorCode errors[] = &#123;ERROR_SUCCESS, ERROR_INVALID_PARAMETER, </span><br><span class="line">                         ERROR_OUT_OF_MEMORY, ERROR_FILE_NOT_FOUND&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误 %s (%d): %s\n&quot;</span>, </span><br><span class="line">               get_error_name(errors[i]), </span><br><span class="line">               errors[i], </span><br><span class="line">               get_error_description(errors[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 状态机演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n状态机演示:\n&quot;</span>);</span><br><span class="line">    StateMachine sm = &#123;STATE_IDLE, STATE_IDLE&#125;;</span><br><span class="line">    </span><br><span class="line">    print_state_info(&amp;sm);</span><br><span class="line">    </span><br><span class="line">    state_machine_transition(&amp;sm, STATE_CONNECTING);</span><br><span class="line">    state_machine_transition(&amp;sm, STATE_CONNECTED);</span><br><span class="line">    state_machine_transition(&amp;sm, STATE_SENDING);</span><br><span class="line">    state_machine_transition(&amp;sm, STATE_ERROR);</span><br><span class="line">    </span><br><span class="line">    print_state_info(&amp;sm);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示所有状态</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n所有可用状态:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; STATE_COUNT; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d: %s - %s\n&quot;</span>, i, state_names[i], state_descriptions[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_x_macros();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）可变参数函数"><a href="#（二）可变参数函数" class="headerlink" title="（二）可变参数函数"></a>（二）可变参数函数</h2><h3 id="1-标准可变参数函数"><a href="#1-标准可变参数函数" class="headerlink" title="1. 标准可变参数函数"></a>1. 标准可变参数函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算多个整数的和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sum_integers</span><span class="params">(<span class="type">int</span> count, ...)</span> &#123;</span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, count);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        total += va_arg(args, <span class="type">int</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    va_end(args);</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算多个浮点数的平均值</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">average_doubles</span><span class="params">(<span class="type">int</span> count, ...)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    </span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, count);</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> total = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        total += va_arg(args, <span class="type">double</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    va_end(args);</span><br><span class="line">    <span class="keyword">return</span> total / count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找多个字符串中的最长字符串</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* <span class="title function_">find_longest_string</span><span class="params">(<span class="type">int</span> count, ...)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, count);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* longest = va_arg(args, <span class="type">const</span> <span class="type">char</span>*);</span><br><span class="line">    <span class="type">size_t</span> max_length = <span class="built_in">strlen</span>(longest);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> <span class="type">char</span>* current = va_arg(args, <span class="type">const</span> <span class="type">char</span>*);</span><br><span class="line">        <span class="type">size_t</span> current_length = <span class="built_in">strlen</span>(current);</span><br><span class="line">        <span class="keyword">if</span> (current_length &gt; max_length) &#123;</span><br><span class="line">            longest = current;</span><br><span class="line">            max_length = current_length;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    va_end(args);</span><br><span class="line">    <span class="keyword">return</span> longest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义printf函数（简化版）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">my_printf</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* format, ...)</span> &#123;</span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, format);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* p = format;</span><br><span class="line">    <span class="keyword">while</span> (*p != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*p == <span class="string">&#x27;%&#x27;</span> &amp;&amp; *(p + <span class="number">1</span>) != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">            p++;  <span class="comment">// 跳过%</span></span><br><span class="line">            <span class="keyword">switch</span> (*p) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>: &#123;</span><br><span class="line">                    <span class="type">int</span> value = va_arg(args, <span class="type">int</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>: &#123;</span><br><span class="line">                    <span class="type">double</span> value = va_arg(args, <span class="type">double</span>);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>: &#123;</span><br><span class="line">                    <span class="type">const</span> <span class="type">char</span>* value = va_arg(args, <span class="type">const</span> <span class="type">char</span>*);</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>: &#123;</span><br><span class="line">                    <span class="type">int</span> value = va_arg(args, <span class="type">int</span>);  <span class="comment">// char被提升为int</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, value);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;%&#x27;</span>: &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%%&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%%%c&quot;</span>, *p);  <span class="comment">// 未知格式符</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *p);</span><br><span class="line">        &#125;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    va_end(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志函数</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    LOG_DEBUG,</span><br><span class="line">    LOG_INFO,</span><br><span class="line">    LOG_WARNING,</span><br><span class="line">    LOG_ERROR</span><br><span class="line">&#125; LogLevel;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">log_message</span><span class="params">(LogLevel level, <span class="type">const</span> <span class="type">char</span>* format, ...)</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* level_names[] = &#123;<span class="string">&quot;DEBUG&quot;</span>, <span class="string">&quot;INFO&quot;</span>, <span class="string">&quot;WARNING&quot;</span>, <span class="string">&quot;ERROR&quot;</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印日志级别</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[%s] &quot;</span>, level_names[level]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理可变参数</span></span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, format);</span><br><span class="line">    <span class="built_in">vprintf</span>(format, args);  <span class="comment">// 使用vprintf处理可变参数</span></span><br><span class="line">    va_end(args);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_variadic_functions</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 可变参数函数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 整数求和</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数求和:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum(3, 1, 2, 3) = %d\n&quot;</span>, sum_integers(<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum(5, 10, 20, 30, 40, 50) = %d\n&quot;</span>, sum_integers(<span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 浮点数平均值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n浮点数平均值:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;average(3, 1.5, 2.5, 3.0) = %.2f\n&quot;</span>, </span><br><span class="line">           average_doubles(<span class="number">3</span>, <span class="number">1.5</span>, <span class="number">2.5</span>, <span class="number">3.0</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;average(4, 10.0, 20.0, 30.0, 40.0) = %.2f\n&quot;</span>, </span><br><span class="line">           average_doubles(<span class="number">4</span>, <span class="number">10.0</span>, <span class="number">20.0</span>, <span class="number">30.0</span>, <span class="number">40.0</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最长字符串</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n最长字符串:\n&quot;</span>);</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* longest = find_longest_string(<span class="number">4</span>, <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>, <span class="string">&quot;programming&quot;</span>, <span class="string">&quot;C&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最长字符串: \&quot;%s\&quot;\n&quot;</span>, longest);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 自定义printf</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n自定义printf演示:\n&quot;</span>);</span><br><span class="line">    my_printf(<span class="string">&quot;整数: %d, 浮点数: %f, 字符串: %s, 字符: %c\n&quot;</span>, </span><br><span class="line">              <span class="number">42</span>, <span class="number">3.14159</span>, <span class="string">&quot;Hello&quot;</span>, <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 日志函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n日志函数演示:\n&quot;</span>);</span><br><span class="line">    log_message(LOG_INFO, <span class="string">&quot;程序启动成功&quot;</span>);</span><br><span class="line">    log_message(LOG_WARNING, <span class="string">&quot;内存使用率达到 %d%%&quot;</span>, <span class="number">85</span>);</span><br><span class="line">    log_message(LOG_ERROR, <span class="string">&quot;文件 %s 打开失败，错误代码: %d&quot;</span>, <span class="string">&quot;config.txt&quot;</span>, <span class="number">404</span>);</span><br><span class="line">    log_message(LOG_DEBUG, <span class="string">&quot;变量值: x=%d, y=%.2f&quot;</span>, <span class="number">10</span>, <span class="number">3.14</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_variadic_functions();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-类型安全的可变参数"><a href="#2-类型安全的可变参数" class="headerlink" title="2. 类型安全的可变参数"></a>2. 类型安全的可变参数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数类型枚举</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    ARG_INT,</span><br><span class="line">    ARG_DOUBLE,</span><br><span class="line">    ARG_STRING,</span><br><span class="line">    ARG_CHAR,</span><br><span class="line">    ARG_END</span><br><span class="line">&#125; ArgType;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数值联合体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* s;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">&#125; ArgValue;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型化参数结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ArgType type;</span><br><span class="line">    ArgValue value;</span><br><span class="line">&#125; TypedArg;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型安全的打印函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">safe_print</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* format, ...)</span> &#123;</span><br><span class="line">    va_list args;</span><br><span class="line">    va_start(args, format);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* p = format;</span><br><span class="line">    <span class="keyword">while</span> (*p != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*p == <span class="string">&#x27;%&#x27;</span> &amp;&amp; *(p + <span class="number">1</span>) != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">            p++;  <span class="comment">// 跳过%</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 获取类型信息</span></span><br><span class="line">            ArgType expected_type = va_arg(args, ArgType);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (expected_type == ARG_END) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;[错误: 参数不足]&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">switch</span> (*p) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (expected_type == ARG_INT) &#123;</span><br><span class="line">                        <span class="type">int</span> value = va_arg(args, <span class="type">int</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, value);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;[类型错误: 期望int]&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (expected_type == ARG_DOUBLE) &#123;</span><br><span class="line">                        <span class="type">double</span> value = va_arg(args, <span class="type">double</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>, value);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;[类型错误: 期望double]&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (expected_type == ARG_STRING) &#123;</span><br><span class="line">                        <span class="type">const</span> <span class="type">char</span>* value = va_arg(args, <span class="type">const</span> <span class="type">char</span>*);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, value);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;[类型错误: 期望string]&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> (expected_type == ARG_CHAR) &#123;</span><br><span class="line">                        <span class="type">int</span> value = va_arg(args, <span class="type">int</span>);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, value);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;[类型错误: 期望char]&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%%%c&quot;</span>, *p);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, *p);</span><br><span class="line">        &#125;</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    va_end(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 宏简化类型安全调用</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SAFE_PRINT(format, ...) \</span></span><br><span class="line"><span class="meta">    safe_print(format, ##__VA_ARGS__, ARG_END)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INT_ARG(x) ARG_INT, (x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOUBLE_ARG(x) ARG_DOUBLE, (x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STRING_ARG(x) ARG_STRING, (x)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHAR_ARG(x) ARG_CHAR, (x)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态参数数组</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    TypedArg* args;</span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="type">int</span> capacity;</span><br><span class="line">&#125; ArgArray;</span><br><span class="line"></span><br><span class="line">ArgArray* <span class="title function_">arg_array_create</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    ArgArray* arr = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ArgArray));</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    arr-&gt;args = <span class="literal">NULL</span>;</span><br><span class="line">    arr-&gt;count = <span class="number">0</span>;</span><br><span class="line">    arr-&gt;capacity = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">arg_array_add_int</span><span class="params">(ArgArray* arr, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (arr-&gt;count &gt;= arr-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">int</span> new_capacity = arr-&gt;capacity == <span class="number">0</span> ? <span class="number">4</span> : arr-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        TypedArg* new_args = <span class="built_in">realloc</span>(arr-&gt;args, new_capacity * <span class="keyword">sizeof</span>(TypedArg));</span><br><span class="line">        <span class="keyword">if</span> (new_args == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        arr-&gt;args = new_args;</span><br><span class="line">        arr-&gt;capacity = new_capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    arr-&gt;args[arr-&gt;count].type = ARG_INT;</span><br><span class="line">    arr-&gt;args[arr-&gt;count].value.i = value;</span><br><span class="line">    arr-&gt;count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">arg_array_add_double</span><span class="params">(ArgArray* arr, <span class="type">double</span> value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (arr-&gt;count &gt;= arr-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">int</span> new_capacity = arr-&gt;capacity == <span class="number">0</span> ? <span class="number">4</span> : arr-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        TypedArg* new_args = <span class="built_in">realloc</span>(arr-&gt;args, new_capacity * <span class="keyword">sizeof</span>(TypedArg));</span><br><span class="line">        <span class="keyword">if</span> (new_args == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        arr-&gt;args = new_args;</span><br><span class="line">        arr-&gt;capacity = new_capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    arr-&gt;args[arr-&gt;count].type = ARG_DOUBLE;</span><br><span class="line">    arr-&gt;args[arr-&gt;count].value.d = value;</span><br><span class="line">    arr-&gt;count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">arg_array_add_string</span><span class="params">(ArgArray* arr, <span class="type">const</span> <span class="type">char</span>* value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (arr-&gt;count &gt;= arr-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">int</span> new_capacity = arr-&gt;capacity == <span class="number">0</span> ? <span class="number">4</span> : arr-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        TypedArg* new_args = <span class="built_in">realloc</span>(arr-&gt;args, new_capacity * <span class="keyword">sizeof</span>(TypedArg));</span><br><span class="line">        <span class="keyword">if</span> (new_args == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        arr-&gt;args = new_args;</span><br><span class="line">        arr-&gt;capacity = new_capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    arr-&gt;args[arr-&gt;count].type = ARG_STRING;</span><br><span class="line">    arr-&gt;args[arr-&gt;count].value.s = value;</span><br><span class="line">    arr-&gt;count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">arg_array_print</span><span class="params">(<span class="type">const</span> ArgArray* arr)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;参数数组 (%d个参数):\n&quot;</span>, arr-&gt;count);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr-&gt;count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  [%d] &quot;</span>, i);</span><br><span class="line">        <span class="keyword">switch</span> (arr-&gt;args[i].type) &#123;</span><br><span class="line">            <span class="keyword">case</span> ARG_INT:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;int: %d\n&quot;</span>, arr-&gt;args[i].value.i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ARG_DOUBLE:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;double: %.2f\n&quot;</span>, arr-&gt;args[i].value.d);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ARG_STRING:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;string: \&quot;%s\&quot;\n&quot;</span>, arr-&gt;args[i].value.s);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ARG_CHAR:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;char: &#x27;%c&#x27;\n&quot;</span>, arr-&gt;args[i].value.c);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;unknown type\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">arg_array_free</span><span class="params">(ArgArray* arr)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(arr-&gt;args);</span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_type_safe_variadic</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 类型安全可变参数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 类型安全的打印函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;类型安全打印:\n&quot;</span>);</span><br><span class="line">    safe_print(<span class="string">&quot;整数: %d, 浮点数: %f, 字符串: %s\n&quot;</span>, </span><br><span class="line">               INT_ARG(<span class="number">42</span>), DOUBLE_ARG(<span class="number">3.14</span>), STRING_ARG(<span class="string">&quot;Hello&quot;</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 类型错误演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n类型错误演示:\n&quot;</span>);</span><br><span class="line">    safe_print(<span class="string">&quot;整数: %d, 浮点数: %f\n&quot;</span>, </span><br><span class="line">               DOUBLE_ARG(<span class="number">3.14</span>), INT_ARG(<span class="number">42</span>));  <span class="comment">// 故意颠倒类型</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态参数数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n动态参数数组演示:\n&quot;</span>);</span><br><span class="line">    ArgArray* arr = arg_array_create();</span><br><span class="line">    </span><br><span class="line">    arg_array_add_int(arr, <span class="number">100</span>);</span><br><span class="line">    arg_array_add_double(arr, <span class="number">2.718</span>);</span><br><span class="line">    arg_array_add_string(arr, <span class="string">&quot;动态参数&quot;</span>);</span><br><span class="line">    arg_array_add_int(arr, <span class="number">200</span>);</span><br><span class="line">    </span><br><span class="line">    arg_array_print(arr);</span><br><span class="line">    </span><br><span class="line">    arg_array_free(arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_type_safe_variadic();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、现代C语言特性"><a href="#二、现代C语言特性" class="headerlink" title="二、现代C语言特性"></a>二、现代C语言特性</h1><h2 id="（一）C99和C11新特性"><a href="#（一）C99和C11新特性" class="headerlink" title="（一）C99和C11新特性"></a>（一）C99和C11新特性</h2><h3 id="1-变长数组和复合字面量"><a href="#1-变长数组和复合字面量" class="headerlink" title="1. 变长数组和复合字面量"></a>1. 变长数组和复合字面量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// C99特性：变长数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_vla</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 变长数组演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数组大小: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">0</span> || n &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无效的数组大小\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 变长数组声明</span></span><br><span class="line">    <span class="type">int</span> vla[n];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        vla[i] = i * i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;变长数组内容 (大小: %d):\n&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, vla[i]);</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">10</span> == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">10</span> != <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 二维变长数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n二维变长数组演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> rows = <span class="number">3</span>, cols = <span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> matrix[rows][cols];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化矩阵</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            matrix[i][j] = i * cols + j + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印矩阵</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵 %dx%d:\n&quot;</span>, rows, cols);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%3d &quot;</span>, matrix[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用变长数组的函数</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">calculate_average</span><span class="params">(<span class="type">int</span> n, <span class="type">double</span> arr[n])</span> &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        sum += arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum / n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">matrix_multiply</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m, <span class="type">int</span> p,</span></span><br><span class="line"><span class="params">                    <span class="type">double</span> a[n][m], <span class="type">double</span> b[m][p], <span class="type">double</span> result[n][p])</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; p; j++) &#123;</span><br><span class="line">            result[i][j] = <span class="number">0.0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; m; k++) &#123;</span><br><span class="line">                result[i][j] += a[i][k] * b[k][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// C99特性：复合字面量</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_compound_literals</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 复合字面量演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组复合字面量</span></span><br><span class="line">    <span class="type">int</span>* ptr = (<span class="type">int</span>[])&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组复合字面量: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 结构体复合字面量</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">int</span> x, y;</span><br><span class="line">        <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    &#125; Point;</span><br><span class="line">    </span><br><span class="line">    Point p = (Point)&#123;.x = <span class="number">10</span>, .y = <span class="number">20</span>, .name = <span class="string">&quot;原点&quot;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结构体复合字面量: (%d, %d) - %s\n&quot;</span>, p.x, p.y, p.name);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数参数中使用复合字面量</span></span><br><span class="line">    <span class="type">double</span> avg = calculate_average(<span class="number">5</span>, (<span class="type">double</span>[])&#123;<span class="number">1.5</span>, <span class="number">2.5</span>, <span class="number">3.5</span>, <span class="number">4.5</span>, <span class="number">5.5</span>&#125;);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;平均值: %.2f\n&quot;</span>, avg);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 矩阵乘法演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n矩阵乘法演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">double</span> a[<span class="number">2</span>][<span class="number">3</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;&#125;;</span><br><span class="line">    <span class="type">double</span> b[<span class="number">3</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">5</span>, <span class="number">6</span>&#125;&#125;;</span><br><span class="line">    <span class="type">double</span> result[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">    </span><br><span class="line">    matrix_multiply(<span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, a, b, result);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵A (2x3):\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵B (3x2):\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, b[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结果矩阵 (2x2):\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.0f &quot;</span>, result[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// C99特性：复数类型</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_complex_numbers</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 复数类型演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复数声明和初始化</span></span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z1 = <span class="number">3.0</span> + <span class="number">4.0</span> * I;</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z2 = <span class="number">1.0</span> - <span class="number">2.0</span> * I;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z1 = %.1f + %.1fi\n&quot;</span>, creal(z1), cimag(z1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z2 = %.1f + %.1fi\n&quot;</span>, creal(z2), cimag(z2));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复数运算</span></span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> sum = z1 + z2;</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> diff = z1 - z2;</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> product = z1 * z2;</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> quotient = z1 / z2;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n复数运算:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z1 + z2 = %.1f + %.1fi\n&quot;</span>, creal(sum), cimag(sum));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z1 - z2 = %.1f + %.1fi\n&quot;</span>, creal(diff), cimag(diff));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z1 * z2 = %.1f + %.1fi\n&quot;</span>, creal(product), cimag(product));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;z1 / z2 = %.2f + %.2fi\n&quot;</span>, creal(quotient), cimag(quotient));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复数函数</span></span><br><span class="line">    <span class="type">double</span> magnitude = cabs(z1);</span><br><span class="line">    <span class="type">double</span> phase = carg(z1);</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> conjugate = conj(z1);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n复数函数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;|z1| = %.2f\n&quot;</span>, magnitude);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;arg(z1) = %.2f 弧度\n&quot;</span>, phase);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;conj(z1) = %.1f + %.1fi\n&quot;</span>, creal(conjugate), cimag(conjugate));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_vla();</span><br><span class="line">    demonstrate_compound_literals();</span><br><span class="line">    demonstrate_complex_numbers();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-内联函数和静态断言"><a href="#2-内联函数和静态断言" class="headerlink" title="2. 内联函数和静态断言"></a>2. 内联函数和静态断言</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// C99特性：内联函数</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (a &lt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">double</span> <span class="title function_">square</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">bool</span> <span class="title function_">is_power_of_two</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> n != <span class="number">0</span> &amp;&amp; (n &amp; (n - <span class="number">1</span>)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内联函数用于位操作</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">set_bit</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> value, <span class="type">int</span> bit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> value | (<span class="number">1U</span> &lt;&lt; bit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">clear_bit</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> value, <span class="type">int</span> bit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> value &amp; ~(<span class="number">1U</span> &lt;&lt; bit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">bool</span> <span class="title function_">test_bit</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> value, <span class="type">int</span> bit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (value &amp; (<span class="number">1U</span> &lt;&lt; bit)) != <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title function_">toggle_bit</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> value, <span class="type">int</span> bit)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> value ^ (<span class="number">1U</span> &lt;&lt; bit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// C11特性：静态断言</span></span><br><span class="line"><span class="keyword">_Static_assert</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) &gt;= <span class="number">4</span>, <span class="string">&quot;int类型必须至少4字节&quot;</span>);</span><br><span class="line"><span class="keyword">_Static_assert</span>(<span class="keyword">sizeof</span>(<span class="type">void</span>*) == <span class="keyword">sizeof</span>(<span class="type">size_t</span>), <span class="string">&quot;指针大小必须等于size_t&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体对齐检查</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TestStruct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">_Static_assert</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> TestStruct) &gt;= <span class="keyword">sizeof</span>(<span class="type">char</span>) + <span class="keyword">sizeof</span>(<span class="type">int</span>) + <span class="keyword">sizeof</span>(<span class="type">double</span>),</span><br><span class="line">               <span class="string">&quot;结构体大小异常&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组大小检查</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BUFFER_SIZE 1024</span></span><br><span class="line"><span class="type">char</span> buffer[BUFFER_SIZE];</span><br><span class="line"><span class="keyword">_Static_assert</span>(BUFFER_SIZE &gt;= <span class="number">512</span>, <span class="string">&quot;缓冲区大小必须至少512字节&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_inline_functions</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 内联函数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本内联函数</span></span><br><span class="line">    <span class="type">int</span> a = <span class="number">15</span>, b = <span class="number">23</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max(%d, %d) = %d\n&quot;</span>, a, b, max(a, b));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;min(%d, %d) = %d\n&quot;</span>, a, b, min(a, b));</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> x = <span class="number">3.5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;square(%.1f) = %.2f\n&quot;</span>, x, square(x));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2的幂检查</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n2的幂检查:\n&quot;</span>);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">64</span>&#125;;</span><br><span class="line">    <span class="type">int</span> count = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%u %s 2的幂\n&quot;</span>, numbers[i], </span><br><span class="line">               is_power_of_two(numbers[i]) ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;不是&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 位操作演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n位操作演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> value = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;初始值: 0x%08X (%u)\n&quot;</span>, value, value);</span><br><span class="line">    </span><br><span class="line">    value = set_bit(value, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;设置第3位: 0x%08X (%u)\n&quot;</span>, value, value);</span><br><span class="line">    </span><br><span class="line">    value = set_bit(value, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;设置第7位: 0x%08X (%u)\n&quot;</span>, value, value);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;测试第3位: %s\n&quot;</span>, test_bit(value, <span class="number">3</span>) ? <span class="string">&quot;已设置&quot;</span> : <span class="string">&quot;未设置&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;测试第5位: %s\n&quot;</span>, test_bit(value, <span class="number">5</span>) ? <span class="string">&quot;已设置&quot;</span> : <span class="string">&quot;未设置&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    value = toggle_bit(value, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;切换第3位: 0x%08X (%u)\n&quot;</span>, value, value);</span><br><span class="line">    </span><br><span class="line">    value = clear_bit(value, <span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;清除第7位: 0x%08X (%u)\n&quot;</span>, value, value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行时断言演示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_assertions</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 断言演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="type">int</span> size = <span class="keyword">sizeof</span>(<span class="built_in">array</span>) / <span class="keyword">sizeof</span>(<span class="built_in">array</span>[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运行时断言</span></span><br><span class="line">    assert(size &gt; <span class="number">0</span>);  <span class="comment">// 确保数组不为空</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组大小: %d (断言通过)\n&quot;</span>, size);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数参数检查</span></span><br><span class="line">    <span class="type">int</span> index = <span class="number">2</span>;</span><br><span class="line">    assert(index &gt;= <span class="number">0</span> &amp;&amp; index &lt; size);  <span class="comment">// 边界检查</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d (边界检查通过)\n&quot;</span>, index, <span class="built_in">array</span>[index]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指针检查</span></span><br><span class="line">    <span class="type">int</span>* ptr = <span class="built_in">array</span>;</span><br><span class="line">    assert(ptr != <span class="literal">NULL</span>);  <span class="comment">// 空指针检查</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;指针有效，值: %d\n&quot;</span>, *ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;所有断言检查通过\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注意：以下断言会导致程序终止（已注释）</span></span><br><span class="line">    <span class="comment">// assert(size == 10);  // 这会失败并终止程序</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译时计算（使用内联函数）</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">int</span> <span class="title function_">factorial_compile_time</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (n &lt;= <span class="number">1</span>) ? <span class="number">1</span> : n * factorial_compile_time(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用宏进行编译时计算</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FACTORIAL_5 (5 * 4 * 3 * 2 * 1)</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_compile_time_computation</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 编译时计算演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 编译时常量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> fact5_macro = FACTORIAL_5;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5! (宏计算) = %d\n&quot;</span>, fact5_macro);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 内联函数（可能在编译时优化）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5! (内联函数) = %d\n&quot;</span>, factorial_compile_time(<span class="number">5</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 静态断言验证编译时计算</span></span><br><span class="line">    <span class="keyword">_Static_assert</span>(FACTORIAL_5 == <span class="number">120</span>, <span class="string">&quot;5!应该等于120&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;编译时计算验证通过\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;静态断言检查通过，程序开始执行\n\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    demonstrate_inline_functions();</span><br><span class="line">    demonstrate_assertions();</span><br><span class="line">    demonstrate_compile_time_computation();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、代码质量与最佳实践"><a href="#三、代码质量与最佳实践" class="headerlink" title="三、代码质量与最佳实践"></a>三、代码质量与最佳实践</h1><h2 id="（一）错误处理和防御性编程"><a href="#（一）错误处理和防御性编程" class="headerlink" title="（一）错误处理和防御性编程"></a>（一）错误处理和防御性编程</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误代码定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    RESULT_SUCCESS = <span class="number">0</span>,</span><br><span class="line">    RESULT_NULL_POINTER,</span><br><span class="line">    RESULT_INVALID_PARAMETER,</span><br><span class="line">    RESULT_OUT_OF_MEMORY,</span><br><span class="line">    RESULT_BUFFER_TOO_SMALL,</span><br><span class="line">    RESULT_FILE_ERROR,</span><br><span class="line">    RESULT_UNKNOWN_ERROR</span><br><span class="line">&#125; ResultCode;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    ResultCode code;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* message;</span><br><span class="line">    <span class="type">int</span> line;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* file;</span><br><span class="line">&#125; Result;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建结果的宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RESULT_OK() \</span></span><br><span class="line"><span class="meta">    ((Result)&#123;RESULT_SUCCESS, <span class="string">&quot;操作成功&quot;</span>, __LINE__, __FILE__&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RESULT_ERROR(code, msg) \</span></span><br><span class="line"><span class="meta">    ((Result)&#123;code, msg, __LINE__, __FILE__&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查结果的宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CHECK_RESULT(result) \</span></span><br><span class="line"><span class="meta">    do &#123; \</span></span><br><span class="line"><span class="meta">        <span class="keyword">if</span> ((result).code != RESULT_SUCCESS) &#123; \</span></span><br><span class="line"><span class="meta">            fprintf(stderr, <span class="string">&quot;错误 [%s:%d]: %s\n&quot;</span>, \</span></span><br><span class="line"><span class="meta">                    (result).file, (result).<span class="keyword">line</span>, (result).message); \</span></span><br><span class="line"><span class="meta">            return result; \</span></span><br><span class="line"><span class="meta">        &#125; \</span></span><br><span class="line"><span class="meta">    &#125; while(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的字符串复制函数</span></span><br><span class="line">Result <span class="title function_">safe_strcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">size_t</span> dest_size, <span class="type">const</span> <span class="type">char</span>* src)</span> &#123;</span><br><span class="line">    <span class="comment">// 参数验证</span></span><br><span class="line">    <span class="keyword">if</span> (dest == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;目标指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (src == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;源指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dest_size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_INVALID_PARAMETER, <span class="string">&quot;目标缓冲区大小为0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> src_len = <span class="built_in">strlen</span>(src);</span><br><span class="line">    <span class="keyword">if</span> (src_len &gt;= dest_size) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_BUFFER_TOO_SMALL, <span class="string">&quot;目标缓冲区太小&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">    <span class="keyword">return</span> RESULT_OK();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的整数除法</span></span><br><span class="line">Result <span class="title function_">safe_divide</span><span class="params">(<span class="type">int</span> dividend, <span class="type">int</span> divisor, <span class="type">int</span>* result)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;结果指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (divisor == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_INVALID_PARAMETER, <span class="string">&quot;除数不能为零&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查整数溢出</span></span><br><span class="line">    <span class="keyword">if</span> (dividend == INT_MIN &amp;&amp; divisor == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_INVALID_PARAMETER, <span class="string">&quot;整数溢出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *result = dividend / divisor;</span><br><span class="line">    <span class="keyword">return</span> RESULT_OK();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的内存分配</span></span><br><span class="line">Result <span class="title function_">safe_malloc</span><span class="params">(<span class="type">void</span>** ptr, <span class="type">size_t</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ptr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;指针参数为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_INVALID_PARAMETER, <span class="string">&quot;分配大小为0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *ptr = <span class="built_in">malloc</span>(size);</span><br><span class="line">    <span class="keyword">if</span> (*ptr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_OUT_OF_MEMORY, <span class="string">&quot;内存分配失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> RESULT_OK();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的文件读取</span></span><br><span class="line">Result <span class="title function_">safe_read_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename, <span class="type">char</span>** content, <span class="type">size_t</span>* size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (filename == <span class="literal">NULL</span> || content == <span class="literal">NULL</span> || size == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;参数指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="type">char</span> error_msg[<span class="number">256</span>];</span><br><span class="line">        <span class="built_in">snprintf</span>(error_msg, <span class="keyword">sizeof</span>(error_msg), <span class="string">&quot;无法打开文件: %s&quot;</span>, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_FILE_ERROR, error_msg);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取文件大小</span></span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_END);</span><br><span class="line">    <span class="type">long</span> file_size = ftell(file);</span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_SET);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (file_size &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_FILE_ERROR, <span class="string">&quot;无法获取文件大小&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分配内存</span></span><br><span class="line">    <span class="type">char</span>* buffer = <span class="built_in">malloc</span>(file_size + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (buffer == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_OUT_OF_MEMORY, <span class="string">&quot;内存分配失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取文件</span></span><br><span class="line">    <span class="type">size_t</span> bytes_read = fread(buffer, <span class="number">1</span>, file_size, file);</span><br><span class="line">    <span class="keyword">if</span> (bytes_read != (<span class="type">size_t</span>)file_size) &#123;</span><br><span class="line">        <span class="built_in">free</span>(buffer);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_FILE_ERROR, <span class="string">&quot;文件读取失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    buffer[file_size] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    fclose(file);</span><br><span class="line">    </span><br><span class="line">    *content = buffer;</span><br><span class="line">    *size = file_size;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> RESULT_OK();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组处理函数</span></span><br><span class="line">Result <span class="title function_">process_array</span><span class="params">(<span class="type">int</span>* <span class="built_in">array</span>, <span class="type">size_t</span> size, <span class="type">int</span> (*processor)(<span class="type">int</span>))</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;数组指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (processor == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_NULL_POINTER, <span class="string">&quot;处理函数指针为空&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> RESULT_ERROR(RESULT_INVALID_PARAMETER, <span class="string">&quot;数组大小为0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = processor(<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> RESULT_OK();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例处理函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">double_value</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">square_value</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_error_handling</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 错误处理演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串复制测试</span></span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">20</span>];</span><br><span class="line">    Result result;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 安全字符串复制测试:\n&quot;</span>);</span><br><span class="line">    result = safe_strcpy(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (result.code == RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;复制成功: %s\n&quot;</span>, buffer);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;复制失败: %s\n&quot;</span>, result.message);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 缓冲区太小的情况</span></span><br><span class="line">    result = safe_strcpy(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;这是一个非常长的字符串，超过了缓冲区的大小&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (result.code != RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;预期错误: %s\n&quot;</span>, result.message);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 除法测试</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n2. 安全除法测试:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> div_result;</span><br><span class="line">    result = safe_divide(<span class="number">10</span>, <span class="number">3</span>, &amp;div_result);</span><br><span class="line">    <span class="keyword">if</span> (result.code == RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;10 / 3 = %d\n&quot;</span>, div_result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    result = safe_divide(<span class="number">10</span>, <span class="number">0</span>, &amp;div_result);</span><br><span class="line">    <span class="keyword">if</span> (result.code != RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;预期错误: %s\n&quot;</span>, result.message);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 内存分配测试</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n3. 安全内存分配测试:\n&quot;</span>);</span><br><span class="line">    <span class="type">void</span>* ptr;</span><br><span class="line">    result = safe_malloc(&amp;ptr, <span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> (result.code == RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配成功: %p\n&quot;</span>, ptr);</span><br><span class="line">        <span class="built_in">free</span>(ptr);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组处理测试</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n4. 数组处理测试:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="type">size_t</span> count = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始数组: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, numbers[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    result = process_array(numbers, count, double_value);</span><br><span class="line">    <span class="keyword">if</span> (result.code == RESULT_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;翻倍后: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, numbers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_error_handling();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结与下一步"><a href="#四、总结与下一步" class="headerlink" title="四、总结与下一步"></a>四、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的深入学习，您已经掌握了：</p>
<p><strong>预处理器高级技巧：</strong></p>
<ul>
<li>复杂宏的编写和调试技巧</li>
<li>X-宏技术的应用</li>
<li>条件编译和平台适配</li>
</ul>
<p><strong>可变参数函数：</strong></p>
<ul>
<li>标准可变参数的使用</li>
<li>类型安全的可变参数设计</li>
<li>动态参数处理技术</li>
</ul>
<p><strong>现代C语言特性：</strong></p>
<ul>
<li>C99&#x2F;C11新特性的应用</li>
<li>内联函数和编译器优化</li>
<li>静态断言和编译时检查</li>
</ul>
<p><strong>代码质量提升：</strong></p>
<ul>
<li>错误处理的最佳实践</li>
<li>防御性编程技巧</li>
<li>代码规范和可维护性</li>
</ul>
<h2 id="（二）编程最佳实践"><a href="#（二）编程最佳实践" class="headerlink" title="（二）编程最佳实践"></a>（二）编程最佳实践</h2><ol>
<li><strong>错误处理</strong>：始终检查函数返回值和边界条件</li>
<li><strong>内存管理</strong>：合理使用动态内存，避免泄漏</li>
<li><strong>代码规范</strong>：保持一致的命名和格式风格</li>
<li><strong>文档注释</strong>：为复杂函数和数据结构添加详细注释</li>
<li><strong>测试驱动</strong>：编写测试用例验证代码正确性</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%EF%BC%9A%E4%BB%8E%E7%AE%97%E6%B3%95%E5%88%B0%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/" title="下一篇：项目实战"><i class="far fa-hand-point-right"></i><span>下一篇：项目实战</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《C程序设计语言》（第2版）- Brian W. Kernighan &amp; Dennis M. Ritchie</li>
<li>《C专家编程》- Peter van der Linden</li>
<li>《高质量C&#x2F;C++编程指南》- 林锐</li>
<li>《现代C语言程序设计》- K. N. King</li>
<li>ISO&#x2F;IEC 9899:2018 - C语言国际标准</li>
<li>GCC手册：<a href="https://gcc.gnu.org/onlinedocs/">https://gcc.gnu.org/onlinedocs/</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第7篇</strong><br>探索C语言的高级特性和现代编程技巧，学会编写高质量、可维护的专业级代码。</p>
</div>

<h1 id="前言"><a href="#前言]]>
    </summary>
    
      <category term="最佳实践" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    
      <category term="代码质量" scheme="https://hexo.blog.uwakeme.tech/tags/%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/"/>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="现代C语言" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%8E%B0%E4%BB%A3C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="高级特性" scheme="https://hexo.blog.uwakeme.tech/tags/%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言文件操作与数据持久化：构建实用程序]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%EF%BC%9A%E6%9E%84%E5%BB%BA%E5%AE%9E%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言文件操作与数据持久化：构建实用程序/</id>
    <published>2025-08-11T07:00:00.000Z</published>
    <updated>2025-08-11T07:53:03.485Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第6篇</strong><br>深入探讨C语言文件操作和数据持久化技术，学会构建能够保存和读取数据的实用程序。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>到目前为止，我们编写的程序在运行结束后，所有数据都会丢失。在实际应用中，我们经常需要将数据保存到文件中，以便程序重新启动时能够恢复之前的状态。文件操作是构建实用程序的基础技能，也是数据持久化的核心技术。</p>
<p><strong>为什么需要文件操作？</strong></p>
<p>在现实应用中，文件操作无处不在：</p>
<ul>
<li><strong>配置管理</strong>：保存程序设置和用户偏好</li>
<li><strong>数据存储</strong>：保存用户数据、日志记录</li>
<li><strong>数据交换</strong>：与其他程序或系统交换数据</li>
<li><strong>备份恢复</strong>：数据备份和灾难恢复</li>
</ul>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>掌握文本文件和二进制文件的操作</li>
<li>学会错误处理和异常情况的处理</li>
<li>理解文件指针和随机访问</li>
<li>掌握CSV、JSON等常见格式的处理</li>
<li>学会构建完整的数据持久化系统</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E8%81%94%E5%90%88%E4%BD%93%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87%E8%89%BA%E6%9C%AF/" title="上一篇：结构体与联合体"><i class="far fa-hand-point-left"></i><span>上一篇：结构体与联合体</span></a>

<h1 id="一、文件操作基础"><a href="#一、文件操作基础" class="headerlink" title="一、文件操作基础"></a>一、文件操作基础</h1><h2 id="（一）文本文件操作"><a href="#（一）文本文件操作" class="headerlink" title="（一）文本文件操作"></a>（一）文本文件操作</h2><h3 id="1-基本文件操作函数"><a href="#1-基本文件操作函数" class="headerlink" title="1. 基本文件操作函数"></a>1. 基本文件操作函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_basic_file_operations</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 基本文件操作演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* filename = <span class="string">&quot;test_output.txt&quot;</span>;</span><br><span class="line">    FILE* file;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入文件</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 写入文件:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;w&quot;</span>);  <span class="comment">// 以写入模式打开文件</span></span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建文件: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用fprintf写入格式化数据</span></span><br><span class="line">    <span class="built_in">fprintf</span>(file, <span class="string">&quot;这是第一行文本\n&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(file, <span class="string">&quot;数字: %d, 浮点数: %.2f\n&quot;</span>, <span class="number">42</span>, <span class="number">3.14159</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(file, <span class="string">&quot;字符串: %s\n&quot;</span>, <span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用fputs写入字符串</span></span><br><span class="line">    <span class="built_in">fputs</span>(<span class="string">&quot;这是使用fputs写入的行\n&quot;</span>, file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用fputc写入单个字符</span></span><br><span class="line">    fputc(<span class="string">&#x27;A&#x27;</span>, file);</span><br><span class="line">    fputc(<span class="string">&#x27;\n&#x27;</span>, file);</span><br><span class="line">    </span><br><span class="line">    fclose(file);  <span class="comment">// 关闭文件</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;文件写入完成\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取文件</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n2. 读取文件:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;r&quot;</span>);  <span class="comment">// 以读取模式打开文件</span></span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法打开文件: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">256</span>];</span><br><span class="line">    <span class="type">int</span> line_number = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 逐行读取文件</span></span><br><span class="line">    <span class="keyword">while</span> (fgets(buffer, <span class="keyword">sizeof</span>(buffer), file) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d行: %s&quot;</span>, line_number++, buffer);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 追加到文件</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n3. 追加到文件:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;a&quot;</span>);  <span class="comment">// 以追加模式打开文件</span></span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;这是追加的内容\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;当前时间戳: %ld\n&quot;</span>, time(<span class="literal">NULL</span>));</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内容追加完成\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 再次读取文件查看追加结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n4. 追加后的文件内容:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        line_number = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (fgets(buffer, <span class="keyword">sizeof</span>(buffer), file) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;第%d行: %s&quot;</span>, line_number++, buffer);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除测试文件</span></span><br><span class="line">    <span class="keyword">if</span> (remove(filename) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n测试文件已删除\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n删除文件失败: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的文件操作函数</span></span><br><span class="line">FILE* <span class="title function_">safe_fopen</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename, <span class="type">const</span> <span class="type">char</span>* mode)</span> &#123;</span><br><span class="line">    FILE* file = fopen(filename, mode);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;错误: 无法打开文件 &#x27;%s&#x27; (模式: %s): %s\n&quot;</span>, </span><br><span class="line">                filename, mode, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">safe_fclose</span><span class="params">(FILE* file)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fclose(file) != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;警告: 关闭文件时出错: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件复制函数</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">copy_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* source, <span class="type">const</span> <span class="type">char</span>* destination)</span> &#123;</span><br><span class="line">    FILE* src = safe_fopen(source, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (src == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* dst = safe_fopen(destination, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (dst == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        safe_fclose(src);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">4096</span>];</span><br><span class="line">    <span class="type">size_t</span> bytes_read;</span><br><span class="line">    <span class="type">bool</span> success = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((bytes_read = fread(buffer, <span class="number">1</span>, <span class="keyword">sizeof</span>(buffer), src)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (fwrite(buffer, <span class="number">1</span>, bytes_read, dst) != bytes_read) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;写入文件时出错: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">            success = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (ferror(src)) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;读取文件时出错: %s\n&quot;</span>, strerror(errno));</span><br><span class="line">        success = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    safe_fclose(src);</span><br><span class="line">    safe_fclose(dst);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> success;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_file_utilities</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 文件工具函数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建源文件</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* source_file = <span class="string">&quot;source.txt&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* dest_file = <span class="string">&quot;destination.txt&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = safe_fopen(source_file, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;这是要复制的文件内容\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;包含多行文本\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;用于测试文件复制功能\n&quot;</span>);</span><br><span class="line">        safe_fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复制文件</span></span><br><span class="line">    <span class="keyword">if</span> (copy_file(source_file, dest_file)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件复制成功\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 验证复制结果</span></span><br><span class="line">        FILE* copied = safe_fopen(dest_file, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (copied != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;复制的文件内容:\n&quot;</span>);</span><br><span class="line">            <span class="type">char</span> buffer[<span class="number">256</span>];</span><br><span class="line">            <span class="keyword">while</span> (fgets(buffer, <span class="keyword">sizeof</span>(buffer), copied) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  %s&quot;</span>, buffer);</span><br><span class="line">            &#125;</span><br><span class="line">            safe_fclose(copied);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件复制失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理测试文件</span></span><br><span class="line">    remove(source_file);</span><br><span class="line">    remove(dest_file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_basic_file_operations();</span><br><span class="line">    demonstrate_file_utilities();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-文件指针和随机访问"><a href="#2-文件指针和随机访问" class="headerlink" title="2. 文件指针和随机访问"></a>2. 文件指针和随机访问</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生记录结构（用于演示随机访问）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">50</span>];</span><br><span class="line">    <span class="type">float</span> gpa;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125; StudentRecord;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_file_positioning</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 文件定位和随机访问演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* filename = <span class="string">&quot;students.dat&quot;</span>;</span><br><span class="line">    FILE* file;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建测试数据</span></span><br><span class="line">    StudentRecord students[] = &#123;</span><br><span class="line">        &#123;<span class="number">1001</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">3.8f</span>, <span class="number">20</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1002</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">3.6f</span>, <span class="number">21</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1003</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">3.9f</span>, <span class="number">19</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1004</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">3.7f</span>, <span class="number">22</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1005</span>, <span class="string">&quot;钱七&quot;</span>, <span class="number">3.5f</span>, <span class="number">20</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">int</span> student_count = <span class="keyword">sizeof</span>(students) / <span class="keyword">sizeof</span>(students[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入学生记录</span></span><br><span class="line">    file = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建文件\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fwrite(students, <span class="keyword">sizeof</span>(StudentRecord), student_count, file);</span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已写入 %d 条学生记录\n&quot;</span>, student_count);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 随机访问演示</span></span><br><span class="line">    file = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法打开文件\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取文件大小</span></span><br><span class="line">    fseek(file, <span class="number">0</span>, SEEK_END);</span><br><span class="line">    <span class="type">long</span> file_size = ftell(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;文件大小: %ld 字节\n&quot;</span>, file_size);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;记录数量: %ld\n&quot;</span>, file_size / <span class="keyword">sizeof</span>(StudentRecord));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取第3条记录（索引为2）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n读取第3条记录:\n&quot;</span>);</span><br><span class="line">    fseek(file, <span class="number">2</span> * <span class="keyword">sizeof</span>(StudentRecord), SEEK_SET);</span><br><span class="line">    StudentRecord record;</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID: %d, 姓名: %s, GPA: %.1f, 年龄: %d\n&quot;</span>,</span><br><span class="line">               record.id, record.name, record.gpa, record.age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取最后一条记录</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n读取最后一条记录:\n&quot;</span>);</span><br><span class="line">    fseek(file, -<span class="keyword">sizeof</span>(StudentRecord), SEEK_END);</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID: %d, 姓名: %s, GPA: %.1f, 年龄: %d\n&quot;</span>,</span><br><span class="line">               record.id, record.name, record.gpa, record.age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从当前位置向前移动</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n从当前位置向前读取:\n&quot;</span>);</span><br><span class="line">    fseek(file, <span class="number">-2</span> * <span class="keyword">sizeof</span>(StudentRecord), SEEK_CUR);</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID: %d, 姓名: %s, GPA: %.1f, 年龄: %d\n&quot;</span>,</span><br><span class="line">               record.id, record.name, record.gpa, record.age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示当前文件位置</span></span><br><span class="line">    <span class="type">long</span> current_pos = ftell(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前文件位置: %ld 字节\n&quot;</span>, current_pos);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前记录索引: %ld\n&quot;</span>, current_pos / <span class="keyword">sizeof</span>(StudentRecord));</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改特定记录</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n修改第2条记录的GPA:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;r+b&quot;</span>);  <span class="comment">// 读写模式</span></span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 定位到第2条记录</span></span><br><span class="line">        fseek(file, <span class="number">1</span> * <span class="keyword">sizeof</span>(StudentRecord), SEEK_SET);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取记录</span></span><br><span class="line">        <span class="keyword">if</span> (fread(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;修改前: ID: %d, GPA: %.1f\n&quot;</span>, record.id, record.gpa);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 修改GPA</span></span><br><span class="line">            record.gpa = <span class="number">4.0f</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 回到记录开始位置</span></span><br><span class="line">            fseek(file, -<span class="keyword">sizeof</span>(StudentRecord), SEEK_CUR);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 写回修改后的记录</span></span><br><span class="line">            fwrite(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;修改后: ID: %d, GPA: %.1f\n&quot;</span>, record.id, record.gpa);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证修改结果</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n验证修改结果 - 所有记录:\n&quot;</span>);</span><br><span class="line">    file = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="type">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (fread(&amp;record, <span class="keyword">sizeof</span>(StudentRecord), <span class="number">1</span>, file) == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;记录%d: ID=%d, 姓名=%s, GPA=%.1f, 年龄=%d\n&quot;</span>,</span><br><span class="line">                   index++, record.id, record.name, record.gpa, record.age);</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理测试文件</span></span><br><span class="line">    remove(filename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_file_positioning();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）二进制文件操作"><a href="#（二）二进制文件操作" class="headerlink" title="（二）二进制文件操作"></a>（二）二进制文件操作</h2><h3 id="1-结构体的序列化和反序列化"><a href="#1-结构体的序列化和反序列化" class="headerlink" title="1. 结构体的序列化和反序列化"></a>1. 结构体的序列化和反序列化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 复杂的数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> year, month, day;</span><br><span class="line">    <span class="type">int</span> hour, minute, second;</span><br><span class="line">&#125; DateTime;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> email[<span class="number">100</span>];</span><br><span class="line">    DateTime created_at;</span><br><span class="line">    DateTime last_login;</span><br><span class="line">    <span class="type">float</span> balance;</span><br><span class="line">    <span class="type">int</span> transaction_count;</span><br><span class="line">    <span class="type">bool</span> is_active;</span><br><span class="line">&#125; UserAccount;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件头结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> signature[<span class="number">8</span>];      <span class="comment">// 文件签名</span></span><br><span class="line">    <span class="type">int</span> version;           <span class="comment">// 文件格式版本</span></span><br><span class="line">    <span class="type">int</span> record_count;      <span class="comment">// 记录数量</span></span><br><span class="line">    DateTime created_at;   <span class="comment">// 文件创建时间</span></span><br><span class="line">    <span class="type">char</span> description[<span class="number">64</span>];  <span class="comment">// 文件描述</span></span><br><span class="line">&#125; FileHeader;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前时间</span></span><br><span class="line">DateTime <span class="title function_">get_current_time</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">time_t</span> now = time(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tm</span>* <span class="title">tm_info</span> =</span> localtime(&amp;now);</span><br><span class="line">    </span><br><span class="line">    DateTime dt = &#123;</span><br><span class="line">        .year = tm_info-&gt;tm_year + <span class="number">1900</span>,</span><br><span class="line">        .month = tm_info-&gt;tm_mon + <span class="number">1</span>,</span><br><span class="line">        .day = tm_info-&gt;tm_mday,</span><br><span class="line">        .hour = tm_info-&gt;tm_hour,</span><br><span class="line">        .minute = tm_info-&gt;tm_min,</span><br><span class="line">        .second = tm_info-&gt;tm_sec</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> dt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存用户账户到二进制文件</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">save_user_accounts</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename, UserAccount accounts[], <span class="type">int</span> count)</span> &#123;</span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入文件头</span></span><br><span class="line">    FileHeader header = &#123;</span><br><span class="line">        .signature = <span class="string">&quot;USRDATA&quot;</span>,</span><br><span class="line">        .version = <span class="number">1</span>,</span><br><span class="line">        .record_count = count,</span><br><span class="line">        .created_at = get_current_time()</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">strcpy</span>(header.description, <span class="string">&quot;User Account Database&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (fwrite(&amp;header, <span class="keyword">sizeof</span>(FileHeader), <span class="number">1</span>, file) != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;写入文件头失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入用户账户数据</span></span><br><span class="line">    <span class="keyword">if</span> (fwrite(accounts, <span class="keyword">sizeof</span>(UserAccount), count, file) != count) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;写入用户数据失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功保存 %d 个用户账户到 %s\n&quot;</span>, count, filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从二进制文件加载用户账户</span></span><br><span class="line">UserAccount* <span class="title function_">load_user_accounts</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename, <span class="type">int</span>* count)</span> &#123;</span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法打开文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取文件头</span></span><br><span class="line">    FileHeader header;</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;header, <span class="keyword">sizeof</span>(FileHeader), <span class="number">1</span>, file) != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;读取文件头失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证文件签名</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(header.signature, <span class="string">&quot;USRDATA&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无效的文件格式\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;文件信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  签名: %s\n&quot;</span>, header.signature);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  版本: %d\n&quot;</span>, header.version);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  记录数: %d\n&quot;</span>, header.record_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  创建时间: %d-%02d-%02d %02d:%02d:%02d\n&quot;</span>,</span><br><span class="line">           header.created_at.year, header.created_at.month, header.created_at.day,</span><br><span class="line">           header.created_at.hour, header.created_at.minute, header.created_at.second);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  描述: %s\n&quot;</span>, header.description);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分配内存</span></span><br><span class="line">    UserAccount* accounts = <span class="built_in">malloc</span>(header.record_count * <span class="keyword">sizeof</span>(UserAccount));</span><br><span class="line">    <span class="keyword">if</span> (accounts == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取用户数据</span></span><br><span class="line">    <span class="keyword">if</span> (fread(accounts, <span class="keyword">sizeof</span>(UserAccount), header.record_count, file) != header.record_count) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;读取用户数据失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">free</span>(accounts);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    *count = header.record_count;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功加载 %d 个用户账户\n&quot;</span>, *count);</span><br><span class="line">    <span class="keyword">return</span> accounts;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印用户账户信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_user_account</span><span class="params">(<span class="type">const</span> UserAccount* account)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用户账户:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  ID: %d\n&quot;</span>, account-&gt;id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  姓名: %s\n&quot;</span>, account-&gt;name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  邮箱: %s\n&quot;</span>, account-&gt;email);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  余额: %.2f\n&quot;</span>, account-&gt;balance);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  交易次数: %d\n&quot;</span>, account-&gt;transaction_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  状态: %s\n&quot;</span>, account-&gt;is_active ? <span class="string">&quot;活跃&quot;</span> : <span class="string">&quot;非活跃&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  创建时间: %d-%02d-%02d %02d:%02d:%02d\n&quot;</span>,</span><br><span class="line">           account-&gt;created_at.year, account-&gt;created_at.month, account-&gt;created_at.day,</span><br><span class="line">           account-&gt;created_at.hour, account-&gt;created_at.minute, account-&gt;created_at.second);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  最后登录: %d-%02d-%02d %02d:%02d:%02d\n&quot;</span>,</span><br><span class="line">           account-&gt;last_login.year, account-&gt;last_login.month, account-&gt;last_login.day,</span><br><span class="line">           account-&gt;last_login.hour, account-&gt;last_login.minute, account-&gt;last_login.second);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_binary_serialization</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 二进制序列化演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建测试用户账户</span></span><br><span class="line">    UserAccount accounts[] = &#123;</span><br><span class="line">        &#123;</span><br><span class="line">            .id = <span class="number">1001</span>,</span><br><span class="line">            .name = <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">            .email = <span class="string">&quot;zhangsan@example.com&quot;</span>,</span><br><span class="line">            .created_at = &#123;<span class="number">2023</span>, <span class="number">1</span>, <span class="number">15</span>, <span class="number">10</span>, <span class="number">30</span>, <span class="number">0</span>&#125;,</span><br><span class="line">            .last_login = &#123;<span class="number">2024</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">25</span>, <span class="number">30</span>&#125;,</span><br><span class="line">            .balance = <span class="number">1250.75f</span>,</span><br><span class="line">            .transaction_count = <span class="number">45</span>,</span><br><span class="line">            .is_active = <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            .id = <span class="number">1002</span>,</span><br><span class="line">            .name = <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">            .email = <span class="string">&quot;lisi@example.com&quot;</span>,</span><br><span class="line">            .created_at = &#123;<span class="number">2023</span>, <span class="number">3</span>, <span class="number">22</span>, <span class="number">16</span>, <span class="number">45</span>, <span class="number">0</span>&#125;,</span><br><span class="line">            .last_login = &#123;<span class="number">2024</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">15</span>, <span class="number">20</span>&#125;,</span><br><span class="line">            .balance = <span class="number">890.50f</span>,</span><br><span class="line">            .transaction_count = <span class="number">23</span>,</span><br><span class="line">            .is_active = <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            .id = <span class="number">1003</span>,</span><br><span class="line">            .name = <span class="string">&quot;王五&quot;</span>,</span><br><span class="line">            .email = <span class="string">&quot;wangwu@example.com&quot;</span>,</span><br><span class="line">            .created_at = &#123;<span class="number">2023</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">0</span>&#125;,</span><br><span class="line">            .last_login = &#123;<span class="number">2024</span>, <span class="number">7</span>, <span class="number">28</span>, <span class="number">20</span>, <span class="number">10</span>, <span class="number">45</span>&#125;,</span><br><span class="line">            .balance = <span class="number">0.00f</span>,</span><br><span class="line">            .transaction_count = <span class="number">12</span>,</span><br><span class="line">            .is_active = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> account_count = <span class="keyword">sizeof</span>(accounts) / <span class="keyword">sizeof</span>(accounts[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* filename = <span class="string">&quot;user_accounts.dat&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存到文件</span></span><br><span class="line">    <span class="keyword">if</span> (save_user_accounts(filename, accounts, account_count)) &#123;</span><br><span class="line">        <span class="comment">// 从文件加载</span></span><br><span class="line">        <span class="type">int</span> loaded_count;</span><br><span class="line">        UserAccount* loaded_accounts = load_user_accounts(filename, &amp;loaded_count);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (loaded_accounts != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n加载的用户账户:\n&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; loaded_count; i++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;--- 用户 %d ---\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">                print_user_account(&amp;loaded_accounts[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">free</span>(loaded_accounts);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理测试文件</span></span><br><span class="line">    remove(filename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_binary_serialization();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、高级文件操作"><a href="#二、高级文件操作" class="headerlink" title="二、高级文件操作"></a>二、高级文件操作</h1><h2 id="（一）CSV文件处理"><a href="#（一）CSV文件处理" class="headerlink" title="（一）CSV文件处理"></a>（一）CSV文件处理</h2><h3 id="1-CSV读写实现"><a href="#1-CSV读写实现" class="headerlink" title="1. CSV读写实现"></a>1. CSV读写实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_FIELD_LENGTH 256</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_FIELDS 20</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// CSV记录结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>** fields;</span><br><span class="line">    <span class="type">int</span> field_count;</span><br><span class="line">&#125; CSVRecord;</span><br><span class="line"></span><br><span class="line"><span class="comment">// CSV文件结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    CSVRecord* records;</span><br><span class="line">    <span class="type">int</span> record_count;</span><br><span class="line">    <span class="type">int</span> capacity;</span><br><span class="line">    <span class="type">char</span>** headers;</span><br><span class="line">    <span class="type">int</span> header_count;</span><br><span class="line">&#125; CSVFile;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建CSV文件对象</span></span><br><span class="line">CSVFile* <span class="title function_">csv_create</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    CSVFile* csv = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(CSVFile));</span><br><span class="line">    <span class="keyword">if</span> (csv == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    csv-&gt;records = <span class="literal">NULL</span>;</span><br><span class="line">    csv-&gt;record_count = <span class="number">0</span>;</span><br><span class="line">    csv-&gt;capacity = <span class="number">0</span>;</span><br><span class="line">    csv-&gt;headers = <span class="literal">NULL</span>;</span><br><span class="line">    csv-&gt;header_count = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> csv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析CSV行</span></span><br><span class="line">CSVRecord <span class="title function_">parse_csv_line</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* line)</span> &#123;</span><br><span class="line">    CSVRecord record = &#123;<span class="literal">NULL</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* fields[MAX_FIELDS];</span><br><span class="line">    <span class="type">int</span> field_count = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* line_copy = <span class="built_in">malloc</span>(<span class="built_in">strlen</span>(line) + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(line_copy, line);</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* token = strtok(line_copy, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (token != <span class="literal">NULL</span> &amp;&amp; field_count &lt; MAX_FIELDS) &#123;</span><br><span class="line">        <span class="comment">// 去除前后空格</span></span><br><span class="line">        <span class="keyword">while</span> (*token == <span class="string">&#x27; &#x27;</span>) token++;</span><br><span class="line">        <span class="type">char</span>* end = token + <span class="built_in">strlen</span>(token) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (end &gt; token &amp;&amp; *end == <span class="string">&#x27; &#x27;</span>) *end-- = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理引号</span></span><br><span class="line">        <span class="keyword">if</span> (*token == <span class="string">&#x27;&quot;&#x27;</span> &amp;&amp; *end == <span class="string">&#x27;&quot;&#x27;</span>) &#123;</span><br><span class="line">            token++;</span><br><span class="line">            *end = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        fields[field_count] = <span class="built_in">malloc</span>(<span class="built_in">strlen</span>(token) + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(fields[field_count], token);</span><br><span class="line">        field_count++;</span><br><span class="line">        </span><br><span class="line">        token = strtok(<span class="literal">NULL</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (field_count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        record.fields = <span class="built_in">malloc</span>(field_count * <span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; field_count; i++) &#123;</span><br><span class="line">            record.fields[i] = fields[i];</span><br><span class="line">        &#125;</span><br><span class="line">        record.field_count = field_count;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(line_copy);</span><br><span class="line">    <span class="keyword">return</span> record;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取CSV文件</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">csv_read_file</span><span class="params">(CSVFile* csv, <span class="type">const</span> <span class="type">char</span>* filename)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (csv == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法打开CSV文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span> line[<span class="number">1024</span>];</span><br><span class="line">    <span class="type">bool</span> first_line = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (fgets(line, <span class="keyword">sizeof</span>(line), file) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 移除换行符</span></span><br><span class="line">        <span class="type">char</span>* newline = <span class="built_in">strchr</span>(line, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (newline) *newline = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        CSVRecord record = parse_csv_line(line);</span><br><span class="line">        <span class="keyword">if</span> (record.field_count == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (first_line) &#123;</span><br><span class="line">            <span class="comment">// 第一行作为标题</span></span><br><span class="line">            csv-&gt;headers = record.fields;</span><br><span class="line">            csv-&gt;header_count = record.field_count;</span><br><span class="line">            first_line = <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 扩展记录数组</span></span><br><span class="line">            <span class="keyword">if</span> (csv-&gt;record_count &gt;= csv-&gt;capacity) &#123;</span><br><span class="line">                <span class="type">int</span> new_capacity = csv-&gt;capacity == <span class="number">0</span> ? <span class="number">10</span> : csv-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">                CSVRecord* new_records = <span class="built_in">realloc</span>(csv-&gt;records, </span><br><span class="line">                                                new_capacity * <span class="keyword">sizeof</span>(CSVRecord));</span><br><span class="line">                <span class="keyword">if</span> (new_records == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                    fclose(file);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                csv-&gt;records = new_records;</span><br><span class="line">                csv-&gt;capacity = new_capacity;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            csv-&gt;records[csv-&gt;record_count] = record;</span><br><span class="line">            csv-&gt;record_count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功读取CSV文件: %d条记录\n&quot;</span>, csv-&gt;record_count);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入CSV文件</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">csv_write_file</span><span class="params">(<span class="type">const</span> CSVFile* csv, <span class="type">const</span> <span class="type">char</span>* filename)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (csv == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建CSV文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入标题行</span></span><br><span class="line">    <span class="keyword">if</span> (csv-&gt;headers != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;header_count; i++) &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(file, <span class="string">&quot;%s&quot;</span>, csv-&gt;headers[i]);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; csv-&gt;header_count - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(file, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入数据行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;record_count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> CSVRecord* record = &amp;csv-&gt;records[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; record-&gt;field_count; j++) &#123;</span><br><span class="line">            <span class="comment">// 如果字段包含逗号或空格，用引号包围</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strchr</span>(record-&gt;fields[j], <span class="string">&#x27;,&#x27;</span>) != <span class="literal">NULL</span> || </span><br><span class="line">                <span class="built_in">strchr</span>(record-&gt;fields[j], <span class="string">&#x27; &#x27;</span>) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(file, <span class="string">&quot;\&quot;%s\&quot;&quot;</span>, record-&gt;fields[j]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(file, <span class="string">&quot;%s&quot;</span>, record-&gt;fields[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (j &lt; record-&gt;field_count - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(file, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功写入CSV文件: %d条记录\n&quot;</span>, csv-&gt;record_count);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印CSV内容</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">csv_print</span><span class="params">(<span class="type">const</span> CSVFile* csv)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (csv == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印标题</span></span><br><span class="line">    <span class="keyword">if</span> (csv-&gt;headers != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;标题: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;header_count; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-15s&quot;</span>, csv-&gt;headers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;header_count * <span class="number">15</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印数据</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;record_count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> CSVRecord* record = &amp;csv-&gt;records[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; record-&gt;field_count; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-15s&quot;</span>, record-&gt;fields[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放CSV内存</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">csv_free</span><span class="params">(CSVFile* csv)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (csv == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放标题</span></span><br><span class="line">    <span class="keyword">if</span> (csv-&gt;headers != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;header_count; i++) &#123;</span><br><span class="line">            <span class="built_in">free</span>(csv-&gt;headers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(csv-&gt;headers);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放记录</span></span><br><span class="line">    <span class="keyword">if</span> (csv-&gt;records != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; csv-&gt;record_count; i++) &#123;</span><br><span class="line">            CSVRecord* record = &amp;csv-&gt;records[i];</span><br><span class="line">            <span class="keyword">if</span> (record-&gt;fields != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; record-&gt;field_count; j++) &#123;</span><br><span class="line">                    <span class="built_in">free</span>(record-&gt;fields[j]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">free</span>(record-&gt;fields);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(csv-&gt;records);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(csv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_csv_processing</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== CSV文件处理演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* filename = <span class="string">&quot;students.csv&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建示例CSV文件</span></span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;学号,姓名,专业,年龄,GPA\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;2021001,张三,计算机科学,20,3.8\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;2021002,李四,电子工程,21,3.6\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;2021003,王五,数学,19,3.9\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;2021004,赵六,物理,22,3.7\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;2021005,\&quot;钱七, Jr.\&quot;,化学,20,3.5\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;创建示例CSV文件\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取CSV文件</span></span><br><span class="line">    CSVFile* csv = csv_create();</span><br><span class="line">    <span class="keyword">if</span> (csv_read_file(csv, filename)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nCSV文件内容:\n&quot;</span>);</span><br><span class="line">        csv_print(csv);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 修改数据并保存</span></span><br><span class="line">        <span class="keyword">if</span> (csv-&gt;record_count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 修改第一条记录的GPA</span></span><br><span class="line">            <span class="built_in">free</span>(csv-&gt;records[<span class="number">0</span>].fields[<span class="number">4</span>]);</span><br><span class="line">            csv-&gt;records[<span class="number">0</span>].fields[<span class="number">4</span>] = <span class="built_in">malloc</span>(<span class="number">10</span>);</span><br><span class="line">            <span class="built_in">strcpy</span>(csv-&gt;records[<span class="number">0</span>].fields[<span class="number">4</span>], <span class="string">&quot;4.0&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">const</span> <span class="type">char</span>* output_file = <span class="string">&quot;students_modified.csv&quot;</span>;</span><br><span class="line">        csv_write_file(csv, output_file);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n修改后的CSV文件已保存到: %s\n&quot;</span>, output_file);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 清理</span></span><br><span class="line">        remove(output_file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    csv_free(csv);</span><br><span class="line">    remove(filename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_csv_processing();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、实践项目：个人财务管理系统"><a href="#三、实践项目：个人财务管理系统" class="headerlink" title="三、实践项目：个人财务管理系统"></a>三、实践项目：个人财务管理系统</h1><p>让我们创建一个完整的个人财务管理系统，展示文件操作的综合应用：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_DESCRIPTION 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_CATEGORY 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DATA_FILE <span class="string">&quot;finance.dat&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BACKUP_FILE <span class="string">&quot;finance_backup.dat&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交易类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    TRANSACTION_INCOME,</span><br><span class="line">    TRANSACTION_EXPENSE</span><br><span class="line">&#125; TransactionType;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交易记录</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    TransactionType type;</span><br><span class="line">    <span class="type">double</span> amount;</span><br><span class="line">    <span class="type">char</span> description[MAX_DESCRIPTION];</span><br><span class="line">    <span class="type">char</span> category[MAX_CATEGORY];</span><br><span class="line">    <span class="type">time_t</span> timestamp;</span><br><span class="line">&#125; Transaction;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 财务系统</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Transaction* transactions;</span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="type">int</span> capacity;</span><br><span class="line">    <span class="type">double</span> balance;</span><br><span class="line">&#125; FinanceSystem;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建财务系统</span></span><br><span class="line">FinanceSystem* <span class="title function_">finance_create</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    FinanceSystem* fs = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(FinanceSystem));</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    fs-&gt;transactions = <span class="literal">NULL</span>;</span><br><span class="line">    fs-&gt;count = <span class="number">0</span>;</span><br><span class="line">    fs-&gt;capacity = <span class="number">0</span>;</span><br><span class="line">    fs-&gt;balance = <span class="number">0.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> fs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加交易</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">finance_add_transaction</span><span class="params">(FinanceSystem* fs, TransactionType type, </span></span><br><span class="line"><span class="params">                           <span class="type">double</span> amount, <span class="type">const</span> <span class="type">char</span>* description, </span></span><br><span class="line"><span class="params">                           <span class="type">const</span> <span class="type">char</span>* category)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span> || amount &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 扩展容量</span></span><br><span class="line">    <span class="keyword">if</span> (fs-&gt;count &gt;= fs-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">int</span> new_capacity = fs-&gt;capacity == <span class="number">0</span> ? <span class="number">10</span> : fs-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        Transaction* new_transactions = <span class="built_in">realloc</span>(fs-&gt;transactions, </span><br><span class="line">                                              new_capacity * <span class="keyword">sizeof</span>(Transaction));</span><br><span class="line">        <span class="keyword">if</span> (new_transactions == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        fs-&gt;transactions = new_transactions;</span><br><span class="line">        fs-&gt;capacity = new_capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建新交易</span></span><br><span class="line">    Transaction* t = &amp;fs-&gt;transactions[fs-&gt;count];</span><br><span class="line">    t-&gt;id = fs-&gt;count + <span class="number">1</span>;</span><br><span class="line">    t-&gt;type = type;</span><br><span class="line">    t-&gt;amount = amount;</span><br><span class="line">    <span class="built_in">strncpy</span>(t-&gt;description, description, MAX_DESCRIPTION - <span class="number">1</span>);</span><br><span class="line">    t-&gt;description[MAX_DESCRIPTION - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">strncpy</span>(t-&gt;category, category, MAX_CATEGORY - <span class="number">1</span>);</span><br><span class="line">    t-&gt;category[MAX_CATEGORY - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    t-&gt;timestamp = time(<span class="literal">NULL</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新余额</span></span><br><span class="line">    <span class="keyword">if</span> (type == TRANSACTION_INCOME) &#123;</span><br><span class="line">        fs-&gt;balance += amount;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fs-&gt;balance -= amount;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fs-&gt;count++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存到文件</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">finance_save</span><span class="params">(<span class="type">const</span> FinanceSystem* fs, <span class="type">const</span> <span class="type">char</span>* filename)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入文件头</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> signature[] = <span class="string">&quot;FINANCE1&quot;</span>;</span><br><span class="line">    fwrite(signature, <span class="keyword">sizeof</span>(signature), <span class="number">1</span>, file);</span><br><span class="line">    fwrite(&amp;fs-&gt;count, <span class="keyword">sizeof</span>(<span class="type">int</span>), <span class="number">1</span>, file);</span><br><span class="line">    fwrite(&amp;fs-&gt;balance, <span class="keyword">sizeof</span>(<span class="type">double</span>), <span class="number">1</span>, file);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入交易记录</span></span><br><span class="line">    <span class="keyword">if</span> (fs-&gt;count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        fwrite(fs-&gt;transactions, <span class="keyword">sizeof</span>(Transaction), fs-&gt;count, file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;财务数据已保存到: %s\n&quot;</span>, filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从文件加载</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">finance_load</span><span class="params">(FinanceSystem* fs, <span class="type">const</span> <span class="type">char</span>* filename)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;文件不存在，将创建新的财务记录\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;  <span class="comment">// 不是错误，只是文件不存在</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 读取文件头</span></span><br><span class="line">    <span class="type">char</span> signature[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">if</span> (fread(signature, <span class="keyword">sizeof</span>(signature), <span class="number">1</span>, file) != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;读取文件签名失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(signature, <span class="string">&quot;FINANCE1&quot;</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无效的文件格式\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="type">double</span> balance;</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;count, <span class="keyword">sizeof</span>(<span class="type">int</span>), <span class="number">1</span>, file) != <span class="number">1</span> ||</span><br><span class="line">        fread(&amp;balance, <span class="keyword">sizeof</span>(<span class="type">double</span>), <span class="number">1</span>, file) != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;读取文件头失败\n&quot;</span>);</span><br><span class="line">        fclose(file);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分配内存</span></span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        fs-&gt;transactions = <span class="built_in">malloc</span>(count * <span class="keyword">sizeof</span>(Transaction));</span><br><span class="line">        <span class="keyword">if</span> (fs-&gt;transactions == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">            fclose(file);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 读取交易记录</span></span><br><span class="line">        <span class="keyword">if</span> (fread(fs-&gt;transactions, <span class="keyword">sizeof</span>(Transaction), count, file) != count) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;读取交易记录失败\n&quot;</span>);</span><br><span class="line">            <span class="built_in">free</span>(fs-&gt;transactions);</span><br><span class="line">            fs-&gt;transactions = <span class="literal">NULL</span>;</span><br><span class="line">            fclose(file);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fs-&gt;count = count;</span><br><span class="line">    fs-&gt;capacity = count;</span><br><span class="line">    fs-&gt;balance = balance;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功加载 %d 条交易记录，当前余额: %.2f\n&quot;</span>, count, balance);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出为CSV</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">finance_export_csv</span><span class="params">(<span class="type">const</span> FinanceSystem* fs, <span class="type">const</span> <span class="type">char</span>* filename)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    FILE* file = fopen(filename, <span class="string">&quot;w&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无法创建CSV文件: %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入CSV头</span></span><br><span class="line">    <span class="built_in">fprintf</span>(file, <span class="string">&quot;ID,类型,金额,描述,类别,时间\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 写入交易记录</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; fs-&gt;count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> Transaction* t = &amp;fs-&gt;transactions[i];</span><br><span class="line">        <span class="type">char</span> time_str[<span class="number">64</span>];</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">tm</span>* <span class="title">tm_info</span> =</span> localtime(&amp;t-&gt;timestamp);</span><br><span class="line">        strftime(time_str, <span class="keyword">sizeof</span>(time_str), <span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>, tm_info);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">fprintf</span>(file, <span class="string">&quot;%d,%s,%.2f,\&quot;%s\&quot;,\&quot;%s\&quot;,%s\n&quot;</span>,</span><br><span class="line">                t-&gt;id,</span><br><span class="line">                t-&gt;type == TRANSACTION_INCOME ? <span class="string">&quot;收入&quot;</span> : <span class="string">&quot;支出&quot;</span>,</span><br><span class="line">                t-&gt;amount,</span><br><span class="line">                t-&gt;description,</span><br><span class="line">                t-&gt;category,</span><br><span class="line">                time_str);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    fclose(file);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交易记录已导出到CSV文件: %s\n&quot;</span>, filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示统计信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">finance_show_statistics</span><span class="params">(<span class="type">const</span> FinanceSystem* fs)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span> || fs-&gt;count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;暂无交易记录\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> total_income = <span class="number">0.0</span>;</span><br><span class="line">    <span class="type">double</span> total_expense = <span class="number">0.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; fs-&gt;count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> Transaction* t = &amp;fs-&gt;transactions[i];</span><br><span class="line">        <span class="keyword">if</span> (t-&gt;type == TRANSACTION_INCOME) &#123;</span><br><span class="line">            total_income += t-&gt;amount;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            total_expense += t-&gt;amount;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 财务统计 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;总收入: %.2f\n&quot;</span>, total_income);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;总支出: %.2f\n&quot;</span>, total_expense);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;净收入: %.2f\n&quot;</span>, total_income - total_expense);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前余额: %.2f\n&quot;</span>, fs-&gt;balance);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交易笔数: %d\n&quot;</span>, fs-&gt;count);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显示最近交易</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">finance_show_recent_transactions</span><span class="params">(<span class="type">const</span> FinanceSystem* fs, <span class="type">int</span> limit)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span> || fs-&gt;count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;暂无交易记录\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 最近 %d 笔交易 ===\n&quot;</span>, limit);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%-4s %-8s %-10s %-20s %-15s %-20s\n&quot;</span>, </span><br><span class="line">           <span class="string">&quot;ID&quot;</span>, <span class="string">&quot;类型&quot;</span>, <span class="string">&quot;金额&quot;</span>, <span class="string">&quot;描述&quot;</span>, <span class="string">&quot;类别&quot;</span>, <span class="string">&quot;时间&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;--------------------------------------------------------------------------------\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> start = (fs-&gt;count &gt; limit) ? fs-&gt;count - limit : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = start; i &lt; fs-&gt;count; i++) &#123;</span><br><span class="line">        <span class="type">const</span> Transaction* t = &amp;fs-&gt;transactions[i];</span><br><span class="line">        <span class="type">char</span> time_str[<span class="number">64</span>];</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">tm</span>* <span class="title">tm_info</span> =</span> localtime(&amp;t-&gt;timestamp);</span><br><span class="line">        strftime(time_str, <span class="keyword">sizeof</span>(time_str), <span class="string">&quot;%m-%d %H:%M&quot;</span>, tm_info);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%-4d %-8s %-10.2f %-20s %-15s %-20s\n&quot;</span>,</span><br><span class="line">               t-&gt;id,</span><br><span class="line">               t-&gt;type == TRANSACTION_INCOME ? <span class="string">&quot;收入&quot;</span> : <span class="string">&quot;支出&quot;</span>,</span><br><span class="line">               t-&gt;amount,</span><br><span class="line">               t-&gt;description,</span><br><span class="line">               t-&gt;category,</span><br><span class="line">               time_str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 释放内存</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">finance_free</span><span class="params">(FinanceSystem* fs)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fs != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(fs-&gt;transactions);</span><br><span class="line">        <span class="built_in">free</span>(fs);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主程序演示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_finance_system</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 个人财务管理系统演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    FinanceSystem* fs = finance_create();</span><br><span class="line">    <span class="keyword">if</span> (fs == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;系统创建失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载现有数据</span></span><br><span class="line">    finance_load(fs, DATA_FILE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加一些示例交易</span></span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_INCOME, <span class="number">5000.00</span>, <span class="string">&quot;工资&quot;</span>, <span class="string">&quot;薪资&quot;</span>);</span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_EXPENSE, <span class="number">1200.00</span>, <span class="string">&quot;房租&quot;</span>, <span class="string">&quot;住房&quot;</span>);</span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_EXPENSE, <span class="number">300.00</span>, <span class="string">&quot;超市购物&quot;</span>, <span class="string">&quot;食品&quot;</span>);</span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_EXPENSE, <span class="number">150.00</span>, <span class="string">&quot;加油&quot;</span>, <span class="string">&quot;交通&quot;</span>);</span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_INCOME, <span class="number">200.00</span>, <span class="string">&quot;兼职收入&quot;</span>, <span class="string">&quot;其他&quot;</span>);</span><br><span class="line">    finance_add_transaction(fs, TRANSACTION_EXPENSE, <span class="number">80.00</span>, <span class="string">&quot;电话费&quot;</span>, <span class="string">&quot;通讯&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示统计信息</span></span><br><span class="line">    finance_show_statistics(fs);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示最近交易</span></span><br><span class="line">    finance_show_recent_transactions(fs, <span class="number">5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存数据</span></span><br><span class="line">    finance_save(fs, DATA_FILE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建备份</span></span><br><span class="line">    finance_save(fs, BACKUP_FILE);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 导出CSV</span></span><br><span class="line">    finance_export_csv(fs, <span class="string">&quot;finance_export.csv&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理</span></span><br><span class="line">    finance_free(fs);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n演示完成！\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数据文件: %s\n&quot;</span>, DATA_FILE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;备份文件: %s\n&quot;</span>, BACKUP_FILE);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;CSV导出: finance_export.csv\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_finance_system();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结与下一步"><a href="#四、总结与下一步" class="headerlink" title="四、总结与下一步"></a>四、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的深入学习，您已经掌握了：</p>
<p><strong>文件操作基础：</strong></p>
<ul>
<li>文本文件和二进制文件的读写</li>
<li>文件指针和随机访问技术</li>
<li>错误处理和异常情况处理</li>
</ul>
<p><strong>高级文件技术：</strong></p>
<ul>
<li>结构体的序列化和反序列化</li>
<li>CSV文件的解析和生成</li>
<li>文件格式设计和版本控制</li>
</ul>
<p><strong>实践应用：</strong></p>
<ul>
<li>个人财务管理系统的完整实现</li>
<li>数据持久化的最佳实践</li>
<li>文件备份和数据导出功能</li>
</ul>
<h2 id="（二）最佳实践"><a href="#（二）最佳实践" class="headerlink" title="（二）最佳实践"></a>（二）最佳实践</h2><ol>
<li><strong>错误处理</strong>：始终检查文件操作的返回值</li>
<li><strong>资源管理</strong>：及时关闭文件句柄，避免资源泄漏</li>
<li><strong>数据完整性</strong>：使用文件头和校验和保证数据完整性</li>
<li><strong>版本兼容</strong>：设计可扩展的文件格式</li>
<li><strong>备份策略</strong>：定期备份重要数据</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B8%8E%E7%8E%B0%E4%BB%A3%E7%BC%96%E7%A8%8B%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F/" title="下一篇：高级特性与现代编程"><i class="far fa-hand-point-right"></i><span>下一篇：高级特性与现代编程</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《C程序设计语言》- Brian W. Kernighan &amp; Dennis M. Ritchie</li>
<li>《UNIX环境高级编程》- W. Richard Stevens</li>
<li>《C语言接口与实现》- David R. Hanson</li>
<li>《文件系统设计与实现》- Marshall Kirk McKusick</li>
<li>C语言文件I&#x2F;O参考：<a href="https://en.cppreference.com/w/c/io">https://en.cppreference.com/w/c/io</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第6篇</strong><br>深入探讨C语言文件操作和数据持久化技术，学会构建能够保存和读取数据的实用程序。</p>
</div>

<h1 id="前言"><a href="]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="文件操作" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
      <category term="数据持久化" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
      <category term="I/O编程" scheme="https://hexo.blog.uwakeme.tech/tags/I-O%E7%BC%96%E7%A8%8B/"/>
    
      <category term="文件系统" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言结构体与联合体：复杂数据的组织艺术]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E8%81%94%E5%90%88%E4%BD%93%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87%E8%89%BA%E6%9C%AF/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言结构体与联合体：复杂数据的组织艺术/</id>
    <published>2025-08-11T06:00:00.000Z</published>
    <updated>2025-08-11T07:52:53.343Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第5篇</strong><br>深入探讨C语言中复杂数据类型的组织方式，掌握结构体、联合体和位域的高级用法。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在前面的学习中，我们掌握了基本数据类型、数组和指针。但在实际编程中，我们经常需要处理更复杂的数据结构。结构体（struct）和联合体（union）是C语言提供的强大工具，让我们能够将相关的数据组织在一起，形成逻辑上的整体。</p>
<p><strong>为什么需要复杂数据类型？</strong></p>
<p>现实世界中的对象往往具有多个属性：</p>
<ul>
<li><strong>学生信息</strong>：姓名、学号、年龄、成绩等</li>
<li><strong>图形对象</strong>：坐标、颜色、大小、形状等</li>
<li><strong>网络数据包</strong>：源地址、目标地址、数据长度、校验和等</li>
<li><strong>文件信息</strong>：文件名、大小、创建时间、权限等</li>
</ul>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>深入理解结构体的定义和使用</li>
<li>掌握联合体的特性和应用场景</li>
<li>学会位域的使用和内存优化</li>
<li>理解内存对齐和填充机制</li>
<li>掌握复杂数据结构的设计模式</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%EF%BC%9A%E6%8E%8C%E6%8F%A1%E5%BA%95%E5%B1%82%E7%BC%96%E7%A8%8B%E7%9A%84%E6%A0%B8%E5%BF%83/" title="上一篇：指针与内存管理"><i class="far fa-hand-point-left"></i><span>上一篇：指针与内存管理</span></a>

<h1 id="一、结构体深度解析"><a href="#一、结构体深度解析" class="headerlink" title="一、结构体深度解析"></a>一、结构体深度解析</h1><h2 id="（一）结构体基础与高级特性"><a href="#（一）结构体基础与高级特性" class="headerlink" title="（一）结构体基础与高级特性"></a>（一）结构体基础与高级特性</h2><h3 id="1-结构体的定义和初始化"><a href="#1-结构体的定义和初始化" class="headerlink" title="1. 结构体的定义和初始化"></a>1. 结构体的定义和初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;                 <span class="comment">// 学号</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">50</span>];          <span class="comment">// 姓名</span></span><br><span class="line">    <span class="type">int</span> age;                <span class="comment">// 年龄</span></span><br><span class="line">    <span class="type">float</span> gpa;              <span class="comment">// 平均绩点</span></span><br><span class="line">    <span class="type">bool</span> is_graduate;       <span class="comment">// 是否毕业</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用typedef简化结构体名称</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">double</span> x, y;            <span class="comment">// 坐标</span></span><br><span class="line">    <span class="type">char</span> color[<span class="number">20</span>];         <span class="comment">// 颜色</span></span><br><span class="line">    <span class="type">float</span> radius;           <span class="comment">// 半径</span></span><br><span class="line">&#125; Circle;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 嵌套结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">&#125; Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> title[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> author[<span class="number">50</span>];</span><br><span class="line">    Date publish_date;      <span class="comment">// 嵌套结构体</span></span><br><span class="line">    <span class="type">float</span> price;</span><br><span class="line">    <span class="type">int</span> pages;</span><br><span class="line">&#125; Book;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_struct_basics</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 结构体基础演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 结构体初始化的不同方式</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式1：声明后逐个赋值</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student1</span>;</span></span><br><span class="line">    student1.id = <span class="number">1001</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(student1.name, <span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    student1.age = <span class="number">20</span>;</span><br><span class="line">    student1.gpa = <span class="number">3.8f</span>;</span><br><span class="line">    student1.is_graduate = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式2：初始化列表</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student2</span> =</span> &#123;<span class="number">1002</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">21</span>, <span class="number">3.6f</span>, <span class="literal">false</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式3：指定成员初始化（C99特性）</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student3</span> =</span> &#123;</span><br><span class="line">        .id = <span class="number">1003</span>,</span><br><span class="line">        .name = <span class="string">&quot;王五&quot;</span>,</span><br><span class="line">        .age = <span class="number">22</span>,</span><br><span class="line">        .gpa = <span class="number">3.9f</span>,</span><br><span class="line">        .is_graduate = <span class="literal">true</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方式4：部分初始化</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student4</span> =</span> &#123;<span class="number">1004</span>, <span class="string">&quot;赵六&quot;</span>&#125;;  <span class="comment">// 其他成员自动初始化为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生1: ID=%d, 姓名=%s, 年龄=%d, GPA=%.1f, 毕业=%s\n&quot;</span>,</span><br><span class="line">           student1.id, student1.name, student1.age, student1.gpa,</span><br><span class="line">           student1.is_graduate ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生2: ID=%d, 姓名=%s, 年龄=%d, GPA=%.1f, 毕业=%s\n&quot;</span>,</span><br><span class="line">           student2.id, student2.name, student2.age, student2.gpa,</span><br><span class="line">           student2.is_graduate ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生3: ID=%d, 姓名=%s, 年龄=%d, GPA=%.1f, 毕业=%s\n&quot;</span>,</span><br><span class="line">           student3.id, student3.name, student3.age, student3.gpa,</span><br><span class="line">           student3.is_graduate ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生4: ID=%d, 姓名=%s, 年龄=%d, GPA=%.1f, 毕业=%s\n&quot;</span>,</span><br><span class="line">           student4.id, student4.name, student4.age, student4.gpa,</span><br><span class="line">           student4.is_graduate ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 嵌套结构体演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n嵌套结构体演示:\n&quot;</span>);</span><br><span class="line">    Book book = &#123;</span><br><span class="line">        .title = <span class="string">&quot;C语言程序设计&quot;</span>,</span><br><span class="line">        .author = <span class="string">&quot;谭浩强&quot;</span>,</span><br><span class="line">        .publish_date = &#123;<span class="number">2020</span>, <span class="number">3</span>, <span class="number">15</span>&#125;,  <span class="comment">// 嵌套结构体初始化</span></span><br><span class="line">        .price = <span class="number">45.50f</span>,</span><br><span class="line">        .pages = <span class="number">380</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;书籍信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;书名: %s\n&quot;</span>, book.title);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;作者: %s\n&quot;</span>, book.author);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;出版日期: %d年%d月%d日\n&quot;</span>, </span><br><span class="line">           book.publish_date.year, book.publish_date.month, book.publish_date.day);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;价格: %.2f元\n&quot;</span>, book.price);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;页数: %d页\n&quot;</span>, book.pages);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体作为函数参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_student_by_value</span><span class="params">(<span class="keyword">struct</span> Student s)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按值传递 - 学生信息: ID=%d, 姓名=%s\n&quot;</span>, s.id, s.name);</span><br><span class="line">    s.id = <span class="number">9999</span>;  <span class="comment">// 修改不会影响原结构体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_student_by_pointer</span><span class="params">(<span class="type">const</span> <span class="keyword">struct</span> Student* s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按指针传递 - 学生信息: ID=%d, 姓名=%s\n&quot;</span>, s-&gt;id, s-&gt;name);</span><br><span class="line">    <span class="comment">// s-&gt;id = 9999;  // 由于const限制，不能修改</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">update_student_gpa</span><span class="params">(<span class="keyword">struct</span> Student* s, <span class="type">float</span> new_gpa)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        s-&gt;gpa = new_gpa;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_struct_parameters</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 结构体参数传递 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student</span> =</span> &#123;<span class="number">1001</span>, <span class="string">&quot;测试学生&quot;</span>, <span class="number">20</span>, <span class="number">3.5f</span>, <span class="literal">false</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始学生信息: ID=%d, GPA=%.1f\n&quot;</span>, student.id, student.gpa);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按值传递</span></span><br><span class="line">    print_student_by_value(student);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按值传递后: ID=%d (未改变)\n&quot;</span>, student.id);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按指针传递</span></span><br><span class="line">    print_student_by_pointer(&amp;student);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过指针修改</span></span><br><span class="line">    update_student_gpa(&amp;student, <span class="number">3.8f</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;更新GPA后: GPA=%.1f\n&quot;</span>, student.gpa);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_struct_basics();</span><br><span class="line">    demonstrate_struct_parameters();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-内存对齐和填充"><a href="#2-内存对齐和填充" class="headerlink" title="2. 内存对齐和填充"></a>2. 内存对齐和填充</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stddef.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 演示内存对齐的结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">UnalignedStruct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> c1;        <span class="comment">// 1字节</span></span><br><span class="line">    <span class="type">int</span> i;          <span class="comment">// 4字节</span></span><br><span class="line">    <span class="type">char</span> c2;        <span class="comment">// 1字节</span></span><br><span class="line">    <span class="type">double</span> d;       <span class="comment">// 8字节</span></span><br><span class="line">    <span class="type">short</span> s;        <span class="comment">// 2字节</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AlignedStruct</span> &#123;</span></span><br><span class="line">    <span class="type">double</span> d;       <span class="comment">// 8字节，最大对齐要求</span></span><br><span class="line">    <span class="type">int</span> i;          <span class="comment">// 4字节</span></span><br><span class="line">    <span class="type">short</span> s;        <span class="comment">// 2字节</span></span><br><span class="line">    <span class="type">char</span> c1;        <span class="comment">// 1字节</span></span><br><span class="line">    <span class="type">char</span> c2;        <span class="comment">// 1字节</span></span><br><span class="line">    <span class="comment">// 编译器会在末尾添加填充以满足对齐要求</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用#pragma pack控制对齐</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(1)  <span class="comment">// 1字节对齐</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PackedStruct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> c1;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> c2;</span><br><span class="line">    <span class="type">double</span> d;</span><br><span class="line">    <span class="type">short</span> s;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack()   <span class="comment">// 恢复默认对齐</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_memory_alignment</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 内存对齐演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;基本类型对齐要求:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char:   大小=%zu, 对齐=%zu\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">char</span>), <span class="keyword">_Alignof</span>(<span class="type">char</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;short:  大小=%zu, 对齐=%zu\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">short</span>), <span class="keyword">_Alignof</span>(<span class="type">short</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int:    大小=%zu, 对齐=%zu\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>), <span class="keyword">_Alignof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double: 大小=%zu, 对齐=%zu\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">double</span>), <span class="keyword">_Alignof</span>(<span class="type">double</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n结构体大小比较:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;UnalignedStruct: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> UnalignedStruct));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;AlignedStruct:   %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> AlignedStruct));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;PackedStruct:    %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PackedStruct));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分析UnalignedStruct的内存布局</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nUnalignedStruct成员偏移:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c1 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> UnalignedStruct, c1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> UnalignedStruct, i));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c2 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> UnalignedStruct, c2));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> UnalignedStruct, d));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> UnalignedStruct, s));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nAlignedStruct成员偏移:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> AlignedStruct, d));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> AlignedStruct, i));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> AlignedStruct, s));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c1 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> AlignedStruct, c1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c2 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> AlignedStruct, c2));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nPackedStruct成员偏移:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c1 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> PackedStruct, c1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> PackedStruct, i));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c2 偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> PackedStruct, c2));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> PackedStruct, d));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;s  偏移: %zu\n&quot;</span>, offsetof(<span class="keyword">struct</span> PackedStruct, s));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_memory_alignment();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）结构体数组和指针"><a href="#（二）结构体数组和指针" class="headerlink" title="（二）结构体数组和指针"></a>（二）结构体数组和指针</h2><h3 id="1-结构体数组的使用"><a href="#1-结构体数组的使用" class="headerlink" title="1. 结构体数组的使用"></a>1. 结构体数组的使用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[<span class="number">30</span>];</span><br><span class="line">    <span class="type">float</span> salary;</span><br><span class="line">    <span class="type">int</span> department_id;</span><br><span class="line">&#125; Employee;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比较函数，用于排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_by_salary</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> Employee* emp_a = (<span class="type">const</span> Employee*)a;</span><br><span class="line">    <span class="type">const</span> Employee* emp_b = (<span class="type">const</span> Employee*)b;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (emp_a-&gt;salary &lt; emp_b-&gt;salary) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (emp_a-&gt;salary &gt; emp_b-&gt;salary) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_by_name</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> Employee* emp_a = (<span class="type">const</span> Employee*)a;</span><br><span class="line">    <span class="type">const</span> Employee* emp_b = (<span class="type">const</span> Employee*)b;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(emp_a-&gt;name, emp_b-&gt;name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_employees</span><span class="params">(<span class="type">const</span> Employee employees[], <span class="type">int</span> count)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;员工列表:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%-4s %-15s %-10s %-6s\n&quot;</span>, <span class="string">&quot;ID&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;薪资&quot;</span>, <span class="string">&quot;部门&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%-4d %-15s %-10.2f %-6d\n&quot;</span>,</span><br><span class="line">               employees[i].id, employees[i].name,</span><br><span class="line">               employees[i].salary, employees[i].department_id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_struct_arrays</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 结构体数组演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化员工数组</span></span><br><span class="line">    Employee employees[] = &#123;</span><br><span class="line">        &#123;<span class="number">1001</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">8500.0f</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1002</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">9200.0f</span>, <span class="number">2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1003</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">7800.0f</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1004</span>, <span class="string">&quot;赵六&quot;</span>, <span class="number">10500.0f</span>, <span class="number">3</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1005</span>, <span class="string">&quot;钱七&quot;</span>, <span class="number">8900.0f</span>, <span class="number">2</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> emp_count = <span class="keyword">sizeof</span>(employees) / <span class="keyword">sizeof</span>(employees[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始员工数据:\n&quot;</span>);</span><br><span class="line">    print_employees(employees, emp_count);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按薪资排序</span></span><br><span class="line">    qsort(employees, emp_count, <span class="keyword">sizeof</span>(Employee), compare_by_salary);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按薪资排序后:\n&quot;</span>);</span><br><span class="line">    print_employees(employees, emp_count);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按姓名排序</span></span><br><span class="line">    qsort(employees, emp_count, <span class="keyword">sizeof</span>(Employee), compare_by_name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;按姓名排序后:\n&quot;</span>);</span><br><span class="line">    print_employees(employees, emp_count);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找特定员工</span></span><br><span class="line">    Employee key = &#123;<span class="number">0</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    Employee* found = bsearch(&amp;key, employees, emp_count, </span><br><span class="line">                             <span class="keyword">sizeof</span>(Employee), compare_by_name);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (found != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找到员工: ID=%d, 姓名=%s, 薪资=%.2f\n&quot;</span>,</span><br><span class="line">               found-&gt;id, found-&gt;name, found-&gt;salary);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到指定员工\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_struct_arrays();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、联合体详解"><a href="#二、联合体详解" class="headerlink" title="二、联合体详解"></a>二、联合体详解</h1><h2 id="（一）联合体的特性和应用"><a href="#（一）联合体的特性和应用" class="headerlink" title="（一）联合体的特性和应用"></a>（一）联合体的特性和应用</h2><h3 id="1-联合体基础概念"><a href="#1-联合体基础概念" class="headerlink" title="1. 联合体基础概念"></a>1. 联合体基础概念</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本联合体定义</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Data</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 带标签的联合体（变体记录）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    TYPE_INT,</span><br><span class="line">    TYPE_FLOAT,</span><br><span class="line">    TYPE_STRING</span><br><span class="line">&#125; DataType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    DataType type;      <span class="comment">// 标签，指示当前存储的数据类型</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="type">float</span> f;</span><br><span class="line">        <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">    &#125; value;</span><br><span class="line">&#125; TaggedUnion;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_union_basics</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 联合体基础演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">Data</span> <span class="title">data</span>;</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;联合体大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">union</span> Data));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;各成员地址:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.i   地址: %p\n&quot;</span>, (<span class="type">void</span>*)&amp;data.i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.f   地址: %p\n&quot;</span>, (<span class="type">void</span>*)&amp;data.f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.str 地址: %p\n&quot;</span>, (<span class="type">void</span>*)data.str);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 存储整数</span></span><br><span class="line">    data.i = <span class="number">42</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n存储整数 42:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.i = %d\n&quot;</span>, data.i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.f = %f (垃圾值)\n&quot;</span>, data.f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.str = \&quot;%s\&quot; (垃圾值)\n&quot;</span>, data.str);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 存储浮点数</span></span><br><span class="line">    data.f = <span class="number">3.14159f</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n存储浮点数 3.14159:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.i = %d (垃圾值)\n&quot;</span>, data.i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.f = %f\n&quot;</span>, data.f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.str = \&quot;%s\&quot; (垃圾值)\n&quot;</span>, data.str);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 存储字符串</span></span><br><span class="line">    <span class="built_in">strcpy</span>(data.str, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n存储字符串 \&quot;Hello\&quot;:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.i = %d (垃圾值)\n&quot;</span>, data.i);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.f = %f (垃圾值)\n&quot;</span>, data.f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;data.str = \&quot;%s\&quot;\n&quot;</span>, data.str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全使用联合体的函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_tagged_union_int</span><span class="params">(TaggedUnion* tu, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">    tu-&gt;type = TYPE_INT;</span><br><span class="line">    tu-&gt;value.i = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_tagged_union_float</span><span class="params">(TaggedUnion* tu, <span class="type">float</span> value)</span> &#123;</span><br><span class="line">    tu-&gt;type = TYPE_FLOAT;</span><br><span class="line">    tu-&gt;value.f = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">set_tagged_union_string</span><span class="params">(TaggedUnion* tu, <span class="type">const</span> <span class="type">char</span>* value)</span> &#123;</span><br><span class="line">    tu-&gt;type = TYPE_STRING;</span><br><span class="line">    <span class="built_in">strncpy</span>(tu-&gt;value.str, value, <span class="keyword">sizeof</span>(tu-&gt;value.str) - <span class="number">1</span>);</span><br><span class="line">    tu-&gt;value.str[<span class="keyword">sizeof</span>(tu-&gt;value.str) - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_tagged_union</span><span class="params">(<span class="type">const</span> TaggedUnion* tu)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (tu-&gt;type) &#123;</span><br><span class="line">        <span class="keyword">case</span> TYPE_INT:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;整数: %d\n&quot;</span>, tu-&gt;value.i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> TYPE_FLOAT:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;浮点数: %.2f\n&quot;</span>, tu-&gt;value.f);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> TYPE_STRING:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;字符串: \&quot;%s\&quot;\n&quot;</span>, tu-&gt;value.str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;未知类型\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_tagged_union</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 带标签联合体演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    TaggedUnion tu;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全地使用联合体</span></span><br><span class="line">    set_tagged_union_int(&amp;tu, <span class="number">100</span>);</span><br><span class="line">    print_tagged_union(&amp;tu);</span><br><span class="line">    </span><br><span class="line">    set_tagged_union_float(&amp;tu, <span class="number">2.718f</span>);</span><br><span class="line">    print_tagged_union(&amp;tu);</span><br><span class="line">    </span><br><span class="line">    set_tagged_union_string(&amp;tu, <span class="string">&quot;C语言&quot;</span>);</span><br><span class="line">    print_tagged_union(&amp;tu);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_union_basics();</span><br><span class="line">    demonstrate_tagged_union();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-联合体的实际应用"><a href="#2-联合体的实际应用" class="headerlink" title="2. 联合体的实际应用"></a>2. 联合体的实际应用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 网络字节序转换</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">ByteOrder</span> &#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> value;</span><br><span class="line">    <span class="type">uint8_t</span> bytes[<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IP地址表示</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">IPAddress</span> &#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> addr;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">uint8_t</span> a, b, c, d;</span><br><span class="line">    &#125; octets;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 颜色表示（RGB和十六进制）</span></span><br><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">Color</span> &#123;</span></span><br><span class="line">    <span class="type">uint32_t</span> hex;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">uint8_t</span> blue;</span><br><span class="line">        <span class="type">uint8_t</span> green;</span><br><span class="line">        <span class="type">uint8_t</span> red;</span><br><span class="line">        <span class="type">uint8_t</span> alpha;</span><br><span class="line">    &#125; rgba;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_practical_unions</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 联合体实际应用 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字节序检测</span></span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">ByteOrder</span> <span class="title">test</span> =</span> &#123;<span class="number">0x12345678</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字节序检测:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;32位值: 0x%08X\n&quot;</span>, test.value);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字节序列: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%02X &quot;</span>, test.bytes[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (test.bytes[<span class="number">0</span>] == <span class="number">0x78</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;(小端序)\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;(大端序)\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// IP地址操作</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nIP地址操作:\n&quot;</span>);</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">IPAddress</span> <span class="title">ip</span> =</span> &#123;<span class="number">0xC0A80101</span>&#125;;  <span class="comment">// 192.168.1.1</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;IP地址: %d.%d.%d.%d\n&quot;</span>, </span><br><span class="line">           ip.octets.a, ip.octets.b, ip.octets.c, ip.octets.d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;32位表示: 0x%08X\n&quot;</span>, ip.addr);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 颜色操作</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n颜色操作:\n&quot;</span>);</span><br><span class="line">    <span class="class"><span class="keyword">union</span> <span class="title">Color</span> <span class="title">color</span> =</span> &#123;<span class="number">0xFF0080FF</span>&#125;;  <span class="comment">// 红色，半透明</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;颜色值: 0x%08X\n&quot;</span>, color.hex);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;RGBA: R=%d, G=%d, B=%d, A=%d\n&quot;</span>,</span><br><span class="line">           color.rgba.red, color.rgba.green, </span><br><span class="line">           color.rgba.blue, color.rgba.alpha);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改单个颜色分量</span></span><br><span class="line">    color.rgba.green = <span class="number">255</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改绿色分量后: 0x%08X\n&quot;</span>, color.hex);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;新RGBA: R=%d, G=%d, B=%d, A=%d\n&quot;</span>,</span><br><span class="line">           color.rgba.red, color.rgba.green, </span><br><span class="line">           color.rgba.blue, color.rgba.alpha);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_practical_unions();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、位域（Bit-Fields）"><a href="#三、位域（Bit-Fields）" class="headerlink" title="三、位域（Bit Fields）"></a>三、位域（Bit Fields）</h1><h2 id="（一）位域的定义和使用"><a href="#（一）位域的定义和使用" class="headerlink" title="（一）位域的定义和使用"></a>（一）位域的定义和使用</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 位域结构体</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Flags</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> is_visible : <span class="number">1</span>;    <span class="comment">// 1位</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> is_enabled : <span class="number">1</span>;    <span class="comment">// 1位</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> priority : <span class="number">3</span>;      <span class="comment">// 3位 (0-7)</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> category : <span class="number">4</span>;      <span class="comment">// 4位 (0-15)</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> reserved : <span class="number">7</span>;      <span class="comment">// 7位保留</span></span><br><span class="line">    <span class="comment">// 总共16位，占用2字节</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件权限位域</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FilePermissions</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> owner_read : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> owner_write : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> owner_execute : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> group_read : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> group_write : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> group_execute : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> other_read : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> other_write : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> other_execute : <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> : <span class="number">7</span>;  <span class="comment">// 未命名位域，用于填充</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 网络数据包头部</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PacketHeader</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> version : <span class="number">4</span>;       <span class="comment">// IP版本</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> header_length : <span class="number">4</span>; <span class="comment">// 头部长度</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> type_of_service : <span class="number">8</span>; <span class="comment">// 服务类型</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> total_length : <span class="number">16</span>;  <span class="comment">// 总长度</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> identification : <span class="number">16</span>; <span class="comment">// 标识</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> flags : <span class="number">3</span>;         <span class="comment">// 标志</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> fragment_offset : <span class="number">13</span>; <span class="comment">// 片偏移</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> ttl : <span class="number">8</span>;           <span class="comment">// 生存时间</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> protocol : <span class="number">8</span>;      <span class="comment">// 协议</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> checksum : <span class="number">16</span>;     <span class="comment">// 校验和</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_bit_fields</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 位域演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结构体大小:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;struct Flags: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> Flags));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;struct FilePermissions: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> FilePermissions));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;struct PacketHeader: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> PacketHeader));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用标志位域</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Flags</span> <span class="title">flags</span> =</span> &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    flags.is_visible = <span class="number">1</span>;</span><br><span class="line">    flags.is_enabled = <span class="number">0</span>;</span><br><span class="line">    flags.priority = <span class="number">5</span>;</span><br><span class="line">    flags.category = <span class="number">12</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n标志设置:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;可见: %s\n&quot;</span>, flags.is_visible ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;启用: %s\n&quot;</span>, flags.is_enabled ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;优先级: %u\n&quot;</span>, flags.priority);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;类别: %u\n&quot;</span>, flags.category);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 文件权限演示</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">FilePermissions</span> <span class="title">perms</span> =</span> &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    perms.owner_read = <span class="number">1</span>;</span><br><span class="line">    perms.owner_write = <span class="number">1</span>;</span><br><span class="line">    perms.owner_execute = <span class="number">1</span>;</span><br><span class="line">    perms.group_read = <span class="number">1</span>;</span><br><span class="line">    perms.group_execute = <span class="number">1</span>;</span><br><span class="line">    perms.other_read = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n文件权限 (类似 rwxr-xr--):\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;所有者: %c%c%c\n&quot;</span>,</span><br><span class="line">           perms.owner_read ? <span class="string">&#x27;r&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.owner_write ? <span class="string">&#x27;w&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.owner_execute ? <span class="string">&#x27;x&#x27;</span> : <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;组: %c%c%c\n&quot;</span>,</span><br><span class="line">           perms.group_read ? <span class="string">&#x27;r&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.group_write ? <span class="string">&#x27;w&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.group_execute ? <span class="string">&#x27;x&#x27;</span> : <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;其他: %c%c%c\n&quot;</span>,</span><br><span class="line">           perms.other_read ? <span class="string">&#x27;r&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.other_write ? <span class="string">&#x27;w&#x27;</span> : <span class="string">&#x27;-&#x27;</span>,</span><br><span class="line">           perms.other_execute ? <span class="string">&#x27;x&#x27;</span> : <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 网络包头演示</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">PacketHeader</span> <span class="title">packet</span> =</span> &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    packet.version = <span class="number">4</span>;          <span class="comment">// IPv4</span></span><br><span class="line">    packet.header_length = <span class="number">5</span>;    <span class="comment">// 20字节</span></span><br><span class="line">    packet.total_length = <span class="number">1500</span>;  <span class="comment">// 1500字节</span></span><br><span class="line">    packet.ttl = <span class="number">64</span>;            <span class="comment">// 64跳</span></span><br><span class="line">    packet.protocol = <span class="number">6</span>;         <span class="comment">// TCP</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n网络包头信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;IP版本: %u\n&quot;</span>, packet.version);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;头部长度: %u (实际: %u字节)\n&quot;</span>, packet.header_length, packet.header_length * <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;总长度: %u字节\n&quot;</span>, packet.total_length);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;TTL: %u\n&quot;</span>, packet.ttl);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;协议: %u (TCP)\n&quot;</span>, packet.protocol);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_bit_fields();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、实践项目：学生管理系统（完整版）"><a href="#四、实践项目：学生管理系统（完整版）" class="headerlink" title="四、实践项目：学生管理系统（完整版）"></a>四、实践项目：学生管理系统（完整版）</h1><p>让我们创建一个使用结构体、联合体和位域的完整学生管理系统：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_NAME_LENGTH 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_STUDENTS 1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 日期结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> year;</span><br><span class="line">    <span class="type">int</span> month;</span><br><span class="line">    <span class="type">int</span> day;</span><br><span class="line">&#125; Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成绩联合体（支持不同评分系统）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    GRADE_PERCENTAGE,   <span class="comment">// 百分制</span></span><br><span class="line">    GRADE_GPA,         <span class="comment">// GPA制</span></span><br><span class="line">    GRADE_LETTER       <span class="comment">// 字母制</span></span><br><span class="line">&#125; GradeType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="type">float</span> percentage;   <span class="comment">// 0-100</span></span><br><span class="line">    <span class="type">float</span> gpa;         <span class="comment">// 0.0-4.0</span></span><br><span class="line">    <span class="type">char</span> letter;       <span class="comment">// A, B, C, D, F</span></span><br><span class="line">&#125; GradeValue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    GradeType type;</span><br><span class="line">    GradeValue value;</span><br><span class="line">&#125; Grade;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生状态位域</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StudentStatus</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> is_active : <span class="number">1</span>;      <span class="comment">// 是否在校</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> is_graduate : <span class="number">1</span>;    <span class="comment">// 是否毕业</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> has_scholarship : <span class="number">1</span>; <span class="comment">// 是否有奖学金</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> is_international : <span class="number">1</span>; <span class="comment">// 是否国际学生</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> year : <span class="number">4</span>;           <span class="comment">// 年级 (1-15)</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> semester : <span class="number">4</span>;       <span class="comment">// 学期 (1-15)</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> : <span class="number">4</span>;               <span class="comment">// 保留位</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完整的学生结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[MAX_NAME_LENGTH];</span><br><span class="line">    Date birth_date;</span><br><span class="line">    Date enrollment_date;</span><br><span class="line">    Grade grades[<span class="number">10</span>];               <span class="comment">// 最多10门课程成绩</span></span><br><span class="line">    <span class="type">int</span> grade_count;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">StudentStatus</span> <span class="title">status</span>;</span></span><br><span class="line">    <span class="type">char</span> major[MAX_NAME_LENGTH];</span><br><span class="line">    <span class="type">char</span> email[MAX_NAME_LENGTH];</span><br><span class="line">&#125; Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生管理系统</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    Student* students;</span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="type">int</span> capacity;</span><br><span class="line">&#125; StudentSystem;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建学生管理系统</span></span><br><span class="line">StudentSystem* <span class="title function_">create_student_system</span><span class="params">(<span class="type">int</span> initial_capacity)</span> &#123;</span><br><span class="line">    StudentSystem* system = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(StudentSystem));</span><br><span class="line">    <span class="keyword">if</span> (system == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    system-&gt;students = <span class="built_in">malloc</span>(initial_capacity * <span class="keyword">sizeof</span>(Student));</span><br><span class="line">    <span class="keyword">if</span> (system-&gt;students == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(system);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    system-&gt;count = <span class="number">0</span>;</span><br><span class="line">    system-&gt;capacity = initial_capacity;</span><br><span class="line">    <span class="keyword">return</span> system;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加学生</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">add_student</span><span class="params">(StudentSystem* system, <span class="type">const</span> Student* student)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (system == <span class="literal">NULL</span> || student == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 扩容检查</span></span><br><span class="line">    <span class="keyword">if</span> (system-&gt;count &gt;= system-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">int</span> new_capacity = system-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        Student* new_students = <span class="built_in">realloc</span>(system-&gt;students, </span><br><span class="line">                                       new_capacity * <span class="keyword">sizeof</span>(Student));</span><br><span class="line">        <span class="keyword">if</span> (new_students == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        system-&gt;students = new_students;</span><br><span class="line">        system-&gt;capacity = new_capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    system-&gt;students[system-&gt;count] = *student;</span><br><span class="line">    system-&gt;count++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找学生</span></span><br><span class="line">Student* <span class="title function_">find_student_by_id</span><span class="params">(StudentSystem* system, <span class="type">int</span> id)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (system == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; system-&gt;count; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (system-&gt;students[i].id == id) &#123;</span><br><span class="line">            <span class="keyword">return</span> &amp;system-&gt;students[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印成绩</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_grade</span><span class="params">(<span class="type">const</span> Grade* grade)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (grade-&gt;type) &#123;</span><br><span class="line">        <span class="keyword">case</span> GRADE_PERCENTAGE:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.1f%%&quot;</span>, grade-&gt;value.percentage);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GRADE_GPA:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2f GPA&quot;</span>, grade-&gt;value.gpa);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GRADE_LETTER:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, grade-&gt;value.letter);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印学生信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_student</span><span class="params">(<span class="type">const</span> Student* student)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (student == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  学号: %d\n&quot;</span>, student-&gt;id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  姓名: %s\n&quot;</span>, student-&gt;name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  专业: %s\n&quot;</span>, student-&gt;major);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  邮箱: %s\n&quot;</span>, student-&gt;email);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  出生日期: %d-%02d-%02d\n&quot;</span>, </span><br><span class="line">           student-&gt;birth_date.year, student-&gt;birth_date.month, student-&gt;birth_date.day);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  入学日期: %d-%02d-%02d\n&quot;</span>, </span><br><span class="line">           student-&gt;enrollment_date.year, student-&gt;enrollment_date.month, student-&gt;enrollment_date.day);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  状态: &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, student-&gt;status.is_active ? <span class="string">&quot;在校&quot;</span> : <span class="string">&quot;离校&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;, %s&quot;</span>, student-&gt;status.is_graduate ? <span class="string">&quot;已毕业&quot;</span> : <span class="string">&quot;在读&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;, %d年级&quot;</span>, student-&gt;status.year);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;, 第%d学期&quot;</span>, student-&gt;status.semester);</span><br><span class="line">    <span class="keyword">if</span> (student-&gt;status.has_scholarship) <span class="built_in">printf</span>(<span class="string">&quot;, 有奖学金&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (student-&gt;status.is_international) <span class="built_in">printf</span>(<span class="string">&quot;, 国际学生&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (student-&gt;grade_count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  成绩: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student-&gt;grade_count; i++) &#123;</span><br><span class="line">            print_grade(&amp;student-&gt;grades[i]);</span><br><span class="line">            <span class="keyword">if</span> (i &lt; student-&gt;grade_count - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 演示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_student_system</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 学生管理系统演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    StudentSystem* system = create_student_system(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (system == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;系统创建失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建示例学生</span></span><br><span class="line">    Student student1 = &#123;</span><br><span class="line">        .id = <span class="number">2021001</span>,</span><br><span class="line">        .name = <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">        .birth_date = &#123;<span class="number">2000</span>, <span class="number">5</span>, <span class="number">15</span>&#125;,</span><br><span class="line">        .enrollment_date = &#123;<span class="number">2021</span>, <span class="number">9</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        .grade_count = <span class="number">3</span>,</span><br><span class="line">        .grades = &#123;</span><br><span class="line">            &#123;GRADE_PERCENTAGE, &#123;.percentage = <span class="number">85.5f</span>&#125;&#125;,</span><br><span class="line">            &#123;GRADE_GPA, &#123;.gpa = <span class="number">3.7f</span>&#125;&#125;,</span><br><span class="line">            &#123;GRADE_LETTER, &#123;.letter = <span class="string">&#x27;A&#x27;</span>&#125;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        .status = &#123;</span><br><span class="line">            .is_active = <span class="number">1</span>,</span><br><span class="line">            .is_graduate = <span class="number">0</span>,</span><br><span class="line">            .has_scholarship = <span class="number">1</span>,</span><br><span class="line">            .is_international = <span class="number">0</span>,</span><br><span class="line">            .year = <span class="number">3</span>,</span><br><span class="line">            .semester = <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .major = <span class="string">&quot;计算机科学&quot;</span>,</span><br><span class="line">        .email = <span class="string">&quot;zhangsan@university.edu&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    Student student2 = &#123;</span><br><span class="line">        .id = <span class="number">2021002</span>,</span><br><span class="line">        .name = <span class="string">&quot;李四&quot;</span>,</span><br><span class="line">        .birth_date = &#123;<span class="number">1999</span>, <span class="number">12</span>, <span class="number">3</span>&#125;,</span><br><span class="line">        .enrollment_date = &#123;<span class="number">2021</span>, <span class="number">9</span>, <span class="number">1</span>&#125;,</span><br><span class="line">        .grade_count = <span class="number">2</span>,</span><br><span class="line">        .grades = &#123;</span><br><span class="line">            &#123;GRADE_PERCENTAGE, &#123;.percentage = <span class="number">92.0f</span>&#125;&#125;,</span><br><span class="line">            &#123;GRADE_GPA, &#123;.gpa = <span class="number">3.9f</span>&#125;&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        .status = &#123;</span><br><span class="line">            .is_active = <span class="number">1</span>,</span><br><span class="line">            .is_graduate = <span class="number">0</span>,</span><br><span class="line">            .has_scholarship = <span class="number">0</span>,</span><br><span class="line">            .is_international = <span class="number">1</span>,</span><br><span class="line">            .year = <span class="number">3</span>,</span><br><span class="line">            .semester = <span class="number">1</span></span><br><span class="line">        &#125;,</span><br><span class="line">        .major = <span class="string">&quot;电子工程&quot;</span>,</span><br><span class="line">        .email = <span class="string">&quot;lisi@university.edu&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加学生</span></span><br><span class="line">    add_student(system, &amp;student1);</span><br><span class="line">    add_student(system, &amp;student2);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;系统中共有 %d 名学生\n\n&quot;</span>, system-&gt;count);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示所有学生</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; system-&gt;count; i++) &#123;</span><br><span class="line">        print_student(&amp;system-&gt;students[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找特定学生</span></span><br><span class="line">    Student* found = find_student_by_id(system, <span class="number">2021001</span>);</span><br><span class="line">    <span class="keyword">if</span> (found != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;找到学号为 2021001 的学生:\n&quot;</span>);</span><br><span class="line">        print_student(found);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理内存</span></span><br><span class="line">    <span class="built_in">free</span>(system-&gt;students);</span><br><span class="line">    <span class="built_in">free</span>(system);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;系统已清理\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_student_system();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、总结与下一步"><a href="#五、总结与下一步" class="headerlink" title="五、总结与下一步"></a>五、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的深入学习，您已经掌握了：</p>
<p><strong>结构体高级特性：</strong></p>
<ul>
<li>结构体的定义、初始化和使用</li>
<li>内存对齐和填充机制</li>
<li>结构体数组和指针操作</li>
</ul>
<p><strong>联合体应用：</strong></p>
<ul>
<li>联合体的特性和内存共享</li>
<li>带标签联合体的安全使用</li>
<li>联合体在系统编程中的应用</li>
</ul>
<p><strong>位域技术：</strong></p>
<ul>
<li>位域的定义和使用</li>
<li>内存优化和位操作</li>
<li>在协议解析中的应用</li>
</ul>
<p><strong>综合实践：</strong></p>
<ul>
<li>复杂数据结构的设计</li>
<li>学生管理系统的完整实现</li>
<li>多种数据组织方式的结合使用</li>
</ul>
<h2 id="（二）设计原则"><a href="#（二）设计原则" class="headerlink" title="（二）设计原则"></a>（二）设计原则</h2><ol>
<li><strong>数据封装</strong>：将相关数据组织在一起</li>
<li><strong>内存效率</strong>：合理使用对齐和位域</li>
<li><strong>类型安全</strong>：使用标签联合体避免错误</li>
<li><strong>可维护性</strong>：清晰的结构设计和命名</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%EF%BC%9A%E6%9E%84%E5%BB%BA%E5%AE%9E%E7%94%A8%E7%A8%8B%E5%BA%8F/" title="下一篇：文件操作与数据持久化"><i class="far fa-hand-point-right"></i><span>下一篇：文件操作与数据持久化</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《C程序设计语言》- Brian W. Kernighan &amp; Dennis M. Ritchie</li>
<li>《C和指针》- Kenneth A. Reek</li>
<li>《深入理解计算机系统》- Randal E. Bryant</li>
<li>《数据结构与算法分析》- Mark Allen Weiss</li>
<li>C语言结构体参考：<a href="https://en.cppreference.com/w/c/language/struct">https://en.cppreference.com/w/c/language/struct</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第5篇</strong><br>深入探讨C语言中复杂数据类型的组织方式，掌握结构体、联合体和位域的高级用法。</p>
</div>

<h1 id="前言"><a href="#]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="结构体" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
      <category term="联合体" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%81%94%E5%90%88%E4%BD%93/"/>
    
      <category term="数据组织" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87/"/>
    
      <category term="内存对齐" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言指针与内存管理：掌握底层编程的核心]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%EF%BC%9A%E6%8E%8C%E6%8F%A1%E5%BA%95%E5%B1%82%E7%BC%96%E7%A8%8B%E7%9A%84%E6%A0%B8%E5%BF%83/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言指针与内存管理：掌握底层编程的核心/</id>
    <published>2025-08-11T05:00:00.000Z</published>
    <updated>2025-08-11T07:52:38.717Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第4篇</strong><br>深入探讨C语言最核心也最具挑战性的概念——指针与内存管理，这是掌握系统级编程的关键技能。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>指针是C语言的灵魂，也是区别于其他高级编程语言的核心特性。它让程序员能够直接操作内存，实现高效的数据结构和算法。同时，指针也是C语言学习中的难点，需要深入理解计算机的内存模型。</p>
<p><strong>为什么指针如此重要？</strong></p>
<p>在现代软件开发中，理解指针和内存管理至关重要：</p>
<ul>
<li><strong>系统编程</strong>：操作系统、驱动程序、嵌入式系统</li>
<li><strong>高性能计算</strong>：科学计算、图像处理、游戏引擎</li>
<li><strong>数据结构</strong>：链表、树、图等复杂数据结构的实现</li>
<li><strong>内存优化</strong>：减少内存占用，提高程序性能</li>
</ul>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>深入理解指针的本质和内存模型</li>
<li>掌握指针的各种用法和技巧</li>
<li>学会动态内存分配和管理</li>
<li>理解指针与数组、函数的关系</li>
<li>掌握复杂指针类型的声明和使用</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E8%89%BA%E6%9C%AF/" title="上一篇：数组与字符串深度解析"><i class="far fa-hand-point-left"></i><span>上一篇：数组与字符串深度解析</span></a>

<h1 id="一、指针基础与内存模型"><a href="#一、指针基础与内存模型" class="headerlink" title="一、指针基础与内存模型"></a>一、指针基础与内存模型</h1><h2 id="（一）指针的本质"><a href="#（一）指针的本质" class="headerlink" title="（一）指针的本质"></a>（一）指针的本质</h2><h3 id="1-内存地址与指针变量"><a href="#1-内存地址与指针变量" class="headerlink" title="1. 内存地址与指针变量"></a>1. 内存地址与指针变量</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_pointer_basics</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 指针基础概念演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本变量</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">42</span>;</span><br><span class="line">    <span class="type">float</span> pi = <span class="number">3.14159f</span>;</span><br><span class="line">    <span class="type">char</span> letter = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指针变量</span></span><br><span class="line">    <span class="type">int</span>* int_ptr = &amp;num;        <span class="comment">// 指向整数的指针</span></span><br><span class="line">    <span class="type">float</span>* float_ptr = &amp;pi;     <span class="comment">// 指向浮点数的指针</span></span><br><span class="line">    <span class="type">char</span>* char_ptr = &amp;letter;   <span class="comment">// 指向字符的指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;变量值和地址:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num = %d, 地址: %p\n&quot;</span>, num, (<span class="type">void</span>*)&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pi = %.5f, 地址: %p\n&quot;</span>, pi, (<span class="type">void</span>*)&amp;pi);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;letter = &#x27;%c&#x27;, 地址: %p\n&quot;</span>, letter, (<span class="type">void</span>*)&amp;letter);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针变量:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int_ptr = %p, 指向的值: %d\n&quot;</span>, (<span class="type">void</span>*)int_ptr, *int_ptr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;float_ptr = %p, 指向的值: %.5f\n&quot;</span>, (<span class="type">void</span>*)float_ptr, *float_ptr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char_ptr = %p, 指向的值: &#x27;%c&#x27;\n&quot;</span>, (<span class="type">void</span>*)char_ptr, *char_ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针变量自身的地址:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;int_ptr = %p\n&quot;</span>, (<span class="type">void</span>*)&amp;int_ptr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;float_ptr = %p\n&quot;</span>, (<span class="type">void</span>*)&amp;float_ptr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&amp;char_ptr = %p\n&quot;</span>, (<span class="type">void</span>*)&amp;char_ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指针的大小</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针大小:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof(int*) = %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof(float*) = %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">float</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof(char*) = %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof(void*) = %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">void</span>*));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 地址运算</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n地址运算:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int_ptr + 1 = %p (偏移 %zu 字节)\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)(int_ptr + <span class="number">1</span>), <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;float_ptr + 1 = %p (偏移 %zu 字节)\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)(float_ptr + <span class="number">1</span>), <span class="keyword">sizeof</span>(<span class="type">float</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char_ptr + 1 = %p (偏移 %zu 字节)\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)(char_ptr + <span class="number">1</span>), <span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针运算详解</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_pointer_arithmetic</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 指针运算详解 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">5</span>] = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">    <span class="type">int</span>* ptr = <span class="built_in">array</span>;  <span class="comment">// 指向数组第一个元素</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组内容: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针遍历数组:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ptr + %d: 地址=%p, 值=%d\n&quot;</span>, </span><br><span class="line">               i, (<span class="type">void</span>*)(ptr + i), *(ptr + i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指针递增</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针递增演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>* moving_ptr = <span class="built_in">array</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;moving_ptr: 地址=%p, 值=%d\n&quot;</span>, </span><br><span class="line">               (<span class="type">void</span>*)moving_ptr, *moving_ptr);</span><br><span class="line">        moving_ptr++;  <span class="comment">// 指针向前移动一个int的大小</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指针相减</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针相减:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>* start = &amp;<span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="type">int</span>* end = &amp;<span class="built_in">array</span>[<span class="number">4</span>];</span><br><span class="line">    <span class="type">ptrdiff_t</span> diff = end - start;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;end - start = %td (元素个数)\n&quot;</span>, diff);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;实际字节差: %td 字节\n&quot;</span>, (<span class="type">char</span>*)end - (<span class="type">char</span>*)start);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_pointer_basics();</span><br><span class="line">    demonstrate_pointer_arithmetic();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-指针类型和类型转换"><a href="#2-指针类型和类型转换" class="headerlink" title="2. 指针类型和类型转换"></a>2. 指针类型和类型转换</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_pointer_types</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 指针类型和转换 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 不同类型的指针</span></span><br><span class="line">    <span class="type">int</span> num = <span class="number">0x12345678</span>;</span><br><span class="line">    <span class="type">int</span>* int_ptr = &amp;num;</span><br><span class="line">    <span class="type">char</span>* char_ptr = (<span class="type">char</span>*)&amp;num;  <span class="comment">// 类型转换</span></span><br><span class="line">    <span class="type">void</span>* void_ptr = &amp;num;         <span class="comment">// 通用指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始数据: 0x%08X\n&quot;</span>, num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;通过int*访问: 0x%08X\n&quot;</span>, *int_ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过char*逐字节访问</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;通过char*逐字节访问: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(<span class="type">int</span>); i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%02X &quot;</span>, (<span class="type">unsigned</span> <span class="type">char</span>)char_ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// void指针的使用</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nvoid指针演示:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;void_ptr地址: %p\n&quot;</span>, void_ptr);</span><br><span class="line">    <span class="comment">// printf(&quot;void_ptr值: %d\n&quot;, *void_ptr);  // 错误！不能解引用void*</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;转换为int*后的值: %d\n&quot;</span>, *(<span class="type">int</span>*)void_ptr);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 常量指针和指针常量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n常量指针和指针常量:\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指向常量的指针（指针可变，指向的值不可变）</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span>* ptr_to_const = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptr_to_const指向的值: %d\n&quot;</span>, *ptr_to_const);</span><br><span class="line">    <span class="comment">// *ptr_to_const = 15;  // 错误！不能修改指向的值</span></span><br><span class="line">    ptr_to_const = &amp;b;      <span class="comment">// 可以改变指针指向</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;改变指向后的值: %d\n&quot;</span>, *ptr_to_const);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 常量指针（指针不可变，指向的值可变）</span></span><br><span class="line">    <span class="type">int</span>* <span class="type">const</span> const_ptr = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;const_ptr指向的值: %d\n&quot;</span>, *const_ptr);</span><br><span class="line">    *const_ptr = <span class="number">15</span>;        <span class="comment">// 可以修改指向的值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改值后: %d\n&quot;</span>, *const_ptr);</span><br><span class="line">    <span class="comment">// const_ptr = &amp;b;      // 错误！不能改变指针指向</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 指向常量的常量指针（指针和值都不可变）</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> const_ptr_to_const = &amp;a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;const_ptr_to_const指向的值: %d\n&quot;</span>, *const_ptr_to_const);</span><br><span class="line">    <span class="comment">// *const_ptr_to_const = 25;  // 错误！不能修改值</span></span><br><span class="line">    <span class="comment">// const_ptr_to_const = &amp;b;   // 错误！不能改变指向</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数指针演示</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">subtract</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a - b; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">multiply</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a * b; &#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_function_pointers</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 函数指针演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数指针声明和使用</span></span><br><span class="line">    <span class="type">int</span> (*operation)(<span class="type">int</span>, <span class="type">int</span>);  <span class="comment">// 声明函数指针</span></span><br><span class="line">    </span><br><span class="line">    operation = add;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;add(5, 3) = %d\n&quot;</span>, operation(<span class="number">5</span>, <span class="number">3</span>));</span><br><span class="line">    </span><br><span class="line">    operation = subtract;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;subtract(5, 3) = %d\n&quot;</span>, operation(<span class="number">5</span>, <span class="number">3</span>));</span><br><span class="line">    </span><br><span class="line">    operation = multiply;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;multiply(5, 3) = %d\n&quot;</span>, operation(<span class="number">5</span>, <span class="number">3</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数指针数组</span></span><br><span class="line">    <span class="type">int</span> (*operations[])(<span class="type">int</span>, <span class="type">int</span>) = &#123;add, subtract, multiply&#125;;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* op_names[] = &#123;<span class="string">&quot;加法&quot;</span>, <span class="string">&quot;减法&quot;</span>, <span class="string">&quot;乘法&quot;</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n函数指针数组:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s: %d\n&quot;</span>, op_names[i], operations[i](<span class="number">8</span>, <span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n函数地址:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;add函数地址: %p\n&quot;</span>, (<span class="type">void</span>*)add);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;subtract函数地址: %p\n&quot;</span>, (<span class="type">void</span>*)subtract);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;multiply函数地址: %p\n&quot;</span>, (<span class="type">void</span>*)multiply);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_pointer_types();</span><br><span class="line">    demonstrate_function_pointers();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）复杂指针类型"><a href="#（二）复杂指针类型" class="headerlink" title="（二）复杂指针类型"></a>（二）复杂指针类型</h2><h3 id="1-多级指针"><a href="#1-多级指针" class="headerlink" title="1. 多级指针"></a>1. 多级指针</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_multi_level_pointers</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 多级指针演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> num = <span class="number">42</span>;</span><br><span class="line">    <span class="type">int</span>* ptr1 = &amp;num;           <span class="comment">// 一级指针</span></span><br><span class="line">    <span class="type">int</span>** ptr2 = &amp;ptr1;         <span class="comment">// 二级指针</span></span><br><span class="line">    <span class="type">int</span>*** ptr3 = &amp;ptr2;        <span class="comment">// 三级指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;变量和指针的值:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num = %d, 地址: %p\n&quot;</span>, num, (<span class="type">void</span>*)&amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptr1 = %p, 指向的值: %d, 地址: %p\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)ptr1, *ptr1, (<span class="type">void</span>*)&amp;ptr1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptr2 = %p, 指向的值: %p, 地址: %p\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)ptr2, (<span class="type">void</span>*)*ptr2, (<span class="type">void</span>*)&amp;ptr2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ptr3 = %p, 指向的值: %p, 地址: %p\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)ptr3, (<span class="type">void</span>*)*ptr3, (<span class="type">void</span>*)&amp;ptr3);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n通过不同级别指针访问num:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;直接访问: num = %d\n&quot;</span>, num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;一级指针: *ptr1 = %d\n&quot;</span>, *ptr1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;二级指针: **ptr2 = %d\n&quot;</span>, **ptr2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;三级指针: ***ptr3 = %d\n&quot;</span>, ***ptr3);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改值</span></span><br><span class="line">    ***ptr3 = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n通过三级指针修改后: num = %d\n&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_multi_level_pointers();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、动态内存管理"><a href="#二、动态内存管理" class="headerlink" title="二、动态内存管理"></a>二、动态内存管理</h1><h2 id="（一）内存分配函数"><a href="#（一）内存分配函数" class="headerlink" title="（一）内存分配函数"></a>（一）内存分配函数</h2><h3 id="1-malloc、calloc、realloc、free"><a href="#1-malloc、calloc、realloc、free" class="headerlink" title="1. malloc、calloc、realloc、free"></a>1. malloc、calloc、realloc、free</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_memory_allocation</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 动态内存分配演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// malloc: 分配未初始化的内存</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. malloc演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>* malloc_ptr = <span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (malloc_ptr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;malloc失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;malloc分配的内存内容（未初始化）: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, malloc_ptr[i]);  <span class="comment">// 可能包含垃圾值</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 手动初始化</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        malloc_ptr[i] = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;初始化后: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, malloc_ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// calloc: 分配并初始化为0的内存</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n2. calloc演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>* calloc_ptr = <span class="built_in">calloc</span>(<span class="number">5</span>, <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (calloc_ptr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;calloc失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">free</span>(malloc_ptr);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;calloc分配的内存内容（自动初始化为0）: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, calloc_ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// realloc: 重新分配内存大小</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n3. realloc演示:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始calloc_ptr大小: 5个int\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 扩大内存</span></span><br><span class="line">    <span class="type">int</span>* realloc_ptr = <span class="built_in">realloc</span>(calloc_ptr, <span class="number">10</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (realloc_ptr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;realloc失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">free</span>(malloc_ptr);</span><br><span class="line">        <span class="built_in">free</span>(calloc_ptr);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    calloc_ptr = realloc_ptr;  <span class="comment">// 更新指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化新分配的部分</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        calloc_ptr[i] = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;realloc扩大后的内容: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, calloc_ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="built_in">free</span>(malloc_ptr);</span><br><span class="line">    <span class="built_in">free</span>(calloc_ptr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n内存已释放\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_memory_allocation();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、实践项目：动态数组实现"><a href="#三、实践项目：动态数组实现" class="headerlink" title="三、实践项目：动态数组实现"></a>三、实践项目：动态数组实现</h1><p>让我们创建一个完整的动态数组数据结构：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态数组结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span>* data;          <span class="comment">// 数据指针</span></span><br><span class="line">    <span class="type">size_t</span> size;        <span class="comment">// 当前元素个数</span></span><br><span class="line">    <span class="type">size_t</span> capacity;    <span class="comment">// 容量</span></span><br><span class="line">&#125; DynamicArray;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建动态数组</span></span><br><span class="line">DynamicArray* <span class="title function_">da_create</span><span class="params">(<span class="type">size_t</span> initial_capacity)</span> &#123;</span><br><span class="line">    DynamicArray* da = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(DynamicArray));</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    da-&gt;data = <span class="built_in">malloc</span>(initial_capacity * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (da-&gt;data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(da);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    da-&gt;size = <span class="number">0</span>;</span><br><span class="line">    da-&gt;capacity = initial_capacity;</span><br><span class="line">    <span class="keyword">return</span> da;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 扩展容量</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">da_resize</span><span class="params">(DynamicArray* da, <span class="type">size_t</span> new_capacity)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span> || new_capacity &lt; da-&gt;size) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span>* new_data = <span class="built_in">realloc</span>(da-&gt;data, new_capacity * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (new_data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    da-&gt;data = new_data;</span><br><span class="line">    da-&gt;capacity = new_capacity;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加元素</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">da_push_back</span><span class="params">(DynamicArray* da, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果容量不足，扩展容量</span></span><br><span class="line">    <span class="keyword">if</span> (da-&gt;size &gt;= da-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">size_t</span> new_capacity = da-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (!da_resize(da, new_capacity)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    da-&gt;data[da-&gt;size++] = value;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">da_get</span><span class="params">(<span class="type">const</span> DynamicArray* da, <span class="type">size_t</span> index)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span> || index &gt;= da-&gt;size) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 错误标识</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> da-&gt;data[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置元素</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">da_set</span><span class="params">(DynamicArray* da, <span class="type">size_t</span> index, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span> || index &gt;= da-&gt;size) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    da-&gt;data[index] = value;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除最后一个元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">da_pop_back</span><span class="params">(DynamicArray* da)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span> || da-&gt;size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> da-&gt;data[--da-&gt;size];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">da_print</span><span class="params">(<span class="type">const</span> DynamicArray* da)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数组为空\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;动态数组 (大小: %zu, 容量: %zu): [&quot;</span>, da-&gt;size, da-&gt;capacity);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; da-&gt;size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, da-&gt;data[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; da-&gt;size - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;]\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">da_destroy</span><span class="params">(DynamicArray* da)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (da != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(da-&gt;data);</span><br><span class="line">        <span class="built_in">free</span>(da);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态数组演示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_dynamic_array</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 动态数组演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    DynamicArray* da = da_create(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (da == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;动态数组创建失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;创建初始容量为2的动态数组\n&quot;</span>);</span><br><span class="line">    da_print(da);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n添加元素 1, 2, 3, 4, 5:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        da_push_back(da, i);</span><br><span class="line">        da_print(da);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 访问元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n访问元素:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; da-&gt;size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;da[%zu] = %d\n&quot;</span>, i, da_get(da, i));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n修改索引2的元素为99:\n&quot;</span>);</span><br><span class="line">    da_set(da, <span class="number">2</span>, <span class="number">99</span>);</span><br><span class="line">    da_print(da);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除元素</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n删除最后两个元素:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除的元素: %d\n&quot;</span>, da_pop_back(da));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;删除的元素: %d\n&quot;</span>, da_pop_back(da));</span><br><span class="line">    da_print(da);</span><br><span class="line">    </span><br><span class="line">    da_destroy(da);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n动态数组已销毁\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_dynamic_array();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结与下一步"><a href="#四、总结与下一步" class="headerlink" title="四、总结与下一步"></a>四、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的深入学习，您已经掌握了：</p>
<p><strong>指针核心概念：</strong></p>
<ul>
<li>指针的本质和内存模型</li>
<li>指针运算和类型转换</li>
<li>复杂指针类型的声明和使用</li>
</ul>
<p><strong>内存管理技能：</strong></p>
<ul>
<li>动态内存分配和释放</li>
<li>内存泄漏的检测和预防</li>
<li>内存池等高级内存管理技术</li>
</ul>
<p><strong>实践应用：</strong></p>
<ul>
<li>动态数组的完整实现</li>
<li>指针在数据结构中的应用</li>
<li>内存安全编程的最佳实践</li>
</ul>
<h2 id="（二）学习建议"><a href="#（二）学习建议" class="headerlink" title="（二）学习建议"></a>（二）学习建议</h2><ol>
<li><strong>深入理解内存模型</strong>：这是掌握指针的关键</li>
<li><strong>练习复杂指针声明</strong>：通过大量练习熟练掌握</li>
<li><strong>注意内存安全</strong>：始终考虑内存泄漏和悬空指针</li>
<li><strong>实践数据结构</strong>：通过实现链表、树等加深理解</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E7%BB%93%E6%9E%84%E4%BD%93%E4%B8%8E%E8%81%94%E5%90%88%E4%BD%93%EF%BC%9A%E5%A4%8D%E6%9D%82%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87%E8%89%BA%E6%9C%AF/" title="下一篇：结构体与联合体"><i class="far fa-hand-point-right"></i><span>下一篇：结构体与联合体</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《C和指针》- Kenneth A. Reek</li>
<li>《C专家编程》- Peter van der Linden</li>
<li>《C陷阱与缺陷》- Andrew Koenig</li>
<li>《深入理解计算机系统》- Randal E. Bryant</li>
<li>C语言内存管理参考：<a href="https://en.cppreference.com/w/c/memory">https://en.cppreference.com/w/c/memory</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第4篇</strong><br>深入探讨C语言最核心也最具挑战性的概念——指针与内存管理，这是掌握系统级编程的关键技能。</p>
</div>

<h1 id="前言"><a h]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="内存管理" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="指针" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="动态内存" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98/"/>
    
      <category term="底层编程" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%BA%95%E5%B1%82%E7%BC%96%E7%A8%8B/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言数组与字符串深度解析：数据处理的艺术]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言数组与字符串深度解析：数据处理的艺术/</id>
    <published>2025-08-11T04:00:00.000Z</published>
    <updated>2025-08-11T07:52:21.470Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第3篇</strong><br>深入探讨C语言中数组和字符串的高级用法，掌握高效的数据处理技巧和内存管理策略。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>数组和字符串是C语言中最基础也最重要的数据结构。它们不仅是存储数据的容器，更是理解C语言内存模型和指针概念的关键。掌握数组和字符串的深层原理，对于编写高效、安全的C程序至关重要。</p>
<p><strong>为什么深入学习数组和字符串？</strong></p>
<p>在实际编程中，我们经常需要处理大量的数据：</p>
<ul>
<li><strong>科学计算</strong>：处理实验数据、统计分析</li>
<li><strong>文本处理</strong>：解析配置文件、处理用户输入</li>
<li><strong>图像处理</strong>：像素数据的存储和操作</li>
<li><strong>网络编程</strong>：数据包的组装和解析</li>
</ul>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>深入理解数组的内存布局和访问机制</li>
<li>掌握多维数组的使用和优化技巧</li>
<li>精通字符串处理的各种技术</li>
<li>学会高效的字符串算法实现</li>
<li>理解数组与指针的深层关系</li>
</ul>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BC%96%E7%A8%8B%EF%BC%9A%E6%9E%84%E5%BB%BA%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84%E4%BB%A3%E7%A0%81/" title="上一篇：函数与模块化编程"><i class="far fa-hand-point-left"></i><span>上一篇：函数与模块化编程</span></a>

<h1 id="一、数组深度解析"><a href="#一、数组深度解析" class="headerlink" title="一、数组深度解析"></a>一、数组深度解析</h1><h2 id="（一）数组的内存模型"><a href="#（一）数组的内存模型" class="headerlink" title="（一）数组的内存模型"></a>（一）数组的内存模型</h2><h3 id="1-数组在内存中的布局"><a href="#1-数组在内存中的布局" class="headerlink" title="1. 数组在内存中的布局"></a>1. 数组在内存中的布局</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">analyze_array_memory</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 数组内存布局分析 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 一维数组</span></span><br><span class="line">    <span class="type">int</span> arr1d[<span class="number">5</span>] = &#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;一维数组内存分析:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组名地址: %p\n&quot;</span>, (<span class="type">void</span>*)arr1d);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(arr1d));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;元素大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(arr1d[<span class="number">0</span>]));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;元素个数: %zu\n&quot;</span>, <span class="keyword">sizeof</span>(arr1d) / <span class="keyword">sizeof</span>(arr1d[<span class="number">0</span>]));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印每个元素的地址和值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;arr1d[%d]: 地址=%p, 值=%d, 偏移=%ld字节\n&quot;</span>, </span><br><span class="line">               i, (<span class="type">void</span>*)&amp;arr1d[i], arr1d[i], </span><br><span class="line">               (<span class="type">char</span>*)&amp;arr1d[i] - (<span class="type">char</span>*)arr1d);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 二维数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n二维数组内存分析:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> arr2d[<span class="number">3</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">        &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">        &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;二维数组大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(arr2d));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;行大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(arr2d[<span class="number">0</span>]));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印二维数组的内存布局</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;arr2d[%d][%d]: 地址=%p, 值=%2d\n&quot;</span>, </span><br><span class="line">                   i, j, (<span class="type">void</span>*)&amp;arr2d[i][j], arr2d[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证数组的连续性</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n内存连续性验证:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>* ptr = (<span class="type">int</span>*)arr2d;  <span class="comment">// 将二维数组视为一维数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ptr[%2d] = %2d (地址: %p)\n&quot;</span>, i, ptr[i], (<span class="type">void</span>*)&amp;ptr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组作为函数参数的退化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_array_info</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n函数内数组参数分析:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;参数arr的大小: %zu 字节 (实际是指针)\n&quot;</span>, <span class="keyword">sizeof</span>(arr));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;参数arr的地址: %p\n&quot;</span>, (<span class="type">void</span>*)arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;传入的size: %d\n&quot;</span>, size);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    analyze_array_memory();</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> test_array[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n主函数中数组大小: %zu 字节\n&quot;</span>, <span class="keyword">sizeof</span>(test_array));</span><br><span class="line">    print_array_info(test_array, <span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-数组初始化的高级技巧"><a href="#2-数组初始化的高级技巧" class="headerlink" title="2. 数组初始化的高级技巧"></a>2. 数组初始化的高级技巧</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">advanced_array_initialization</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 数组初始化高级技巧 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C99指定初始化器</span></span><br><span class="line">    <span class="type">int</span> sparse_array[<span class="number">10</span>] = &#123;</span><br><span class="line">        [<span class="number">0</span>] = <span class="number">1</span>,      <span class="comment">// 第0个元素为1</span></span><br><span class="line">        [<span class="number">4</span>] = <span class="number">5</span>,      <span class="comment">// 第4个元素为5</span></span><br><span class="line">        [<span class="number">9</span>] = <span class="number">10</span>      <span class="comment">// 第9个元素为10</span></span><br><span class="line">    &#125;;                <span class="comment">// 其他元素自动初始化为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;稀疏数组初始化:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;sparse_array[%d] = %d\n&quot;</span>, i, sparse_array[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 结构体数组的指定初始化</span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">        <span class="type">int</span> id;</span><br><span class="line">        <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="type">float</span> score;</span><br><span class="line">    &#125; Student;</span><br><span class="line">    </span><br><span class="line">    Student students[] = &#123;</span><br><span class="line">        &#123;.id = <span class="number">1001</span>, .name = <span class="string">&quot;Alice&quot;</span>, .score = <span class="number">95.5</span>&#125;,</span><br><span class="line">        &#123;.id = <span class="number">1002</span>, .name = <span class="string">&quot;Bob&quot;</span>, .score = <span class="number">87.0</span>&#125;,</span><br><span class="line">        &#123;.id = <span class="number">1003</span>, .name = <span class="string">&quot;Charlie&quot;</span>, .score = <span class="number">92.5</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n结构体数组:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> student_count = <span class="keyword">sizeof</span>(students) / <span class="keyword">sizeof</span>(students[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student_count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID: %d, Name: %s, Score: %.1f\n&quot;</span>, </span><br><span class="line">               students[i].id, students[i].name, students[i].score);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符数组的不同初始化方式</span></span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;Hello&quot;</span>;           <span class="comment">// 自动计算大小，包含&#x27;\0&#x27;</span></span><br><span class="line">    <span class="type">char</span> str2[<span class="number">10</span>] = <span class="string">&quot;World&quot;</span>;         <span class="comment">// 指定大小，剩余位置填0</span></span><br><span class="line">    <span class="type">char</span> str3[] = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;;  <span class="comment">// 字符列表初始化</span></span><br><span class="line">    <span class="type">char</span> str4[<span class="number">5</span>] = &#123;<span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>, <span class="string">&#x27;t&#x27;</span>&#125;; <span class="comment">// 不包含&#x27;\0&#x27;，需要注意</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符数组初始化:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str1: \&quot;%s\&quot; (大小: %zu)\n&quot;</span>, str1, <span class="keyword">sizeof</span>(str1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str2: \&quot;%s\&quot; (大小: %zu)\n&quot;</span>, str2, <span class="keyword">sizeof</span>(str2));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str3: \&quot;%s\&quot; (大小: %zu)\n&quot;</span>, str3, <span class="keyword">sizeof</span>(str3));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str4: \&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str4[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\&quot; (大小: %zu, 无终止符)\n&quot;</span>, <span class="keyword">sizeof</span>(str4));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    advanced_array_initialization();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）多维数组的高级应用"><a href="#（二）多维数组的高级应用" class="headerlink" title="（二）多维数组的高级应用"></a>（二）多维数组的高级应用</h2><h3 id="1-动态二维数组的实现"><a href="#1-动态二维数组的实现" class="headerlink" title="1. 动态二维数组的实现"></a>1. 动态二维数组的实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法1：使用指针数组实现动态二维数组</span></span><br><span class="line"><span class="type">int</span>** <span class="title function_">create_2d_array_v1</span><span class="params">(<span class="type">int</span> rows, <span class="type">int</span> cols)</span> &#123;</span><br><span class="line">    <span class="comment">// 分配指针数组</span></span><br><span class="line">    <span class="type">int</span>** <span class="built_in">array</span> = <span class="built_in">malloc</span>(rows * <span class="keyword">sizeof</span>(<span class="type">int</span>*));</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 为每一行分配内存</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = <span class="built_in">malloc</span>(cols * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">array</span>[i] == <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果分配失败，释放已分配的内存</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="built_in">free</span>(<span class="built_in">array</span>[j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">array</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">free_2d_array_v1</span><span class="params">(<span class="type">int</span>** <span class="built_in">array</span>, <span class="type">int</span> rows)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">array</span> == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="built_in">free</span>(<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2：使用连续内存块实现动态二维数组</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span>* data;</span><br><span class="line">    <span class="type">int</span> rows;</span><br><span class="line">    <span class="type">int</span> cols;</span><br><span class="line">&#125; Matrix;</span><br><span class="line"></span><br><span class="line">Matrix* <span class="title function_">create_matrix</span><span class="params">(<span class="type">int</span> rows, <span class="type">int</span> cols)</span> &#123;</span><br><span class="line">    Matrix* matrix = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Matrix));</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    matrix-&gt;data = <span class="built_in">malloc</span>(rows * cols * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (matrix-&gt;data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(matrix);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    matrix-&gt;rows = rows;</span><br><span class="line">    matrix-&gt;cols = cols;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> matrix;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">free_matrix</span><span class="params">(Matrix* matrix)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (matrix != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(matrix-&gt;data);</span><br><span class="line">        <span class="built_in">free</span>(matrix);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵元素访问宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MATRIX_GET(matrix, row, col) \</span></span><br><span class="line"><span class="meta">    ((matrix)-&gt;data[(row) * (matrix)-&gt;cols + (col)])</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MATRIX_SET(matrix, row, col, value) \</span></span><br><span class="line"><span class="meta">    ((matrix)-&gt;data[(row) * (matrix)-&gt;cols + (col)] = (value))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 矩阵运算函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fill_matrix_random</span><span class="params">(Matrix* matrix)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; matrix-&gt;rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; matrix-&gt;cols; j++) &#123;</span><br><span class="line">            MATRIX_SET(matrix, i, j, rand() % <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_matrix</span><span class="params">(<span class="type">const</span> Matrix* matrix)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Matrix %dx%d:\n&quot;</span>, matrix-&gt;rows, matrix-&gt;cols);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; matrix-&gt;rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; matrix-&gt;cols; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%3d &quot;</span>, MATRIX_GET(matrix, i, j));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Matrix* <span class="title function_">matrix_multiply</span><span class="params">(<span class="type">const</span> Matrix* a, <span class="type">const</span> Matrix* b)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (a-&gt;cols != b-&gt;rows) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误：矩阵维度不匹配\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Matrix* result = create_matrix(a-&gt;rows, b-&gt;cols);</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 矩阵乘法：C[i][j] = Σ(A[i][k] * B[k][j])</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a-&gt;rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; b-&gt;cols; j++) &#123;</span><br><span class="line">            <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; a-&gt;cols; k++) &#123;</span><br><span class="line">                sum += MATRIX_GET(a, i, k) * MATRIX_GET(b, k, j);</span><br><span class="line">            &#125;</span><br><span class="line">            MATRIX_SET(result, i, j, sum);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_dynamic_arrays</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 动态二维数组演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方法1演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;方法1：指针数组实现\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span>** arr2d = create_2d_array_v1(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> (arr2d != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 填充数据</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                arr2d[i][j] = i * <span class="number">4</span> + j + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 打印数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%3d &quot;</span>, arr2d[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        free_2d_array_v1(arr2d, <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 方法2演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n方法2：连续内存块实现\n&quot;</span>);</span><br><span class="line">    Matrix* matrix_a = create_matrix(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    Matrix* matrix_b = create_matrix(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (matrix_a != <span class="literal">NULL</span> &amp;&amp; matrix_b != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        fill_matrix_random(matrix_a);</span><br><span class="line">        fill_matrix_random(matrix_b);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;矩阵A:\n&quot;</span>);</span><br><span class="line">        print_matrix(matrix_a);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n矩阵B:\n&quot;</span>);</span><br><span class="line">        print_matrix(matrix_b);</span><br><span class="line">        </span><br><span class="line">        Matrix* result = matrix_multiply(matrix_a, matrix_b);</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n矩阵A × 矩阵B:\n&quot;</span>);</span><br><span class="line">            print_matrix(result);</span><br><span class="line">            free_matrix(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    free_matrix(matrix_a);</span><br><span class="line">    free_matrix(matrix_b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_dynamic_arrays();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-数组算法优化技巧"><a href="#2-数组算法优化技巧" class="headerlink" title="2. 数组算法优化技巧"></a>2. 数组算法优化技巧</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 高效的数组搜索算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">linear_search</span><span class="params">(<span class="type">const</span> <span class="type">int</span> arr[], <span class="type">int</span> size, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">binary_search</span><span class="params">(<span class="type">const</span> <span class="type">int</span> arr[], <span class="type">int</span> size, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="type">int</span> left = <span class="number">0</span>, right = size - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = left + (right - left) / <span class="number">2</span>;  <span class="comment">// 防止溢出</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (arr[mid] == target) &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; target) &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高效的排序算法</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> low, <span class="type">int</span> high)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line">        <span class="type">int</span> pivot = partition(arr, low, high);</span><br><span class="line">        quick_sort(arr, low, pivot - <span class="number">1</span>);</span><br><span class="line">        quick_sort(arr, pivot + <span class="number">1</span>, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">partition</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> low, <span class="type">int</span> high)</span> &#123;</span><br><span class="line">    <span class="type">int</span> pivot = arr[high];  <span class="comment">// 选择最后一个元素作为基准</span></span><br><span class="line">    <span class="type">int</span> i = low - <span class="number">1</span>;        <span class="comment">// 小于基准的元素的索引</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = low; j &lt; high; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &lt;= pivot) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            swap(&amp;arr[i], &amp;arr[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    swap(&amp;arr[i + <span class="number">1</span>], &amp;arr[high]);</span><br><span class="line">    <span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并排序（稳定排序）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> temp[], <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="type">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        merge_sort(arr, temp, left, mid);</span><br><span class="line">        merge_sort(arr, temp, mid + <span class="number">1</span>, right);</span><br><span class="line">        merge(arr, temp, left, mid, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> temp[], <span class="type">int</span> left, <span class="type">int</span> mid, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">    <span class="comment">// 复制数据到临时数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">        temp[i] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = left, j = mid + <span class="number">1</span>, k = left;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 合并两个有序子数组</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp[i] &lt;= temp[j]) &#123;</span><br><span class="line">            arr[k++] = temp[i++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[k++] = temp[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复制剩余元素</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">        arr[k++] = temp[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= right) &#123;</span><br><span class="line">        arr[k++] = temp[j++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组统计函数</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> min;</span><br><span class="line">    <span class="type">int</span> max;</span><br><span class="line">    <span class="type">double</span> average;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">&#125; ArrayStats;</span><br><span class="line"></span><br><span class="line">ArrayStats <span class="title function_">calculate_stats</span><span class="params">(<span class="type">const</span> <span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    ArrayStats stats = &#123;arr[<span class="number">0</span>], arr[<span class="number">0</span>], <span class="number">0.0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt; stats.min) stats.min = arr[i];</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt; stats.max) stats.max = arr[i];</span><br><span class="line">        stats.sum += arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    stats.average = (<span class="type">double</span>)stats.sum / size;</span><br><span class="line">    <span class="keyword">return</span> stats;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 性能测试函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">performance_test</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 数组算法性能测试 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> size = <span class="number">100000</span>;</span><br><span class="line">    <span class="type">int</span>* arr = <span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="type">int</span>* temp = <span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span> || temp == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成随机数据</span></span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        arr[i] = rand() % <span class="number">10000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试线性搜索</span></span><br><span class="line">    <span class="type">clock_t</span> start = clock();</span><br><span class="line">    <span class="type">int</span> target = arr[size / <span class="number">2</span>];  <span class="comment">// 搜索中间的元素</span></span><br><span class="line">    <span class="type">int</span> index = linear_search(arr, size, target);</span><br><span class="line">    <span class="type">clock_t</span> end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;线性搜索: 找到索引 %d, 耗时 %.2f ms\n&quot;</span>, </span><br><span class="line">           index, ((<span class="type">double</span>)(end - start) / CLOCKS_PER_SEC) * <span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 排序后测试二分搜索</span></span><br><span class="line">    <span class="type">int</span>* sorted_arr = <span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">memcpy</span>(sorted_arr, arr, size * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    </span><br><span class="line">    start = clock();</span><br><span class="line">    merge_sort(sorted_arr, temp, <span class="number">0</span>, size - <span class="number">1</span>);</span><br><span class="line">    end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;归并排序: 耗时 %.2f ms\n&quot;</span>, </span><br><span class="line">           ((<span class="type">double</span>)(end - start) / CLOCKS_PER_SEC) * <span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">    start = clock();</span><br><span class="line">    index = binary_search(sorted_arr, size, target);</span><br><span class="line">    end = clock();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;二分搜索: 找到索引 %d, 耗时 %.2f ms\n&quot;</span>, </span><br><span class="line">           index, ((<span class="type">double</span>)(end - start) / CLOCKS_PER_SEC) * <span class="number">1000</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算统计信息</span></span><br><span class="line">    ArrayStats stats = calculate_stats(arr, size);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数组统计信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最小值: %d\n&quot;</span>, stats.min);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大值: %d\n&quot;</span>, stats.max);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;平均值: %.2f\n&quot;</span>, stats.average);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;总和: %d\n&quot;</span>, stats.sum);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(arr);</span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line">    <span class="built_in">free</span>(sorted_arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    performance_test();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、字符串深度解析"><a href="#二、字符串深度解析" class="headerlink" title="二、字符串深度解析"></a>二、字符串深度解析</h1><h2 id="（一）字符串的本质与内存管理"><a href="#（一）字符串的本质与内存管理" class="headerlink" title="（一）字符串的本质与内存管理"></a>（一）字符串的本质与内存管理</h2><h3 id="1-字符串的内存表示"><a href="#1-字符串的内存表示" class="headerlink" title="1. 字符串的内存表示"></a>1. 字符串的内存表示</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">analyze_string_memory</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 字符串内存分析 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 不同类型的字符串</span></span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;Hello&quot;</span>;           <span class="comment">// 栈上的字符数组</span></span><br><span class="line">    <span class="type">char</span>* str2 = <span class="string">&quot;World&quot;</span>;            <span class="comment">// 指向字符串字面量的指针</span></span><br><span class="line">    <span class="type">char</span>* str3 = <span class="built_in">malloc</span>(<span class="number">20</span>);         <span class="comment">// 堆上分配的字符串</span></span><br><span class="line">    <span class="built_in">strcpy</span>(str3, <span class="string">&quot;Dynamic&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字符串类型分析:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str1 (数组): 地址=%p, 内容=\&quot;%s\&quot;, 大小=%zu\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)str1, str1, <span class="keyword">sizeof</span>(str1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str2 (指针): 地址=%p, 指向=%p, 内容=\&quot;%s\&quot;\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)&amp;str2, (<span class="type">void</span>*)str2, str2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str3 (堆): 地址=%p, 指向=%p, 内容=\&quot;%s\&quot;\n&quot;</span>, </span><br><span class="line">           (<span class="type">void</span>*)&amp;str3, (<span class="type">void</span>*)str3, str3);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串字面量的特性</span></span><br><span class="line">    <span class="type">char</span>* literal1 = <span class="string">&quot;Constant&quot;</span>;</span><br><span class="line">    <span class="type">char</span>* literal2 = <span class="string">&quot;Constant&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串字面量分析:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;literal1 指向: %p\n&quot;</span>, (<span class="type">void</span>*)literal1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;literal2 指向: %p\n&quot;</span>, (<span class="type">void</span>*)literal2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;是否指向同一地址: %s\n&quot;</span>, </span><br><span class="line">           (literal1 == literal2) ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串修改测试</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串修改测试:\n&quot;</span>);</span><br><span class="line">    str1[<span class="number">0</span>] = <span class="string">&#x27;h&#x27;</span>;  <span class="comment">// 可以修改数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后的str1: %s\n&quot;</span>, str1);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// str2[0] = &#x27;w&#x27;;  // 错误！不能修改字符串字面量</span></span><br><span class="line">    </span><br><span class="line">    str3[<span class="number">0</span>] = <span class="string">&#x27;d&#x27;</span>;  <span class="comment">// 可以修改堆上的字符串</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后的str3: %s\n&quot;</span>, str3);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 内存布局分析</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n内存布局分析:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str1[i] != <span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;str1[%d] = &#x27;%c&#x27; (ASCII: %d, 地址: %p)\n&quot;</span>, </span><br><span class="line">               i, str1[i], str1[i], (<span class="type">void</span>*)&amp;str1[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;str1终止符: &#x27;\\0&#x27; (ASCII: %d, 地址: %p)\n&quot;</span>, </span><br><span class="line">           str1[<span class="built_in">strlen</span>(str1)], (<span class="type">void</span>*)&amp;str1[<span class="built_in">strlen</span>(str1)]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(str3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串长度计算的不同方法</span></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="type">size_t</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[len] != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">size_t</span> <span class="title function_">my_strlen_pointer</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* start = str;</span><br><span class="line">    <span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str - start;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">string_length_comparison</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 字符串长度计算比较 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* test_string = <span class="string">&quot;Hello, World! 你好世界&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;测试字符串: \&quot;%s\&quot;\n&quot;</span>, test_string);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;strlen(): %zu\n&quot;</span>, <span class="built_in">strlen</span>(test_string));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;my_strlen(): %zu\n&quot;</span>, my_strlen(test_string));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;my_strlen_pointer(): %zu\n&quot;</span>, my_strlen_pointer(test_string));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注意：包含多字节字符时，字节长度与字符数量不同</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字节数: %zu, 实际字符可能更少（包含多字节字符）\n&quot;</span>, </span><br><span class="line">           <span class="built_in">strlen</span>(test_string));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    analyze_string_memory();</span><br><span class="line">    string_length_comparison();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-安全的字符串操作"><a href="#2-安全的字符串操作" class="headerlink" title="2. 安全的字符串操作"></a>2. 安全的字符串操作</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的字符串复制函数</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">safe_strcpy</span><span class="params">(<span class="type">char</span>* dest, <span class="type">size_t</span> dest_size, <span class="type">const</span> <span class="type">char</span>* src)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (dest == <span class="literal">NULL</span> || src == <span class="literal">NULL</span> || dest_size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> src_len = <span class="built_in">strlen</span>(src);</span><br><span class="line">    <span class="keyword">if</span> (src_len &gt;= dest_size) &#123;</span><br><span class="line">        <span class="comment">// 源字符串太长，只复制能容纳的部分</span></span><br><span class="line">        <span class="built_in">strncpy</span>(dest, src, dest_size - <span class="number">1</span>);</span><br><span class="line">        dest[dest_size - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;  <span class="comment">// 确保以null结尾</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安全的字符串连接函数</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">safe_strcat</span><span class="params">(<span class="type">char</span>* dest, <span class="type">size_t</span> dest_size, <span class="type">const</span> <span class="type">char</span>* src)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (dest == <span class="literal">NULL</span> || src == <span class="literal">NULL</span> || dest_size == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> dest_len = <span class="built_in">strlen</span>(dest);</span><br><span class="line">    <span class="type">size_t</span> src_len = <span class="built_in">strlen</span>(src);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (dest_len + src_len &gt;= dest_size) &#123;</span><br><span class="line">        <span class="comment">// 目标缓冲区空间不足</span></span><br><span class="line">        <span class="type">size_t</span> available = dest_size - dest_len - <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">strncat</span>(dest, src, available);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">strcat</span>(dest, src);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态字符串结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>* data;</span><br><span class="line">    <span class="type">size_t</span> length;</span><br><span class="line">    <span class="type">size_t</span> capacity;</span><br><span class="line">&#125; DynamicString;</span><br><span class="line"></span><br><span class="line">DynamicString* <span class="title function_">ds_create</span><span class="params">(<span class="type">size_t</span> initial_capacity)</span> &#123;</span><br><span class="line">    DynamicString* ds = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(DynamicString));</span><br><span class="line">    <span class="keyword">if</span> (ds == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    ds-&gt;data = <span class="built_in">malloc</span>(initial_capacity);</span><br><span class="line">    <span class="keyword">if</span> (ds-&gt;data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(ds);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ds-&gt;data[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    ds-&gt;length = <span class="number">0</span>;</span><br><span class="line">    ds-&gt;capacity = initial_capacity;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> ds;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ds_destroy</span><span class="params">(DynamicString* ds)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(ds-&gt;data);</span><br><span class="line">        <span class="built_in">free</span>(ds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">ds_resize</span><span class="params">(DynamicString* ds, <span class="type">size_t</span> new_capacity)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ds == <span class="literal">NULL</span> || new_capacity &lt;= ds-&gt;length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* new_data = <span class="built_in">realloc</span>(ds-&gt;data, new_capacity);</span><br><span class="line">    <span class="keyword">if</span> (new_data == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ds-&gt;data = new_data;</span><br><span class="line">    ds-&gt;capacity = new_capacity;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">ds_append</span><span class="params">(DynamicString* ds, <span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ds == <span class="literal">NULL</span> || str == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">size_t</span> str_len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="type">size_t</span> required_capacity = ds-&gt;length + str_len + <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果容量不足，扩展容量</span></span><br><span class="line">    <span class="keyword">if</span> (required_capacity &gt; ds-&gt;capacity) &#123;</span><br><span class="line">        <span class="type">size_t</span> new_capacity = ds-&gt;capacity * <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (new_capacity &lt; required_capacity) &#123;</span><br><span class="line">            new_capacity = required_capacity;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!ds_resize(ds, new_capacity)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">strcat</span>(ds-&gt;data, str);</span><br><span class="line">    ds-&gt;length += str_len;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_safe_strings</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 安全字符串操作演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全复制演示</span></span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">20</span>];</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* long_string = <span class="string">&quot;This is a very long string that exceeds buffer size&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    safe_strcpy(buffer, <span class="keyword">sizeof</span>(buffer), long_string);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;安全复制结果: \&quot;%s\&quot;\n&quot;</span>, buffer);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;缓冲区大小: %zu, 实际长度: %zu\n&quot;</span>, <span class="keyword">sizeof</span>(buffer), <span class="built_in">strlen</span>(buffer));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 安全连接演示</span></span><br><span class="line">    <span class="type">char</span> dest[<span class="number">50</span>] = <span class="string">&quot;Hello, &quot;</span>;</span><br><span class="line">    safe_strcat(dest, <span class="keyword">sizeof</span>(dest), <span class="string">&quot;World!&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;安全连接结果: \&quot;%s\&quot;\n&quot;</span>, dest);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态字符串演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n动态字符串演示:\n&quot;</span>);</span><br><span class="line">    DynamicString* ds = ds_create(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;初始容量: %zu\n&quot;</span>, ds-&gt;capacity);</span><br><span class="line">        </span><br><span class="line">        ds_append(ds, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;添加\&quot;Hello\&quot;: \&quot;%s\&quot; (长度: %zu, 容量: %zu)\n&quot;</span>, </span><br><span class="line">               ds-&gt;data, ds-&gt;length, ds-&gt;capacity);</span><br><span class="line">        </span><br><span class="line">        ds_append(ds, <span class="string">&quot;, World!&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;添加\&quot;, World!\&quot;: \&quot;%s\&quot; (长度: %zu, 容量: %zu)\n&quot;</span>, </span><br><span class="line">               ds-&gt;data, ds-&gt;length, ds-&gt;capacity);</span><br><span class="line">        </span><br><span class="line">        ds_append(ds, <span class="string">&quot; This is a longer string that will trigger reallocation.&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;添加长字符串: \&quot;%s\&quot; (长度: %zu, 容量: %zu)\n&quot;</span>, </span><br><span class="line">               ds-&gt;data, ds-&gt;length, ds-&gt;capacity);</span><br><span class="line">        </span><br><span class="line">        ds_destroy(ds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_safe_strings();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）字符串算法实现"><a href="#（二）字符串算法实现" class="headerlink" title="（二）字符串算法实现"></a>（二）字符串算法实现</h2><h3 id="1-字符串匹配算法"><a href="#1-字符串匹配算法" class="headerlink" title="1. 字符串匹配算法"></a>1. 字符串匹配算法</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 朴素字符串匹配算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">naive_search</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* text, <span class="type">const</span> <span class="type">char</span>* pattern)</span> &#123;</span><br><span class="line">    <span class="type">int</span> text_len = <span class="built_in">strlen</span>(text);</span><br><span class="line">    <span class="type">int</span> pattern_len = <span class="built_in">strlen</span>(pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= text_len - pattern_len; i++) &#123;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; pattern_len; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (text[i + j] != pattern[j]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j == pattern_len) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;  <span class="comment">// 找到匹配</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 未找到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KMP算法的前缀函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">compute_lps</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* pattern, <span class="type">int</span>* lps)</span> &#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;  <span class="comment">// 最长相等前后缀的长度</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> pattern_len = <span class="built_in">strlen</span>(pattern);</span><br><span class="line">    </span><br><span class="line">    lps[<span class="number">0</span>] = <span class="number">0</span>;  <span class="comment">// lps[0]总是0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt; pattern_len) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pattern[i] == pattern[len]) &#123;</span><br><span class="line">            len++;</span><br><span class="line">            lps[i] = len;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (len != <span class="number">0</span>) &#123;</span><br><span class="line">                len = lps[len - <span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                lps[i] = <span class="number">0</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// KMP字符串匹配算法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">kmp_search</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* text, <span class="type">const</span> <span class="type">char</span>* pattern)</span> &#123;</span><br><span class="line">    <span class="type">int</span> text_len = <span class="built_in">strlen</span>(text);</span><br><span class="line">    <span class="type">int</span> pattern_len = <span class="built_in">strlen</span>(pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (pattern_len == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算LPS数组</span></span><br><span class="line">    <span class="type">int</span>* lps = <span class="built_in">malloc</span>(pattern_len * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    compute_lps(pattern, lps);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;  <span class="comment">// text的索引</span></span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;  <span class="comment">// pattern的索引</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt; text_len) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pattern[j] == text[i]) &#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (j == pattern_len) &#123;</span><br><span class="line">            <span class="built_in">free</span>(lps);</span><br><span class="line">            <span class="keyword">return</span> i - j;  <span class="comment">// 找到匹配</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; text_len &amp;&amp; pattern[j] != text[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (j != <span class="number">0</span>) &#123;</span><br><span class="line">                j = lps[j - <span class="number">1</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(lps);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 未找到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Boyer-Moore算法的坏字符表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">build_bad_char_table</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* pattern, <span class="type">int</span>* bad_char)</span> &#123;</span><br><span class="line">    <span class="type">int</span> pattern_len = <span class="built_in">strlen</span>(pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化所有字符的偏移为-1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">        bad_char[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 填充模式中出现的字符的最后位置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; pattern_len; i++) &#123;</span><br><span class="line">        bad_char[(<span class="type">unsigned</span> <span class="type">char</span>)pattern[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Boyer-Moore字符串匹配算法（简化版）</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">boyer_moore_search</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* text, <span class="type">const</span> <span class="type">char</span>* pattern)</span> &#123;</span><br><span class="line">    <span class="type">int</span> text_len = <span class="built_in">strlen</span>(text);</span><br><span class="line">    <span class="type">int</span> pattern_len = <span class="built_in">strlen</span>(pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> bad_char[<span class="number">256</span>];</span><br><span class="line">    build_bad_char_table(pattern, bad_char);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> shift = <span class="number">0</span>;  <span class="comment">// 模式相对于文本的偏移</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (shift &lt;= text_len - pattern_len) &#123;</span><br><span class="line">        <span class="type">int</span> j = pattern_len - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 从右到左匹配</span></span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; pattern[j] == text[shift + j]) &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (j &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> shift;  <span class="comment">// 找到匹配</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 根据坏字符规则计算偏移</span></span><br><span class="line">            <span class="type">int</span> bad_char_shift = j - bad_char[(<span class="type">unsigned</span> <span class="type">char</span>)text[shift + j]];</span><br><span class="line">            shift += (bad_char_shift &gt; <span class="number">1</span>) ? bad_char_shift : <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 未找到</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串匹配性能测试</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">string_matching_performance_test</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 字符串匹配算法性能测试 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造测试数据</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* text = <span class="string">&quot;ABABDABACDABABCABCABCABCABC&quot;</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* pattern = <span class="string">&quot;ABABCABCABCABC&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;文本: %s\n&quot;</span>, text);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;模式: %s\n&quot;</span>, pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试不同算法</span></span><br><span class="line">    <span class="type">int</span> result1 = naive_search(text, pattern);</span><br><span class="line">    <span class="type">int</span> result2 = kmp_search(text, pattern);</span><br><span class="line">    <span class="type">int</span> result3 = boyer_moore_search(text, pattern);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n算法结果:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;朴素算法: %s (位置: %d)\n&quot;</span>, </span><br><span class="line">           (result1 != <span class="number">-1</span>) ? <span class="string">&quot;找到&quot;</span> : <span class="string">&quot;未找到&quot;</span>, result1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;KMP算法: %s (位置: %d)\n&quot;</span>, </span><br><span class="line">           (result2 != <span class="number">-1</span>) ? <span class="string">&quot;找到&quot;</span> : <span class="string">&quot;未找到&quot;</span>, result2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Boyer-Moore算法: %s (位置: %d)\n&quot;</span>, </span><br><span class="line">           (result3 != <span class="number">-1</span>) ? <span class="string">&quot;找到&quot;</span> : <span class="string">&quot;未找到&quot;</span>, result3);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证结果一致性</span></span><br><span class="line">    <span class="keyword">if</span> (result1 == result2 &amp;&amp; result2 == result3) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;✓ 所有算法结果一致\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;✗ 算法结果不一致！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    string_matching_performance_test();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-字符串处理工具函数"><a href="#2-字符串处理工具函数" class="headerlink" title="2. 字符串处理工具函数"></a>2. 字符串处理工具函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串反转</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">string_reverse</span><span class="params">(<span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="type">char</span> temp = str[i];</span><br><span class="line">        str[i] = str[len - <span class="number">1</span> - i];</span><br><span class="line">        str[len - <span class="number">1</span> - i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串去除空白字符</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">string_trim</span><span class="params">(<span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 去除开头的空白字符</span></span><br><span class="line">    <span class="type">char</span>* start = str;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isspace</span>(*start)) &#123;</span><br><span class="line">        start++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果字符串全是空白字符</span></span><br><span class="line">    <span class="keyword">if</span> (*start == <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        str[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 去除结尾的空白字符</span></span><br><span class="line">    <span class="type">char</span>* end = start + <span class="built_in">strlen</span>(start) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (end &gt; start &amp;&amp; <span class="built_in">isspace</span>(*end)) &#123;</span><br><span class="line">        end--;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 移动字符串到开头</span></span><br><span class="line">    <span class="type">int</span> len = end - start + <span class="number">1</span>;</span><br><span class="line">    memmove(str, start, len);</span><br><span class="line">    str[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串分割</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span>** tokens;</span><br><span class="line">    <span class="type">int</span> count;</span><br><span class="line">    <span class="type">int</span> capacity;</span><br><span class="line">&#125; StringArray;</span><br><span class="line"></span><br><span class="line">StringArray* <span class="title function_">string_split</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">const</span> <span class="type">char</span>* delimiter)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span> || delimiter == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    StringArray* result = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(StringArray));</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    result-&gt;capacity = <span class="number">10</span>;</span><br><span class="line">    result-&gt;tokens = <span class="built_in">malloc</span>(result-&gt;capacity * <span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">    result-&gt;count = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (result-&gt;tokens == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">free</span>(result);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复制字符串以便修改</span></span><br><span class="line">    <span class="type">char</span>* str_copy = <span class="built_in">malloc</span>(<span class="built_in">strlen</span>(str) + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(str_copy, str);</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* token = strtok(str_copy, delimiter);</span><br><span class="line">    <span class="keyword">while</span> (token != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 扩展数组容量</span></span><br><span class="line">        <span class="keyword">if</span> (result-&gt;count &gt;= result-&gt;capacity) &#123;</span><br><span class="line">            result-&gt;capacity *= <span class="number">2</span>;</span><br><span class="line">            <span class="type">char</span>** new_tokens = <span class="built_in">realloc</span>(result-&gt;tokens, </span><br><span class="line">                                      result-&gt;capacity * <span class="keyword">sizeof</span>(<span class="type">char</span>*));</span><br><span class="line">            <span class="keyword">if</span> (new_tokens == <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="comment">// 清理已分配的内存</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; result-&gt;count; i++) &#123;</span><br><span class="line">                    <span class="built_in">free</span>(result-&gt;tokens[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">free</span>(result-&gt;tokens);</span><br><span class="line">                <span class="built_in">free</span>(result);</span><br><span class="line">                <span class="built_in">free</span>(str_copy);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            result-&gt;tokens = new_tokens;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 复制token</span></span><br><span class="line">        result-&gt;tokens[result-&gt;count] = <span class="built_in">malloc</span>(<span class="built_in">strlen</span>(token) + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(result-&gt;tokens[result-&gt;count], token);</span><br><span class="line">        result-&gt;count++;</span><br><span class="line">        </span><br><span class="line">        token = strtok(<span class="literal">NULL</span>, delimiter);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(str_copy);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">string_array_free</span><span class="params">(StringArray* arr)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arr-&gt;count; i++) &#123;</span><br><span class="line">            <span class="built_in">free</span>(arr-&gt;tokens[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">free</span>(arr-&gt;tokens);</span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串替换</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">string_replace</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">const</span> <span class="type">char</span>* old_substr, <span class="type">const</span> <span class="type">char</span>* new_substr)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span> || old_substr == <span class="literal">NULL</span> || new_substr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> old_len = <span class="built_in">strlen</span>(old_substr);</span><br><span class="line">    <span class="type">int</span> new_len = <span class="built_in">strlen</span>(new_substr);</span><br><span class="line">    <span class="type">int</span> str_len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (old_len == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算需要替换的次数</span></span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* pos = str;</span><br><span class="line">    <span class="keyword">while</span> ((pos = <span class="built_in">strstr</span>(pos, old_substr)) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        count++;</span><br><span class="line">        pos += old_len;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 没有找到要替换的子串，返回原字符串的副本</span></span><br><span class="line">        <span class="type">char</span>* result = <span class="built_in">malloc</span>(str_len + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">strcpy</span>(result, str);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算新字符串的长度</span></span><br><span class="line">    <span class="type">int</span> new_str_len = str_len + count * (new_len - old_len);</span><br><span class="line">    <span class="type">char</span>* result = <span class="built_in">malloc</span>(new_str_len + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 执行替换</span></span><br><span class="line">    <span class="type">char</span>* dest = result;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* src = str;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((pos = <span class="built_in">strstr</span>(src, old_substr)) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 复制old_substr之前的部分</span></span><br><span class="line">        <span class="type">int</span> prefix_len = pos - src;</span><br><span class="line">        <span class="built_in">memcpy</span>(dest, src, prefix_len);</span><br><span class="line">        dest += prefix_len;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 复制新的子串</span></span><br><span class="line">        <span class="built_in">memcpy</span>(dest, new_substr, new_len);</span><br><span class="line">        dest += new_len;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 移动源指针</span></span><br><span class="line">        src = pos + old_len;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 复制剩余部分</span></span><br><span class="line">    <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串工具函数演示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_string_utilities</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 字符串工具函数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串反转</span></span><br><span class="line">    <span class="type">char</span> str1[] = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原字符串: \&quot;%s\&quot;\n&quot;</span>, str1);</span><br><span class="line">    string_reverse(str1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;反转后: \&quot;%s\&quot;\n&quot;</span>, str1);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串去空白</span></span><br><span class="line">    <span class="type">char</span> str2[] = <span class="string">&quot;   Hello, World!   &quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n原字符串: \&quot;%s\&quot;\n&quot;</span>, str2);</span><br><span class="line">    string_trim(str2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;去空白后: \&quot;%s\&quot;\n&quot;</span>, str2);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串分割</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串分割演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* csv = <span class="string">&quot;apple,banana,orange,grape&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原字符串: \&quot;%s\&quot;\n&quot;</span>, csv);</span><br><span class="line">    </span><br><span class="line">    StringArray* tokens = string_split(csv, <span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (tokens != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分割结果:\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tokens-&gt;count; i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  [%d]: \&quot;%s\&quot;\n&quot;</span>, i, tokens-&gt;tokens[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        string_array_free(tokens);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串替换</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串替换演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* original = <span class="string">&quot;Hello World! Hello Universe!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原字符串: \&quot;%s\&quot;\n&quot;</span>, original);</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* replaced = string_replace(original, <span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;Hi&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (replaced != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;替换后: \&quot;%s\&quot;\n&quot;</span>, replaced);</span><br><span class="line">        <span class="built_in">free</span>(replaced);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_string_utilities();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、实践项目：文本分析器"><a href="#三、实践项目：文本分析器" class="headerlink" title="三、实践项目：文本分析器"></a>三、实践项目：文本分析器</h1><p>让我们创建一个综合性的文本分析器项目，展示数组和字符串的高级应用：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_WORD_LENGTH 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_WORDS 10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 词频统计结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> word[MAX_WORD_LENGTH];</span><br><span class="line">    <span class="type">int</span> frequency;</span><br><span class="line">&#125; WordFreq;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本统计结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> char_count;</span><br><span class="line">    <span class="type">int</span> word_count;</span><br><span class="line">    <span class="type">int</span> line_count;</span><br><span class="line">    <span class="type">int</span> sentence_count;</span><br><span class="line">    WordFreq words[MAX_WORDS];</span><br><span class="line">    <span class="type">int</span> unique_words;</span><br><span class="line">&#125; TextStats;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将字符转换为小写</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">to_lower</span><span class="params">(<span class="type">char</span> c)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>) ? c + <span class="number">32</span> : c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查字符是否为单词字符</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_word_char</span><span class="params">(<span class="type">char</span> c)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">isalnum</span>(c) || c == <span class="string">&#x27;\&#x27;&#x27;</span> || c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 标准化单词（转小写，去除标点）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">normalize_word</span><span class="params">(<span class="type">char</span>* word)</span> &#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(word);</span><br><span class="line">    <span class="type">int</span> write_pos = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_word_char(word[i])) &#123;</span><br><span class="line">            word[write_pos++] = to_lower(word[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    word[write_pos] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加或更新词频</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add_word</span><span class="params">(TextStats* stats, <span class="type">const</span> <span class="type">char</span>* word)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(word) == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找是否已存在</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; stats-&gt;unique_words; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(stats-&gt;words[i].word, word) == <span class="number">0</span>) &#123;</span><br><span class="line">            stats-&gt;words[i].frequency++;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加新单词</span></span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;unique_words &lt; MAX_WORDS) &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(stats-&gt;words[stats-&gt;unique_words].word, word);</span><br><span class="line">        stats-&gt;words[stats-&gt;unique_words].frequency = <span class="number">1</span>;</span><br><span class="line">        stats-&gt;unique_words++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分析文本</span></span><br><span class="line">TextStats <span class="title function_">analyze_text</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* text)</span> &#123;</span><br><span class="line">    TextStats stats = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(text);</span><br><span class="line">    <span class="type">char</span> current_word[MAX_WORD_LENGTH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> word_pos = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> in_word = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= len; i++) &#123;  <span class="comment">// 包括字符串结尾</span></span><br><span class="line">        <span class="type">char</span> c = (i &lt; len) ? text[i] : <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 字符计数（不包括结尾的null字符）</span></span><br><span class="line">        <span class="keyword">if</span> (i &lt; len) &#123;</span><br><span class="line">            stats.char_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 行计数</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            stats.line_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 句子计数</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;.&#x27;</span> || c == <span class="string">&#x27;!&#x27;</span> || c == <span class="string">&#x27;?&#x27;</span>) &#123;</span><br><span class="line">            stats.sentence_count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 单词处理</span></span><br><span class="line">        <span class="keyword">if</span> (is_word_char(c) &amp;&amp; word_pos &lt; MAX_WORD_LENGTH - <span class="number">1</span>) &#123;</span><br><span class="line">            current_word[word_pos++] = c;</span><br><span class="line">            in_word = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_word) &#123;</span><br><span class="line">                current_word[word_pos] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                normalize_word(current_word);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strlen</span>(current_word) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    add_word(&amp;stats, current_word);</span><br><span class="line">                    stats.word_count++;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                word_pos = <span class="number">0</span>;</span><br><span class="line">                in_word = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果文本不以换行符结尾，行数加1</span></span><br><span class="line">    <span class="keyword">if</span> (len &gt; <span class="number">0</span> &amp;&amp; text[len - <span class="number">1</span>] != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">        stats.line_count++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> stats;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 词频排序比较函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_word_freq</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span> &#123;</span><br><span class="line">    <span class="type">const</span> WordFreq* wa = (<span class="type">const</span> WordFreq*)a;</span><br><span class="line">    <span class="type">const</span> WordFreq* wb = (<span class="type">const</span> WordFreq*)b;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按频率降序排列</span></span><br><span class="line">    <span class="keyword">if</span> (wa-&gt;frequency != wb-&gt;frequency) &#123;</span><br><span class="line">        <span class="keyword">return</span> wb-&gt;frequency - wa-&gt;frequency;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 频率相同时按字母顺序排列</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(wa-&gt;word, wb-&gt;word);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印文本统计信息</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_text_stats</span><span class="params">(<span class="type">const</span> TextStats* stats)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 文本分析结果 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字符数: %d\n&quot;</span>, stats-&gt;char_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;单词数: %d\n&quot;</span>, stats-&gt;word_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;行数: %d\n&quot;</span>, stats-&gt;line_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;句子数: %d\n&quot;</span>, stats-&gt;sentence_count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;唯一单词数: %d\n&quot;</span>, stats-&gt;unique_words);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (stats-&gt;word_count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;平均单词长度: %.2f\n&quot;</span>, </span><br><span class="line">               (<span class="type">double</span>)stats-&gt;char_count / stats-&gt;word_count);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 排序并显示词频统计</span></span><br><span class="line">    WordFreq* sorted_words = <span class="built_in">malloc</span>(stats-&gt;unique_words * <span class="keyword">sizeof</span>(WordFreq));</span><br><span class="line">    <span class="built_in">memcpy</span>(sorted_words, stats-&gt;words, stats-&gt;unique_words * <span class="keyword">sizeof</span>(WordFreq));</span><br><span class="line">    </span><br><span class="line">    qsort(sorted_words, stats-&gt;unique_words, <span class="keyword">sizeof</span>(WordFreq), compare_word_freq);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 词频统计 (前20个) ===\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> display_count = (stats-&gt;unique_words &lt; <span class="number">20</span>) ? stats-&gt;unique_words : <span class="number">20</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; display_count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%2d. %-15s %d次\n&quot;</span>, </span><br><span class="line">               i + <span class="number">1</span>, sorted_words[i].word, sorted_words[i].frequency);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">free</span>(sorted_words);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找最长的单词</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">find_longest_words</span><span class="params">(<span class="type">const</span> TextStats* stats)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 最长单词 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> max_length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; stats-&gt;unique_words; i++) &#123;</span><br><span class="line">        <span class="type">int</span> len = <span class="built_in">strlen</span>(stats-&gt;words[i].word);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; max_length) &#123;</span><br><span class="line">            max_length = len;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最长单词长度: %d\n&quot;</span>, max_length);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最长单词:\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; stats-&gt;unique_words; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strlen</span>(stats-&gt;words[i].word) == max_length) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;  %s (出现 %d 次)\n&quot;</span>, </span><br><span class="line">                   stats-&gt;words[i].word, stats-&gt;words[i].frequency);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文本分析器主函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">text_analyzer_demo</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 文本分析器演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* sample_text = </span><br><span class="line">        <span class="string">&quot;Hello world! This is a sample text for analysis.\n&quot;</span></span><br><span class="line">        <span class="string">&quot;The text contains multiple sentences and words.\n&quot;</span></span><br><span class="line">        <span class="string">&quot;Some words appear multiple times in the text.\n&quot;</span></span><br><span class="line">        <span class="string">&quot;This analyzer will count characters, words, lines, and sentences.\n&quot;</span></span><br><span class="line">        <span class="string">&quot;It will also provide word frequency statistics.\n&quot;</span></span><br><span class="line">        <span class="string">&quot;Hello again! The word &#x27;the&#x27; appears frequently in English text.&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;分析文本:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, sample_text);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------\n\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    TextStats stats = analyze_text(sample_text);</span><br><span class="line">    print_text_stats(&amp;stats);</span><br><span class="line">    find_longest_words(&amp;stats);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    text_analyzer_demo();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结与下一步"><a href="#四、总结与下一步" class="headerlink" title="四、总结与下一步"></a>四、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的深入学习，您已经掌握了：</p>
<p><strong>数组高级技巧：</strong></p>
<ul>
<li>数组的内存模型和布局原理</li>
<li>动态多维数组的实现方法</li>
<li>高效的数组算法和优化技巧</li>
</ul>
<p><strong>字符串深度理解：</strong></p>
<ul>
<li>字符串的内存表示和管理</li>
<li>安全的字符串操作方法</li>
<li>经典字符串匹配算法实现</li>
</ul>
<p><strong>实践应用：</strong></p>
<ul>
<li>文本分析器的完整实现</li>
<li>词频统计和排序算法</li>
<li>综合性项目的设计思路</li>
</ul>
<h2 id="（二）性能优化要点"><a href="#（二）性能优化要点" class="headerlink" title="（二）性能优化要点"></a>（二）性能优化要点</h2><ol>
<li><strong>内存访问模式</strong>：利用数组的连续性提高缓存命中率</li>
<li><strong>算法选择</strong>：根据数据特点选择合适的搜索和排序算法</li>
<li><strong>内存管理</strong>：合理使用动态内存，避免内存泄漏</li>
<li><strong>字符串处理</strong>：使用高效的字符串算法，避免不必要的复制</li>
</ol>
<h2 id="（三）学习建议"><a href="#（三）学习建议" class="headerlink" title="（三）学习建议"></a>（三）学习建议</h2><ol>
<li><strong>深入理解内存模型</strong>：这是掌握C语言的关键</li>
<li><strong>练习算法实现</strong>：通过编写经典算法加深理解</li>
<li><strong>注意安全编程</strong>：始终考虑缓冲区溢出等安全问题</li>
<li><strong>性能意识</strong>：培养对算法时间复杂度的敏感性</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E4%B8%8E%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%EF%BC%9A%E6%8E%8C%E6%8F%A1%E5%BA%95%E5%B1%82%E7%BC%96%E7%A8%8B%E7%9A%84%E6%A0%B8%E5%BF%83/" title="下一篇：指针与内存管理"><i class="far fa-hand-point-right"></i><span>下一篇：指针与内存管理</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《算法导论》- Thomas H. Cormen等</li>
<li>《C和指针》- Kenneth A. Reek</li>
<li>《高质量C&#x2F;C++编程指南》- 林锐</li>
<li>《字符串算法》- Maxime Crochemore等</li>
<li>C语言字符串函数参考：<a href="https://en.cppreference.com/w/c/string">https://en.cppreference.com/w/c/string</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第3篇</strong><br>深入探讨C语言中数组和字符串的高级用法，掌握高效的数据处理技巧和内存管理策略。</p>
</div>

<h1 id="前言"><a href="]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数组" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E7%BB%84/"/>
    
      <category term="字符串" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
      <category term="数据结构" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="内存管理" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言函数与模块化编程：构建可维护的代码]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E5%87%BD%E6%95%B0%E4%B8%8E%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BC%96%E7%A8%8B%EF%BC%9A%E6%9E%84%E5%BB%BA%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言函数与模块化编程：构建可维护的代码/</id>
    <published>2025-08-11T03:00:00.000Z</published>
    <updated>2025-08-11T07:52:10.189Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第2篇</strong><br>在掌握了C语言基础语法后，本文将深入探讨函数设计和模块化编程，这是编写高质量、可维护代码的关键技能。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>函数是C语言程序的基本构建块，也是实现代码复用和模块化的核心机制。良好的函数设计不仅能提高代码的可读性和可维护性，还能显著提升开发效率。</p>
<p><strong>为什么需要函数？</strong></p>
<p>想象一下，如果我们要编写一个学生管理系统，需要多次计算学生的平均成绩。如果每次都重复编写相同的计算代码，不仅浪费时间，还容易出错。函数就像是一个”代码工厂”，我们定义一次，就可以在任何需要的地方调用。</p>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>掌握函数的设计原则和最佳实践</li>
<li>理解参数传递机制（值传递vs引用传递）</li>
<li>学会使用递归解决复杂问题</li>
<li>掌握变量的作用域和生命周期</li>
<li>学会模块化编程和代码组织</li>
</ul>
<p><strong>前置知识：</strong><br>本文假设您已经掌握了C语言的基本语法、数据类型和控制结构。</p>
<a class="btn-beautify green" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E5%AE%8C%E5%85%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E7%8E%B0%E4%BB%A3C%E7%BC%96%E7%A8%8B%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5/" title="上一篇：C语言完全入门指南"><i class="far fa-hand-point-left"></i><span>上一篇：C语言完全入门指南</span></a>

<h1 id="一、函数基础与设计原则"><a href="#一、函数基础与设计原则" class="headerlink" title="一、函数基础与设计原则"></a>一、函数基础与设计原则</h1><h2 id="（一）函数的基本概念"><a href="#（一）函数的基本概念" class="headerlink" title="（一）函数的基本概念"></a>（一）函数的基本概念</h2><h3 id="1-函数的组成要素"><a href="#1-函数的组成要素" class="headerlink" title="1. 函数的组成要素"></a>1. 函数的组成要素</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明（函数原型）</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">calculate_circle_area</span><span class="params">(<span class="type">double</span> radius)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print_circle_info</span><span class="params">(<span class="type">double</span> radius)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">get_max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 函数定义的完整结构：</span></span><br><span class="line"><span class="comment"> * 返回类型 函数名(参数列表) &#123;</span></span><br><span class="line"><span class="comment"> *     函数体</span></span><br><span class="line"><span class="comment"> *     return 返回值;  // 如果返回类型不是void</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算圆的面积</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">calculate_circle_area</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">    <span class="comment">// 输入验证：确保半径为正数</span></span><br><span class="line">    <span class="keyword">if</span> (radius &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误：半径必须为正数\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 返回错误标识</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算并返回面积</span></span><br><span class="line">    <span class="keyword">return</span> M_PI * radius * radius;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印圆的详细信息（无返回值函数）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_circle_info</span><span class="params">(<span class="type">double</span> radius)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (radius &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无效的半径值\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;  <span class="comment">// void函数可以使用空return提前退出</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> area = calculate_circle_area(radius);</span><br><span class="line">    <span class="type">double</span> circumference = <span class="number">2</span> * M_PI * radius;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;圆的信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  半径: %.2f\n&quot;</span>, radius);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  面积: %.2f\n&quot;</span>, area);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  周长: %.2f\n&quot;</span>, circumference);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回两个数中的较大值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;  <span class="comment">// 使用三元运算符简化代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> radius = <span class="number">5.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 函数基础演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用函数</span></span><br><span class="line">    <span class="type">double</span> area = calculate_circle_area(radius);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;半径为 %.1f 的圆面积: %.2f\n&quot;</span>, radius, area);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用无返回值函数</span></span><br><span class="line">    print_circle_info(radius);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数调用可以作为表达式的一部分</span></span><br><span class="line">    <span class="type">int</span> x = <span class="number">10</span>, y = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max(%d, %d) = %d\n&quot;</span>, x, y, get_max(x, y));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-函数设计的SOLID原则"><a href="#2-函数设计的SOLID原则" class="headerlink" title="2. 函数设计的SOLID原则"></a>2. 函数设计的SOLID原则</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 单一职责原则：每个函数只做一件事</span></span><br><span class="line"><span class="comment">// 好的设计：职责单一的函数</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_valid_email</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* email)</span> &#123;</span><br><span class="line">    <span class="comment">// 简化的邮箱验证：检查是否包含@符号</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strchr</span>(email, <span class="string">&#x27;@&#x27;</span>) != <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_valid_age</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> age &gt;= <span class="number">0</span> &amp;&amp; age &lt;= <span class="number">150</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_validation_result</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* item, <span class="type">bool</span> is_valid)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s: %s\n&quot;</span>, item, is_valid ? <span class="string">&quot;有效&quot;</span> : <span class="string">&quot;无效&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开放封闭原则：函数应该对扩展开放，对修改封闭</span></span><br><span class="line"><span class="comment">// 使用函数指针实现可扩展的验证系统</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">bool</span> <span class="params">(*validator_func)</span><span class="params">(<span class="type">const</span> <span class="type">char</span>*)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">validate_not_empty</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> str != <span class="literal">NULL</span> &amp;&amp; <span class="built_in">strlen</span>(str) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">validate_max_length</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> str != <span class="literal">NULL</span> &amp;&amp; <span class="built_in">strlen</span>(str) &lt;= <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通用验证函数，可以接受不同的验证器</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">validate_string</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, validator_func validator)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> validator(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接口隔离原则：函数接口应该精简，不强迫调用者依赖不需要的参数</span></span><br><span class="line"><span class="comment">// 好的设计：参数精简的函数</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">calculate_simple_interest</span><span class="params">(<span class="type">double</span> principal, <span class="type">double</span> rate, <span class="type">double</span> time)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> principal * rate * time / <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 依赖倒置原则：高层模块不应该依赖低层模块，都应该依赖抽象</span></span><br><span class="line"><span class="comment">// 使用回调函数实现依赖倒置</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*output_func)</span><span class="params">(<span class="type">const</span> <span class="type">char</span>*)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">console_output</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* message)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;控制台: %s\n&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">log_output</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* message)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;日志: %s\n&quot;</span>, message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高层函数，依赖抽象的输出接口</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">process_user_data</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* name, <span class="type">int</span> age, output_func output)</span> &#123;</span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">100</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (is_valid_age(age)) &#123;</span><br><span class="line">        <span class="built_in">snprintf</span>(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;用户 %s，年龄 %d，数据有效&quot;</span>, name, age);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">snprintf</span>(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">&quot;用户 %s，年龄 %d，数据无效&quot;</span>, name, age);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    output(buffer);  <span class="comment">// 使用传入的输出函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 函数设计原则演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 单一职责原则演示</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* email = <span class="string">&quot;user@example.com&quot;</span>;</span><br><span class="line">    <span class="type">int</span> age = <span class="number">25</span>;</span><br><span class="line">    </span><br><span class="line">    print_validation_result(<span class="string">&quot;邮箱&quot;</span>, is_valid_email(email));</span><br><span class="line">    print_validation_result(<span class="string">&quot;年龄&quot;</span>, is_valid_age(age));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开放封闭原则演示</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* username = <span class="string">&quot;john_doe&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串验证:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;非空验证: %s\n&quot;</span>, validate_string(username, validate_not_empty) ? <span class="string">&quot;通过&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;长度验证: %s\n&quot;</span>, validate_string(username, validate_max_length) ? <span class="string">&quot;通过&quot;</span> : <span class="string">&quot;失败&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 依赖倒置原则演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n用户数据处理:\n&quot;</span>);</span><br><span class="line">    process_user_data(<span class="string">&quot;Alice&quot;</span>, <span class="number">30</span>, console_output);</span><br><span class="line">    process_user_data(<span class="string">&quot;Bob&quot;</span>, <span class="number">-5</span>, log_output);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）参数传递机制"><a href="#（二）参数传递机制" class="headerlink" title="（二）参数传递机制"></a>（二）参数传递机制</h2><h3 id="1-值传递-vs-指针传递"><a href="#1-值传递-vs-指针传递" class="headerlink" title="1. 值传递 vs 指针传递"></a>1. 值传递 vs 指针传递</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 值传递：函数接收参数的副本</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap_by_value</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换前 (函数内): a=%d, b=%d\n&quot;</span>, a, b);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 交换局部变量的值</span></span><br><span class="line">    <span class="type">int</span> temp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = temp;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换后 (函数内): a=%d, b=%d\n&quot;</span>, a, b);</span><br><span class="line">    <span class="comment">// 注意：这里的交换不会影响main函数中的变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针传递：函数接收变量地址，可以修改原变量</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap_by_pointer</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span>* b)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换前 (函数内): *a=%d, *b=%d\n&quot;</span>, *a, *b);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通过指针交换原变量的值</span></span><br><span class="line">    <span class="type">int</span> temp = *a;</span><br><span class="line">    *a = *b;</span><br><span class="line">    *b = temp;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换后 (函数内): *a=%d, *b=%d\n&quot;</span>, *a, *b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组参数传递（实际上是指针传递）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_array</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组元素: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改数组元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">double_array_elements</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        arr[i] *= <span class="number">2</span>;  <span class="comment">// 直接修改原数组</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串参数传递</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">modify_string</span><span class="params">(<span class="type">char</span> str[])</span> &#123;</span><br><span class="line">    <span class="comment">// 修改字符串的第一个字符</span></span><br><span class="line">    <span class="keyword">if</span> (str[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">        str[<span class="number">0</span>] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量参数：防止函数修改参数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_string_info</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字符串: \&quot;%s\&quot;\n&quot;</span>, str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;长度: %zu\n&quot;</span>, <span class="built_in">strlen</span>(str));</span><br><span class="line">    <span class="comment">// str[0] = &#x27;Y&#x27;;  // 编译错误：不能修改const参数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 参数传递机制演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 值传递演示</span></span><br><span class="line">    <span class="type">int</span> x = <span class="number">10</span>, y = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;值传递演示:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换前 (main): x=%d, y=%d\n&quot;</span>, x, y);</span><br><span class="line">    swap_by_value(x, y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换后 (main): x=%d, y=%d\n&quot;</span>, x, y);  <span class="comment">// 值没有改变</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n指针传递演示:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换前 (main): x=%d, y=%d\n&quot;</span>, x, y);</span><br><span class="line">    swap_by_pointer(&amp;x, &amp;y);  <span class="comment">// 传递变量地址</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;交换后 (main): x=%d, y=%d\n&quot;</span>, x, y);  <span class="comment">// 值已改变</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组传递演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数组传递演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="type">int</span> size = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始数组: &quot;</span>);</span><br><span class="line">    print_array(numbers, size);</span><br><span class="line">    </span><br><span class="line">    double_array_elements(numbers, size);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后数组: &quot;</span>);</span><br><span class="line">    print_array(numbers, size);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串传递演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串传递演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">char</span> message[] = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始字符串: %s\n&quot;</span>, message);</span><br><span class="line">    </span><br><span class="line">    modify_string(message);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后字符串: %s\n&quot;</span>, message);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 常量参数演示</span></span><br><span class="line">    print_string_info(message);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-函数返回值的最佳实践"><a href="#2-函数返回值的最佳实践" class="headerlink" title="2. 函数返回值的最佳实践"></a>2. 函数返回值的最佳实践</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理方式1：返回错误码</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    CALC_SUCCESS = <span class="number">0</span>,</span><br><span class="line">    CALC_DIVISION_BY_ZERO = <span class="number">1</span>,</span><br><span class="line">    CALC_OVERFLOW = <span class="number">2</span>,</span><br><span class="line">    CALC_INVALID_INPUT = <span class="number">3</span></span><br><span class="line">&#125; <span class="type">calc_error_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">calc_error_t</span> <span class="title function_">safe_divide</span><span class="params">(<span class="type">double</span> a, <span class="type">double</span> b, <span class="type">double</span>* result)</span> &#123;</span><br><span class="line">    <span class="comment">// 参数验证</span></span><br><span class="line">    <span class="keyword">if</span> (result == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> CALC_INVALID_INPUT;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查除零错误</span></span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0.0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> CALC_DIVISION_BY_ZERO;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 执行计算</span></span><br><span class="line">    *result = a / b;</span><br><span class="line">    <span class="keyword">return</span> CALC_SUCCESS;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理方式2：返回布尔值，使用输出参数</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">parse_integer</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* str, <span class="type">int</span>* value)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="literal">NULL</span> || value == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">char</span>* endptr;</span><br><span class="line">    errno = <span class="number">0</span>;  <span class="comment">// 重置errno</span></span><br><span class="line">    </span><br><span class="line">    <span class="type">long</span> result = strtol(str, &amp;endptr, <span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查转换是否成功</span></span><br><span class="line">    <span class="keyword">if</span> (errno != <span class="number">0</span> || *endptr != <span class="string">&#x27;\0&#x27;</span> || result &lt; INT_MIN || result &gt; INT_MAX) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    *value = (<span class="type">int</span>)result;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理方式3：返回特殊值表示错误</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">find_max_index</span><span class="params">(<span class="type">const</span> <span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span> || size &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 返回-1表示错误</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> max_index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt; arr[max_index]) &#123;</span><br><span class="line">            max_index = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> max_index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多返回值的模拟：使用结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">bool</span> success;</span><br><span class="line">    <span class="type">int</span> quotient;</span><br><span class="line">    <span class="type">int</span> remainder;</span><br><span class="line">&#125; <span class="type">division_result_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">division_result_t</span> <span class="title function_">integer_divide</span><span class="params">(<span class="type">int</span> dividend, <span class="type">int</span> divisor)</span> &#123;</span><br><span class="line">    <span class="type">division_result_t</span> result = &#123;<span class="literal">false</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (divisor == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> result;  <span class="comment">// 返回失败状态</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    result.success = <span class="literal">true</span>;</span><br><span class="line">    result.quotient = dividend / divisor;</span><br><span class="line">    result.remainder = dividend % divisor;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* <span class="title function_">error_to_string</span><span class="params">(<span class="type">calc_error_t</span> error)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">case</span> CALC_SUCCESS: <span class="keyword">return</span> <span class="string">&quot;成功&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> CALC_DIVISION_BY_ZERO: <span class="keyword">return</span> <span class="string">&quot;除零错误&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> CALC_OVERFLOW: <span class="keyword">return</span> <span class="string">&quot;溢出错误&quot;</span>;</span><br><span class="line">        <span class="keyword">case</span> CALC_INVALID_INPUT: <span class="keyword">return</span> <span class="string">&quot;无效输入&quot;</span>;</span><br><span class="line">        <span class="keyword">default</span>: <span class="keyword">return</span> <span class="string">&quot;未知错误&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 函数返回值最佳实践 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 错误码方式演示</span></span><br><span class="line">    <span class="type">double</span> result;</span><br><span class="line">    <span class="type">calc_error_t</span> error = safe_divide(<span class="number">10.0</span>, <span class="number">3.0</span>, &amp;result);</span><br><span class="line">    <span class="keyword">if</span> (error == CALC_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;10.0 / 3.0 = %.2f\n&quot;</span>, result);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;计算失败: %s\n&quot;</span>, error_to_string(error));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    error = safe_divide(<span class="number">10.0</span>, <span class="number">0.0</span>, &amp;result);</span><br><span class="line">    <span class="keyword">if</span> (error != CALC_SUCCESS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;10.0 / 0.0 失败: %s\n&quot;</span>, error_to_string(error));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 布尔返回值演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串解析演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span>* test_strings[] = &#123;<span class="string">&quot;123&quot;</span>, <span class="string">&quot;abc&quot;</span>, <span class="string">&quot;456def&quot;</span>, <span class="string">&quot;999999999999999999&quot;</span>&#125;;</span><br><span class="line">    <span class="type">int</span> num_tests = <span class="keyword">sizeof</span>(test_strings) / <span class="keyword">sizeof</span>(test_strings[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num_tests; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (parse_integer(test_strings[i], &amp;value)) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\&quot;%s\&quot; -&gt; %d (成功)\n&quot;</span>, test_strings[i], value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\&quot;%s\&quot; -&gt; 解析失败\n&quot;</span>, test_strings[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 特殊值返回演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数组最大值索引:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">3</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">int</span> size = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> max_idx = find_max_index(numbers, size);</span><br><span class="line">    <span class="keyword">if</span> (max_idx &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;最大值 %d 位于索引 %d\n&quot;</span>, numbers[max_idx], max_idx);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;查找失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 结构体返回值演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n整数除法演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">division_result_t</span> div_result = integer_divide(<span class="number">17</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (div_result.success) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;17 ÷ 5 = %d 余 %d\n&quot;</span>, div_result.quotient, div_result.remainder);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;除法计算失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）递归编程"><a href="#（三）递归编程" class="headerlink" title="（三）递归编程"></a>（三）递归编程</h2><h3 id="1-递归的基本概念和应用"><a href="#1-递归的基本概念和应用" class="headerlink" title="1. 递归的基本概念和应用"></a>1. 递归的基本概念和应用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 经典递归：计算阶乘</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="comment">// 基础情况（递归终止条件）</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归情况</span></span><br><span class="line">    <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：计算斐波那契数列</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">fibonacci</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> fibonacci(n - <span class="number">1</span>) + fibonacci(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 优化的斐波那契：使用记忆化</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">fibonacci_memo</span><span class="params">(<span class="type">int</span> n, <span class="type">long</span> <span class="type">long</span> memo[])</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果已经计算过，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> (memo[n] != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> memo[n];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算并存储结果</span></span><br><span class="line">    memo[n] = fibonacci_memo(n - <span class="number">1</span>, memo) + fibonacci_memo(n - <span class="number">2</span>, memo);</span><br><span class="line">    <span class="keyword">return</span> memo[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：字符串反转</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse_string</span><span class="params">(<span class="type">char</span> str[], <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="comment">// 基础情况</span></span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 交换字符</span></span><br><span class="line">    <span class="type">char</span> temp = str[start];</span><br><span class="line">    str[start] = str[end];</span><br><span class="line">    str[end] = temp;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归处理剩余部分</span></span><br><span class="line">    reverse_string(str, start + <span class="number">1</span>, end - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：二分查找</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">binary_search</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">    <span class="comment">// 基础情况：未找到</span></span><br><span class="line">    <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> mid = left + (right - left) / <span class="number">2</span>;  <span class="comment">// 防止溢出的中点计算</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基础情况：找到目标</span></span><br><span class="line">    <span class="keyword">if</span> (arr[mid] == target) &#123;</span><br><span class="line">        <span class="keyword">return</span> mid;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归情况</span></span><br><span class="line">    <span class="keyword">if</span> (arr[mid] &gt; target) &#123;</span><br><span class="line">        <span class="keyword">return</span> binary_search(arr, left, mid - <span class="number">1</span>, target);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> binary_search(arr, mid + <span class="number">1</span>, right, target);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：汉诺塔问题</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">hanoi</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> from, <span class="type">char</span> to, <span class="type">char</span> aux)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;将盘子 1 从 %c 移动到 %c\n&quot;</span>, from, to);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将前n-1个盘子从from移动到aux</span></span><br><span class="line">    hanoi(n - <span class="number">1</span>, from, aux, to);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将最大的盘子从from移动到to</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;将盘子 %d 从 %c 移动到 %c\n&quot;</span>, n, from, to);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将n-1个盘子从aux移动到to</span></span><br><span class="line">    hanoi(n - <span class="number">1</span>, aux, to, from);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归：计算数组元素之和</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">array_sum</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="comment">// 基础情况</span></span><br><span class="line">    <span class="keyword">if</span> (size &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归情况</span></span><br><span class="line">    <span class="keyword">return</span> arr[size - <span class="number">1</span>] + array_sum(arr, size - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 递归编程演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 阶乘演示</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;阶乘计算:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d! = %lld\n&quot;</span>, n, factorial(n));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 斐波那契数列演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n斐波那契数列:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;普通递归 fibonacci(%d) = %lld\n&quot;</span>, <span class="number">10</span>, fibonacci(<span class="number">10</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记忆化斐波那契</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> memo[<span class="number">50</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50</span>; i++) &#123;</span><br><span class="line">        memo[i] = <span class="number">-1</span>;  <span class="comment">// 初始化为-1表示未计算</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;记忆化递归 fibonacci(%d) = %lld\n&quot;</span>, <span class="number">40</span>, fibonacci_memo(<span class="number">40</span>, memo));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 字符串反转演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n字符串反转:\n&quot;</span>);</span><br><span class="line">    <span class="type">char</span> str[] = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原字符串: %s\n&quot;</span>, str);</span><br><span class="line">    reverse_string(str, <span class="number">0</span>, <span class="built_in">strlen</span>(str) - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;反转后: %s\n&quot;</span>, str);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 二分查找演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n二分查找:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> sorted_array[] = &#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>&#125;;</span><br><span class="line">    <span class="type">int</span> array_size = <span class="keyword">sizeof</span>(sorted_array) / <span class="keyword">sizeof</span>(sorted_array[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> target = <span class="number">7</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> index = binary_search(sorted_array, <span class="number">0</span>, array_size - <span class="number">1</span>, target);</span><br><span class="line">    <span class="keyword">if</span> (index != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;在索引 %d 处找到 %d\n&quot;</span>, index, target);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;未找到 %d\n&quot;</span>, target);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 汉诺塔演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n汉诺塔问题 (3个盘子):\n&quot;</span>);</span><br><span class="line">    hanoi(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组求和演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数组求和:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sum = array_sum(numbers, <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组 &#123;1, 2, 3, 4, 5&#125; 的和为: %d\n&quot;</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、变量作用域与生命周期"><a href="#二、变量作用域与生命周期" class="headerlink" title="二、变量作用域与生命周期"></a>二、变量作用域与生命周期</h1><h2 id="（一）作用域规则"><a href="#（一）作用域规则" class="headerlink" title="（一）作用域规则"></a>（一）作用域规则</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量：在整个程序中都可见</span></span><br><span class="line"><span class="type">int</span> global_counter = <span class="number">0</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14159265359</span>;  <span class="comment">// 全局常量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态全局变量：只在当前文件中可见</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> file_scope_var = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_scope</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">increment_counters</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数定义</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_scope</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 局部变量：只在函数内部可见</span></span><br><span class="line">    <span class="type">int</span> local_var = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;函数内部:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  局部变量: %d\n&quot;</span>, local_var);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  全局变量: %d\n&quot;</span>, global_counter);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  文件作用域变量: %d\n&quot;</span>, file_scope_var);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 块作用域演示</span></span><br><span class="line">    <span class="keyword">if</span> (local_var &gt; <span class="number">5</span>) &#123;</span><br><span class="line">        <span class="type">int</span> block_var = <span class="number">20</span>;  <span class="comment">// 块作用域变量</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  块内变量: %d\n&quot;</span>, block_var);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 变量遮蔽（shadowing）</span></span><br><span class="line">        <span class="type">int</span> global_counter = <span class="number">999</span>;  <span class="comment">// 局部变量遮蔽全局变量</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;  遮蔽的全局变量: %d\n&quot;</span>, global_counter);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// block_var在这里不可见</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  块外的全局变量: %d\n&quot;</span>, global_counter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">increment_counters</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 静态局部变量：保持值在函数调用之间</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> static_counter = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    global_counter++;</span><br><span class="line">    static_counter++;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计数器增加:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  全局计数器: %d\n&quot;</span>, global_counter);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  静态局部计数器: %d\n&quot;</span>, static_counter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 变量作用域演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 局部变量</span></span><br><span class="line">    <span class="type">int</span> main_local = <span class="number">42</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;main函数开始:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  main局部变量: %d\n&quot;</span>, main_local);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  全局变量: %d\n&quot;</span>, global_counter);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用函数演示作用域</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    demonstrate_scope();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 演示静态变量</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n静态变量演示:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第 %d 次调用:\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        increment_counters();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 循环变量的作用域</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n循环变量作用域:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;循环内 i = %d\n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// printf(&quot;循环外 i = %d\n&quot;, i);  // 编译错误：i不在作用域内</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）存储类别"><a href="#（二）存储类别" class="headerlink" title="（二）存储类别"></a>（二）存储类别</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 外部变量声明（定义在其他文件中）</span></span><br><span class="line"><span class="comment">// extern int external_var;  // 如果有其他文件定义了这个变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态函数：只在当前文件中可见</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">internal_function</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这是一个静态函数，只能在当前文件中调用\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 演示不同存储类别的函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">storage_class_demo</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// auto存储类别（默认，通常省略）</span></span><br><span class="line">    <span class="keyword">auto</span> <span class="type">int</span> auto_var = <span class="number">10</span>;  <span class="comment">// 等价于 int auto_var = 10;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// register存储类别（建议编译器将变量存储在寄存器中）</span></span><br><span class="line">    <span class="keyword">register</span> <span class="type">int</span> reg_var = <span class="number">20</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// static存储类别（静态局部变量）</span></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> static_var = <span class="number">30</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;存储类别演示:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  auto变量: %d\n&quot;</span>, auto_var);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  register变量: %d\n&quot;</span>, reg_var);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  static变量: %d\n&quot;</span>, static_var);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 修改变量值</span></span><br><span class="line">    auto_var++;</span><br><span class="line">    reg_var++;</span><br><span class="line">    static_var++;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;修改后:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  auto变量: %d\n&quot;</span>, auto_var);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  register变量: %d\n&quot;</span>, reg_var);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;  static变量: %d\n&quot;</span>, static_var);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注意：不能获取register变量的地址</span></span><br><span class="line">    <span class="comment">// printf(&quot;register变量地址: %p\n&quot;, &amp;reg_var);  // 编译错误</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 演示动态内存分配</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">dynamic_memory_demo</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n动态内存分配演示:\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在堆上分配内存</span></span><br><span class="line">    <span class="type">int</span>* dynamic_array = <span class="built_in">malloc</span>(<span class="number">5</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (dynamic_array == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化动态数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        dynamic_array[i] = i * i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;动态数组: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, dynamic_array[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放内存</span></span><br><span class="line">    <span class="built_in">free</span>(dynamic_array);</span><br><span class="line">    dynamic_array = <span class="literal">NULL</span>;  <span class="comment">// 防止悬空指针</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;内存已释放\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 存储类别演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 多次调用函数，观察静态变量的行为</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n第 %d 次调用:\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">        storage_class_demo();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调用静态函数</span></span><br><span class="line">    internal_function();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态内存演示</span></span><br><span class="line">    dynamic_memory_demo();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、模块化编程"><a href="#三、模块化编程" class="headerlink" title="三、模块化编程"></a>三、模块化编程</h1><h2 id="（一）头文件和源文件组织"><a href="#（一）头文件和源文件组织" class="headerlink" title="（一）头文件和源文件组织"></a>（一）头文件和源文件组织</h2><p>让我们创建一个简单的数学库来演示模块化编程：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math_utils.h - 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MATH_UTILS_H  <span class="comment">// 头文件保护</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MATH_UTILS_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PI 3.14159265359</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> E  2.71828182846</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">power</span><span class="params">(<span class="type">double</span> base, <span class="type">int</span> exponent)</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">square_root</span><span class="params">(<span class="type">double</span> number)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_prime</span><span class="params">(<span class="type">int</span> number)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">lcm</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">factorial_approx</span><span class="params">(<span class="type">int</span> n)</span>;  <span class="comment">// 使用斯特林公式近似</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 内联函数（C99特性）</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">double</span> <span class="title function_">square</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">double</span> <span class="title function_">cube</span><span class="params">(<span class="type">double</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x * x * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  <span class="comment">// MATH_UTILS_H</span></span></span><br></pre></td></tr></table></figure>

<p>现在让我们在主文件中使用这个模块：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.c - 主程序文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;math_utils.h&quot;</span>  <span class="comment">// 包含自定义头文件</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现math_utils.h中声明的函数</span></span><br><span class="line"><span class="type">double</span> <span class="title function_">power</span><span class="params">(<span class="type">double</span> base, <span class="type">int</span> exponent)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (exponent == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1.0</span> / power(base, -exponent);</span><br><span class="line">    </span><br><span class="line">    <span class="type">double</span> result = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; exponent; i++) &#123;</span><br><span class="line">        result *= base;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">square_root</span><span class="params">(<span class="type">double</span> number)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (number &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">// 错误标识</span></span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用牛顿法求平方根</span></span><br><span class="line">    <span class="type">double</span> guess = number / <span class="number">2.0</span>;</span><br><span class="line">    <span class="type">double</span> epsilon = <span class="number">1e-10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fabs</span>(guess * guess - number) &gt; epsilon) &#123;</span><br><span class="line">        guess = (guess + number / guess) / <span class="number">2.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> guess;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_prime</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (number &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (number == <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (number % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i * i &lt;= number; i += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (number % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="comment">// 欧几里得算法</span></span><br><span class="line">    <span class="keyword">while</span> (b != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">int</span> temp = b;</span><br><span class="line">        b = a % b;</span><br><span class="line">        a = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">lcm</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (a * b) / gcd(a, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">factorial_approx</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="comment">// 斯特林公式近似：n! ≈ √(2πn) * (n/e)^n</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="number">2</span> * PI * n) * power(n / E, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 演示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">demonstrate_math_utils</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 数学工具库演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本运算</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;基本运算:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2^10 = %.0f\n&quot;</span>, power(<span class="number">2</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5^2 = %.0f (使用内联函数)\n&quot;</span>, square(<span class="number">5</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3^3 = %.0f (使用内联函数)\n&quot;</span>, cube(<span class="number">3</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;√16 = %.2f\n&quot;</span>, square_root(<span class="number">16</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数论函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数论函数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;17是质数吗？%s\n&quot;</span>, is_prime(<span class="number">17</span>) ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;18是质数吗？%s\n&quot;</span>, is_prime(<span class="number">18</span>) ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;gcd(48, 18) = %d\n&quot;</span>, gcd(<span class="number">48</span>, <span class="number">18</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;lcm(12, 8) = %d\n&quot;</span>, lcm(<span class="number">12</span>, <span class="number">8</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 阶乘近似</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n阶乘近似:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">5</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d! ≈ %.0f\n&quot;</span>, i, factorial_approx(i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    demonstrate_math_utils();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning flat"><p><strong>编译多文件项目</strong>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果将函数实现放在单独的.c文件中</span></span><br><span class="line">gcc -std=c11 -Wall -Wextra -lm math_utils.c main.c -o program</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者分步编译</span></span><br><span class="line">gcc -std=c11 -Wall -c math_utils.c</span><br><span class="line">gcc -std=c11 -Wall -c main.c</span><br><span class="line">gcc math_utils.o main.o -lm -o program</span><br></pre></td></tr></table></figure></div>

<h2 id="（二）函数指针和回调函数"><a href="#（二）函数指针和回调函数" class="headerlink" title="（二）函数指针和回调函数"></a>（二）函数指针和回调函数</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数指针类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">int</span> <span class="params">(*operation_func)</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="title function_">void</span> <span class="params">(*callback_func)</span><span class="params">(<span class="type">int</span> result)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基本运算函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">subtract</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a - b; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">multiply</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; <span class="keyword">return</span> a * b; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">divide_int</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123; </span><br><span class="line">    <span class="keyword">return</span> (b != <span class="number">0</span>) ? a / b : <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回调函数示例</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print_result</span><span class="params">(<span class="type">int</span> result)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;计算结果: %d\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">log_result</span><span class="params">(<span class="type">int</span> result)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[日志] 运算完成，结果: %d\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用函数指针的计算器</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">calculator</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, operation_func op, callback_func callback)</span> &#123;</span><br><span class="line">    <span class="type">int</span> result = op(a, b);</span><br><span class="line">    <span class="keyword">if</span> (callback != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        callback(result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数指针数组</span></span><br><span class="line">operation_func operations[] = &#123;add, subtract, multiply, divide_int&#125;;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* operation_names[] = &#123;<span class="string">&quot;加法&quot;</span>, <span class="string">&quot;减法&quot;</span>, <span class="string">&quot;乘法&quot;</span>, <span class="string">&quot;除法&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高阶函数：对数组应用操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">apply_operation</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> size, <span class="type">int</span> (*transform)(<span class="type">int</span>))</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        arr[i] = transform(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 变换函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">double_value</span><span class="params">(<span class="type">int</span> x)</span> &#123; <span class="keyword">return</span> x * <span class="number">2</span>; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">square_value</span><span class="params">(<span class="type">int</span> x)</span> &#123; <span class="keyword">return</span> x * x; &#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">increment</span><span class="params">(<span class="type">int</span> x)</span> &#123; <span class="keyword">return</span> x + <span class="number">1</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 函数指针和回调函数演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本函数指针使用</span></span><br><span class="line">    operation_func op = add;</span><br><span class="line">    <span class="type">int</span> result = op(<span class="number">5</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;使用函数指针: 5 + 3 = %d\n&quot;</span>, result);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用回调函数的计算器</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n回调函数演示:\n&quot;</span>);</span><br><span class="line">    calculator(<span class="number">10</span>, <span class="number">4</span>, subtract, print_result);</span><br><span class="line">    calculator(<span class="number">6</span>, <span class="number">7</span>, multiply, log_result);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 函数指针数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n函数指针数组演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> a = <span class="number">12</span>, b = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> res = operations[i](a, b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s: %d\n&quot;</span>, operation_names[i], res);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 高阶函数演示</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n高阶函数演示:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> numbers[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">    <span class="type">int</span> size = <span class="keyword">sizeof</span>(numbers) / <span class="keyword">sizeof</span>(numbers[<span class="number">0</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;原始数组: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, numbers[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 应用不同的变换</span></span><br><span class="line">    apply_operation(numbers, size, double_value);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;翻倍后: &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, numbers[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、实践项目：学生管理系统（函数版）"><a href="#四、实践项目：学生管理系统（函数版）" class="headerlink" title="四、实践项目：学生管理系统（函数版）"></a>四、实践项目：学生管理系统（函数版）</h1><p>让我们创建一个使用函数模块化设计的学生管理系统：</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_STUDENTS 100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_NAME_LENGTH 50</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 学生结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="type">char</span> name[MAX_NAME_LENGTH];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">float</span> score;</span><br><span class="line">&#125; Student;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局学生数组和计数器</span></span><br><span class="line">Student students[MAX_STUDENTS];</span><br><span class="line"><span class="type">int</span> student_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">add_student</span><span class="params">(<span class="type">int</span> id, <span class="type">const</span> <span class="type">char</span>* name, <span class="type">int</span> age, <span class="type">float</span> score)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">remove_student</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">Student* <span class="title function_">find_student</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display_all_students</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">display_student</span><span class="params">(<span class="type">const</span> Student* student)</span>;</span><br><span class="line"><span class="type">float</span> <span class="title function_">calculate_average_score</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">Student* <span class="title function_">find_top_student</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_students_by_score</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">save_to_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename)</span>;</span><br><span class="line"><span class="type">bool</span> <span class="title function_">load_from_file</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* filename)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_menu</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">get_user_choice</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数实现</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">add_student</span><span class="params">(<span class="type">int</span> id, <span class="type">const</span> <span class="type">char</span>* name, <span class="type">int</span> age, <span class="type">float</span> score)</span> &#123;</span><br><span class="line">    <span class="comment">// 检查是否已满</span></span><br><span class="line">    <span class="keyword">if</span> (student_count &gt;= MAX_STUDENTS) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误：学生数量已达上限\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查ID是否已存在</span></span><br><span class="line">    <span class="keyword">if</span> (find_student(id) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;错误：学号 %d 已存在\n&quot;</span>, id);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加学生</span></span><br><span class="line">    students[student_count].id = id;</span><br><span class="line">    <span class="built_in">strncpy</span>(students[student_count].name, name, MAX_NAME_LENGTH - <span class="number">1</span>);</span><br><span class="line">    students[student_count].name[MAX_NAME_LENGTH - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    students[student_count].age = age;</span><br><span class="line">    students[student_count].score = score;</span><br><span class="line">    student_count++;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;成功添加学生：%s\n&quot;</span>, name);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student* <span class="title function_">find_student</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student_count; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (students[i].id == id) &#123;</span><br><span class="line">            <span class="keyword">return</span> &amp;students[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display_student</span><span class="params">(<span class="type">const</span> Student* student)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (student == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学号: %d, 姓名: %s, 年龄: %d, 成绩: %.1f\n&quot;</span>,</span><br><span class="line">           student-&gt;id, student-&gt;name, student-&gt;age, student-&gt;score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">display_all_students</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (student_count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;暂无学生记录\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 所有学生信息 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%-6s %-20s %-6s %-6s\n&quot;</span>, <span class="string">&quot;学号&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;年龄&quot;</span>, <span class="string">&quot;成绩&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;----------------------------------------\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student_count; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%-6d %-20s %-6d %-6.1f\n&quot;</span>,</span><br><span class="line">               students[i].id, students[i].name, </span><br><span class="line">               students[i].age, students[i].score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">calculate_average_score</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (student_count == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0.0f</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="type">float</span> total = <span class="number">0.0f</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student_count; i++) &#123;</span><br><span class="line">        total += students[i].score;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> total / student_count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_menu</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n=== 学生管理系统 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. 添加学生\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;2. 查找学生\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;3. 显示所有学生\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;4. 计算平均分\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;5. 按成绩排序\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0. 退出\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请选择操作: &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">get_user_choice</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> choice;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">    <span class="keyword">return</span> choice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简化的排序函数（冒泡排序）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_students_by_score</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; student_count - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; student_count - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (students[j].score &lt; students[j + <span class="number">1</span>].score) &#123;</span><br><span class="line">                <span class="comment">// 交换学生记录</span></span><br><span class="line">                Student temp = students[j];</span><br><span class="line">                students[j] = students[j + <span class="number">1</span>];</span><br><span class="line">                students[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;学生已按成绩降序排列\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 添加一些示例数据</span></span><br><span class="line">    add_student(<span class="number">1001</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">20</span>, <span class="number">85.5</span>);</span><br><span class="line">    add_student(<span class="number">1002</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">19</span>, <span class="number">92.0</span>);</span><br><span class="line">    add_student(<span class="number">1003</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">21</span>, <span class="number">78.5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> choice;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        show_menu();</span><br><span class="line">        choice = get_user_choice();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> (choice) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>: &#123;</span><br><span class="line">                <span class="type">int</span> id, age;</span><br><span class="line">                <span class="type">char</span> name[MAX_NAME_LENGTH];</span><br><span class="line">                <span class="type">float</span> score;</span><br><span class="line">                </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入学号: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入姓名: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入年龄: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;age);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入成绩: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;score);</span><br><span class="line">                </span><br><span class="line">                add_student(id, name, age, score);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: &#123;</span><br><span class="line">                <span class="type">int</span> id;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入要查找的学号: &quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;id);</span><br><span class="line">                </span><br><span class="line">                Student* student = find_student(id);</span><br><span class="line">                <span class="keyword">if</span> (student != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;找到学生: &quot;</span>);</span><br><span class="line">                    display_student(student);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;未找到学号为 %d 的学生\n&quot;</span>, id);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                display_all_students();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;平均成绩: %.2f\n&quot;</span>, calculate_average_score());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                sort_students_by_score();</span><br><span class="line">                display_all_students();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;感谢使用学生管理系统！\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;无效选择，请重新输入\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (choice != <span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、总结与下一步"><a href="#五、总结与下一步" class="headerlink" title="五、总结与下一步"></a>五、总结与下一步</h1><h2 id="（一）本文重点回顾"><a href="#（一）本文重点回顾" class="headerlink" title="（一）本文重点回顾"></a>（一）本文重点回顾</h2><p>通过本文的学习，您已经掌握了：</p>
<p><strong>函数设计原则：</strong></p>
<ul>
<li>单一职责、开放封闭等设计原则</li>
<li>参数传递机制的深入理解</li>
<li>错误处理的最佳实践</li>
</ul>
<p><strong>递归编程：</strong></p>
<ul>
<li>递归的基本概念和应用场景</li>
<li>经典递归算法的实现</li>
<li>递归优化技巧</li>
</ul>
<p><strong>作用域和生命周期：</strong></p>
<ul>
<li>变量的作用域规则</li>
<li>不同存储类别的特点</li>
<li>内存管理基础</li>
</ul>
<p><strong>模块化编程：</strong></p>
<ul>
<li>头文件和源文件的组织</li>
<li>函数指针和回调函数</li>
<li>代码复用和维护性</li>
</ul>
<h2 id="（二）学习建议"><a href="#（二）学习建议" class="headerlink" title="（二）学习建议"></a>（二）学习建议</h2><ol>
<li><strong>多练习函数设计</strong>：尝试将复杂问题分解为简单函数</li>
<li><strong>理解递归思维</strong>：从简单的递归开始，逐步挑战复杂问题</li>
<li><strong>注意代码组织</strong>：养成良好的模块化编程习惯</li>
<li><strong>实践项目开发</strong>：通过完整项目巩固所学知识</li>
</ol>
<a class="btn-beautify blue" href="/2025/08/10/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E6%95%B0%E7%BB%84%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%9A%84%E8%89%BA%E6%9C%AF/" title="下一篇：数组与字符串深度解析"><i class="far fa-hand-point-right"></i><span>下一篇：数组与字符串深度解析</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《代码大全》- Steve McConnell</li>
<li>《重构：改善既有代码的设计》- Martin Fowler</li>
<li>《设计模式》- Gang of Four</li>
<li>《C陷阱与缺陷》- Andrew Koenig</li>
<li>C语言函数库参考：<a href="https://en.cppreference.com/w/c/header">https://en.cppreference.com/w/c/header</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第2篇</strong><br>在掌握了C语言基础语法后，本文将深入探讨函数设计和模块化编程，这是编写高质量、可维护代码的关键技能。</p>
</div>

<h1 id="前言]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="函数设计" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%87%BD%E6%95%B0%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="模块化编程" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BC%96%E7%A8%8B/"/>
    
      <category term="代码组织" scheme="https://hexo.blog.uwakeme.tech/tags/%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87/"/>
    
      <category term="软件工程" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习】C语言完全入门指南：现代C编程的第一步]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/11/%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91C%E8%AF%AD%E8%A8%80%E5%AE%8C%E5%85%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E7%8E%B0%E4%BB%A3C%E7%BC%96%E7%A8%8B%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/11/学习/【学习】C语言完全入门指南：现代C编程的第一步/</id>
    <published>2025-08-11T02:00:00.000Z</published>
    <updated>2025-08-11T07:51:41.160Z</updated>
    <content type="html"><![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第1篇</strong><br>本系列将带你从零开始，系统掌握C语言编程的各个方面，从基础语法到高级特性，从简单程序到复杂项目。</p>
</div>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>C语言诞生于1972年，由Dennis Ritchie在贝尔实验室开发。作为一门接近底层的高级编程语言，C语言以其简洁、高效、可移植的特点，成为了现代编程语言的基石。无论是操作系统内核、嵌入式系统，还是高性能计算，C语言都发挥着不可替代的作用。</p>
<p><strong>为什么选择C语言作为编程入门？</strong></p>
<ol>
<li><strong>基础性强</strong>：掌握C语言后，学习其他编程语言会变得容易</li>
<li><strong>性能优秀</strong>：直接编译成机器码，执行效率高</li>
<li><strong>应用广泛</strong>：从系统软件到嵌入式开发，应用领域极其广泛</li>
<li><strong>理解底层</strong>：帮助理解计算机的工作原理和内存管理</li>
</ol>
<p><strong>本文学习目标：</strong></p>
<ul>
<li>搭建现代C语言开发环境</li>
<li>理解C语言的发展历程和标准</li>
<li>掌握基本语法和数据类型</li>
<li>学会编译和调试程序</li>
<li>编写第一个完整的C程序</li>
</ul>
<a class="btn-beautify green" href="https://github.com/topics/c-programming" title="查看C语言项目"><i class="far fa-hand-point-right"></i><span>查看C语言项目</span></a>

<h1 id="一、C语言发展历程与标准"><a href="#一、C语言发展历程与标准" class="headerlink" title="一、C语言发展历程与标准"></a>一、C语言发展历程与标准</h1><h2 id="（一）C语言的演进历史"><a href="#（一）C语言的演进历史" class="headerlink" title="（一）C语言的演进历史"></a>（一）C语言的演进历史</h2><h3 id="1-历史发展脉络"><a href="#1-历史发展脉络" class="headerlink" title="1. 历史发展脉络"></a>1. 历史发展脉络</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C语言发展时间线</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1972年 - C语言诞生（Dennis Ritchie，贝尔实验室）</span></span><br><span class="line"><span class="comment">1978年 - 《The C Programming Language》出版（K&amp;R C）</span></span><br><span class="line"><span class="comment">1989年 - ANSI C标准发布（C89/C90）</span></span><br><span class="line"><span class="comment">1999年 - C99标准发布，增加了许多新特性</span></span><br><span class="line"><span class="comment">2011年 - C11标准发布，引入多线程支持</span></span><br><span class="line"><span class="comment">2018年 - C18标准发布，主要是错误修正</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 展示不同标准的特性差异</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span>    <span class="comment">// C99引入的布尔类型支持</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span>     <span class="comment">// C99引入的固定宽度整数类型</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// C99特性：变长数组（VLA）</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[n];  <span class="comment">// 在C89中这是不允许的</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C99特性：布尔类型</span></span><br><span class="line">    <span class="type">bool</span> is_valid = <span class="literal">true</span>;  <span class="comment">// C89中需要使用int来模拟布尔值</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C99特性：固定宽度整数类型</span></span><br><span class="line">    <span class="type">int32_t</span> precise_int = <span class="number">42</span>;  <span class="comment">// 确保是32位整数</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C99特性：内联变量声明</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;  <span class="comment">// C89要求在函数开头声明所有变量</span></span><br><span class="line">        <span class="built_in">array</span>[i] = i * i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;array[%d] = %d\n&quot;</span>, i, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;布尔值: %s\n&quot;</span>, is_valid ? <span class="string">&quot;true&quot;</span> : <span class="string">&quot;false&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;精确整数: %d\n&quot;</span>, precise_int);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-现代C语言的特点"><a href="#2-现代C语言的特点" class="headerlink" title="2. 现代C语言的特点"></a>2. 现代C语言的特点</h3><p><strong>C99标准的重要改进：</strong></p>
<ul>
<li><strong>变长数组（VLA）</strong>：支持运行时确定大小的数组</li>
<li><strong>内联函数</strong>：提高函数调用效率</li>
<li><strong>复数类型</strong>：支持复数运算</li>
<li><strong>布尔类型</strong>：原生支持true&#x2F;false</li>
<li><strong>单行注释</strong>：支持&#x2F;&#x2F;风格注释</li>
</ul>
<p><strong>C11标准的新特性：</strong></p>
<ul>
<li><strong>多线程支持</strong>：标准化的线程库</li>
<li><strong>原子操作</strong>：支持无锁编程</li>
<li><strong>静态断言</strong>：编译时检查</li>
<li><strong>匿名结构体和联合体</strong>：更灵活的数据组织</li>
</ul>
<h2 id="（二）选择合适的C标准"><a href="#（二）选择合适的C标准" class="headerlink" title="（二）选择合适的C标准"></a>（二）选择合适的C标准</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 编译器特性检测示例</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 检查C标准版本</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;C标准版本检测:\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __STDC_VERSION__</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;__STDC_VERSION__ = %ld\n&quot;</span>, __STDC_VERSION__);</span><br><span class="line">    </span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> __STDC_VERSION__ &gt;= 201112L</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;支持C11标准\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> __STDC_VERSION__ &gt;= 199901L</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;支持C99标准\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">elif</span> __STDC_VERSION__ &gt;= 199409L</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;支持C94标准\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;支持C89/C90标准\n&quot;</span>);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;编译器可能不完全支持标准C\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查编译器特定特性</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> __GNUC__</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;使用GCC编译器，版本: %d.%d.%d\n&quot;</span>, </span><br><span class="line">           __GNUC__, __GNUC_MINOR__, __GNUC_PATCHLEVEL__);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _MSC_VER</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;使用Microsoft Visual C++编译器\n&quot;</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、开发环境搭建"><a href="#二、开发环境搭建" class="headerlink" title="二、开发环境搭建"></a>二、开发环境搭建</h1><h2 id="（一）多平台开发环境选择"><a href="#（一）多平台开发环境选择" class="headerlink" title="（一）多平台开发环境选择"></a>（一）多平台开发环境选择</h2><h3 id="1-Windows平台推荐方案"><a href="#1-Windows平台推荐方案" class="headerlink" title="1. Windows平台推荐方案"></a>1. Windows平台推荐方案</h3><p><strong>方案一：Visual Studio Code + MinGW-w64（推荐初学者）</strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装步骤（使用包管理器）</span></span><br><span class="line"><span class="comment"># 1. 安装Chocolatey包管理器（以管理员身份运行PowerShell）</span></span><br><span class="line">Set-ExecutionPolicy Bypass -Scope Process -Force</span><br><span class="line">[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072</span><br><span class="line">iex ((New-Object System.Net.WebClient).DownloadString(&#x27;https://chocolatey.org/install.ps1&#x27;))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 安装开发工具</span></span><br><span class="line">choco install mingw -y          <span class="comment"># 安装MinGW-w64编译器</span></span><br><span class="line">choco install vscode -y         <span class="comment"># 安装VS Code</span></span><br><span class="line">choco install git -y            <span class="comment"># 安装Git版本控制</span></span><br></pre></td></tr></table></figure>

<p><strong>VS Code配置文件示例：</strong></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .vscode/tasks.json - 编译任务配置</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;gcc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-std=c11&quot;</span><span class="punctuation">,</span>           <span class="comment">// 使用C11标准</span></span><br><span class="line">                <span class="string">&quot;-Wall&quot;</span><span class="punctuation">,</span>              <span class="comment">// 启用所有警告</span></span><br><span class="line">                <span class="string">&quot;-Wextra&quot;</span><span class="punctuation">,</span>            <span class="comment">// 启用额外警告</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span>                 <span class="comment">// 生成调试信息</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span>            <span class="comment">// 当前文件</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span>                 <span class="comment">// 输出文件</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>方案二：Dev-C++（简单易用）</strong></p>
<p>Dev-C++是一个轻量级的C&#x2F;C++集成开发环境，特别适合初学者：</p>
<ol>
<li>下载地址：<a href="https://sourceforge.net/projects/orwelldevcpp/">https://sourceforge.net/projects/orwelldevcpp/</a></li>
<li>安装后即可使用，无需额外配置</li>
<li>内置GCC编译器和调试器</li>
<li>界面简洁，功能完整</li>
</ol>
<h3 id="2-Linux平台配置"><a href="#2-Linux平台配置" class="headerlink" title="2. Linux平台配置"></a>2. Linux平台配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu/Debian系统</span></span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install build-essential  <span class="comment"># 安装GCC工具链</span></span><br><span class="line"><span class="built_in">sudo</span> apt install gdb             <span class="comment"># 安装调试器</span></span><br><span class="line"><span class="built_in">sudo</span> apt install valgrind        <span class="comment"># 安装内存检查工具</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CentOS/RHEL系统</span></span><br><span class="line"><span class="built_in">sudo</span> yum groupinstall <span class="string">&quot;Development Tools&quot;</span></span><br><span class="line"><span class="built_in">sudo</span> yum install gdb valgrind</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">gcc --version    <span class="comment"># 检查GCC版本</span></span><br><span class="line">gdb --version    <span class="comment"># 检查GDB版本</span></span><br></pre></td></tr></table></figure>

<h3 id="3-macOS平台配置"><a href="#3-macOS平台配置" class="headerlink" title="3. macOS平台配置"></a>3. macOS平台配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Xcode命令行工具</span></span><br><span class="line">xcode-select --install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或使用Homebrew安装</span></span><br><span class="line">brew install gcc</span><br><span class="line">brew install gdb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装</span></span><br><span class="line">gcc --version</span><br></pre></td></tr></table></figure>

<h2 id="（二）第一个C程序"><a href="#（二）第一个C程序" class="headerlink" title="（二）第一个C程序"></a>（二）第一个C程序</h2><h3 id="1-Hello-World程序详解"><a href="#1-Hello-World程序详解" class="headerlink" title="1. Hello World程序详解"></a>1. Hello World程序详解</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hello_world.c - 详细注释版本</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>    <span class="comment">// 预处理指令：包含标准输入输出库</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * main函数：程序的入口点</span></span><br><span class="line"><span class="comment"> * 返回值：int类型，0表示程序正常结束，非0表示异常</span></span><br><span class="line"><span class="comment"> * 参数：暂时不使用参数，写成void或空括号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// printf函数：格式化输出函数，定义在stdio.h中</span></span><br><span class="line">    <span class="comment">// \n：换行符，让输出后光标移到下一行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello, World!\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// return语句：返回值给操作系统</span></span><br><span class="line">    <span class="comment">// 0：表示程序成功执行完毕</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-编译和运行过程详解"><a href="#2-编译和运行过程详解" class="headerlink" title="2. 编译和运行过程详解"></a>2. 编译和运行过程详解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译过程的四个阶段</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 预处理（Preprocessing）</span></span><br><span class="line">gcc -E hello_world.c -o hello_world.i</span><br><span class="line"><span class="comment"># 处理#include、#define等预处理指令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 编译（Compilation）</span></span><br><span class="line">gcc -S hello_world.i -o hello_world.s</span><br><span class="line"><span class="comment"># 将预处理后的代码转换为汇编代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 汇编（Assembly）</span></span><br><span class="line">gcc -c hello_world.s -o hello_world.o</span><br><span class="line"><span class="comment"># 将汇编代码转换为机器码（目标文件）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 链接（Linking）</span></span><br><span class="line">gcc hello_world.o -o hello_world</span><br><span class="line"><span class="comment"># 将目标文件与库文件链接生成可执行文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一步完成编译（常用方式）</span></span><br><span class="line">gcc -std=c11 -Wall -Wextra -g hello_world.c -o hello_world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行程序</span></span><br><span class="line">./hello_world    <span class="comment"># Linux/macOS</span></span><br><span class="line">hello_world.exe  <span class="comment"># Windows</span></span><br></pre></td></tr></table></figure>

<h3 id="3-编译选项详解"><a href="#3-编译选项详解" class="headerlink" title="3. 编译选项详解"></a>3. 编译选项详解</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 常用编译选项</span></span><br><span class="line">gcc -std=c11      <span class="comment"># 指定C标准版本</span></span><br><span class="line">    -Wall         <span class="comment"># 启用常见警告</span></span><br><span class="line">    -Wextra       <span class="comment"># 启用额外警告</span></span><br><span class="line">    -Werror       <span class="comment"># 将警告视为错误</span></span><br><span class="line">    -g            <span class="comment"># 生成调试信息</span></span><br><span class="line">    -O2           <span class="comment"># 启用优化（发布版本）</span></span><br><span class="line">    -DDEBUG       <span class="comment"># 定义宏DEBUG</span></span><br><span class="line">    -I./include   <span class="comment"># 指定头文件搜索路径</span></span><br><span class="line">    -L./lib       <span class="comment"># 指定库文件搜索路径</span></span><br><span class="line">    -lm           <span class="comment"># 链接数学库</span></span><br><span class="line">    hello_world.c <span class="comment"># 源文件</span></span><br><span class="line">    -o hello_world <span class="comment"># 输出文件名</span></span><br></pre></td></tr></table></figure>

<h1 id="三、C语言基础语法"><a href="#三、C语言基础语法" class="headerlink" title="三、C语言基础语法"></a>三、C语言基础语法</h1><h2 id="（一）数据类型系统"><a href="#（一）数据类型系统" class="headerlink" title="（一）数据类型系统"></a>（一）数据类型系统</h2><h3 id="1-基本数据类型详解"><a href="#1-基本数据类型详解" class="headerlink" title="1. 基本数据类型详解"></a>1. 基本数据类型详解</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span>   <span class="comment">// C99标准：固定宽度整数类型</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span>   <span class="comment">// 数据类型的取值范围</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;float.h&gt;</span>    <span class="comment">// 浮点数的精度信息</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== C语言数据类型详解 ===\n\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 整数类型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数类型:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char:      %zu字节, 范围: %d 到 %d\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">char</span>), CHAR_MIN, CHAR_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;short:     %zu字节, 范围: %d 到 %d\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">short</span>), SHRT_MIN, SHRT_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int:       %zu字节, 范围: %d 到 %d\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">int</span>), INT_MIN, INT_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long:      %zu字节, 范围: %ld 到 %ld\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">long</span>), LONG_MIN, LONG_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long long: %zu字节, 范围: %lld 到 %lld\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">long</span>), LLONG_MIN, LLONG_MAX);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 无符号整数类型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n无符号整数类型:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned char:      %zu字节, 最大值: %u\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">char</span>), UCHAR_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned short:     %zu字节, 最大值: %u\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">short</span>), USHRT_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned int:       %zu字节, 最大值: %u\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">int</span>), UINT_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned long:      %zu字节, 最大值: %lu\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">long</span>), ULONG_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;unsigned long long: %zu字节, 最大值: %llu\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>), ULLONG_MAX);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 浮点数类型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n浮点数类型:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;float:       %zu字节, 精度: %d位, 范围: %e 到 %e\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">float</span>), FLT_DIG, FLT_MIN, FLT_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double:      %zu字节, 精度: %d位, 范围: %e 到 %e\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">double</span>), DBL_DIG, DBL_MIN, DBL_MAX);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long double: %zu字节, 精度: %d位, 范围: %Le 到 %Le\n&quot;</span>, </span><br><span class="line">           <span class="keyword">sizeof</span>(<span class="type">long</span> <span class="type">double</span>), LDBL_DIG, LDBL_MIN, LDBL_MAX);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C99固定宽度整数类型（推荐使用）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nC99固定宽度整数类型:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int8_t:   %zu字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int8_t</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int16_t:  %zu字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int16_t</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int32_t:  %zu字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int32_t</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int64_t:  %zu字节\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">int64_t</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-变量声明和初始化"><a href="#2-变量声明和初始化" class="headerlink" title="2. 变量声明和初始化"></a>2. 变量声明和初始化</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span>  <span class="comment">// C99布尔类型支持</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 基本变量声明和初始化</span></span><br><span class="line">    <span class="type">int</span> age = <span class="number">25</span>;                    <span class="comment">// 整数变量</span></span><br><span class="line">    <span class="type">float</span> height = <span class="number">175.5f</span>;           <span class="comment">// 单精度浮点数（注意f后缀）</span></span><br><span class="line">    <span class="type">double</span> weight = <span class="number">68.5</span>;            <span class="comment">// 双精度浮点数</span></span><br><span class="line">    <span class="type">char</span> grade = <span class="string">&#x27;A&#x27;</span>;                <span class="comment">// 字符变量</span></span><br><span class="line">    <span class="type">bool</span> is_student = <span class="literal">true</span>;          <span class="comment">// C99布尔类型</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 常量声明（C99特性）</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> MAX_STUDENTS = <span class="number">100</span>;    <span class="comment">// 编译时常量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> PI = <span class="number">3.14159265359</span>; <span class="comment">// 数学常量</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 变量命名规范示例</span></span><br><span class="line">    <span class="type">int</span> student_count;               <span class="comment">// 下划线命名法（推荐）</span></span><br><span class="line">    <span class="type">int</span> studentCount;                <span class="comment">// 驼峰命名法</span></span><br><span class="line">    <span class="type">int</span> BUFFER_SIZE = <span class="number">1024</span>;          <span class="comment">// 常量使用大写</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 多变量声明</span></span><br><span class="line">    <span class="type">int</span> x = <span class="number">10</span>, y = <span class="number">20</span>, z = <span class="number">30</span>;      <span class="comment">// 同时声明多个变量</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 输出变量值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;个人信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;年龄: %d岁\n&quot;</span>, age);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;身高: %.1f厘米\n&quot;</span>, height);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;体重: %.1f公斤\n&quot;</span>, weight);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;等级: %c\n&quot;</span>, grade);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;是否为学生: %s\n&quot;</span>, is_student ? <span class="string">&quot;是&quot;</span> : <span class="string">&quot;否&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n常量信息:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大学生数: %d\n&quot;</span>, MAX_STUDENTS);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;圆周率: %.10f\n&quot;</span>, PI);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）运算符和表达式"><a href="#（二）运算符和表达式" class="headerlink" title="（二）运算符和表达式"></a>（二）运算符和表达式</h2><h3 id="1-算术运算符详解"><a href="#1-算术运算符详解" class="headerlink" title="1. 算术运算符详解"></a>1. 算术运算符详解</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span>  <span class="comment">// 数学函数库</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">17</span>, b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">double</span> x = <span class="number">17.0</span>, y = <span class="number">5.0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 算术运算符演示 ===\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整数运算 (a=%d, b=%d):\n&quot;</span>, a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a + b = %d\n&quot;</span>, a + b);      <span class="comment">// 加法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a - b = %d\n&quot;</span>, a - b);      <span class="comment">// 减法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a * b = %d\n&quot;</span>, a * b);      <span class="comment">// 乘法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a / b = %d\n&quot;</span>, a / b);      <span class="comment">// 整数除法（截断）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a %% b = %d\n&quot;</span>, a % b);     <span class="comment">// 取模运算</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n浮点数运算 (x=%.1f, y=%.1f):\n&quot;</span>, x, y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x + y = %.2f\n&quot;</span>, x + y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x - y = %.2f\n&quot;</span>, x - y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x * y = %.2f\n&quot;</span>, x * y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;x / y = %.2f\n&quot;</span>, x / y);    <span class="comment">// 浮点数除法</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数学函数示例</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n数学函数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sqrt(%.1f) = %.2f\n&quot;</span>, x, <span class="built_in">sqrt</span>(x));      <span class="comment">// 平方根</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pow(%.1f, %.1f) = %.2f\n&quot;</span>, x, y, <span class="built_in">pow</span>(x, y)); <span class="comment">// 幂运算</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sin(%.1f) = %.2f\n&quot;</span>, x, <span class="built_in">sin</span>(x));        <span class="comment">// 正弦函数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;log(%.1f) = %.2f\n&quot;</span>, x, <span class="built_in">log</span>(x));        <span class="comment">// 自然对数</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运算符优先级演示</span></span><br><span class="line">    <span class="type">int</span> result = a + b * <span class="number">2</span> - <span class="number">3</span>;  <span class="comment">// 乘法优先于加减法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n运算符优先级:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d + %d * 2 - 3 = %d\n&quot;</span>, a, b, result);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;等价于: %d + (%d * 2) - 3 = %d\n&quot;</span>, a, b, a + (b * <span class="number">2</span>) - <span class="number">3</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note warning flat"><p><strong>编译提示</strong>：使用数学函数时，在Linux&#x2F;macOS下编译需要链接数学库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -std=c11 -Wall -lm program.c -o program</span><br></pre></td></tr></table></figure></div>

<h1 id="四、程序控制结构"><a href="#四、程序控制结构" class="headerlink" title="四、程序控制结构"></a>四、程序控制结构</h1><h2 id="（一）条件语句"><a href="#（一）条件语句" class="headerlink" title="（一）条件语句"></a>（一）条件语句</h2><h3 id="1-if语句的各种形式"><a href="#1-if语句的各种形式" class="headerlink" title="1. if语句的各种形式"></a>1. if语句的各种形式</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数声明：判断年份是否为闰年</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_leap_year</span><span class="params">(<span class="type">int</span> year)</span>;</span><br><span class="line"><span class="type">char</span> <span class="title function_">get_grade</span><span class="params">(<span class="type">int</span> score)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> score, year;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取用户输入</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入考试分数 (0-100): &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 基本if-else语句</span></span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">0</span> &amp;&amp; score &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分数有效\n&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 嵌套if-else语句</span></span><br><span class="line">        <span class="keyword">if</span> (score &gt;= <span class="number">90</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;优秀！\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;良好\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;中等\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;及格\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;不及格\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用函数简化逻辑</span></span><br><span class="line">        <span class="type">char</span> grade = get_grade(score);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;等级: %c\n&quot;</span>, grade);</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分数无效！请输入0-100之间的数字。\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">// 异常退出</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// switch语句示例</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入年份: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;year);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (is_leap_year(year)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d年是闰年\n&quot;</span>, year);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d年不是闰年\n&quot;</span>, year);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 三元运算符（条件运算符）</span></span><br><span class="line">    <span class="type">int</span> max_score = (score &gt; <span class="number">95</span>) ? score : <span class="number">95</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;调整后的最高分: %d\n&quot;</span>, max_score);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断闰年的函数实现</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_leap_year</span><span class="params">(<span class="type">int</span> year)</span> &#123;</span><br><span class="line">    <span class="comment">// 闰年规则：能被4整除但不能被100整除，或者能被400整除</span></span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据分数返回等级的函数</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">get_grade</span><span class="params">(<span class="type">int</span> score)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (score &gt;= <span class="number">90</span>) <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">80</span>) <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">70</span>) <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (score &gt;= <span class="number">60</span>) <span class="keyword">return</span> <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）循环语句"><a href="#（二）循环语句" class="headerlink" title="（二）循环语句"></a>（二）循环语句</h2><h3 id="1-三种循环的对比和应用"><a href="#1-三种循环的对比和应用" class="headerlink" title="1. 三种循环的对比和应用"></a>1. 三种循环的对比和应用</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化随机数生成器</span></span><br><span class="line">    srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 循环语句演示 ===\n\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// for循环：适用于已知循环次数的情况</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1. for循环 - 打印乘法表:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d×%d=%2d  &quot;</span>, j, i, i * j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// while循环：适用于根据条件判断的情况</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n2. while循环 - 计算斐波那契数列:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> fib1 = <span class="number">0</span>, fib2 = <span class="number">1</span>, next;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;斐波那契数列的前10项: &quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (count &lt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, fib1);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (count == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, fib2);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            next = fib1 + fib2;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, next);</span><br><span class="line">            fib1 = fib2;</span><br><span class="line">            fib2 = next;</span><br><span class="line">        &#125;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// do-while循环：至少执行一次的情况</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n3. do-while循环 - 猜数字游戏:\n&quot;</span>);</span><br><span class="line">    <span class="type">int</span> secret = rand() % <span class="number">100</span> + <span class="number">1</span>;  <span class="comment">// 1-100之间的随机数</span></span><br><span class="line">    <span class="type">int</span> guess, attempts = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;我想了一个1-100之间的数字，你来猜猜看！\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入你的猜测: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;guess);</span><br><span class="line">        attempts++;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (guess &gt; secret) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;太大了！\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (guess &lt; secret) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;太小了！\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;恭喜你！猜对了！\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你用了 %d 次尝试。\n&quot;</span>, attempts);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (guess != secret &amp;&amp; attempts &lt; <span class="number">7</span>);  <span class="comment">// 最多7次机会</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (guess != secret) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;很遗憾，机会用完了！答案是 %d\n&quot;</span>, secret);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 循环控制语句：break和continue</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n4. 循环控制 - 寻找质数:\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;100以内的质数: &quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num = <span class="number">2</span>; num &lt;= <span class="number">100</span>; num++) &#123;</span><br><span class="line">        <span class="type">bool</span> is_prime = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查是否为质数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= num; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                is_prime = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">// 找到因子，跳出内层循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (is_prime) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, num);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、调试技巧和错误处理"><a href="#五、调试技巧和错误处理" class="headerlink" title="五、调试技巧和错误处理"></a>五、调试技巧和错误处理</h1><h2 id="（一）常见编译错误"><a href="#（一）常见编译错误" class="headerlink" title="（一）常见编译错误"></a>（一）常见编译错误</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 常见错误示例和修正方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误1：语法错误</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main() &#123;</span></span><br><span class="line"><span class="comment">    printf(&quot;Hello World&quot;)  // 缺少分号</span></span><br><span class="line"><span class="comment">    return 0</span></span><br><span class="line"><span class="comment">&#125;  // 缺少分号</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确写法：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);  <span class="comment">// 添加分号和换行符</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                 <span class="comment">// 添加分号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误2：未声明的变量</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main() &#123;</span></span><br><span class="line"><span class="comment">    printf(&quot;%d\n&quot;, x);  // x未声明</span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确写法：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">42</span>;           <span class="comment">// 先声明并初始化</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误3：类型不匹配</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">int main() &#123;</span></span><br><span class="line"><span class="comment">    int x = 3.14;         // 将浮点数赋给整数</span></span><br><span class="line"><span class="comment">    printf(&quot;%f\n&quot;, x);    // 格式说明符不匹配</span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确写法：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">double</span> x = <span class="number">3.14</span>;      <span class="comment">// 使用正确的类型</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, x);  <span class="comment">// 使用正确的格式说明符</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）调试技巧"><a href="#（二）调试技巧" class="headerlink" title="（二）调试技巧"></a>（二）调试技巧</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;assert.h&gt;</span>  <span class="comment">// 断言库</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调试宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> DBG_PRINT(fmt, ...) \</span></span><br><span class="line"><span class="meta">        printf(<span class="string">&quot;[DEBUG] %s:%d: &quot;</span> fmt, __FILE__, __LINE__, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="meta">#<span class="keyword">define</span> DBG_PRINT(fmt, ...)  <span class="comment">// 发布版本中不输出调试信息</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例函数：计算阶乘</span></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">factorial</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="comment">// 使用断言检查输入参数</span></span><br><span class="line">    assert(n &gt;= <span class="number">0</span>);  <span class="comment">// 确保输入非负</span></span><br><span class="line">    </span><br><span class="line">    DBG_PRINT(<span class="string">&quot;计算 %d 的阶乘\n&quot;</span>, n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) &#123;</span><br><span class="line">        DBG_PRINT(<span class="string">&quot;基础情况: %d! = 1\n&quot;</span>, n);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        result *= i;</span><br><span class="line">        DBG_PRINT(<span class="string">&quot;步骤 %d: result = %lld\n&quot;</span>, i, result);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;=== 调试技巧演示 ===\n&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 正常情况测试</span></span><br><span class="line">    <span class="type">int</span> n = <span class="number">5</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> result = factorial(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d! = %lld\n&quot;</span>, n, result);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 边界情况测试</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;0! = %lld\n&quot;</span>, factorial(<span class="number">0</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1! = %lld\n&quot;</span>, factorial(<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 错误情况测试（会触发断言）</span></span><br><span class="line">    <span class="comment">// factorial(-1);  // 取消注释会导致程序终止</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<div class="note info flat"><p><strong>编译调试版本</strong>：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编译调试版本（包含调试信息）</span></span><br><span class="line">gcc -std=c11 -Wall -Wextra -g -DDEBUG program.c -o program_debug</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译发布版本（优化，无调试信息）</span></span><br><span class="line">gcc -std=c11 -Wall -Wextra -O2 program.c -o program_release</span><br></pre></td></tr></table></figure></div>

<h1 id="六、学习路线图"><a href="#六、学习路线图" class="headerlink" title="六、学习路线图"></a>六、学习路线图</h1><h2 id="（一）后续学习计划"><a href="#（一）后续学习计划" class="headerlink" title="（一）后续学习计划"></a>（一）后续学习计划</h2><pre class="mermaid">graph TD
    A[第1篇: C语言完全入门指南] --> B[第2篇: 函数与模块化编程]
    B --> C[第3篇: 数组与字符串深度解析]
    C --> D[第4篇: 指针与内存管理]
    D --> E[第5篇: 结构体与联合体]
    E --> F[第6篇: 文件操作与数据持久化]
    F --> G[第7篇: 高级特性与现代编程]
    G --> H[第8篇: 项目实战]
    
    style A fill:#e1f5fe
    style B fill:#f3e5f5
    style C fill:#e8f5e8
    style D fill:#fff3e0
    style E fill:#fce4ec
    style F fill:#f1f8e9
    style G fill:#e0f2f1
    style H fill:#fff8e1</pre>

<h2 id="（二）实践建议"><a href="#（二）实践建议" class="headerlink" title="（二）实践建议"></a>（二）实践建议</h2><p><strong>每日练习计划：</strong></p>
<ol>
<li><strong>第1-3天</strong>：熟练掌握基本语法和数据类型</li>
<li><strong>第4-7天</strong>：练习条件语句和循环语句</li>
<li><strong>第8-14天</strong>：编写小程序，如计算器、猜数字游戏等</li>
<li><strong>第15-21天</strong>：准备学习下一篇文章内容</li>
</ol>
<p><strong>推荐练习项目：</strong></p>
<ul>
<li>简单计算器</li>
<li>温度转换程序</li>
<li>成绩管理系统（基础版）</li>
<li>数字游戏集合</li>
</ul>
<a class="btn-beautify blue" href="#" title="下一篇：函数与模块化编程"><i class="far fa-hand-point-right"></i><span>下一篇：函数与模块化编程</span></a>

<hr>
<p><strong>参考资料：</strong></p>
<ul>
<li>《C程序设计语言》（第2版）- Brian W. Kernighan &amp; Dennis M. Ritchie</li>
<li>《C Primer Plus》（第6版）- Stephen Prata</li>
<li>《现代C语言程序设计》- K. N. King</li>
<li>ISO&#x2F;IEC 9899:2018 - C语言国际标准</li>
<li>GCC官方文档：<a href="https://gcc.gnu.org/onlinedocs/">https://gcc.gnu.org/onlinedocs/</a></li>
<li>C语言参考手册：<a href="https://en.cppreference.com/w/c">https://en.cppreference.com/w/c</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<div class="note info flat"><p><strong>C语言系统学习系列 - 第1篇</strong><br>本系列将带你从零开始，系统掌握C语言编程的各个方面，从基础语法到高级特性，从简单程序到复杂项目。</p>
</div>

<h1 id="前言">]]>
    </summary>
    
      <category term="C语言" scheme="https://hexo.blog.uwakeme.tech/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="编程入门" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
    
      <category term="基础语法" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
      <category term="环境搭建" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
      <category term="现代C语言" scheme="https://hexo.blog.uwakeme.tech/tags/%E7%8E%B0%E4%BB%A3C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="学习" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】JavaScript节流与防抖详解：性能优化的核心技术]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/06/%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96%E8%AF%A6%E8%A7%A3%EF%BC%9A%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/06/前端/【前端】JavaScript节流与防抖详解：性能优化的核心技术/</id>
    <published>2025-08-05T16:00:00.000Z</published>
    <updated>2025-08-06T06:36:38.268Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在前端开发中，我们经常遇到需要处理高频事件的场景，比如用户快速点击按钮、滚动页面、调整窗口大小、输入搜索关键词等。如果不加以控制，这些高频事件会导致函数被频繁调用，造成性能问题，甚至可能导致页面卡顿或浏览器崩溃。</p>
<p>节流（Throttle）和防抖（Debounce）是两种重要的性能优化技术，它们通过控制函数的执行频率来解决高频事件带来的性能问题。虽然这两种技术都能限制函数的执行次数，但它们的实现原理和适用场景有所不同。</p>
<p>本文将详细介绍节流和防抖的概念、实现原理、使用场景，并提供完整的代码示例和最佳实践。</p>
<h1 id="一、防抖（Debounce）详解"><a href="#一、防抖（Debounce）详解" class="headerlink" title="一、防抖（Debounce）详解"></a>一、防抖（Debounce）详解</h1><h2 id="（一）什么是防抖"><a href="#（一）什么是防抖" class="headerlink" title="（一）什么是防抖"></a>（一）什么是防抖</h2><p>防抖是指在事件被触发n秒后再执行回调函数，如果在这n秒内又被触发，则重新计时。简单来说，防抖就是”等你不触发了，我再执行”。</p>
<p><strong>生活中的比喻：</strong> 就像电梯等人一样，如果有人进电梯，电梯会等待几秒钟，如果在等待期间又有人进来，就重新开始等待，直到没有人进来了才关门启动。</p>
<h2 id="（二）防抖的实现原理"><a href="#（二）防抖的实现原理" class="headerlink" title="（二）防抖的实现原理"></a>（二）防抖的实现原理</h2><p>防抖的核心思想是使用定时器延迟执行函数，如果在延迟期间再次触发事件，就清除之前的定时器并重新设置。</p>
<h3 id="基础版防抖实现"><a href="#基础版防抖实现" class="headerlink" title="基础版防抖实现"></a>基础版防抖实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖函数 - 基础版</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; func 需要防抖的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delay 延迟时间（毫秒）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125; 防抖后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId; <span class="comment">// 存储定时器ID</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="comment">// 清除之前的定时器</span></span><br><span class="line">        <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置新的定时器</span></span><br><span class="line">        timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args); <span class="comment">// 保持this指向和参数传递</span></span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> searchInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;search&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> handleSearch = <span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;执行搜索:&#x27;</span>, event.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">    <span class="comment">// 这里可以发送AJAX请求</span></span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">searchInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, handleSearch);</span><br></pre></td></tr></table></figure>

<h3 id="增强版防抖实现"><a href="#增强版防抖实现" class="headerlink" title="增强版防抖实现"></a>增强版防抖实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖函数 - 增强版</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; func 需要防抖的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delay 延迟时间（毫秒）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options 配置选项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">boolean</span>&#125; options.immediate 是否立即执行（第一次触发时）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; options.maxWait 最大等待时间，超过此时间强制执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125; 防抖后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">func, delay, options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId;</span><br><span class="line">    <span class="keyword">let</span> lastCallTime;</span><br><span class="line">    <span class="keyword">let</span> lastInvokeTime = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> &#123; immediate = <span class="literal">false</span>, maxWait &#125; = options;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">invokeFunc</span>(<span class="params">time</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> args = lastArgs;</span><br><span class="line">        <span class="keyword">const</span> thisArg = lastThis;</span><br><span class="line">        </span><br><span class="line">        lastArgs = lastThis = <span class="literal">undefined</span>;</span><br><span class="line">        lastInvokeTime = time;</span><br><span class="line">        <span class="keyword">return</span> func.<span class="title function_">apply</span>(thisArg, args);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">shouldInvoke</span>(<span class="params">time</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> timeSinceLastCall = time - lastCallTime;</span><br><span class="line">        <span class="keyword">const</span> timeSinceLastInvoke = time - lastInvokeTime;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 首次调用或者超过延迟时间或者超过最大等待时间</span></span><br><span class="line">        <span class="keyword">return</span> (lastCallTime === <span class="literal">undefined</span> || </span><br><span class="line">                timeSinceLastCall &gt;= delay || </span><br><span class="line">                (maxWait &amp;&amp; timeSinceLastInvoke &gt;= maxWait));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> lastArgs, lastThis;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">debounced</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> time = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="keyword">const</span> isInvoking = <span class="title function_">shouldInvoke</span>(time);</span><br><span class="line">        </span><br><span class="line">        lastArgs = args;</span><br><span class="line">        lastThis = <span class="variable language_">this</span>;</span><br><span class="line">        lastCallTime = time;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (isInvoking) &#123;</span><br><span class="line">            <span class="keyword">if</span> (timeoutId === <span class="literal">undefined</span>) &#123;</span><br><span class="line">                <span class="comment">// 立即执行模式</span></span><br><span class="line">                <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">invokeFunc</span>(time);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (maxWait) &#123;</span><br><span class="line">                <span class="comment">// 有最大等待时间的情况</span></span><br><span class="line">                timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    timeoutId = <span class="literal">undefined</span>;</span><br><span class="line">                    <span class="keyword">if</span> (!immediate) &#123;</span><br><span class="line">                        <span class="title function_">invokeFunc</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, delay);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (immediate &amp;&amp; lastInvokeTime === <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="title function_">invokeFunc</span>(time);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (timeoutId === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                timeoutId = <span class="literal">undefined</span>;</span><br><span class="line">                <span class="keyword">if</span> (!immediate) &#123;</span><br><span class="line">                    <span class="title function_">invokeFunc</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, delay);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (immediate &amp;&amp; lastInvokeTime === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">invokeFunc</span>(time);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 取消防抖</span></span><br><span class="line">    debounced.<span class="property">cancel</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (timeoutId !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        &#125;</span><br><span class="line">        lastInvokeTime = <span class="number">0</span>;</span><br><span class="line">        lastArgs = lastCallTime = lastThis = timeoutId = <span class="literal">undefined</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 立即执行</span></span><br><span class="line">    debounced.<span class="property">flush</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> timeoutId === <span class="literal">undefined</span> ? <span class="literal">undefined</span> : <span class="title function_">invokeFunc</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> debounced;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）防抖的应用场景"><a href="#（三）防抖的应用场景" class="headerlink" title="（三）防抖的应用场景"></a>（三）防抖的应用场景</h2><h3 id="1-搜索框输入优化"><a href="#1-搜索框输入优化" class="headerlink" title="1. 搜索框输入优化"></a>1. 搜索框输入优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搜索框防抖 - 避免每次输入都发送请求</span></span><br><span class="line"><span class="keyword">const</span> searchBox = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;searchBox&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> searchAPI = <span class="title function_">debounce</span>(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!keyword.<span class="title function_">trim</span>()) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送搜索请求:&#x27;</span>, keyword);</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`/api/search?q=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(keyword)&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">const</span> results = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        <span class="title function_">displaySearchResults</span>(results);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;搜索失败:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line">searchBox.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="title function_">searchAPI</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">displaySearchResults</span>(<span class="params">results</span>) &#123;</span><br><span class="line">    <span class="comment">// 显示搜索结果的逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;搜索结果:&#x27;</span>, results);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-表单验证优化"><a href="#2-表单验证优化" class="headerlink" title="2. 表单验证优化"></a>2. 表单验证优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表单验证防抖 - 避免频繁验证</span></span><br><span class="line"><span class="keyword">const</span> emailInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;email&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> validateEmail = <span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params">email</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> emailRegex = <span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span>;</span><br><span class="line">    <span class="keyword">const</span> isValid = emailRegex.<span class="title function_">test</span>(email);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> errorElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;email-error&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (isValid) &#123;</span><br><span class="line">        errorElement.<span class="property">textContent</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        emailInput.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        emailInput.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;valid&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        errorElement.<span class="property">textContent</span> = <span class="string">&#x27;请输入有效的邮箱地址&#x27;</span>;</span><br><span class="line">        emailInput.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;valid&#x27;</span>);</span><br><span class="line">        emailInput.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">emailInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="title function_">validateEmail</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3-按钮点击防抖"><a href="#3-按钮点击防抖" class="headerlink" title="3. 按钮点击防抖"></a>3. 按钮点击防抖</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 提交按钮防抖 - 防止重复提交</span></span><br><span class="line"><span class="keyword">const</span> submitButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;submitBtn&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> handleSubmit = <span class="title function_">debounce</span>(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    submitButton.<span class="property">disabled</span> = <span class="literal">true</span>;</span><br><span class="line">    submitButton.<span class="property">textContent</span> = <span class="string">&#x27;提交中...&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myForm&#x27;</span>));</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/api/submit&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">body</span>: formData</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;提交成功！&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="string">&#x27;提交失败，请重试&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;提交错误:&#x27;</span>, error);</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;网络错误，请重试&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        submitButton.<span class="property">disabled</span> = <span class="literal">false</span>;</span><br><span class="line">        submitButton.<span class="property">textContent</span> = <span class="string">&#x27;提交&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;); <span class="comment">// 立即执行，防止重复点击</span></span><br><span class="line"></span><br><span class="line">submitButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, handleSubmit);</span><br></pre></td></tr></table></figure>

<h1 id="二、节流（Throttle）详解"><a href="#二、节流（Throttle）详解" class="headerlink" title="二、节流（Throttle）详解"></a>二、节流（Throttle）详解</h1><h2 id="（一）什么是节流"><a href="#（一）什么是节流" class="headerlink" title="（一）什么是节流"></a>（一）什么是节流</h2><p>节流是指规定在一个单位时间内，只能触发一次函数。如果这个单位时间内触发多次函数，只有一次生效。简单来说，节流就是”我有自己的节奏，不管你触发多频繁”。</p>
<p><strong>生活中的比喻：</strong> 就像水龙头限流一样，不管你怎么拧，水流的速度都是固定的，每秒只能流出固定量的水。</p>
<h2 id="（二）节流的实现原理"><a href="#（二）节流的实现原理" class="headerlink" title="（二）节流的实现原理"></a>（二）节流的实现原理</h2><p>节流的核心思想是通过时间戳或定时器来控制函数的执行频率，确保在指定的时间间隔内最多只执行一次。</p>
<h3 id="时间戳版节流"><a href="#时间戳版节流" class="headerlink" title="时间戳版节流"></a>时间戳版节流</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数 - 时间戳版</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; func 需要节流的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delay 节流间隔时间（毫秒）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125; 节流后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> lastExecTime = <span class="number">0</span>; <span class="comment">// 上次执行时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> currentTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果距离上次执行时间超过了延迟时间，则执行函数</span></span><br><span class="line">        <span class="keyword">if</span> (currentTime - lastExecTime &gt;= delay) &#123;</span><br><span class="line">            lastExecTime = currentTime;</span><br><span class="line">            <span class="keyword">return</span> func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> handleScroll = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面滚动事件处理&#x27;</span>);</span><br><span class="line">    <span class="comment">// 处理滚动逻辑，比如懒加载、滚动动画等</span></span><br><span class="line">&#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, handleScroll);</span><br></pre></td></tr></table></figure>

<h3 id="定时器版节流"><a href="#定时器版节流" class="headerlink" title="定时器版节流"></a>定时器版节流</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数 - 定时器版</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; func 需要节流的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delay 节流间隔时间（毫秒）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125; 节流后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId = <span class="literal">null</span>; <span class="comment">// 定时器ID</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果定时器不存在，说明可以执行</span></span><br><span class="line">        <span class="keyword">if</span> (!timeoutId) &#123;</span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">                timeoutId = <span class="literal">null</span>; <span class="comment">// 执行完毕后清空定时器ID</span></span><br><span class="line">            &#125;, delay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="完整版节流实现"><a href="#完整版节流实现" class="headerlink" title="完整版节流实现"></a>完整版节流实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数 - 完整版</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; func 需要节流的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; delay 节流间隔时间（毫秒）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; options 配置选项</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">boolean</span>&#125; options.leading 是否在开始时执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">boolean</span>&#125; options.trailing 是否在结束时执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Function</span>&#125; 节流后的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, delay, options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId;</span><br><span class="line">    <span class="keyword">let</span> lastExecTime = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> &#123; leading = <span class="literal">true</span>, trailing = <span class="literal">true</span> &#125; = options;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">throttled</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> currentTime = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果不需要开始时执行，且是第一次调用，记录时间但不执行</span></span><br><span class="line">        <span class="keyword">if</span> (!leading &amp;&amp; lastExecTime === <span class="number">0</span>) &#123;</span><br><span class="line">            lastExecTime = currentTime;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 计算剩余等待时间</span></span><br><span class="line">        <span class="keyword">const</span> remainingTime = delay - (currentTime - lastExecTime);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (remainingTime &lt;= <span class="number">0</span> || remainingTime &gt; delay) &#123;</span><br><span class="line">            <span class="comment">// 可以立即执行</span></span><br><span class="line">            <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">                timeoutId = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            lastExecTime = currentTime;</span><br><span class="line">            <span class="keyword">return</span> func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!timeoutId &amp;&amp; trailing) &#123;</span><br><span class="line">            <span class="comment">// 设置定时器，在剩余时间后执行</span></span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                lastExecTime = leading ? <span class="title class_">Date</span>.<span class="title function_">now</span>() : <span class="number">0</span>;</span><br><span class="line">                timeoutId = <span class="literal">null</span>;</span><br><span class="line">                func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">            &#125;, remainingTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 取消节流</span></span><br><span class="line">    throttled.<span class="property">cancel</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">            timeoutId = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        lastExecTime = <span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> throttled;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）节流的应用场景"><a href="#（三）节流的应用场景" class="headerlink" title="（三）节流的应用场景"></a>（三）节流的应用场景</h2><h3 id="1-滚动事件优化"><a href="#1-滚动事件优化" class="headerlink" title="1. 滚动事件优化"></a>1. 滚动事件优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 滚动事件节流 - 优化滚动性能</span></span><br><span class="line"><span class="keyword">const</span> handleScroll = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> scrollTop = <span class="variable language_">window</span>.<span class="property">pageYOffset</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>;</span><br><span class="line">    <span class="keyword">const</span> windowHeight = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">    <span class="keyword">const</span> documentHeight = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollHeight</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算滚动百分比</span></span><br><span class="line">    <span class="keyword">const</span> scrollPercent = (scrollTop / (documentHeight - windowHeight)) * <span class="number">100</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新进度条</span></span><br><span class="line">    <span class="keyword">const</span> progressBar = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;progress-bar&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (progressBar) &#123;</span><br><span class="line">        progressBar.<span class="property">style</span>.<span class="property">width</span> = scrollPercent + <span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 懒加载图片</span></span><br><span class="line">    <span class="title function_">lazyLoadImages</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示/隐藏回到顶部按钮</span></span><br><span class="line">    <span class="keyword">const</span> backToTopBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;back-to-top&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (backToTopBtn) &#123;</span><br><span class="line">        <span class="keyword">if</span> (scrollTop &gt; <span class="number">300</span>) &#123;</span><br><span class="line">            backToTopBtn.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            backToTopBtn.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">16</span>); <span class="comment">// 约60fps</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, handleScroll);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">lazyLoadImages</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> images = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img[data-src]&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> imageObserver = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">entries</span>) =&gt;</span> &#123;</span><br><span class="line">        entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (entry.<span class="property">isIntersecting</span>) &#123;</span><br><span class="line">                <span class="keyword">const</span> img = entry.<span class="property">target</span>;</span><br><span class="line">                img.<span class="property">src</span> = img.<span class="property">dataset</span>.<span class="property">src</span>;</span><br><span class="line">                img.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;data-src&#x27;</span>);</span><br><span class="line">                imageObserver.<span class="title function_">unobserve</span>(img);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    images.<span class="title function_">forEach</span>(<span class="function"><span class="params">img</span> =&gt;</span> imageObserver.<span class="title function_">observe</span>(img));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-窗口大小调整优化"><a href="#2-窗口大小调整优化" class="headerlink" title="2. 窗口大小调整优化"></a>2. 窗口大小调整优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 窗口大小调整节流 - 优化响应式布局</span></span><br><span class="line"><span class="keyword">const</span> handleResize = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> width = <span class="variable language_">window</span>.<span class="property">innerWidth</span>;</span><br><span class="line">    <span class="keyword">const</span> height = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`窗口大小变化: <span class="subst">$&#123;width&#125;</span> x <span class="subst">$&#123;height&#125;</span>`</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重新计算布局</span></span><br><span class="line">    <span class="title function_">recalculateLayout</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新图表大小（如果使用了图表库）</span></span><br><span class="line">    <span class="title function_">updateChartsSize</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 调整移动端适配</span></span><br><span class="line">    <span class="title function_">adjustMobileLayout</span>(width);</span><br><span class="line">&#125;, <span class="number">250</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, handleResize);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">recalculateLayout</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 重新计算网格布局、瀑布流等</span></span><br><span class="line">    <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.masonry-container&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (container) &#123;</span><br><span class="line">        <span class="comment">// 重新排列瀑布流</span></span><br><span class="line">        <span class="title function_">rearrangeMasonry</span>(container);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateChartsSize</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 更新图表大小的逻辑</span></span><br><span class="line">    <span class="keyword">const</span> charts = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.chart-container&#x27;</span>);</span><br><span class="line">    charts.<span class="title function_">forEach</span>(<span class="function"><span class="params">chart</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 假设使用了某个图表库</span></span><br><span class="line">        <span class="keyword">if</span> (chart.<span class="property">chartInstance</span>) &#123;</span><br><span class="line">            chart.<span class="property">chartInstance</span>.<span class="title function_">resize</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">adjustMobileLayout</span>(<span class="params">width</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="variable language_">document</span>.<span class="property">body</span>;</span><br><span class="line">    <span class="keyword">if</span> (width &lt;= <span class="number">768</span>) &#123;</span><br><span class="line">        body.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;mobile-layout&#x27;</span>);</span><br><span class="line">        body.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;desktop-layout&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        body.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;desktop-layout&#x27;</span>);</span><br><span class="line">        body.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;mobile-layout&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-鼠标移动事件优化"><a href="#3-鼠标移动事件优化" class="headerlink" title="3. 鼠标移动事件优化"></a>3. 鼠标移动事件优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 鼠标移动节流 - 优化鼠标跟随效果</span></span><br><span class="line"><span class="keyword">const</span> cursor = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">cursor.<span class="property">className</span> = <span class="string">&#x27;custom-cursor&#x27;</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(cursor);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleMouseMove = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 更新自定义鼠标位置</span></span><br><span class="line">    cursor.<span class="property">style</span>.<span class="property">left</span> = e.<span class="property">clientX</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    cursor.<span class="property">style</span>.<span class="property">top</span> = e.<span class="property">clientY</span> + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 鼠标悬停效果检测</span></span><br><span class="line">    <span class="keyword">const</span> hoveredElement = <span class="variable language_">document</span>.<span class="title function_">elementFromPoint</span>(e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">    <span class="keyword">if</span> (hoveredElement &amp;&amp; hoveredElement.<span class="property">classList</span>.<span class="title function_">contains</span>(<span class="string">&#x27;interactive&#x27;</span>)) &#123;</span><br><span class="line">        cursor.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;hover-effect&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cursor.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;hover-effect&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">16</span>); <span class="comment">// 约60fps，保证流畅的动画效果</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, handleMouseMove);</span><br></pre></td></tr></table></figure>

<h1 id="三、节流与防抖的区别与选择"><a href="#三、节流与防抖的区别与选择" class="headerlink" title="三、节流与防抖的区别与选择"></a>三、节流与防抖的区别与选择</h1><h2 id="（一）核心区别对比"><a href="#（一）核心区别对比" class="headerlink" title="（一）核心区别对比"></a>（一）核心区别对比</h2><table>
<thead>
<tr>
<th>特性</th>
<th>防抖（Debounce）</th>
<th>节流（Throttle）</th>
</tr>
</thead>
<tbody><tr>
<td><strong>执行时机</strong></td>
<td>事件停止触发后延迟执行</td>
<td>按固定频率执行</td>
</tr>
<tr>
<td><strong>执行频率</strong></td>
<td>可能一次都不执行</td>
<td>保证一定频率的执行</td>
</tr>
<tr>
<td><strong>适用场景</strong></td>
<td>用户输入、按钮点击</td>
<td>滚动、鼠标移动</td>
</tr>
<tr>
<td><strong>性能影响</strong></td>
<td>可能延迟较长时间</td>
<td>保证及时响应</td>
</tr>
<tr>
<td><strong>实现复杂度</strong></td>
<td>相对简单</td>
<td>稍微复杂</td>
</tr>
</tbody></table>
<h2 id="（二）选择指南"><a href="#（二）选择指南" class="headerlink" title="（二）选择指南"></a>（二）选择指南</h2><h3 id="使用防抖的场景："><a href="#使用防抖的场景：" class="headerlink" title="使用防抖的场景："></a>使用防抖的场景：</h3><ul>
<li><strong>搜索框输入</strong>：用户停止输入后再发送请求</li>
<li><strong>表单验证</strong>：用户停止输入后再验证</li>
<li><strong>按钮点击</strong>：防止重复提交</li>
<li><strong>窗口大小调整</strong>：调整完成后再重新布局</li>
</ul>
<h3 id="使用节流的场景："><a href="#使用节流的场景：" class="headerlink" title="使用节流的场景："></a>使用节流的场景：</h3><ul>
<li><strong>滚动事件</strong>：需要实时响应但控制频率</li>
<li><strong>鼠标移动</strong>：需要流畅的交互效果</li>
<li><strong>拖拽操作</strong>：保证操作的流畅性</li>
<li><strong>动画帧更新</strong>：控制动画的帧率</li>
</ul>
<h2 id="（三）实际应用示例对比"><a href="#（三）实际应用示例对比" class="headerlink" title="（三）实际应用示例对比"></a>（三）实际应用示例对比</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搜索框：使用防抖</span></span><br><span class="line"><span class="keyword">const</span> searchInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;search&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> debouncedSearch = <span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;执行搜索:&#x27;</span>, value);</span><br><span class="line">    <span class="comment">// 发送搜索请求</span></span><br><span class="line">&#125;, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">searchInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">debouncedSearch</span>(e.<span class="property">target</span>.<span class="property">value</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 滚动事件：使用节流</span></span><br><span class="line"><span class="keyword">const</span> throttledScroll = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;处理滚动事件&#x27;</span>);</span><br><span class="line">    <span class="comment">// 更新滚动相关的UI</span></span><br><span class="line">&#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, throttledScroll);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 按钮点击：使用防抖（防重复提交）</span></span><br><span class="line"><span class="keyword">const</span> submitBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;submit&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> debouncedSubmit = <span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;提交表单&#x27;</span>);</span><br><span class="line">    <span class="comment">// 提交逻辑</span></span><br><span class="line">&#125;, <span class="number">1000</span>, &#123; <span class="attr">immediate</span>: <span class="literal">true</span> &#125;);</span><br><span class="line"></span><br><span class="line">submitBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, debouncedSubmit);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标移动：使用节流（保证流畅性）</span></span><br><span class="line"><span class="keyword">const</span> throttledMouseMove = <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;鼠标位置:&#x27;</span>, e.<span class="property">clientX</span>, e.<span class="property">clientY</span>);</span><br><span class="line">    <span class="comment">// 更新鼠标相关效果</span></span><br><span class="line">&#125;, <span class="number">16</span>); <span class="comment">// 60fps</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mousemove&#x27;</span>, throttledMouseMove);</span><br></pre></td></tr></table></figure>

<h1 id="四、最佳实践与注意事项"><a href="#四、最佳实践与注意事项" class="headerlink" title="四、最佳实践与注意事项"></a>四、最佳实践与注意事项</h1><h2 id="（一）性能优化建议"><a href="#（一）性能优化建议" class="headerlink" title="（一）性能优化建议"></a>（一）性能优化建议</h2><h3 id="1-合理设置延迟时间"><a href="#1-合理设置延迟时间" class="headerlink" title="1. 合理设置延迟时间"></a>1. 合理设置延迟时间</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不同场景的推荐延迟时间</span></span><br><span class="line"><span class="keyword">const</span> delays = &#123;</span><br><span class="line">    <span class="attr">search</span>: <span class="number">300</span>,        <span class="comment">// 搜索：300ms，平衡用户体验和请求频率</span></span><br><span class="line">    <span class="attr">validation</span>: <span class="number">500</span>,    <span class="comment">// 表单验证：500ms，给用户足够输入时间</span></span><br><span class="line">    <span class="attr">scroll</span>: <span class="number">16</span>,         <span class="comment">// 滚动：16ms，约60fps，保证流畅性</span></span><br><span class="line">    <span class="attr">resize</span>: <span class="number">250</span>,        <span class="comment">// 窗口调整：250ms，避免频繁重排</span></span><br><span class="line">    <span class="attr">click</span>: <span class="number">1000</span>,        <span class="comment">// 按钮点击：1000ms，防止重复提交</span></span><br><span class="line">    <span class="attr">mousemove</span>: <span class="number">16</span>       <span class="comment">// 鼠标移动：16ms，保证交互流畅</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-内存泄漏防护"><a href="#2-内存泄漏防护" class="headerlink" title="2. 内存泄漏防护"></a>2. 内存泄漏防护</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件销毁时清理防抖/节流函数</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SearchComponent</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">debouncedSearch</span> = <span class="title function_">debounce</span>(<span class="variable language_">this</span>.<span class="property">search</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>), <span class="number">300</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupEventListeners</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">setupEventListeners</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">searchInput</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;search&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">searchInput</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">debouncedSearch</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">search</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="comment">// 搜索逻辑</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;搜索:&#x27;</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">destroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理事件监听器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">searchInput</span>.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="variable language_">this</span>.<span class="property">debouncedSearch</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 取消防抖函数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">debouncedSearch</span>.<span class="property">cancel</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">debouncedSearch</span>.<span class="title function_">cancel</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）错误处理"><a href="#（二）错误处理" class="headerlink" title="（二）错误处理"></a>（二）错误处理</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带错误处理的防抖函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">safeDebounce</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timeoutId;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        </span><br><span class="line">        timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;防抖函数执行错误:&#x27;</span>, error);</span><br><span class="line">                <span class="comment">// 可以添加错误上报逻辑</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, delay);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> safeSearch = <span class="title function_">safeDebounce</span>(<span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`/api/search?q=<span class="subst">$&#123;keyword&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`搜索失败: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">    <span class="title function_">displayResults</span>(data);</span><br><span class="line">&#125;, <span class="number">300</span>);</span><br></pre></td></tr></table></figure>

<h2 id="（三）TypeScript支持"><a href="#（三）TypeScript支持" class="headerlink" title="（三）TypeScript支持"></a>（三）TypeScript支持</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TypeScript版本的防抖和节流</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">DebouncedFunction</span>&lt;T <span class="title function_">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>[]) =&gt; <span class="built_in">any</span>&gt; = &#123;</span><br><span class="line">    (...<span class="attr">args</span>: <span class="title class_">Parameters</span>&lt;T&gt;): <span class="built_in">void</span>;</span><br><span class="line">    <span class="title function_">cancel</span>(): <span class="built_in">void</span>;</span><br><span class="line">    <span class="title function_">flush</span>(): <span class="title class_">ReturnType</span>&lt;T&gt; | <span class="literal">undefined</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> debounce&lt;T <span class="title function_">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>[]) =&gt; <span class="built_in">any</span>&gt;(</span><br><span class="line">    <span class="attr">func</span>: T,</span><br><span class="line">    <span class="attr">delay</span>: <span class="built_in">number</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123; <span class="attr">immediate</span>?: <span class="built_in">boolean</span>; <span class="attr">maxWait</span>?: <span class="built_in">number</span> &#125; = &#123;&#125;</span><br><span class="line">): <span class="title class_">DebouncedFunction</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">timeoutId</span>: <span class="title class_">NodeJS</span>.<span class="property">Timeout</span> | <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">lastCallTime</span>: <span class="built_in">number</span> | <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">let</span> lastInvokeTime = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> &#123; immediate = <span class="literal">false</span>, maxWait &#125; = options;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">invokeFunc</span>(<span class="params"><span class="attr">time</span>: <span class="built_in">number</span></span>): <span class="title class_">ReturnType</span>&lt;T&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> args = lastArgs;</span><br><span class="line">        <span class="keyword">const</span> thisArg = lastThis;</span><br><span class="line">        </span><br><span class="line">        lastArgs = lastThis = <span class="literal">undefined</span>;</span><br><span class="line">        lastInvokeTime = time;</span><br><span class="line">        <span class="keyword">return</span> func.<span class="title function_">apply</span>(thisArg, args);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> <span class="attr">lastArgs</span>: <span class="title class_">Parameters</span>&lt;T&gt; | <span class="literal">undefined</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">lastThis</span>: <span class="built_in">any</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">debounced</span>(<span class="params"><span class="attr">this</span>: <span class="built_in">any</span>, ...<span class="attr">args</span>: <span class="title class_">Parameters</span>&lt;T&gt;</span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> time = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        lastArgs = args;</span><br><span class="line">        lastThis = <span class="variable language_">this</span>;</span><br><span class="line">        lastCallTime = time;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (timeoutId === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                timeoutId = <span class="literal">undefined</span>;</span><br><span class="line">                <span class="keyword">if</span> (!immediate) &#123;</span><br><span class="line">                    <span class="title function_">invokeFunc</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, delay);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">                <span class="title function_">invokeFunc</span>(time);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    debounced.<span class="property">cancel</span> = <span class="keyword">function</span>(<span class="params"></span>): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (timeoutId !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        &#125;</span><br><span class="line">        lastInvokeTime = <span class="number">0</span>;</span><br><span class="line">        lastArgs = lastCallTime = lastThis = timeoutId = <span class="literal">undefined</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    debounced.<span class="property">flush</span> = <span class="keyword">function</span>(<span class="params"></span>): <span class="title class_">ReturnType</span>&lt;T&gt; | <span class="literal">undefined</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> timeoutId === <span class="literal">undefined</span> ? <span class="literal">undefined</span> : <span class="title function_">invokeFunc</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> debounced;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h1><p>节流和防抖是前端性能优化中的重要技术，它们通过控制函数的执行频率来解决高频事件带来的性能问题：</p>
<h2 id="（一）核心要点"><a href="#（一）核心要点" class="headerlink" title="（一）核心要点"></a>（一）核心要点</h2><ol>
<li><strong>防抖（Debounce）</strong>：等待用户停止操作后再执行，适用于搜索、表单验证等场景</li>
<li><strong>节流（Throttle）</strong>：按固定频率执行，适用于滚动、鼠标移动等需要实时响应的场景</li>
<li><strong>选择原则</strong>：根据业务需求选择，需要延迟执行用防抖，需要定期执行用节流</li>
</ol>
<h2 id="（二）实践建议"><a href="#（二）实践建议" class="headerlink" title="（二）实践建议"></a>（二）实践建议</h2><ol>
<li><strong>合理设置延迟时间</strong>：平衡用户体验和性能</li>
<li><strong>注意内存泄漏</strong>：组件销毁时清理防抖&#x2F;节流函数</li>
<li><strong>添加错误处理</strong>：确保函数执行的稳定性</li>
<li><strong>使用TypeScript</strong>：提供更好的类型安全</li>
</ol>
<h2 id="（三）性能收益"><a href="#（三）性能收益" class="headerlink" title="（三）性能收益"></a>（三）性能收益</h2><p>正确使用节流和防抖可以带来显著的性能提升：</p>
<ul>
<li>减少不必要的函数调用</li>
<li>降低CPU使用率</li>
<li>减少网络请求次数</li>
<li>提升用户体验</li>
</ul>
<p>掌握这两种技术，能够帮助我们构建更加高效、流畅的Web应用，是每个前端开发者必备的技能。</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/setTimeout">MDN Web Docs - setTimeout</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/clearTimeout">MDN Web Docs - clearTimeout</a></li>
<li><a href="https://lodash.com/docs/4.17.15#debounce">Lodash - debounce</a></li>
<li><a href="https://lodash.com/docs/4.17.15#throttle">Lodash - throttle</a></li>
<li><a href="https://web.dev/performance/">JavaScript性能优化最佳实践</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在前端开发中，我们经常遇到需要处理高频事件的场景，比如用户快速点击按钮、滚动页面、调整窗口大小、输入搜索关键词等。如果不加以控制，这些高频事]]>
    </summary>
    
      <category term="性能优化" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="JavaScript" scheme="https://hexo.blog.uwakeme.tech/tags/JavaScript/"/>
    
      <category term="节流" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%8A%82%E6%B5%81/"/>
    
      <category term="防抖" scheme="https://hexo.blog.uwakeme.tech/tags/%E9%98%B2%E6%8A%96/"/>
    
      <category term="throttle" scheme="https://hexo.blog.uwakeme.tech/tags/throttle/"/>
    
      <category term="debounce" scheme="https://hexo.blog.uwakeme.tech/tags/debounce/"/>
    
      <category term="前端优化" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/"/>
    
      <category term="前端" scheme="https://hexo.blog.uwakeme.tech/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【MySQL】MySQL去重查询详解]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/06/%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90MySQL%E3%80%91MySQL%E5%8E%BB%E9%87%8D%E6%9F%A5%E8%AF%A2%E8%AF%A6%E8%A7%A3/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/06/数据库/【MySQL】MySQL去重查询详解/</id>
    <published>2025-08-05T16:00:00.000Z</published>
    <updated>2025-08-08T01:16:52.734Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在日常的数据库操作中，数据去重是一个非常常见的需求。无论是查询结果去重、数据清洗，还是统计分析，我们都需要掌握MySQL中的各种去重技术。本文将详细介绍MySQL中常用的去重关键字和操作方法，结合实际业务场景，帮助大家更好地理解和应用这些技术。</p>
<p>MySQL提供了多种去重方式，主要包括DISTINCT关键字、GROUP BY子句、以及一些高级的去重技巧。每种方法都有其适用场景和性能特点，选择合适的去重方式对于提高查询效率至关重要。</p>
<h1 id="一、DISTINCT关键字详解"><a href="#一、DISTINCT关键字详解" class="headerlink" title="一、DISTINCT关键字详解"></a>一、DISTINCT关键字详解</h1><h2 id="（一）基本语法和用法"><a href="#（一）基本语法和用法" class="headerlink" title="（一）基本语法和用法"></a>（一）基本语法和用法</h2><p>DISTINCT是MySQL中最常用的去重关键字，它可以去除查询结果中的重复行。DISTINCT关键字必须放在SELECT语句的最前面，它会对整个查询结果进行去重。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 基本语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> column1, column2, ... <span class="keyword">FROM</span> table_name;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单列去重：查询所有不重复的城市</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city <span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多列组合去重：查询不重复的城市和省份组合</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city, province <span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 结合WHERE条件的去重查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id </span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）DISTINCT的工作原理"><a href="#（二）DISTINCT的工作原理" class="headerlink" title="（二）DISTINCT的工作原理"></a>（二）DISTINCT的工作原理</h2><p>DISTINCT的工作原理是对查询结果进行排序和比较，去除完全相同的行。需要注意的是：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 示例数据表：products</span></span><br><span class="line"><span class="comment">-- id | name     | category | price</span></span><br><span class="line"><span class="comment">-- 1  | iPhone   | 手机     | 6999</span></span><br><span class="line"><span class="comment">-- 2  | iPad     | 平板     | 3999</span></span><br><span class="line"><span class="comment">-- 3  | MacBook  | 电脑     | 9999</span></span><br><span class="line"><span class="comment">-- 4  | iPhone   | 手机     | 6999</span></span><br><span class="line"><span class="comment">-- 5  | Samsung  | 手机     | 5999</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单列去重：只返回不重复的分类</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> products;</span><br><span class="line"><span class="comment">-- 结果：手机、平板、电脑</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多列去重：name和category的组合必须完全相同才会被去重</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> name, category <span class="keyword">FROM</span> products;</span><br><span class="line"><span class="comment">-- 结果：iPhone-手机、iPad-平板、MacBook-电脑、Samsung-手机</span></span><br><span class="line"><span class="comment">-- 注意：即使有两个iPhone，但它们的完整记录相同，所以只返回一条</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）DISTINCT的性能考虑"><a href="#（三）DISTINCT的性能考虑" class="headerlink" title="（三）DISTINCT的性能考虑"></a>（三）DISTINCT的性能考虑</h2><p>DISTINCT操作需要对结果集进行排序和比较，在大数据量情况下可能影响性能：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 性能优化建议：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 在有索引的列上使用DISTINCT效果更好</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> customer_id <span class="keyword">FROM</span> orders;  <span class="comment">-- customer_id有索引</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 尽量减少DISTINCT的列数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city <span class="keyword">FROM</span> customers;  <span class="comment">-- 好于下面的写法</span></span><br><span class="line"><span class="comment">-- SELECT DISTINCT city, address FROM customers;  -- 如果不必要，避免多列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 结合LIMIT使用，避免处理过多数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> products LIMIT <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 使用EXISTS替代DISTINCT IN子查询（某些情况下性能更好）</span></span><br><span class="line"><span class="comment">-- 不推荐：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> city <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city <span class="keyword">FROM</span> stores);</span><br><span class="line"><span class="comment">-- 推荐：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> customers c <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> stores s <span class="keyword">WHERE</span> s.city <span class="operator">=</span> c.city);</span><br></pre></td></tr></table></figure>

<h1 id="二、GROUP-BY去重操作"><a href="#二、GROUP-BY去重操作" class="headerlink" title="二、GROUP BY去重操作"></a>二、GROUP BY去重操作</h1><h2 id="（一）GROUP-BY基本去重"><a href="#（一）GROUP-BY基本去重" class="headerlink" title="（一）GROUP BY基本去重"></a>（一）GROUP BY基本去重</h2><p>GROUP BY不仅可以用于分组统计，也是一种强大的去重工具。相比DISTINCT，GROUP BY提供了更多的灵活性：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用GROUP BY实现去重</span></span><br><span class="line"><span class="keyword">SELECT</span> city <span class="keyword">FROM</span> customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> city;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 等价于DISTINCT的写法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> city <span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- GROUP BY的优势：可以同时进行统计</span></span><br><span class="line"><span class="keyword">SELECT</span> city, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> customer_count </span><br><span class="line"><span class="keyword">FROM</span> customers </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> city;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 多列分组去重</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id, job_title, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> employee_count</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id, job_title;</span><br></pre></td></tr></table></figure>

<h2 id="（二）GROUP-BY与聚合函数结合"><a href="#（二）GROUP-BY与聚合函数结合" class="headerlink" title="（二）GROUP BY与聚合函数结合"></a>（二）GROUP BY与聚合函数结合</h2><p>GROUP BY的真正威力在于与聚合函数的结合使用：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 统计每个分类的产品数量和平均价格</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    category,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> product_count,           <span class="comment">-- 统计每个分类的产品数量</span></span><br><span class="line">    <span class="built_in">AVG</span>(price) <span class="keyword">as</span> avg_price,            <span class="comment">-- 计算平均价格</span></span><br><span class="line">    <span class="built_in">MIN</span>(price) <span class="keyword">as</span> min_price,            <span class="comment">-- 最低价格</span></span><br><span class="line">    <span class="built_in">MAX</span>(price) <span class="keyword">as</span> max_price             <span class="comment">-- 最高价格</span></span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> category;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找每个部门薪资最高的员工信息</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    department_id,</span><br><span class="line">    <span class="built_in">MAX</span>(salary) <span class="keyword">as</span> max_salary,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> employee_count</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 统计每个客户的订单数量和总金额</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    customer_id,</span><br><span class="line">    <span class="built_in">COUNT</span>(order_id) <span class="keyword">as</span> order_count,     <span class="comment">-- 订单数量</span></span><br><span class="line">    <span class="built_in">SUM</span>(total_amount) <span class="keyword">as</span> total_spent,   <span class="comment">-- 总消费金额</span></span><br><span class="line">    <span class="built_in">AVG</span>(total_amount) <span class="keyword">as</span> avg_order      <span class="comment">-- 平均订单金额</span></span><br><span class="line"><span class="keyword">FROM</span> orders </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> customer_id</span><br><span class="line"><span class="keyword">HAVING</span> total_spent <span class="operator">&gt;</span> <span class="number">10000</span>;            <span class="comment">-- 只显示消费超过1万的客户</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）HAVING子句过滤分组结果"><a href="#（三）HAVING子句过滤分组结果" class="headerlink" title="（三）HAVING子句过滤分组结果"></a>（三）HAVING子句过滤分组结果</h2><p>HAVING子句用于过滤GROUP BY的结果，类似于WHERE，但作用于分组后的数据：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查找订单数量超过5个的客户</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    customer_id,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> order_count</span><br><span class="line"><span class="keyword">FROM</span> orders </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> customer_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找平均薪资超过8000的部门</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    department_id,</span><br><span class="line">    <span class="built_in">AVG</span>(salary) <span class="keyword">as</span> avg_salary,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> employee_count</span><br><span class="line"><span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">AVG</span>(salary) <span class="operator">&gt;</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复杂的HAVING条件：多个聚合函数条件</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    category,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> product_count,</span><br><span class="line">    <span class="built_in">AVG</span>(price) <span class="keyword">as</span> avg_price</span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> category</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span> <span class="number">3</span> <span class="keyword">AND</span> <span class="built_in">AVG</span>(price) <span class="operator">&gt;</span> <span class="number">1000</span>;</span><br></pre></td></tr></table></figure>

<h1 id="三、高级去重技巧"><a href="#三、高级去重技巧" class="headerlink" title="三、高级去重技巧"></a>三、高级去重技巧</h1><h2 id="（一）什么是窗口函数"><a href="#（一）什么是窗口函数" class="headerlink" title="（一）什么是窗口函数"></a>（一）什么是窗口函数</h2><p>在介绍ROW_NUMBER()之前，我们先了解一下什么是窗口函数。</p>
<p><strong>窗口函数就像是透过一个”窗口”来观察和处理数据。</strong> 想象一下你站在楼里透过窗户看外面的风景，这个”窗户”就是你观察的范围，你可以看到窗户范围内的所有景物并对它们进行分析。</p>
<p>在数据库中：</p>
<ul>
<li><strong>窗口</strong> &#x3D; 数据的观察范围（可以是整个表，也可以是按某个字段分组的数据）</li>
<li><strong>窗口函数</strong> &#x3D; 在这个范围内进行计算的函数</li>
<li><strong>关键特点</strong> &#x3D; 不会减少行数，每一行都会保留，只是在每行上添加计算结果</li>
</ul>
<h3 id="窗口函数与聚合函数的区别"><a href="#窗口函数与聚合函数的区别" class="headerlink" title="窗口函数与聚合函数的区别"></a>窗口函数与聚合函数的区别</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 普通聚合函数：会合并数据，减少行数</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> emp_count</span><br><span class="line"><span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"><span class="comment">-- 结果：如果有3个部门，只返回3行数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 窗口函数：保持原有行数，在每行上添加计算结果</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    department_id,</span><br><span class="line">    employee_name,</span><br><span class="line">    salary,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> department_id) <span class="keyword">as</span> dept_emp_count</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 结果：如果有100个员工，仍然返回100行，但每行都知道自己部门有多少人</span></span><br></pre></td></tr></table></figure>

<p><strong>生活中的比喻：班级排名</strong></p>
<ul>
<li><strong>传统GROUP BY方式</strong>：把学生按班级分组，只告诉你每个班有多少人</li>
<li><strong>窗口函数方式</strong>：每个学生都知道自己在班级中的排名，同时保留所有学生的完整信息</li>
</ul>
<h2 id="（二）使用ROW-NUMBER-进行去重"><a href="#（二）使用ROW-NUMBER-进行去重" class="headerlink" title="（二）使用ROW_NUMBER()进行去重"></a>（二）使用ROW_NUMBER()进行去重</h2><p>ROW_NUMBER()是MySQL的窗口函数，可以为每个分组内的行分配一个唯一的序号，常用于复杂的去重场景。</p>
<h3 id="窗口函数语法详解"><a href="#窗口函数语法详解" class="headerlink" title="窗口函数语法详解"></a>窗口函数语法详解</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 窗口函数的基本语法结构</span></span><br><span class="line"><span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">PARTITION</span> <span class="keyword">BY</span> column1, column2, ...  <span class="comment">-- 分组字段（可选）</span></span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> column3, column4, ...      <span class="comment">-- 排序字段（必需）</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>语法说明：</strong></p>
<ul>
<li><strong>OVER</strong>：窗口函数的关键字，定义窗口的范围和规则</li>
<li><strong>PARTITION BY</strong>：类似于GROUP BY，将数据分成不同的组，在每个组内独立计算</li>
<li><strong>ORDER BY</strong>：在每个分组内按指定字段排序，ROW_NUMBER()根据这个顺序分配序号</li>
</ul>
<h3 id="OVER子句详细说明"><a href="#OVER子句详细说明" class="headerlink" title="OVER子句详细说明"></a>OVER子句详细说明</h3><p>OVER子句是窗口函数的核心，它定义了函数的计算范围：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 只有ORDER BY，没有PARTITION BY：对整个结果集排序编号</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    name,</span><br><span class="line">    salary,</span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">as</span> salary_rank</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 结果：所有员工按薪资从高到低编号 1,2,3,4,5...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 有PARTITION BY和ORDER BY：分组内排序编号</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    department_id,</span><br><span class="line">    name,</span><br><span class="line">    salary,</span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> department_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">as</span> dept_rank</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 结果：每个部门内的员工按薪资排序，每个部门都从1开始编号</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>PARTITION BY与GROUP BY的区别：</strong></p>
<p><strong>GROUP BY：</strong> 会合并行，减少结果集的行数</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department_id, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> employees <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br></pre></td></tr></table></figure>

<p><strong>PARTITION BY：</strong> 不会合并行，保持原有行数，只是在每个分组内计算</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    department_id,</span><br><span class="line">    name,</span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> department_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> hire_date) <span class="keyword">as</span> hire_order</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>

<h3 id="常用窗口函数对比"><a href="#常用窗口函数对比" class="headerlink" title="常用窗口函数对比"></a>常用窗口函数对比</h3><p><strong>示例数据：员工薪资表</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dept_id | name | salary</span><br><span class="line">1       | 张三 | 8000</span><br><span class="line">1       | 李四 | 9000</span><br><span class="line">1       | 王五 | 9000</span><br><span class="line">2       | 赵六 | 7000</span><br></pre></td></tr></table></figure>

<p><strong>ROW_NUMBER()：</strong> 连续唯一编号，相同值也会分配不同序号</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    dept_id, name, salary,</span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> dept_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">as</span> row_num</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>
<p>执行结果：李四&#x3D;1, 王五&#x3D;2, 张三&#x3D;3（即使李四和王五薪资相同）</p>
<p><strong>RANK()：</strong> 相同值分配相同排名，但会跳过后续排名</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    dept_id, name, salary,</span><br><span class="line">    <span class="built_in">RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> dept_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">as</span> rank_num</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>
<p>执行结果：李四&#x3D;1, 王五&#x3D;1, 张三&#x3D;3（跳过了排名2）</p>
<p><strong>DENSE_RANK()：</strong> 相同值分配相同排名，不跳过后续排名</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    dept_id, name, salary,</span><br><span class="line">    <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> dept_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">as</span> dense_rank</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure>
<p>执行结果：李四&#x3D;1, 王五&#x3D;1, 张三&#x3D;2（不跳过排名）</p>
<h3 id="实际应用示例"><a href="#实际应用示例" class="headerlink" title="实际应用示例"></a>实际应用示例</h3><p>ROW_NUMBER()窗口函数可以为每个分组内的行分配一个唯一的序号，常用于复杂的去重场景：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 删除重复数据，保留ID最小的记录</span></span><br><span class="line"><span class="comment">-- 假设customers表中有重复的email记录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 先查看重复数据</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    email,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> duplicate_count</span><br><span class="line"><span class="keyword">FROM</span> customers</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> email</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 使用ROW_NUMBER()标记重复数据</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    id,</span><br><span class="line">    name,</span><br><span class="line">    email,</span><br><span class="line">    <span class="comment">-- PARTITION BY email：按邮箱分组，相同邮箱的记录在同一组</span></span><br><span class="line">    <span class="comment">-- ORDER BY id：在每个邮箱组内按ID升序排列</span></span><br><span class="line">    <span class="comment">-- 结果：每个邮箱组内的记录被分配序号1,2,3...</span></span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> email <span class="keyword">ORDER</span> <span class="keyword">BY</span> id) <span class="keyword">as</span> row_num</span><br><span class="line"><span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>执行结果示例：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">id | name  | email        | row_num</span><br><span class="line">1  | 张三  | zhang@qq.com | 1</span><br><span class="line">3  | 李四  | zhang@qq.com | 2      -- 相同邮箱的第2条记录</span><br><span class="line">2  | 王五  | wang@qq.com  | 1</span><br><span class="line">4  | 赵六  | zhao@qq.com  | 1</span><br><span class="line"></span><br><span class="line">-- 3. 删除重复数据（保留row_num=1的记录）</span><br><span class="line">DELETE c1 FROM customers c1</span><br><span class="line">INNER JOIN (</span><br><span class="line">    SELECT</span><br><span class="line">        id,</span><br><span class="line">        ROW_NUMBER() OVER (PARTITION BY email ORDER BY id) as row_num</span><br><span class="line">    FROM customers</span><br><span class="line">) c2 ON c1.id = c2.id</span><br><span class="line">WHERE c2.row_num &gt; 1;</span><br></pre></td></tr></table></figure>

<h2 id="（三）获取每组最新记录的去重"><a href="#（三）获取每组最新记录的去重" class="headerlink" title="（三）获取每组最新记录的去重"></a>（三）获取每组最新记录的去重</h2><p>这是业务中非常常见的去重场景：获取每个用户、每个分类等的最新一条记录。这种去重不是简单的删除重复，而是从每个分组中选择符合条件的特定记录：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 场景：查询每个用户的最新购买记录</span></span><br><span class="line"><span class="comment">-- 使用ROW_NUMBER()窗口函数（推荐方法）</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    user_id,</span><br><span class="line">    user_name,</span><br><span class="line">    order_id,</span><br><span class="line">    product_name,</span><br><span class="line">    order_date,</span><br><span class="line">    amount</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        u.user_id,</span><br><span class="line">        u.user_name,</span><br><span class="line">        o.order_id,</span><br><span class="line">        o.product_name,</span><br><span class="line">        o.order_date,</span><br><span class="line">        o.amount,</span><br><span class="line">        <span class="comment">-- PARTITION BY u.user_id：按用户ID分组，每个用户的记录独立编号</span></span><br><span class="line">        <span class="comment">-- ORDER BY o.order_date DESC：在每个用户组内按订单日期降序排列（最新的在前）</span></span><br><span class="line">        <span class="comment">-- 结果：每个用户的最新订单获得序号1，次新的获得序号2，以此类推</span></span><br><span class="line">        <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> u.user_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> o.order_date <span class="keyword">DESC</span>) <span class="keyword">as</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> users u</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.user_id <span class="operator">=</span> o.user_id</span><br><span class="line">) ranked_orders</span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">=</span> <span class="number">1</span>;  <span class="comment">-- 只取每个用户的第一条记录（最新的）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 处理同一时间多条记录的情况</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    user_id,</span><br><span class="line">    user_name,</span><br><span class="line">    order_id,</span><br><span class="line">    product_name,</span><br><span class="line">    order_date,</span><br><span class="line">    amount</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        u.user_id,</span><br><span class="line">        u.user_name,</span><br><span class="line">        o.order_id,</span><br><span class="line">        o.product_name,</span><br><span class="line">        o.order_date,</span><br><span class="line">        o.amount,</span><br><span class="line">        <span class="comment">-- PARTITION BY u.user_id：按用户分组</span></span><br><span class="line">        <span class="comment">-- ORDER BY多个字段：先按日期降序，再按订单ID降序</span></span><br><span class="line">        <span class="comment">-- 这样确保即使同一天有多个订单，也能选出唯一的&quot;最新&quot;记录</span></span><br><span class="line">        <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (</span><br><span class="line">            <span class="keyword">PARTITION</span> <span class="keyword">BY</span> u.user_id</span><br><span class="line">            <span class="keyword">ORDER</span> <span class="keyword">BY</span> o.order_date <span class="keyword">DESC</span>, o.order_id <span class="keyword">DESC</span></span><br><span class="line">        ) <span class="keyword">as</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> users u</span><br><span class="line">    <span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.user_id <span class="operator">=</span> o.user_id</span><br><span class="line">) ranked_orders</span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 其他常见的最新记录查询场景：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 1. 查询每个商品的最新价格记录</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    product_id,</span><br><span class="line">    product_name,</span><br><span class="line">    price,</span><br><span class="line">    effective_date</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        product_id,</span><br><span class="line">        product_name,</span><br><span class="line">        price,</span><br><span class="line">        effective_date,</span><br><span class="line">        <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> product_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> effective_date <span class="keyword">DESC</span>) <span class="keyword">as</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> product_price_history</span><br><span class="line">) latest_prices</span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询每个部门最新入职的员工</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    department_id,</span><br><span class="line">    employee_name,</span><br><span class="line">    hire_date,</span><br><span class="line">    salary</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span></span><br><span class="line">        department_id,</span><br><span class="line">        employee_name,</span><br><span class="line">        hire_date,</span><br><span class="line">        salary,</span><br><span class="line">        <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> department_id <span class="keyword">ORDER</span> <span class="keyword">BY</span> hire_date <span class="keyword">DESC</span>) <span class="keyword">as</span> rn</span><br><span class="line">    <span class="keyword">FROM</span> employees</span><br><span class="line">) latest_hires</span><br><span class="line"><span class="keyword">WHERE</span> rn <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<h3 id="替代方法：使用相关子查询"><a href="#替代方法：使用相关子查询" class="headerlink" title="替代方法：使用相关子查询"></a>替代方法：使用相关子查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用相关子查询实现相同功能（性能可能较差）</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    u.user_id,</span><br><span class="line">    u.user_name,</span><br><span class="line">    o.order_id,</span><br><span class="line">    o.product_name,</span><br><span class="line">    o.order_date,</span><br><span class="line">    o.amount</span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.user_id <span class="operator">=</span> o.user_id</span><br><span class="line"><span class="keyword">WHERE</span> o.order_date <span class="operator">=</span> (</span><br><span class="line">    <span class="comment">-- 子查询：找到该用户的最新订单日期</span></span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(order_date)</span><br><span class="line">    <span class="keyword">FROM</span> orders o2</span><br><span class="line">    <span class="keyword">WHERE</span> o2.user_id <span class="operator">=</span> u.user_id</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注意：如果同一天有多条记录，上述查询可能返回多条结果</span></span><br><span class="line"><span class="comment">-- 需要进一步处理：</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    u.user_id,</span><br><span class="line">    u.user_name,</span><br><span class="line">    o.order_id,</span><br><span class="line">    o.product_name,</span><br><span class="line">    o.order_date,</span><br><span class="line">    o.amount</span><br><span class="line"><span class="keyword">FROM</span> users u</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> orders o <span class="keyword">ON</span> u.user_id <span class="operator">=</span> o.user_id</span><br><span class="line"><span class="keyword">WHERE</span> (o.order_date, o.order_id) <span class="operator">=</span> (</span><br><span class="line">    <span class="comment">-- 使用复合条件确保唯一性</span></span><br><span class="line">    <span class="keyword">SELECT</span> order_date, <span class="built_in">MAX</span>(order_id)</span><br><span class="line">    <span class="keyword">FROM</span> orders o2</span><br><span class="line">    <span class="keyword">WHERE</span> o2.user_id <span class="operator">=</span> u.user_id</span><br><span class="line">    <span class="keyword">AND</span> o2.order_date <span class="operator">=</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> <span class="built_in">MAX</span>(order_date) <span class="keyword">FROM</span> orders o3 <span class="keyword">WHERE</span> o3.user_id <span class="operator">=</span> u.user_id</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="（四）使用UNION去重"><a href="#（四）使用UNION去重" class="headerlink" title="（四）使用UNION去重"></a>（四）使用UNION去重</h2><p>UNION操作符会自动去除重复行，而UNION ALL则保留所有行：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- UNION自动去重</span></span><br><span class="line"><span class="keyword">SELECT</span> city <span class="keyword">FROM</span> customers_north</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> city <span class="keyword">FROM</span> customers_south;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- UNION ALL保留重复</span></span><br><span class="line"><span class="keyword">SELECT</span> city <span class="keyword">FROM</span> customers_north</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> city <span class="keyword">FROM</span> customers_south;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复杂的UNION去重查询</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;VIP客户&#x27;</span> <span class="keyword">as</span> customer_type, name, email <span class="keyword">FROM</span> vip_customers</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;普通客户&#x27;</span> <span class="keyword">as</span> customer_type, name, email <span class="keyword">FROM</span> regular_customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> customer_type, name;</span><br></pre></td></tr></table></figure>

<h2 id="（五）临时表去重方法"><a href="#（五）临时表去重方法" class="headerlink" title="（五）临时表去重方法"></a>（五）临时表去重方法</h2><p>对于大量数据的去重操作，有时使用临时表会更高效：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建临时表存储去重结果</span></span><br><span class="line"><span class="keyword">CREATE</span> TEMPORARY <span class="keyword">TABLE</span> temp_unique_customers <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> customer_id, name, email </span><br><span class="line"><span class="keyword">FROM</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清空原表</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将去重数据插入回原表</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> customers (customer_id, name, email)</span><br><span class="line"><span class="keyword">SELECT</span> customer_id, name, email <span class="keyword">FROM</span> temp_unique_customers;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除临时表</span></span><br><span class="line"><span class="keyword">DROP</span> TEMPORARY <span class="keyword">TABLE</span> temp_unique_customers;</span><br></pre></td></tr></table></figure>

<h1 id="四、实际应用场景"><a href="#四、实际应用场景" class="headerlink" title="四、实际应用场景"></a>四、实际应用场景</h1><h2 id="（一）电商系统中的去重应用"><a href="#（一）电商系统中的去重应用" class="headerlink" title="（一）电商系统中的去重应用"></a>（一）电商系统中的去重应用</h2><p>在电商系统中，去重操作非常常见，以下是一些典型场景：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 场景1：统计每个商品的销售情况（去重订单项）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    product_id,</span><br><span class="line">    product_name,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> order_id) <span class="keyword">as</span> order_count,    <span class="comment">-- 有多少个不同订单购买了此商品</span></span><br><span class="line">    <span class="built_in">SUM</span>(quantity) <span class="keyword">as</span> total_sold,               <span class="comment">-- 总销售数量</span></span><br><span class="line">    <span class="built_in">SUM</span>(quantity <span class="operator">*</span> price) <span class="keyword">as</span> total_revenue     <span class="comment">-- 总销售额</span></span><br><span class="line"><span class="keyword">FROM</span> order_items oi</span><br><span class="line"><span class="keyword">JOIN</span> products p <span class="keyword">ON</span> oi.product_id <span class="operator">=</span> p.id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> product_id, product_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> total_revenue <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 场景2：查找活跃用户（去重登录记录）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    user_id,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> <span class="type">DATE</span>(login_time)) <span class="keyword">as</span> active_days,  <span class="comment">-- 活跃天数</span></span><br><span class="line">    <span class="built_in">MIN</span>(login_time) <span class="keyword">as</span> first_login,                   <span class="comment">-- 首次登录</span></span><br><span class="line">    <span class="built_in">MAX</span>(login_time) <span class="keyword">as</span> last_login                     <span class="comment">-- 最后登录</span></span><br><span class="line"><span class="keyword">FROM</span> user_login_logs </span><br><span class="line"><span class="keyword">WHERE</span> login_time <span class="operator">&gt;=</span> DATE_SUB(NOW(), <span class="type">INTERVAL</span> <span class="number">30</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line"><span class="keyword">HAVING</span> active_days <span class="operator">&gt;=</span> <span class="number">10</span>;  <span class="comment">-- 30天内至少活跃10天的用户</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）数据分析中的去重统计"><a href="#（二）数据分析中的去重统计" class="headerlink" title="（二）数据分析中的去重统计"></a>（二）数据分析中的去重统计</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 场景3：网站流量分析（去重访问统计）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    <span class="type">DATE</span>(visit_time) <span class="keyword">as</span> visit_date,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> total_visits,                    <span class="comment">-- 总访问次数（包含重复）</span></span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> user_id) <span class="keyword">as</span> unique_visitors,  <span class="comment">-- 独立访客数</span></span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> session_id) <span class="keyword">as</span> unique_sessions <span class="comment">-- 独立会话数</span></span><br><span class="line"><span class="keyword">FROM</span> website_visits </span><br><span class="line"><span class="keyword">WHERE</span> visit_time <span class="operator">&gt;=</span> DATE_SUB(NOW(), <span class="type">INTERVAL</span> <span class="number">7</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="type">DATE</span>(visit_time)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> visit_date;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 场景4：用户行为分析（去重行为统计）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    user_id,</span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> action_type) <span class="keyword">as</span> action_types,     <span class="comment">-- 用户执行了多少种不同行为</span></span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> product_id) <span class="keyword">as</span> viewed_products,   <span class="comment">-- 查看了多少不同商品</span></span><br><span class="line">    <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> total_actions                        <span class="comment">-- 总行为次数</span></span><br><span class="line"><span class="keyword">FROM</span> user_actions </span><br><span class="line"><span class="keyword">WHERE</span> action_date <span class="operator">&gt;=</span> DATE_SUB(NOW(), <span class="type">INTERVAL</span> <span class="number">30</span> <span class="keyword">DAY</span>)</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> user_id</span><br><span class="line"><span class="keyword">HAVING</span> action_types <span class="operator">&gt;=</span> <span class="number">3</span>;  <span class="comment">-- 至少执行了3种不同行为的用户</span></span><br></pre></td></tr></table></figure>

<h1 id="五、性能优化建议"><a href="#五、性能优化建议" class="headerlink" title="五、性能优化建议"></a>五、性能优化建议</h1><h2 id="（一）索引优化"><a href="#（一）索引优化" class="headerlink" title="（一）索引优化"></a>（一）索引优化</h2><p>合理的索引设计对去重操作的性能至关重要：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为经常用于去重的列创建索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_customer_email <span class="keyword">ON</span> customers(email);</span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_product_category <span class="keyword">ON</span> products(category);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 复合索引用于多列去重</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX idx_order_customer_date <span class="keyword">ON</span> orders(customer_id, order_date);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看索引使用情况</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>

<h2 id="（二）查询优化技巧"><a href="#（二）查询优化技巧" class="headerlink" title="（二）查询优化技巧"></a>（二）查询优化技巧</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 使用EXISTS替代DISTINCT子查询</span></span><br><span class="line"><span class="comment">-- 不推荐：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> category <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> featured_products</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 推荐：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products p <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> featured_products fp <span class="keyword">WHERE</span> fp.category <span class="operator">=</span> p.category</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 合理使用LIMIT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> products LIMIT <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 避免在大表上进行全表DISTINCT</span></span><br><span class="line"><span class="comment">-- 如果可能，先用WHERE条件过滤数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> customer_id </span><br><span class="line"><span class="keyword">FROM</span> orders </span><br><span class="line"><span class="keyword">WHERE</span> order_date <span class="operator">&gt;=</span> <span class="string">&#x27;2024-01-01&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="六、常见问题与解决方案"><a href="#六、常见问题与解决方案" class="headerlink" title="六、常见问题与解决方案"></a>六、常见问题与解决方案</h1><h2 id="（一）NULL值处理"><a href="#（一）NULL值处理" class="headerlink" title="（一）NULL值处理"></a>（一）NULL值处理</h2><p>在去重操作中，NULL值的处理需要特别注意：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- DISTINCT会将NULL视为相同值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> phone <span class="keyword">FROM</span> customers;  <span class="comment">-- 多个NULL只会返回一个NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果要排除NULL值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> phone <span class="keyword">FROM</span> customers <span class="keyword">WHERE</span> phone <span class="keyword">IS</span> <span class="keyword">NOT NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- GROUP BY也会将NULL归为一组</span></span><br><span class="line"><span class="keyword">SELECT</span> phone, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> customers <span class="keyword">GROUP</span> <span class="keyword">BY</span> phone;</span><br></pre></td></tr></table></figure>

<h2 id="（二）性能问题排查"><a href="#（二）性能问题排查" class="headerlink" title="（二）性能问题排查"></a>（二）性能问题排查</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用EXPLAIN分析查询性能</span></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> category <span class="keyword">FROM</span> products;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看查询执行时间</span></span><br><span class="line"><span class="keyword">SET</span> profiling <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> customer_id <span class="keyword">FROM</span> orders;</span><br><span class="line"><span class="keyword">SHOW</span> PROFILES;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对于大数据量，考虑分批处理</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> customer_id <span class="keyword">FROM</span> orders </span><br><span class="line"><span class="keyword">WHERE</span> order_date <span class="keyword">BETWEEN</span> <span class="string">&#x27;2024-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2024-01-31&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h1 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h1><p>MySQL中的去重操作是数据处理的基础技能，掌握不同去重方法的特点和适用场景非常重要：</p>
<ol>
<li><strong>DISTINCT</strong>：适用于简单的结果去重，语法简洁，但功能相对单一</li>
<li><strong>GROUP BY</strong>：功能强大，可以结合聚合函数进行统计分析，是数据分析的利器</li>
<li>**窗口函数ROW_NUMBER()**：适用于复杂的去重场景，如删除重复数据、获取每组最新记录等</li>
<li><strong>UNION</strong>：适用于合并多个查询结果并去重</li>
<li><strong>获取每组最新记录</strong>：这是业务中最常见的去重需求，推荐使用ROW_NUMBER()窗口函数实现</li>
</ol>
<p>在实际应用中，应该根据具体的业务需求和数据特点选择合适的去重方法，同时注意性能优化，合理使用索引，避免在大数据量上进行低效的去重操作。</p>
<p>通过本文的学习，相信大家对MySQL的去重操作有了更深入的理解，能够在实际工作中灵活运用这些技术，提高数据处理的效率和准确性。</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/select.html">MySQL官方文档 - SELECT语句</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/group-by-optimization.html">MySQL官方文档 - GROUP BY优化</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/distinct-optimization.html">MySQL官方文档 - DISTINCT优化</a></li>
<li><a href="https://dev.mysql.com/doc/refman/8.0/en/optimization.html">MySQL性能优化最佳实践</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在日常的数据库操作中，数据去重是一个非常常见的需求。无论是查询结果去重、数据清洗，还是统计分析，我们都需要掌握MySQL中的各种去重技术。本]]>
    </summary>
    
      <category term="MySQL" scheme="https://hexo.blog.uwakeme.tech/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://hexo.blog.uwakeme.tech/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://hexo.blog.uwakeme.tech/categories/MySQL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【软件功能解析】B站弹幕系统技术实现深度剖析：从前端渲染到后端存储]]></title>
    <link href="https://hexo.blog.uwakeme.tech/2025/08/06/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/%E3%80%90%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90%E3%80%91B%E7%AB%99%E5%BC%B9%E5%B9%95%E7%B3%BB%E7%BB%9F%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%89%8D%E7%AB%AF%E6%B8%B2%E6%9F%93%E5%88%B0%E5%90%8E%E7%AB%AF%E5%AD%98%E5%82%A8/"/>
    <id>https://hexo.blog.uwakeme.tech/2025/08/06/软件功能解析/【软件功能解析】B站弹幕系统技术实现深度剖析：从前端渲染到后端存储/</id>
    <published>2025-08-05T16:00:00.000Z</published>
    <updated>2025-08-06T01:18:08.130Z</updated>
    <content type="html"><![CDATA[<h1 id="一、弹幕系统概述与技术挑战"><a href="#一、弹幕系统概述与技术挑战" class="headerlink" title="一、弹幕系统概述与技术挑战"></a>一、弹幕系统概述与技术挑战</h1><h2 id="（一）弹幕系统的核心特征"><a href="#（一）弹幕系统的核心特征" class="headerlink" title="（一）弹幕系统的核心特征"></a>（一）弹幕系统的核心特征</h2><ul>
<li><p><strong>实时性要求</strong></p>
<ul>
<li>毫秒级延迟：弹幕发送到显示延迟需控制在100ms内</li>
<li>时间同步：弹幕与视频播放进度精确同步</li>
<li>并发处理：支持数万用户同时观看和发送弹幕</li>
<li>流畅体验：高频弹幕不影响视频播放性能</li>
</ul>
</li>
<li><p><strong>数据特点</strong></p>
<ul>
<li>海量数据：热门视频可产生数十万条弹幕</li>
<li>时序性：弹幕与视频时间轴强绑定</li>
<li>短文本：单条弹幕通常20-50字符</li>
<li>高并发：热门直播间同时在线用户可达百万级</li>
</ul>
</li>
<li><p><strong>业务复杂性</strong></p>
<ul>
<li>多端同步：Web、移动端、TV端弹幕同步显示</li>
<li>个性化：弹幕屏蔽、过滤、样式自定义</li>
<li>内容审核：实时敏感词过滤、人工审核</li>
<li>互动功能：弹幕点赞、回复、举报</li>
</ul>
</li>
</ul>
<h2 id="（二）技术架构挑战"><a href="#（二）技术架构挑战" class="headerlink" title="（二）技术架构挑战"></a>（二）技术架构挑战</h2><ul>
<li><p><strong>性能挑战</strong></p>
<ul>
<li>前端渲染：大量DOM元素的高效渲染和回收</li>
<li>内存管理：避免弹幕积累导致的内存泄漏</li>
<li>CPU优化：动画计算不能影响视频解码</li>
<li>网络优化：减少弹幕数据传输带宽消耗</li>
</ul>
</li>
<li><p><strong>可扩展性挑战</strong></p>
<ul>
<li>水平扩展：支持用户量和视频数量的线性增长</li>
<li>存储扩展：历史弹幕数据的分布式存储</li>
<li>计算扩展：实时弹幕处理的分布式计算</li>
<li>缓存策略：多级缓存提升访问性能</li>
</ul>
</li>
</ul>
<h1 id="二、前端弹幕渲染系统"><a href="#二、前端弹幕渲染系统" class="headerlink" title="二、前端弹幕渲染系统"></a>二、前端弹幕渲染系统</h1><h2 id="（一）弹幕渲染引擎设计"><a href="#（一）弹幕渲染引擎设计" class="headerlink" title="（一）弹幕渲染引擎设计"></a>（一）弹幕渲染引擎设计</h2><ul>
<li><strong>Canvas渲染方案</strong><ul>
<li>高性能：直接操作像素，避免DOM操作开销</li>
<li>动画流畅：60FPS的弹幕移动动画</li>
<li>内存可控：统一的渲染缓冲区管理</li>
<li>碰撞检测：弹幕轨道分配和重叠避免</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Canvas弹幕渲染核心代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuRenderer</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">canvas, video</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">canvas</span> = canvas;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span> = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span> = video;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">danmakuList</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">tracks</span> = []; <span class="comment">// 弹幕轨道</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加弹幕</span></span><br><span class="line">    <span class="title function_">addDanmaku</span>(<span class="params">danmaku</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> track = <span class="variable language_">this</span>.<span class="title function_">findAvailableTrack</span>(danmaku);</span><br><span class="line">        <span class="keyword">if</span> (track !== -<span class="number">1</span>) &#123;</span><br><span class="line">            danmaku.<span class="property">track</span> = track;</span><br><span class="line">            danmaku.<span class="property">x</span> = <span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">width</span>;</span><br><span class="line">            danmaku.<span class="property">y</span> = track * <span class="number">30</span> + <span class="number">25</span>; <span class="comment">// 每行高度30px</span></span><br><span class="line">            danmaku.<span class="property">speed</span> = <span class="variable language_">this</span>.<span class="title function_">calculateSpeed</span>(danmaku.<span class="property">text</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">danmakuList</span>.<span class="title function_">push</span>(danmaku);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 查找可用轨道</span></span><br><span class="line">    <span class="title function_">findAvailableTrack</span>(<span class="params">newDanmaku</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> trackCount = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">height</span> / <span class="number">30</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; trackCount; i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> canUse = <span class="literal">true</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 检查该轨道是否有冲突的弹幕</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> danmaku <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">danmakuList</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (danmaku.<span class="property">track</span> === i) &#123;</span><br><span class="line">                    <span class="keyword">const</span> danmakuRight = danmaku.<span class="property">x</span> + danmaku.<span class="property">width</span>;</span><br><span class="line">                    <span class="keyword">const</span> newDanmakuSpeed = <span class="variable language_">this</span>.<span class="title function_">calculateSpeed</span>(newDanmaku.<span class="property">text</span>);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 计算是否会发生碰撞</span></span><br><span class="line">                    <span class="keyword">if</span> (danmakuRight &gt; <span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">width</span> - <span class="number">100</span> &amp;&amp; </span><br><span class="line">                        danmaku.<span class="property">speed</span> &lt;= newDanmakuSpeed) &#123;</span><br><span class="line">                        canUse = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (canUse) <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// 无可用轨道</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 计算弹幕移动速度</span></span><br><span class="line">    <span class="title function_">calculateSpeed</span>(<span class="params">text</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> baseSpeed = <span class="number">2</span>; <span class="comment">// 基础速度</span></span><br><span class="line">        <span class="keyword">const</span> textWidth = <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">measureText</span>(text).<span class="property">width</span>;</span><br><span class="line">        <span class="comment">// 根据文本长度调整速度，确保显示时间相对一致</span></span><br><span class="line">        <span class="keyword">return</span> baseSpeed + (textWidth / <span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">width</span>) * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 渲染循环</span></span><br><span class="line">    <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">isRunning</span>) <span class="keyword">return</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 清空画布</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">width</span>, <span class="variable language_">this</span>.<span class="property">canvas</span>.<span class="property">height</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 渲染所有弹幕</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="variable language_">this</span>.<span class="property">danmakuList</span>.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">const</span> danmaku = <span class="variable language_">this</span>.<span class="property">danmakuList</span>[i];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 更新位置</span></span><br><span class="line">            danmaku.<span class="property">x</span> -= danmaku.<span class="property">speed</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 移除屏幕外的弹幕</span></span><br><span class="line">            <span class="keyword">if</span> (danmaku.<span class="property">x</span> + danmaku.<span class="property">width</span> &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">danmakuList</span>.<span class="title function_">splice</span>(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 绘制弹幕</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">drawDanmaku</span>(danmaku);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 下一帧</span></span><br><span class="line">        <span class="title function_">requestAnimationFrame</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">render</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 绘制单条弹幕</span></span><br><span class="line">    <span class="title function_">drawDanmaku</span>(<span class="params">danmaku</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">save</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置字体样式</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">font</span> = <span class="string">`<span class="subst">$&#123;danmaku.fontSize&#125;</span>px <span class="subst">$&#123;danmaku.fontFamily&#125;</span>`</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">fillStyle</span> = danmaku.<span class="property">color</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">strokeStyle</span> = <span class="string">&#x27;#000&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">lineWidth</span> = <span class="number">2</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 绘制描边（提高可读性）</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">strokeText</span>(danmaku.<span class="property">text</span>, danmaku.<span class="property">x</span>, danmaku.<span class="property">y</span>);</span><br><span class="line">        <span class="comment">// 绘制文字</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">fillText</span>(danmaku.<span class="property">text</span>, danmaku.<span class="property">x</span>, danmaku.<span class="property">y</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="title function_">restore</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 启动渲染</span></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">render</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 停止渲染</span></span><br><span class="line">    <span class="title function_">stop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）弹幕与视频同步机制"><a href="#（二）弹幕与视频同步机制" class="headerlink" title="（二）弹幕与视频同步机制"></a>（二）弹幕与视频同步机制</h2><ul>
<li><strong>时间轴同步</strong><ul>
<li>弹幕时间戳：记录弹幕在视频中的精确时间点</li>
<li>播放进度监听：监听video元素的timeupdate事件</li>
<li>缓冲预加载：提前加载即将显示的弹幕</li>
<li>跳转处理：视频跳转时清理当前弹幕并重新加载</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 弹幕时间同步管理器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuTimeSync</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">video, renderer</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span> = video;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">renderer</span> = renderer;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">danmakuData</span> = []; <span class="comment">// 所有弹幕数据</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentIndex</span> = <span class="number">0</span>; <span class="comment">// 当前播放位置的弹幕索引</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preloadTime</span> = <span class="number">5</span>; <span class="comment">// 预加载5秒的弹幕</span></span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">bindEvents</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 绑定视频事件</span></span><br><span class="line">    <span class="title function_">bindEvents</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 监听播放进度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;timeupdate&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">syncDanmaku</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监听跳转</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;seeked&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleSeek</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监听播放状态</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;play&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">renderer</span>.<span class="title function_">start</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pause&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">renderer</span>.<span class="title function_">stop</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 同步弹幕显示</span></span><br><span class="line">    <span class="title function_">syncDanmaku</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> currentTime = <span class="variable language_">this</span>.<span class="property">video</span>.<span class="property">currentTime</span>;</span><br><span class="line">        <span class="keyword">const</span> endTime = currentTime + <span class="variable language_">this</span>.<span class="property">preloadTime</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 查找需要显示的弹幕</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">currentIndex</span> &lt; <span class="variable language_">this</span>.<span class="property">danmakuData</span>.<span class="property">length</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> danmaku = <span class="variable language_">this</span>.<span class="property">danmakuData</span>[<span class="variable language_">this</span>.<span class="property">currentIndex</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (danmaku.<span class="property">time</span> &lt;= endTime) &#123;</span><br><span class="line">                <span class="comment">// 计算延迟显示时间</span></span><br><span class="line">                <span class="keyword">const</span> delay = (danmaku.<span class="property">time</span> - currentTime) * <span class="number">1000</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (delay &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">// 立即显示</span></span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">renderer</span>.<span class="title function_">addDanmaku</span>(danmaku);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 延迟显示</span></span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(<span class="variable language_">this</span>.<span class="property">video</span>.<span class="property">currentTime</span> - danmaku.<span class="property">time</span>) &lt; <span class="number">0.5</span>) &#123;</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="property">renderer</span>.<span class="title function_">addDanmaku</span>(danmaku);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, delay);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">currentIndex</span>++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理视频跳转</span></span><br><span class="line">    <span class="title function_">handleSeek</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> currentTime = <span class="variable language_">this</span>.<span class="property">video</span>.<span class="property">currentTime</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 清空当前显示的弹幕</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">renderer</span>.<span class="title function_">clear</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 重新定位弹幕索引</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentIndex</span> = <span class="variable language_">this</span>.<span class="title function_">findDanmakuIndex</span>(currentTime);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 立即同步弹幕</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">syncDanmaku</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 二分查找弹幕索引</span></span><br><span class="line">    <span class="title function_">findDanmakuIndex</span>(<span class="params">time</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> left = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">let</span> right = <span class="variable language_">this</span>.<span class="property">danmakuData</span>.<span class="property">length</span> - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">const</span> mid = <span class="title class_">Math</span>.<span class="title function_">floor</span>((left + right) / <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">const</span> danmaku = <span class="variable language_">this</span>.<span class="property">danmakuData</span>[mid];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (danmaku.<span class="property">time</span> &lt; time) &#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加载弹幕数据</span></span><br><span class="line">    <span class="title function_">loadDanmakuData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 按时间排序</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">danmakuData</span> = data.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">time</span> - b.<span class="property">time</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentIndex</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）弹幕性能优化策略"><a href="#（三）弹幕性能优化策略" class="headerlink" title="（三）弹幕性能优化策略"></a>（三）弹幕性能优化策略</h2><ul>
<li><p><strong>渲染优化</strong></p>
<ul>
<li>对象池：复用弹幕对象减少GC压力</li>
<li>离屏渲染：预渲染弹幕文本到离屏Canvas</li>
<li>分层渲染：静态背景和动态弹幕分层</li>
<li>帧率控制：根据设备性能动态调整帧率</li>
</ul>
</li>
<li><p><strong>内存优化</strong></p>
<ul>
<li>及时清理：移出屏幕的弹幕立即销毁</li>
<li>数据分页：大量弹幕数据分批加载</li>
<li>缓存策略：LRU缓存常用弹幕样式</li>
<li>内存监控：监控内存使用避免泄漏</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 弹幕对象池优化</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuPool</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">maxSize = <span class="number">1000</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">pool</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxSize</span> = maxSize;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取弹幕对象</span></span><br><span class="line">    <span class="title function_">getDanmaku</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pool</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">pool</span>.<span class="title function_">pop</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">createDanmaku</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 回收弹幕对象</span></span><br><span class="line">    <span class="title function_">recycleDanmaku</span>(<span class="params">danmaku</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pool</span>.<span class="property">length</span> &lt; <span class="variable language_">this</span>.<span class="property">maxSize</span>) &#123;</span><br><span class="line">            <span class="comment">// 重置对象状态</span></span><br><span class="line">            danmaku.<span class="title function_">reset</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">pool</span>.<span class="title function_">push</span>(danmaku);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建新的弹幕对象</span></span><br><span class="line">    <span class="title function_">createDanmaku</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">speed</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#ffffff&#x27;</span>,</span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">16</span>,</span><br><span class="line">            <span class="attr">fontFamily</span>: <span class="string">&#x27;Arial&#x27;</span>,</span><br><span class="line">            <span class="attr">time</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">track</span>: -<span class="number">1</span>,</span><br><span class="line">            <span class="attr">width</span>: <span class="number">0</span>,</span><br><span class="line">            </span><br><span class="line">            <span class="title function_">reset</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">text</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">x</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">y</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">speed</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">color</span> = <span class="string">&#x27;#ffffff&#x27;</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">fontSize</span> = <span class="number">16</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">fontFamily</span> = <span class="string">&#x27;Arial&#x27;</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">time</span> = <span class="number">0</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">track</span> = -<span class="number">1</span>;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">width</span> = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、实时通信与数据传输"><a href="#三、实时通信与数据传输" class="headerlink" title="三、实时通信与数据传输"></a>三、实时通信与数据传输</h1><h2 id="（一）WebSocket实时通信"><a href="#（一）WebSocket实时通信" class="headerlink" title="（一）WebSocket实时通信"></a>（一）WebSocket实时通信</h2><ul>
<li><strong>连接管理</strong><ul>
<li>连接建立：用户进入视频页面时建立WebSocket连接</li>
<li>心跳保活：定期发送ping&#x2F;pong消息保持连接</li>
<li>断线重连：网络异常时自动重连机制</li>
<li>连接池：服务端管理大量并发连接</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WebSocket弹幕客户端</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuWebSocket</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">videoId, userId</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">videoId</span> = videoId;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">userId</span> = userId;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span> = <span class="number">5</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heartbeatInterval</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">messageHandlers</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 建立WebSocket连接</span></span><br><span class="line">    <span class="title function_">connect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> wsUrl = <span class="string">`wss://api.bilibili.com/danmaku/ws?video_id=<span class="subst">$&#123;<span class="variable language_">this</span>.videoId&#125;</span>&amp;user_id=<span class="subst">$&#123;<span class="variable language_">this</span>.userId&#125;</span>`</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(wsUrl);</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onopen</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;弹幕WebSocket连接已建立&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">startHeartbeat</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 发送认证信息</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">send</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;auth&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="attr">token</span>: <span class="variable language_">this</span>.<span class="title function_">getAuthToken</span>(),</span><br><span class="line">                    <span class="attr">videoId</span>: <span class="variable language_">this</span>.<span class="property">videoId</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onmessage</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleMessage</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(event.<span class="property">data</span>));</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onclose</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;弹幕WebSocket连接已关闭&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">stopHeartbeat</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">reconnect</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onerror</span> = <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;弹幕WebSocket错误:&#x27;</span>, error);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理接收到的消息</span></span><br><span class="line">    <span class="title function_">handleMessage</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; type, data &#125; = message;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;danmaku&#x27;</span>:</span><br><span class="line">                <span class="comment">// 新弹幕消息</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;newDanmaku&#x27;</span>, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;danmaku_count&#x27;</span>:</span><br><span class="line">                <span class="comment">// 弹幕统计信息</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;danmakuCount&#x27;</span>, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;user_count&#x27;</span>:</span><br><span class="line">                <span class="comment">// 在线用户数</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;userCount&#x27;</span>, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;pong&#x27;</span>:</span><br><span class="line">                <span class="comment">// 心跳响应</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                </span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;未知消息类型:&#x27;</span>, type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送弹幕</span></span><br><span class="line">    <span class="title function_">sendDanmaku</span>(<span class="params">text, time, color = <span class="string">&#x27;#ffffff&#x27;</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">OPEN</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">send</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;send_danmaku&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="attr">text</span>: text,</span><br><span class="line">                    <span class="attr">time</span>: time,</span><br><span class="line">                    <span class="attr">color</span>: color,</span><br><span class="line">                    <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送消息</span></span><br><span class="line">    <span class="title function_">send</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">OPEN</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开始心跳</span></span><br><span class="line">    <span class="title function_">startHeartbeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">heartbeatInterval</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">send</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;ping&#x27;</span> &#125;);</span><br><span class="line">        &#125;, <span class="number">30000</span>); <span class="comment">// 30秒心跳</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 停止心跳</span></span><br><span class="line">    <span class="title function_">stopHeartbeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">heartbeatInterval</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">heartbeatInterval</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">heartbeatInterval</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重连机制</span></span><br><span class="line">    <span class="title function_">reconnect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> &lt; <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span>++;</span><br><span class="line">            <span class="keyword">const</span> delay = <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span>) * <span class="number">1000</span>; <span class="comment">// 指数退避</span></span><br><span class="line">            </span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`尝试重连弹幕WebSocket (<span class="subst">$&#123;<span class="variable language_">this</span>.reconnectAttempts&#125;</span>/<span class="subst">$&#123;<span class="variable language_">this</span>.maxReconnectAttempts&#125;</span>)`</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">            &#125;, delay);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 事件监听</span></span><br><span class="line">    <span class="title function_">on</span>(<span class="params">event, handler</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">messageHandlers</span>.<span class="title function_">has</span>(event)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">messageHandlers</span>.<span class="title function_">set</span>(event, []);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">messageHandlers</span>.<span class="title function_">get</span>(event).<span class="title function_">push</span>(handler);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 触发事件</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="params">event, data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> handlers = <span class="variable language_">this</span>.<span class="property">messageHandlers</span>.<span class="title function_">get</span>(event);</span><br><span class="line">        <span class="keyword">if</span> (handlers) &#123;</span><br><span class="line">            handlers.<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(data));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭连接</span></span><br><span class="line">    <span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">stopHeartbeat</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取认证Token</span></span><br><span class="line">    <span class="title function_">getAuthToken</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 从cookie或localStorage获取用户认证token</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;auth_token&#x27;</span>) || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）数据协议设计"><a href="#（二）数据协议设计" class="headerlink" title="（二）数据协议设计"></a>（二）数据协议设计</h2><ul>
<li><p><strong>消息格式</strong></p>
<ul>
<li>JSON协议：易于解析和调试</li>
<li>消息类型：区分弹幕、系统消息、控制消息</li>
<li>数据压缩：gzip压缩减少传输量</li>
<li>版本兼容：协议版本号支持向后兼容</li>
</ul>
</li>
<li><p><strong>弹幕数据结构</strong></p>
<ul>
<li>基础字段：文本内容、时间戳、用户ID</li>
<li>样式字段：颜色、字体大小、特效</li>
<li>元数据：IP地址、设备信息、审核状态</li>
<li>扩展字段：预留字段支持功能扩展</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 弹幕数据结构定义</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DanmakuMessage</span> = &#123;</span><br><span class="line">    <span class="comment">// 消息头</span></span><br><span class="line">    <span class="attr">version</span>: <span class="string">&#x27;1.0&#x27;</span>,           <span class="comment">// 协议版本</span></span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;danmaku&#x27;</span>,          <span class="comment">// 消息类型</span></span><br><span class="line">    <span class="attr">timestamp</span>: <span class="number">1640995200000</span>, <span class="comment">// 服务器时间戳</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 弹幕数据</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">&#x27;dm_123456789&#x27;</span>,        <span class="comment">// 弹幕唯一ID</span></span><br><span class="line">        <span class="attr">video_id</span>: <span class="string">&#x27;BV1234567890&#x27;</span>,  <span class="comment">// 视频ID</span></span><br><span class="line">        <span class="attr">user_id</span>: <span class="string">&#x27;uid_987654321&#x27;</span>,  <span class="comment">// 用户ID</span></span><br><span class="line">        <span class="attr">username</span>: <span class="string">&#x27;用户昵称&#x27;</span>,       <span class="comment">// 用户昵称</span></span><br><span class="line">        <span class="attr">text</span>: <span class="string">&#x27;这是一条弹幕&#x27;</span>,       <span class="comment">// 弹幕内容</span></span><br><span class="line">        <span class="attr">time</span>: <span class="number">120.5</span>,               <span class="comment">// 视频时间点(秒)</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 样式信息</span></span><br><span class="line">        <span class="attr">style</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#ffffff&#x27;</span>,      <span class="comment">// 文字颜色</span></span><br><span class="line">            <span class="attr">fontSize</span>: <span class="number">16</span>,          <span class="comment">// 字体大小</span></span><br><span class="line">            <span class="attr">fontFamily</span>: <span class="string">&#x27;Arial&#x27;</span>,   <span class="comment">// 字体</span></span><br><span class="line">            <span class="attr">mode</span>: <span class="string">&#x27;scroll&#x27;</span>,        <span class="comment">// 弹幕模式: scroll/top/bottom</span></span><br><span class="line">            <span class="attr">speed</span>: <span class="string">&#x27;normal&#x27;</span>        <span class="comment">// 移动速度: slow/normal/fast</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 元数据</span></span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">            <span class="attr">ip</span>: <span class="string">&#x27;192.168.1.1&#x27;</span>,     <span class="comment">// 用户IP</span></span><br><span class="line">            <span class="attr">device</span>: <span class="string">&#x27;web&#x27;</span>,         <span class="comment">// 设备类型</span></span><br><span class="line">            <span class="attr">client_version</span>: <span class="string">&#x27;1.0&#x27;</span>, <span class="comment">// 客户端版本</span></span><br><span class="line">            <span class="attr">audit_status</span>: <span class="string">&#x27;pass&#x27;</span>   <span class="comment">// 审核状态</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h1 id="四、后端架构与数据存储"><a href="#四、后端架构与数据存储" class="headerlink" title="四、后端架构与数据存储"></a>四、后端架构与数据存储</h1><h2 id="（一）微服务架构设计"><a href="#（一）微服务架构设计" class="headerlink" title="（一）微服务架构设计"></a>（一）微服务架构设计</h2><ul>
<li><strong>服务拆分</strong><ul>
<li>弹幕接收服务：处理弹幕发送请求</li>
<li>弹幕分发服务：实时推送弹幕到客户端</li>
<li>弹幕存储服务：持久化弹幕数据</li>
<li>审核服务：内容审核和过滤</li>
<li>统计服务：弹幕数据统计分析</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 弹幕接收服务 (Python Flask示例)</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">from</span> flask_socketio <span class="keyword">import</span> SocketIO, emit, join_room</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;your-secret-key&#x27;</span></span><br><span class="line">socketio = SocketIO(app, cors_allowed_origins=<span class="string">&quot;*&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Redis连接</span></span><br><span class="line">redis_client = redis.Redis(host=<span class="string">&#x27;localhost&#x27;</span>, port=<span class="number">6379</span>, db=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuService</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.audit_service = AuditService()</span><br><span class="line">        <span class="variable language_">self</span>.storage_service = StorageService()</span><br><span class="line">    </span><br><span class="line"><span class="meta">    @socketio.on(<span class="params"><span class="string">&#x27;send_danmaku&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_send_danmaku</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;处理弹幕发送请求&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 验证用户权限</span></span><br><span class="line">            user_id = <span class="variable language_">self</span>.verify_user_token(data.get(<span class="string">&#x27;token&#x27;</span>))</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> user_id:</span><br><span class="line">                emit(<span class="string">&#x27;error&#x27;</span>, &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;用户认证失败&#x27;</span>&#125;)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 构造弹幕对象</span></span><br><span class="line">            danmaku = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: <span class="variable language_">self</span>.generate_danmaku_id(),</span><br><span class="line">                <span class="string">&#x27;video_id&#x27;</span>: data[<span class="string">&#x27;video_id&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;user_id&#x27;</span>: user_id,</span><br><span class="line">                <span class="string">&#x27;text&#x27;</span>: data[<span class="string">&#x27;text&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;time&#x27;</span>: data[<span class="string">&#x27;time&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;color&#x27;</span>: data.get(<span class="string">&#x27;color&#x27;</span>, <span class="string">&#x27;#ffffff&#x27;</span>),</span><br><span class="line">                <span class="string">&#x27;timestamp&#x27;</span>: datetime.now().isoformat(),</span><br><span class="line">                <span class="string">&#x27;ip&#x27;</span>: request.remote_addr</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 内容审核</span></span><br><span class="line">            audit_result = <span class="variable language_">self</span>.audit_service.check_content(danmaku[<span class="string">&#x27;text&#x27;</span>])</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> audit_result[<span class="string">&#x27;pass&#x27;</span>]:</span><br><span class="line">                emit(<span class="string">&#x27;error&#x27;</span>, &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;弹幕内容不符合规范&#x27;</span>&#125;)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 频率限制检查</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.check_rate_limit(user_id):</span><br><span class="line">                emit(<span class="string">&#x27;error&#x27;</span>, &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;发送频率过快，请稍后再试&#x27;</span>&#125;)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 存储弹幕</span></span><br><span class="line">            <span class="variable language_">self</span>.storage_service.save_danmaku(danmaku)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 实时分发</span></span><br><span class="line">            <span class="variable language_">self</span>.broadcast_danmaku(danmaku)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 返回成功响应</span></span><br><span class="line">            emit(<span class="string">&#x27;danmaku_sent&#x27;</span>, &#123;<span class="string">&#x27;id&#x27;</span>: danmaku[<span class="string">&#x27;id&#x27;</span>]&#125;)</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            emit(<span class="string">&#x27;error&#x27;</span>, &#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;发送失败，请重试&#x27;</span>&#125;)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;弹幕发送错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">broadcast_danmaku</span>(<span class="params">self, danmaku</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;广播弹幕到所有观看者&quot;&quot;&quot;</span></span><br><span class="line">        room = <span class="string">f&quot;video_<span class="subst">&#123;danmaku[<span class="string">&#x27;video_id&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 构造广播消息</span></span><br><span class="line">        broadcast_data = &#123;</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;danmaku&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: danmaku[<span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;text&#x27;</span>: danmaku[<span class="string">&#x27;text&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;time&#x27;</span>: danmaku[<span class="string">&#x27;time&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;color&#x27;</span>: danmaku[<span class="string">&#x27;color&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="variable language_">self</span>.get_username(danmaku[<span class="string">&#x27;user_id&#x27;</span>])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 发送到房间内所有用户</span></span><br><span class="line">        socketio.emit(<span class="string">&#x27;new_danmaku&#x27;</span>, broadcast_data, room=room)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 同时推送到Redis队列供其他服务消费</span></span><br><span class="line">        redis_client.lpush(</span><br><span class="line">            <span class="string">f&quot;danmaku_queue_<span class="subst">&#123;danmaku[<span class="string">&#x27;video_id&#x27;</span>]&#125;</span>&quot;</span>, </span><br><span class="line">            json.dumps(broadcast_data)</span><br><span class="line">        )</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_rate_limit</span>(<span class="params">self, user_id</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查用户发送频率限制&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;rate_limit_<span class="subst">&#123;user_id&#125;</span>&quot;</span></span><br><span class="line">        current_count = redis_client.get(key)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> current_count <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 第一次发送，设置计数器</span></span><br><span class="line">            redis_client.setex(key, <span class="number">60</span>, <span class="number">1</span>)  <span class="comment"># 1分钟内限制</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(current_count) &gt;= <span class="number">10</span>:  <span class="comment"># 每分钟最多10条</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">        redis_client.incr(key)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @socketio.on(<span class="params"><span class="string">&#x27;join_video&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_join_video</span>(<span class="params">self, data</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;用户加入视频房间&quot;&quot;&quot;</span></span><br><span class="line">        video_id = data[<span class="string">&#x27;video_id&#x27;</span>]</span><br><span class="line">        room = <span class="string">f&quot;video_<span class="subst">&#123;video_id&#125;</span>&quot;</span></span><br><span class="line">        join_room(room)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 发送历史弹幕</span></span><br><span class="line">        <span class="variable language_">self</span>.send_history_danmaku(video_id)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 更新在线人数</span></span><br><span class="line">        <span class="variable language_">self</span>.update_online_count(video_id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send_history_danmaku</span>(<span class="params">self, video_id</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;发送历史弹幕数据&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 从缓存或数据库获取弹幕数据</span></span><br><span class="line">        history_danmaku = <span class="variable language_">self</span>.storage_service.get_video_danmaku(video_id)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 分批发送，避免一次性发送过多数据</span></span><br><span class="line">        batch_size = <span class="number">1000</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(history_danmaku), batch_size):</span><br><span class="line">            batch = history_danmaku[i:i + batch_size]</span><br><span class="line">            emit(<span class="string">&#x27;history_danmaku&#x27;</span>, &#123;<span class="string">&#x27;data&#x27;</span>: batch&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容审核服务</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AuditService</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.sensitive_words = <span class="variable language_">self</span>.load_sensitive_words()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">check_content</span>(<span class="params">self, text</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查弹幕内容&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 敏感词过滤</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> <span class="variable language_">self</span>.sensitive_words:</span><br><span class="line">            <span class="keyword">if</span> word <span class="keyword">in</span> text:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;pass&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;reason&#x27;</span>: <span class="string">&#x27;包含敏感词&#x27;</span>&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 长度检查</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(text) &gt; <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;pass&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;reason&#x27;</span>: <span class="string">&#x27;内容过长&#x27;</span>&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 其他规则检查...</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;pass&#x27;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">load_sensitive_words</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;加载敏感词库&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 从数据库或文件加载敏感词</span></span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;敏感词1&#x27;</span>, <span class="string">&#x27;敏感词2&#x27;</span>]  <span class="comment"># 示例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    socketio.run(app, debug=<span class="literal">True</span>, port=<span class="number">5000</span>)</span><br></pre></td></tr></table></figure>

<h2 id="（二）数据存储策略"><a href="#（二）数据存储策略" class="headerlink" title="（二）数据存储策略"></a>（二）数据存储策略</h2><ul>
<li><p><strong>分布式存储</strong></p>
<ul>
<li>主数据库：MySQL存储弹幕基础信息</li>
<li>时序数据库：InfluxDB存储弹幕时间序列数据</li>
<li>缓存层：Redis缓存热点弹幕数据</li>
<li>对象存储：OSS存储弹幕文件和备份</li>
</ul>
</li>
<li><p><strong>数据分片策略</strong></p>
<ul>
<li>按视频ID分片：相同视频的弹幕存储在同一分片</li>
<li>按时间分片：历史弹幕按月份归档</li>
<li>读写分离：主库写入，从库读取</li>
<li>冷热分离：热点数据SSD，冷数据HDD</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 弹幕数据表设计</span></span><br><span class="line"><span class="comment">-- 主弹幕表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> danmaku (</span><br><span class="line">    id <span class="type">BIGINT</span> <span class="keyword">PRIMARY KEY</span> AUTO_INCREMENT,</span><br><span class="line">    video_id <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT NULL</span>,</span><br><span class="line">    user_id <span class="type">BIGINT</span> <span class="keyword">NOT NULL</span>,</span><br><span class="line">    content TEXT <span class="keyword">NOT NULL</span>,</span><br><span class="line">    time_offset <span class="type">DECIMAL</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="keyword">NOT NULL</span>,  <span class="comment">-- 视频时间点(秒)</span></span><br><span class="line">    color <span class="type">VARCHAR</span>(<span class="number">7</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;#ffffff&#x27;</span>,</span><br><span class="line">    font_size TINYINT <span class="keyword">DEFAULT</span> <span class="number">16</span>,</span><br><span class="line">    mode TINYINT <span class="keyword">DEFAULT</span> <span class="number">1</span>,  <span class="comment">-- 1:滚动 2:顶部 3:底部</span></span><br><span class="line">    created_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">    updated_at <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">    status TINYINT <span class="keyword">DEFAULT</span> <span class="number">1</span>,  <span class="comment">-- 1:正常 2:隐藏 3:删除</span></span><br><span class="line">    audit_status TINYINT <span class="keyword">DEFAULT</span> <span class="number">0</span>,  <span class="comment">-- 0:待审核 1:通过 2:拒绝</span></span><br><span class="line">    ip_address <span class="type">VARCHAR</span>(<span class="number">45</span>),</span><br><span class="line">    user_agent TEXT,</span><br><span class="line">    </span><br><span class="line">    INDEX idx_video_time (video_id, time_offset),</span><br><span class="line">    INDEX idx_user_created (user_id, created_at),</span><br><span class="line">    INDEX idx_created_status (created_at, status)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 弹幕统计表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> danmaku_stats (</span><br><span class="line">    video_id <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    total_count <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    today_count <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    peak_count <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,  <span class="comment">-- 峰值弹幕数</span></span><br><span class="line">    last_updated <span class="type">TIMESTAMP</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用户弹幕统计表</span></span><br><span class="line"><span class="keyword">CREATE TABLE</span> user_danmaku_stats (</span><br><span class="line">    user_id <span class="type">BIGINT</span> <span class="keyword">PRIMARY KEY</span>,</span><br><span class="line">    total_sent <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    today_sent <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    last_sent_at <span class="type">TIMESTAMP</span> <span class="keyword">NULL</span>,</span><br><span class="line">    is_banned TINYINT <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">    ban_until <span class="type">TIMESTAMP</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br></pre></td></tr></table></figure>

<h2 id="（三）缓存与性能优化"><a href="#（三）缓存与性能优化" class="headerlink" title="（三）缓存与性能优化"></a>（三）缓存与性能优化</h2><ul>
<li><p><strong>多级缓存架构</strong></p>
<ul>
<li>L1缓存：浏览器本地缓存</li>
<li>L2缓存：CDN边缘缓存</li>
<li>L3缓存：Redis集群缓存</li>
<li>L4缓存：应用内存缓存</li>
</ul>
</li>
<li><p><strong>缓存策略</strong></p>
<ul>
<li>热点数据：实时弹幕数据缓存1小时</li>
<li>历史数据：按视频ID缓存，TTL 24小时</li>
<li>用户数据：用户权限信息缓存30分钟</li>
<li>统计数据：弹幕统计信息缓存5分钟</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis缓存管理</span></span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Optional</span>, <span class="type">List</span>, <span class="type">Dict</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuCache</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.redis_client = redis.Redis(</span><br><span class="line">            host=<span class="string">&#x27;redis-cluster&#x27;</span>,</span><br><span class="line">            port=<span class="number">6379</span>,</span><br><span class="line">            decode_responses=<span class="literal">True</span></span><br><span class="line">        )</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cache_video_danmaku</span>(<span class="params">self, video_id: <span class="built_in">str</span>, danmaku_list: <span class="type">List</span>[<span class="type">Dict</span>], ttl: <span class="built_in">int</span> = <span class="number">3600</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;缓存视频弹幕数据&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;danmaku:video:<span class="subst">&#123;video_id&#125;</span>&quot;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 使用Pipeline批量操作</span></span><br><span class="line">        pipe = <span class="variable language_">self</span>.redis_client.pipeline()</span><br><span class="line">        pipe.delete(key)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 按时间分段存储，便于范围查询</span></span><br><span class="line">        <span class="keyword">for</span> danmaku <span class="keyword">in</span> danmaku_list:</span><br><span class="line">            time_segment = <span class="built_in">int</span>(danmaku[<span class="string">&#x27;time&#x27;</span>] // <span class="number">10</span>)  <span class="comment"># 10秒一个段</span></span><br><span class="line">            segment_key = <span class="string">f&quot;<span class="subst">&#123;key&#125;</span>:segment:<span class="subst">&#123;time_segment&#125;</span>&quot;</span></span><br><span class="line">            pipe.lpush(segment_key, json.dumps(danmaku))</span><br><span class="line">            pipe.expire(segment_key, ttl)</span><br><span class="line">        </span><br><span class="line">        pipe.execute()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_video_danmaku</span>(<span class="params">self, video_id: <span class="built_in">str</span>, start_time: <span class="built_in">float</span> = <span class="number">0</span>, end_time: <span class="built_in">float</span> = <span class="literal">None</span></span>) -&gt; <span class="type">List</span>[<span class="type">Dict</span>]:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取视频弹幕数据&quot;&quot;&quot;</span></span><br><span class="line">        start_segment = <span class="built_in">int</span>(start_time // <span class="number">10</span>)</span><br><span class="line">        end_segment = <span class="built_in">int</span>(end_time // <span class="number">10</span>) <span class="keyword">if</span> end_time <span class="keyword">else</span> start_segment + <span class="number">100</span></span><br><span class="line">        </span><br><span class="line">        danmaku_list = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> segment <span class="keyword">in</span> <span class="built_in">range</span>(start_segment, end_segment + <span class="number">1</span>):</span><br><span class="line">            segment_key = <span class="string">f&quot;danmaku:video:<span class="subst">&#123;video_id&#125;</span>:segment:<span class="subst">&#123;segment&#125;</span>&quot;</span></span><br><span class="line">            segment_data = <span class="variable language_">self</span>.redis_client.lrange(segment_key, <span class="number">0</span>, -<span class="number">1</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> segment_data:</span><br><span class="line">                danmaku = json.loads(item)</span><br><span class="line">                <span class="keyword">if</span> start_time &lt;= danmaku[<span class="string">&#x27;time&#x27;</span>] &lt;= (end_time <span class="keyword">or</span> <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)):</span><br><span class="line">                    danmaku_list.append(danmaku)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sorted</span>(danmaku_list, key=<span class="keyword">lambda</span> x: x[<span class="string">&#x27;time&#x27;</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cache_user_rate_limit</span>(<span class="params">self, user_id: <span class="built_in">str</span>, count: <span class="built_in">int</span>, ttl: <span class="built_in">int</span> = <span class="number">60</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;缓存用户发送频率限制&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;rate_limit:user:<span class="subst">&#123;user_id&#125;</span>&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.redis_client.setex(key, ttl, count)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_user_rate_limit</span>(<span class="params">self, user_id: <span class="built_in">str</span></span>) -&gt; <span class="type">Optional</span>[<span class="built_in">int</span>]:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;获取用户发送频率&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;rate_limit:user:<span class="subst">&#123;user_id&#125;</span>&quot;</span></span><br><span class="line">        count = <span class="variable language_">self</span>.redis_client.get(key)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(count) <span class="keyword">if</span> count <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cache_online_count</span>(<span class="params">self, video_id: <span class="built_in">str</span>, count: <span class="built_in">int</span>, ttl: <span class="built_in">int</span> = <span class="number">30</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;缓存在线人数&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;online:video:<span class="subst">&#123;video_id&#125;</span>&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.redis_client.setex(key, ttl, count)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">increment_online_count</span>(<span class="params">self, video_id: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;增加在线人数&quot;&quot;&quot;</span></span><br><span class="line">        key = <span class="string">f&quot;online:video:<span class="subst">&#123;video_id&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.redis_client.incr(key)</span><br></pre></td></tr></table></figure>

<h1 id="五、系统监控与运维"><a href="#五、系统监控与运维" class="headerlink" title="五、系统监控与运维"></a>五、系统监控与运维</h1><h2 id="（一）实时监控指标"><a href="#（一）实时监控指标" class="headerlink" title="（一）实时监控指标"></a>（一）实时监控指标</h2><ul>
<li><p><strong>业务指标</strong></p>
<ul>
<li>弹幕发送量：每秒弹幕发送数量</li>
<li>在线用户数：实时观看人数统计</li>
<li>延迟监控：弹幕从发送到显示的延迟</li>
<li>成功率：弹幕发送成功率统计</li>
</ul>
</li>
<li><p><strong>技术指标</strong></p>
<ul>
<li>WebSocket连接数：并发连接数监控</li>
<li>服务器性能：CPU、内存、网络使用率</li>
<li>数据库性能：查询响应时间、连接池状态</li>
<li>缓存命中率：Redis缓存命中率统计</li>
</ul>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控数据收集</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> psutil</span><br><span class="line"><span class="keyword">from</span> prometheus_client <span class="keyword">import</span> Counter, Histogram, Gauge, start_http_server</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DanmakuMetrics</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 业务指标</span></span><br><span class="line">        <span class="variable language_">self</span>.danmaku_sent_total = Counter(<span class="string">&#x27;danmaku_sent_total&#x27;</span>, <span class="string">&#x27;弹幕发送总数&#x27;</span>, [<span class="string">&#x27;video_id&#x27;</span>])</span><br><span class="line">        <span class="variable language_">self</span>.danmaku_latency = Histogram(<span class="string">&#x27;danmaku_latency_seconds&#x27;</span>, <span class="string">&#x27;弹幕延迟分布&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.online_users = Gauge(<span class="string">&#x27;online_users_total&#x27;</span>, <span class="string">&#x27;在线用户数&#x27;</span>, [<span class="string">&#x27;video_id&#x27;</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 技术指标</span></span><br><span class="line">        <span class="variable language_">self</span>.websocket_connections = Gauge(<span class="string">&#x27;websocket_connections_total&#x27;</span>, <span class="string">&#x27;WebSocket连接数&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.cpu_usage = Gauge(<span class="string">&#x27;cpu_usage_percent&#x27;</span>, <span class="string">&#x27;CPU使用率&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.memory_usage = Gauge(<span class="string">&#x27;memory_usage_percent&#x27;</span>, <span class="string">&#x27;内存使用率&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 启动指标收集</span></span><br><span class="line">        <span class="variable language_">self</span>.start_system_metrics_collection()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">record_danmaku_sent</span>(<span class="params">self, video_id: <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;记录弹幕发送&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.danmaku_sent_total.labels(video_id=video_id).inc()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">record_danmaku_latency</span>(<span class="params">self, latency: <span class="built_in">float</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;记录弹幕延迟&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.danmaku_latency.observe(latency)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_online_users</span>(<span class="params">self, video_id: <span class="built_in">str</span>, count: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;更新在线用户数&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.online_users.labels(video_id=video_id).<span class="built_in">set</span>(count)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update_websocket_connections</span>(<span class="params">self, count: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;更新WebSocket连接数&quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.websocket_connections.<span class="built_in">set</span>(count)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_system_metrics_collection</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;启动系统指标收集&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">collect_system_metrics</span>():</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="comment"># CPU使用率</span></span><br><span class="line">                cpu_percent = psutil.cpu_percent(interval=<span class="number">1</span>)</span><br><span class="line">                <span class="variable language_">self</span>.cpu_usage.<span class="built_in">set</span>(cpu_percent)</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 内存使用率</span></span><br><span class="line">                memory = psutil.virtual_memory()</span><br><span class="line">                <span class="variable language_">self</span>.memory_usage.<span class="built_in">set</span>(memory.percent)</span><br><span class="line">                </span><br><span class="line">                time.sleep(<span class="number">10</span>)  <span class="comment"># 每10秒收集一次</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">import</span> threading</span><br><span class="line">        thread = threading.Thread(target=collect_system_metrics, daemon=<span class="literal">True</span>)</span><br><span class="line">        thread.start()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动Prometheus指标服务器</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start_http_server(<span class="number">8000</span>)  <span class="comment"># 在8000端口提供指标</span></span><br><span class="line">    metrics = DanmakuMetrics()</span><br></pre></td></tr></table></figure>

<h2 id="（二）故障处理与容灾"><a href="#（二）故障处理与容灾" class="headerlink" title="（二）故障处理与容灾"></a>（二）故障处理与容灾</h2><ul>
<li><p><strong>故障检测</strong></p>
<ul>
<li>健康检查：定期检查服务健康状态</li>
<li>异常告警：关键指标异常时自动告警</li>
<li>日志监控：错误日志实时分析</li>
<li>用户反馈：用户投诉和反馈收集</li>
</ul>
</li>
<li><p><strong>容灾机制</strong></p>
<ul>
<li>服务降级：高峰期关闭非核心功能</li>
<li>限流保护：防止系统过载</li>
<li>熔断机制：故障服务自动隔离</li>
<li>数据备份：定期备份关键数据</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：B站弹幕系统是一个复杂的实时通信系统，涉及前端高性能渲染、实时数据传输、后端分布式架构、海量数据存储等多个技术领域。其核心挑战在于在保证实时性的同时，处理海量并发用户和数据。</p>
<p>通过Canvas渲染引擎实现高性能的弹幕显示，WebSocket保证实时通信，微服务架构支持系统的可扩展性，多级缓存提升系统性能，完善的监控体系保证系统稳定运行。这些技术的综合运用，才能支撑起B站每天数亿条弹幕的处理需求。</p>
<p>弹幕系统的设计思路和技术方案，对于其他需要实时交互的应用（如直播聊天、在线协作、实时游戏等）都有很好的参考价值。关键是要根据具体业务场景，在实时性、一致性、可用性之间找到合适的平衡点。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、弹幕系统概述与技术挑战"><a href="#一、弹幕系统概述与技术挑战" class="headerlink" title="一、弹幕系统概述与技术挑战"></a>一、弹幕系统概述与技术挑战</h1><h2 id="（一）弹幕系统的核心特征"><a href]]>
    </summary>
    
      <category term="WebSocket" scheme="https://hexo.blog.uwakeme.tech/tags/WebSocket/"/>
    
      <category term="实时通信" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%AE%9E%E6%97%B6%E9%80%9A%E4%BF%A1/"/>
    
      <category term="弹幕系统" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%BC%B9%E5%B9%95%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="B站" scheme="https://hexo.blog.uwakeme.tech/tags/B%E7%AB%99/"/>
    
      <category term="前端渲染" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%89%8D%E7%AB%AF%E6%B8%B2%E6%9F%93/"/>
    
      <category term="后端架构" scheme="https://hexo.blog.uwakeme.tech/tags/%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84/"/>
    
      <category term="视频同步" scheme="https://hexo.blog.uwakeme.tech/tags/%E8%A7%86%E9%A2%91%E5%90%8C%E6%AD%A5/"/>
    
      <category term="软件功能解析" scheme="https://hexo.blog.uwakeme.tech/categories/%E8%BD%AF%E4%BB%B6%E5%8A%9F%E8%83%BD%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
</feed>
