<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Uwakeme]]></title>
  <subtitle><![CDATA[一起学习，一起进步]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://uwakeme.top/"/>
  <updated>2025-07-28T02:46:56.717Z</updated>
  <id>https://uwakeme.top/</id>
  
  <author>
    <name><![CDATA[Wake]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[【前端】CommonJS模块系统详解：Node.js的模块化基石]]></title>
    <link href="https://uwakeme.top/2025/07/28/%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91CommonJS%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F%E8%AF%A6%E8%A7%A3%EF%BC%9ANode.js%E7%9A%84%E6%A8%A1%E5%9D%97%E5%8C%96%E5%9F%BA%E7%9F%B3/"/>
    <id>https://uwakeme.top/2025/07/28/前端/【前端】CommonJS模块系统详解：Node.js的模块化基石/</id>
    <published>2025-07-27T16:00:00.000Z</published>
    <updated>2025-07-28T02:46:56.717Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在JavaScript的发展历程中，模块化一直是一个重要的话题。CommonJS作为Node.js采用的模块系统，为服务端JavaScript开发奠定了坚实的基础。本文将深入探讨CommonJS的核心概念、工作原理、语法特性，以及它与现代ES6模块系统的区别和联系。</p>
<h1 id="一、CommonJS模块系统概述"><a href="#一、CommonJS模块系统概述" class="headerlink" title="一、CommonJS模块系统概述"></a>一、CommonJS模块系统概述</h1><h2 id="（一）什么是CommonJS"><a href="#（一）什么是CommonJS" class="headerlink" title="（一）什么是CommonJS"></a>（一）什么是CommonJS</h2><p>CommonJS是一个JavaScript模块化规范，最初由Mozilla的工程师Kevin Dangoor于2009年提出。它的目标是为JavaScript定义一套通用的模块API，使JavaScript能够在浏览器之外的环境中运行，特别是服务器端环境。</p>
<h3 id="1-设计目标"><a href="#1-设计目标" class="headerlink" title="1. 设计目标"></a>1. 设计目标</h3><p>CommonJS规范的主要设计目标包括：</p>
<ul>
<li><strong>模块化开发</strong>：将代码分割成独立的模块，提高代码的可维护性</li>
<li><strong>依赖管理</strong>：明确模块间的依赖关系，避免全局变量污染</li>
<li><strong>代码复用</strong>：通过模块导入导出机制，实现代码的高效复用</li>
<li><strong>服务端支持</strong>：为JavaScript在服务器端运行提供模块化支持</li>
</ul>
<h3 id="2-核心特点"><a href="#2-核心特点" class="headerlink" title="2. 核心特点"></a>2. 核心特点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS的核心特点</span></span><br><span class="line"><span class="comment">// 1. 同步加载 - 模块在运行时同步加载</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 动态导入 - 可以在条件语句中导入模块</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> debug = <span class="built_in">require</span>(<span class="string">&#x27;debug&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 值拷贝 - 导出的是值的拷贝，不是引用</span></span><br><span class="line"><span class="keyword">const</span> &#123; count &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./counter&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="（二）CommonJS在Node-js中的实现"><a href="#（二）CommonJS在Node-js中的实现" class="headerlink" title="（二）CommonJS在Node.js中的实现"></a>（二）CommonJS在Node.js中的实现</h2><p>Node.js是CommonJS规范最成功的实现之一，它将CommonJS作为默认的模块系统。</p>
<h3 id="1-Node-js模块系统架构"><a href="#1-Node-js模块系统架构" class="headerlink" title="1. Node.js模块系统架构"></a>1. Node.js模块系统架构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Node.js为每个模块提供以下全局对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__filename);  <span class="comment">// 当前模块的文件路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(__dirname);   <span class="comment">// 当前模块的目录路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">module</span>);      <span class="comment">// 当前模块对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">exports</span>);     <span class="comment">// module.exports的引用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">require</span>);     <span class="comment">// 模块加载函数</span></span><br></pre></td></tr></table></figure>

<h3 id="2-模块包装机制"><a href="#2-模块包装机制" class="headerlink" title="2. 模块包装机制"></a>2. 模块包装机制</h3><p>Node.js在执行模块代码前，会将其包装在一个函数中：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Node.js实际执行的代码结构</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"><span class="built_in">exports</span>, <span class="built_in">require</span>, <span class="variable language_">module</span>, __filename, __dirname</span>) &#123;</span><br><span class="line">    <span class="comment">// 你的模块代码在这里</span></span><br><span class="line">    <span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">readFile</span>(<span class="params">path</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> fs.<span class="title function_">readFileSync</span>(path, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">module</span>.<span class="property">exports</span> = &#123; readFile &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="二、CommonJS核心语法"><a href="#二、CommonJS核心语法" class="headerlink" title="二、CommonJS核心语法"></a>二、CommonJS核心语法</h1><h2 id="（一）模块导出-exports和module-exports"><a href="#（一）模块导出-exports和module-exports" class="headerlink" title="（一）模块导出 - exports和module.exports"></a>（一）模块导出 - exports和module.exports</h2><p>CommonJS提供了两种导出方式：<code>exports</code>和<code>module.exports</code>。</p>
<h3 id="1-使用exports导出"><a href="#1-使用exports导出" class="headerlink" title="1. 使用exports导出"></a>1. 使用exports导出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math.js - 使用exports导出多个函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">add</span> = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">subtract</span> = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">PI</span> = <span class="number">3.14159</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以使用箭头函数</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">multiply</span> = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a * b;</span><br></pre></td></tr></table></figure>

<h3 id="2-使用module-exports导出"><a href="#2-使用module-exports导出" class="headerlink" title="2. 使用module.exports导出"></a>2. 使用module.exports导出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// calculator.js - 使用module.exports导出整个对象</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">add</span>: <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">subtract</span>: <span class="keyword">function</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 支持ES6简写语法</span></span><br><span class="line">    <span class="title function_">multiply</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a * b;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="attr">divide</span>: <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (b === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;除数不能为零&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> a / b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="3-导出类和构造函数"><a href="#3-导出类和构造函数" class="headerlink" title="3. 导出类和构造函数"></a>3. 导出类和构造函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// user.js - 导出类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, email</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">email</span> = email;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`用户: <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>, 邮箱: <span class="subst">$&#123;<span class="variable language_">this</span>.email&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">validateEmail</span>(<span class="params">email</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> emailRegex = <span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span>;</span><br><span class="line">        <span class="keyword">return</span> emailRegex.<span class="title function_">test</span>(email);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者导出构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Product</span>(<span class="params">name, price</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">id</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">9</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Product</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getPrice</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`¥<span class="subst">$&#123;<span class="variable language_">this</span>.price.toFixed(<span class="number">2</span>)&#125;</span>`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Product</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）模块导入-require函数"><a href="#（二）模块导入-require函数" class="headerlink" title="（二）模块导入 - require函数"></a>（二）模块导入 - require函数</h2><p><code>require</code>函数是CommonJS中加载模块的核心机制。</p>
<h3 id="1-基本导入语法"><a href="#1-基本导入语法" class="headerlink" title="1. 基本导入语法"></a>1. 基本导入语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入核心模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入本地模块</span></span><br><span class="line"><span class="keyword">const</span> math = <span class="built_in">require</span>(<span class="string">&#x27;./math&#x27;</span>);           <span class="comment">// 相对路径</span></span><br><span class="line"><span class="keyword">const</span> utils = <span class="built_in">require</span>(<span class="string">&#x27;../utils/helper&#x27;</span>); <span class="comment">// 相对路径</span></span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&#x27;/app/config&#x27;</span>);    <span class="comment">// 绝对路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入npm包</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> lodash = <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> moment = <span class="built_in">require</span>(<span class="string">&#x27;moment&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-解构导入"><a href="#2-解构导入" class="headerlink" title="2. 解构导入"></a>2. 解构导入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解构导入特定功能</span></span><br><span class="line"><span class="keyword">const</span> &#123; readFile, writeFile &#125; = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; join, resolve, basename &#125; = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用解构导入自定义模块</span></span><br><span class="line"><span class="keyword">const</span> &#123; add, subtract, <span class="variable constant_">PI</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./math&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 混合导入</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">Router</span> &#125; = express;</span><br></pre></td></tr></table></figure>

<h3 id="3-条件导入和动态导入"><a href="#3-条件导入和动态导入" class="headerlink" title="3. 条件导入和动态导入"></a>3. 条件导入和动态导入</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 条件导入</span></span><br><span class="line"><span class="keyword">let</span> logger;</span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">    logger = <span class="built_in">require</span>(<span class="string">&#x27;./production-logger&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    logger = <span class="built_in">require</span>(<span class="string">&#x27;./development-logger&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态导入（基于变量）</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadModule</span>(<span class="params">moduleName</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">require</span>(moduleName);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`无法加载模块 <span class="subst">$&#123;moduleName&#125;</span>:`</span>, error.<span class="property">message</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dbDriver = <span class="title function_">loadModule</span>(process.<span class="property">env</span>.<span class="property">DB_TYPE</span> || <span class="string">&#x27;mysql&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="三、CommonJS模块加载机制"><a href="#三、CommonJS模块加载机制" class="headerlink" title="三、CommonJS模块加载机制"></a>三、CommonJS模块加载机制</h1><h2 id="（一）模块解析规则"><a href="#（一）模块解析规则" class="headerlink" title="（一）模块解析规则"></a>（一）模块解析规则</h2><p>Node.js按照特定的规则来解析模块路径：</p>
<h3 id="1-核心模块优先级最高"><a href="#1-核心模块优先级最高" class="headerlink" title="1. 核心模块优先级最高"></a>1. 核心模块优先级最高</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这些都是Node.js核心模块，优先级最高</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-文件模块解析"><a href="#2-文件模块解析" class="headerlink" title="2. 文件模块解析"></a>2. 文件模块解析</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Node.js会按以下顺序查找文件：</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;./math&#x27;</span>);</span><br><span class="line"><span class="comment">// 1. ./math.js</span></span><br><span class="line"><span class="comment">// 2. ./math.json</span></span><br><span class="line"><span class="comment">// 3. ./math.node</span></span><br><span class="line"><span class="comment">// 4. ./math/index.js</span></span><br><span class="line"><span class="comment">// 5. ./math/package.json中main字段指定的文件</span></span><br></pre></td></tr></table></figure>

<h3 id="3-node-modules查找机制"><a href="#3-node-modules查找机制" class="headerlink" title="3. node_modules查找机制"></a>3. node_modules查找机制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查找npm包时的搜索路径</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">// 从当前目录开始，逐级向上查找node_modules目录：</span></span><br><span class="line"><span class="comment">// ./node_modules/express</span></span><br><span class="line"><span class="comment">// ../node_modules/express</span></span><br><span class="line"><span class="comment">// ../../node_modules/express</span></span><br><span class="line"><span class="comment">// ... 直到根目录</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）模块缓存机制"><a href="#（二）模块缓存机制" class="headerlink" title="（二）模块缓存机制"></a>（二）模块缓存机制</h2><p>CommonJS具有强大的缓存机制，确保模块只被加载一次。</p>
<h3 id="1-缓存示例"><a href="#1-缓存示例" class="headerlink" title="1. 缓存示例"></a>1. 缓存示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// counter.js</span></span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ++count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getCount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; increment, getCount &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">const</span> counter1 = <span class="built_in">require</span>(<span class="string">&#x27;./counter&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> counter2 = <span class="built_in">require</span>(<span class="string">&#x27;./counter&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(counter1 === counter2); <span class="comment">// true - 同一个对象引用</span></span><br><span class="line"></span><br><span class="line">counter1.<span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(counter2.<span class="title function_">getCount</span>()); <span class="comment">// 1 - 共享状态</span></span><br></pre></td></tr></table></figure>

<h3 id="2-清除缓存"><a href="#2-清除缓存" class="headerlink" title="2. 清除缓存"></a>2. 清除缓存</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看模块缓存</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">keys</span>(<span class="built_in">require</span>.<span class="property">cache</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除特定模块的缓存</span></span><br><span class="line"><span class="keyword">delete</span> <span class="built_in">require</span>.<span class="property">cache</span>[<span class="built_in">require</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;./config&#x27;</span>)];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重新加载模块</span></span><br><span class="line"><span class="keyword">const</span> freshConfig = <span class="built_in">require</span>(<span class="string">&#x27;./config&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="四、CommonJS实践应用"><a href="#四、CommonJS实践应用" class="headerlink" title="四、CommonJS实践应用"></a>四、CommonJS实践应用</h1><h2 id="（一）创建实用工具模块"><a href="#（一）创建实用工具模块" class="headerlink" title="（一）创建实用工具模块"></a>（一）创建实用工具模块</h2><h3 id="1-文件操作工具"><a href="#1-文件操作工具" class="headerlink" title="1. 文件操作工具"></a>1. 文件操作工具</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fileUtils.js</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步读取JSON文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">filePath</span> - 文件路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise&lt;Object&gt;</span>&#125; 解析后的JSON对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">readJsonFile</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">readFile</span>(filePath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`读取JSON文件失败: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 异步写入JSON文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">filePath</span> - 文件路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Object</span>&#125; <span class="variable">data</span> - 要写入的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">writeJsonFile</span>(<span class="params">filePath, data</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> jsonString = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data, <span class="literal">null</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">writeFile</span>(filePath, jsonString, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`写入JSON文件失败: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确保目录存在</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; <span class="variable">dirPath</span> - 目录路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">ensureDir</span>(<span class="params">dirPath</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">access</span>(dirPath);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="keyword">await</span> fs.<span class="property">promises</span>.<span class="title function_">mkdir</span>(dirPath, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    readJsonFile,</span><br><span class="line">    writeJsonFile,</span><br><span class="line">    ensureDir</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-配置管理模块"><a href="#2-配置管理模块" class="headerlink" title="2. 配置管理模块"></a>2. 配置管理模块</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config.js</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; readJsonFile &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./fileUtils&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ConfigManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">config</span> = &#123;&#125;;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loaded</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">load</span>(<span class="params">configPath = <span class="string">&#x27;./config.json&#x27;</span></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> fullPath = path.<span class="title function_">resolve</span>(configPath);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">config</span> = <span class="keyword">await</span> <span class="title function_">readJsonFile</span>(fullPath);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">loaded</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;配置加载成功&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;配置加载失败:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">            <span class="comment">// 使用默认配置</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">config</span> = <span class="variable language_">this</span>.<span class="title function_">getDefaultConfig</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">loaded</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">get</span>(<span class="params">key, defaultValue = <span class="literal">null</span></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">loaded</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;配置尚未加载，请先调用load()方法&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getNestedValue</span>(<span class="variable language_">this</span>.<span class="property">config</span>, key, defaultValue);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getNestedValue</span>(<span class="params">obj, key, defaultValue</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> keys = key.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="keyword">let</span> current = obj;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> k <span class="keyword">of</span> keys) &#123;</span><br><span class="line">            <span class="keyword">if</span> (current &amp;&amp; <span class="keyword">typeof</span> current === <span class="string">&#x27;object&#x27;</span> &amp;&amp; k <span class="keyword">in</span> current) &#123;</span><br><span class="line">                current = current[k];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> current;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getDefaultConfig</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">server</span>: &#123;</span><br><span class="line">                <span class="attr">port</span>: <span class="number">3000</span>,</span><br><span class="line">                <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">database</span>: &#123;</span><br><span class="line">                <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">                <span class="attr">port</span>: <span class="number">5432</span>,</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;myapp&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出单例实例</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">ConfigManager</span>();</span><br></pre></td></tr></table></figure>

<h2 id="（二）模块组织最佳实践"><a href="#（二）模块组织最佳实践" class="headerlink" title="（二）模块组织最佳实践"></a>（二）模块组织最佳实践</h2><h3 id="1-目录结构组织"><a href="#1-目录结构组织" class="headerlink" title="1. 目录结构组织"></a>1. 目录结构组织</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 推荐的项目结构</span></span><br><span class="line">project/</span><br><span class="line">├── lib/                 <span class="comment">// 核心库文件</span></span><br><span class="line">│   ├── database.<span class="property">js</span></span><br><span class="line">│   ├── logger.<span class="property">js</span></span><br><span class="line">│   └── validator.<span class="property">js</span></span><br><span class="line">├── utils/              <span class="comment">// 工具函数</span></span><br><span class="line">│   ├── fileUtils.<span class="property">js</span></span><br><span class="line">│   ├── dateUtils.<span class="property">js</span></span><br><span class="line">│   └── stringUtils.<span class="property">js</span></span><br><span class="line">├── config/             <span class="comment">// 配置文件</span></span><br><span class="line">│   ├── index.<span class="property">js</span></span><br><span class="line">│   ├── development.<span class="property">js</span></span><br><span class="line">│   └── production.<span class="property">js</span></span><br><span class="line">├── models/             <span class="comment">// 数据模型</span></span><br><span class="line">│   ├── <span class="title class_">User</span>.<span class="property">js</span></span><br><span class="line">│   └── <span class="title class_">Product</span>.<span class="property">js</span></span><br><span class="line">└── app.<span class="property">js</span>             <span class="comment">// 应用入口</span></span><br></pre></td></tr></table></figure>

<h3 id="2-索引文件模式"><a href="#2-索引文件模式" class="headerlink" title="2. 索引文件模式"></a>2. 索引文件模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/index.js - 统一导出工具函数</span></span><br><span class="line"><span class="keyword">const</span> fileUtils = <span class="built_in">require</span>(<span class="string">&#x27;./fileUtils&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dateUtils = <span class="built_in">require</span>(<span class="string">&#x27;./dateUtils&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> stringUtils = <span class="built_in">require</span>(<span class="string">&#x27;./stringUtils&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    ...fileUtils,</span><br><span class="line">    ...dateUtils,</span><br><span class="line">    ...stringUtils</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用时可以统一导入</span></span><br><span class="line"><span class="keyword">const</span> &#123; readJsonFile, formatDate, capitalize &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./utils&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h1 id="五、CommonJS与ES6模块对比"><a href="#五、CommonJS与ES6模块对比" class="headerlink" title="五、CommonJS与ES6模块对比"></a>五、CommonJS与ES6模块对比</h1><h2 id="（一）语法差异"><a href="#（一）语法差异" class="headerlink" title="（一）语法差异"></a>（一）语法差异</h2><h3 id="1-导出语法对比"><a href="#1-导出语法对比" class="headerlink" title="1. 导出语法对比"></a>1. 导出语法对比</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS导出</span></span><br><span class="line"><span class="comment">// 方式1：exports</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">add</span> = <span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a + b; &#125;;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">PI</span> = <span class="number">3.14159</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式2：module.exports</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">add</span>: <span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a + b; &#125;,</span><br><span class="line">    <span class="attr">PI</span>: <span class="number">3.14159</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6模块导出</span></span><br><span class="line"><span class="comment">// 命名导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a + b; &#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14159</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">add</span>: <span class="keyword">function</span>(<span class="params">a, b</span>) &#123; <span class="keyword">return</span> a + b; &#125;,</span><br><span class="line">    <span class="attr">PI</span>: <span class="number">3.14159</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-导入语法对比"><a href="#2-导入语法对比" class="headerlink" title="2. 导入语法对比"></a>2. 导入语法对比</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS导入</span></span><br><span class="line"><span class="keyword">const</span> math = <span class="built_in">require</span>(<span class="string">&#x27;./math&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; add, <span class="variable constant_">PI</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./math&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6模块导入</span></span><br><span class="line"><span class="keyword">import</span> math <span class="keyword">from</span> <span class="string">&#x27;./math&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; add, <span class="variable constant_">PI</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./math&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> math <span class="keyword">from</span> <span class="string">&#x27;./math&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）核心差异"><a href="#（二）核心差异" class="headerlink" title="（二）核心差异"></a>（二）核心差异</h2><h3 id="1-加载时机"><a href="#1-加载时机" class="headerlink" title="1. 加载时机"></a>1. 加载时机</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS - 运行时加载（同步）</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始加载&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>); <span class="comment">// 运行到这里才加载</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;加载完成&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6模块 - 编译时加载（静态）</span></span><br><span class="line"><span class="keyword">import</span> fs <span class="keyword">from</span> <span class="string">&#x27;fs&#x27;</span>; <span class="comment">// 在编译阶段就确定了依赖关系</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始执行&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-值传递方式"><a href="#2-值传递方式" class="headerlink" title="2. 值传递方式"></a>2. 值传递方式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// counter.js (CommonJS)</span></span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">count</span> = count;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">increment</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="built_in">exports</span>.<span class="property">count</span> = count; <span class="comment">// 需要手动更新导出值</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; count, increment &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./counter&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(count); <span class="comment">// 0</span></span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(count); <span class="comment">// 仍然是0，因为是值拷贝</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// counter.mjs (ES6模块)</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">increment</span>(<span class="params"></span>) &#123;</span><br><span class="line">    count++; <span class="comment">// 导出的是引用，会自动更新</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.mjs</span></span><br><span class="line"><span class="keyword">import</span> &#123; count, increment &#125; <span class="keyword">from</span> <span class="string">&#x27;./counter.mjs&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(count); <span class="comment">// 0</span></span><br><span class="line"><span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(count); <span class="comment">// 1，因为是引用</span></span><br></pre></td></tr></table></figure>

<h3 id="3-循环依赖处理"><a href="#3-循环依赖处理" class="headerlink" title="3. 循环依赖处理"></a>3. 循环依赖处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CommonJS循环依赖示例</span></span><br><span class="line"><span class="comment">// a.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a开始&#x27;</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">done</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">const</span> b = <span class="built_in">require</span>(<span class="string">&#x27;./b&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在a中，b.done =&#x27;</span>, b.<span class="property">done</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">done</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;a结束&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// b.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;b开始&#x27;</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">done</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">const</span> a = <span class="built_in">require</span>(<span class="string">&#x27;./a&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在b中，a.done =&#x27;</span>, a.<span class="property">done</span>);</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">done</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;b结束&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="built_in">require</span>(<span class="string">&#x27;./a&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> b = <span class="built_in">require</span>(<span class="string">&#x27;./b&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;在main中，a.done =&#x27;</span>, a.<span class="property">done</span>, <span class="string">&#x27;, b.done =&#x27;</span>, b.<span class="property">done</span>);</span><br></pre></td></tr></table></figure>

<h2 id="（三）适用场景对比"><a href="#（三）适用场景对比" class="headerlink" title="（三）适用场景对比"></a>（三）适用场景对比</h2><h3 id="1-CommonJS适用场景"><a href="#1-CommonJS适用场景" class="headerlink" title="1. CommonJS适用场景"></a>1. CommonJS适用场景</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. Node.js服务端开发</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 动态模块加载</span></span><br><span class="line"><span class="keyword">const</span> dbType = process.<span class="property">env</span>.<span class="property">DB_TYPE</span> || <span class="string">&#x27;mysql&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">`./drivers/<span class="subst">$&#123;dbType&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 条件加载</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> debug = <span class="built_in">require</span>(<span class="string">&#x27;debug&#x27;</span>)(<span class="string">&#x27;app&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-ES6模块适用场景"><a href="#2-ES6模块适用场景" class="headerlink" title="2. ES6模块适用场景"></a>2. ES6模块适用场景</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 现代前端开发</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 静态分析和Tree Shaking</span></span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">&#x27;lodash-es&#x27;</span>; <span class="comment">// 只导入需要的函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 类型检查友好</span></span><br><span class="line"><span class="keyword">import</span> type &#123; <span class="title class_">User</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./types&#x27;</span>; <span class="comment">// TypeScript类型导入</span></span><br></pre></td></tr></table></figure>

<h1 id="六、CommonJS进阶技巧"><a href="#六、CommonJS进阶技巧" class="headerlink" title="六、CommonJS进阶技巧"></a>六、CommonJS进阶技巧</h1><h2 id="（一）模块包装和私有变量"><a href="#（一）模块包装和私有变量" class="headerlink" title="（一）模块包装和私有变量"></a>（一）模块包装和私有变量</h2><h3 id="1-创建私有作用域"><a href="#1-创建私有作用域" class="headerlink" title="1. 创建私有作用域"></a>1. 创建私有作用域</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// logger.js - 使用IIFE创建私有作用域</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 私有变量，外部无法访问</span></span><br><span class="line">    <span class="keyword">let</span> logLevel = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> logHistory = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">formatMessage</span>(<span class="params">level, message</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> timestamp = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`[<span class="subst">$&#123;timestamp&#125;</span>] <span class="subst">$&#123;level.toUpperCase()&#125;</span>: <span class="subst">$&#123;message&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共API</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="title function_">setLevel</span>(<span class="params">level</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ([<span class="string">&#x27;debug&#x27;</span>, <span class="string">&#x27;info&#x27;</span>, <span class="string">&#x27;warn&#x27;</span>, <span class="string">&#x27;error&#x27;</span>].<span class="title function_">includes</span>(level)) &#123;</span><br><span class="line">                logLevel = level;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="title function_">log</span>(<span class="params">message, level = <span class="string">&#x27;info&#x27;</span></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">shouldLog</span>(level)) &#123;</span><br><span class="line">                <span class="keyword">const</span> formattedMessage = <span class="title function_">formatMessage</span>(level, message);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(formattedMessage);</span><br><span class="line">                logHistory.<span class="title function_">push</span>(formattedMessage);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="title function_">shouldLog</span>(<span class="params">level</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> levels = &#123; <span class="attr">debug</span>: <span class="number">0</span>, <span class="attr">info</span>: <span class="number">1</span>, <span class="attr">warn</span>: <span class="number">2</span>, <span class="attr">error</span>: <span class="number">3</span> &#125;;</span><br><span class="line">            <span class="keyword">return</span> levels[level] &gt;= levels[logLevel];</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="title function_">getHistory</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [...logHistory]; <span class="comment">// 返回副本，防止外部修改</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h3 id="2-模块工厂模式"><a href="#2-模块工厂模式" class="headerlink" title="2. 模块工厂模式"></a>2. 模块工厂模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// database.js - 工厂模式创建数据库连接</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createDatabase</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 私有状态</span></span><br><span class="line">    <span class="keyword">let</span> connection = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> isConnected = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="keyword">async</span> <span class="title function_">connect</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isConnected) &#123;</span><br><span class="line">                <span class="keyword">return</span> connection;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 模拟数据库连接</span></span><br><span class="line">                connection = <span class="keyword">await</span> <span class="title function_">simulateConnection</span>(config);</span><br><span class="line">                isConnected = <span class="literal">true</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据库连接成功&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span> connection;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;数据库连接失败:&#x27;</span>, error);</span><br><span class="line">                <span class="keyword">throw</span> error;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="keyword">async</span> <span class="title function_">disconnect</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (connection) &#123;</span><br><span class="line">                <span class="keyword">await</span> connection.<span class="title function_">close</span>();</span><br><span class="line">                connection = <span class="literal">null</span>;</span><br><span class="line">                isConnected = <span class="literal">false</span>;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据库连接已关闭&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="title function_">getStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">connected</span>: isConnected,</span><br><span class="line">                <span class="attr">config</span>: &#123; ...config, <span class="attr">password</span>: <span class="string">&#x27;***&#x27;</span> &#125; <span class="comment">// 隐藏敏感信息</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">simulateConnection</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 模拟异步连接过程</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(&#123;</span><br><span class="line">                <span class="attr">host</span>: config.<span class="property">host</span>,</span><br><span class="line">                <span class="attr">port</span>: config.<span class="property">port</span>,</span><br><span class="line">                <span class="attr">close</span>: <span class="title function_">async</span> () =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接已关闭&#x27;</span>)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = createDatabase;</span><br></pre></td></tr></table></figure>

<h2 id="（二）模块热重载"><a href="#（二）模块热重载" class="headerlink" title="（二）模块热重载"></a>（二）模块热重载</h2><h3 id="1-开发环境热重载"><a href="#1-开发环境热重载" class="headerlink" title="1. 开发环境热重载"></a>1. 开发环境热重载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hotReload.js - 开发环境模块热重载</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HotReloader</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">watchers</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">modules</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">require</span>(<span class="params">modulePath</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> fullPath = <span class="built_in">require</span>.<span class="title function_">resolve</span>(modulePath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果是第一次加载，设置文件监听</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">watchers</span>.<span class="title function_">has</span>(fullPath)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setupWatcher</span>(fullPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回模块</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">require</span>(modulePath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupWatcher</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> watcher = fs.<span class="title function_">watchFile</span>(filePath, <span class="function">(<span class="params">curr, prev</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (curr.<span class="property">mtime</span> &gt; prev.<span class="property">mtime</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`文件 <span class="subst">$&#123;filePath&#125;</span> 已更新，重新加载...`</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">reloadModule</span>(filePath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">watchers</span>.<span class="title function_">set</span>(filePath, watcher);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">reloadModule</span>(<span class="params">filePath</span>) &#123;</span><br><span class="line">        <span class="comment">// 清除模块缓存</span></span><br><span class="line">        <span class="keyword">delete</span> <span class="built_in">require</span>.<span class="property">cache</span>[filePath];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 触发重载事件</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;reload&#x27;</span>, filePath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">emit</span>(<span class="params">event, data</span>) &#123;</span><br><span class="line">        <span class="comment">// 简单的事件发射器</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">listeners</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">listeners</span>[event]) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">listeners</span>[event].<span class="title function_">forEach</span>(<span class="function"><span class="params">callback</span> =&gt;</span> <span class="title function_">callback</span>(data));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">on</span>(<span class="params">event, callback</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">listeners</span>) <span class="variable language_">this</span>.<span class="property">listeners</span> = &#123;&#125;;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">listeners</span>[event]) <span class="variable language_">this</span>.<span class="property">listeners</span>[event] = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">listeners</span>[event].<span class="title function_">push</span>(callback);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">cleanup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 清理所有文件监听器</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">watchers</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">watcher, filePath</span>) =&gt;</span> &#123;</span><br><span class="line">            fs.<span class="title function_">unwatchFile</span>(filePath);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">watchers</span>.<span class="title function_">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">HotReloader</span>();</span><br></pre></td></tr></table></figure>

<h2 id="（三）模块性能优化"><a href="#（三）模块性能优化" class="headerlink" title="（三）模块性能优化"></a>（三）模块性能优化</h2><h3 id="1-延迟加载"><a href="#1-延迟加载" class="headerlink" title="1. 延迟加载"></a>1. 延迟加载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lazyLoader.js - 延迟加载大型模块</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LazyLoader</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建延迟加载的getter</span></span><br><span class="line">    <span class="title function_">createLazyGetter</span>(<span class="params">target, property, modulePath</span>) &#123;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(target, property, &#123;</span><br><span class="line">            <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">has</span>(modulePath)) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`延迟加载模块: <span class="subst">$&#123;modulePath&#125;</span>`</span>);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(modulePath, <span class="built_in">require</span>(modulePath));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(modulePath);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">configurable</span>: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> lazyLoader = <span class="keyword">new</span> <span class="title class_">LazyLoader</span>();</span><br><span class="line"><span class="keyword">const</span> services = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只有在实际使用时才加载这些大型模块</span></span><br><span class="line">lazyLoader.<span class="title function_">createLazyGetter</span>(services, <span class="string">&#x27;imageProcessor&#x27;</span>, <span class="string">&#x27;./heavy-image-processor&#x27;</span>);</span><br><span class="line">lazyLoader.<span class="title function_">createLazyGetter</span>(services, <span class="string">&#x27;mlModel&#x27;</span>, <span class="string">&#x27;./machine-learning-model&#x27;</span>);</span><br><span class="line">lazyLoader.<span class="title function_">createLazyGetter</span>(services, <span class="string">&#x27;videoEncoder&#x27;</span>, <span class="string">&#x27;./video-encoder&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = services;</span><br></pre></td></tr></table></figure>

<h3 id="2-模块预加载"><a href="#2-模块预加载" class="headerlink" title="2. 模块预加载"></a>2. 模块预加载</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// preloader.js - 模块预加载器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ModulePreloader</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preloadQueue</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loaded</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加到预加载队列</span></span><br><span class="line">    <span class="title function_">add</span>(<span class="params">modulePath, priority = <span class="number">0</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preloadQueue</span>.<span class="title function_">push</span>(&#123; modulePath, priority &#125;);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preloadQueue</span>.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b.<span class="property">priority</span> - a.<span class="property">priority</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开始预加载</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开始预加载模块...&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> &#123; modulePath &#125; <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">preloadQueue</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">loaded</span>.<span class="title function_">has</span>(modulePath)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">loadModule</span>(modulePath);</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">loaded</span>.<span class="title function_">add</span>(modulePath);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`预加载模块 <span class="subst">$&#123;modulePath&#125;</span> 失败:`</span>, error);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;模块预加载完成&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">loadModule</span>(<span class="params">modulePath</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 使用setImmediate避免阻塞事件循环</span></span><br><span class="line">            <span class="title function_">setImmediate</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="built_in">require</span>(modulePath);</span><br><span class="line">                    <span class="title function_">resolve</span>();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>(); <span class="comment">// 即使失败也继续</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">ModulePreloader</span>();</span><br></pre></td></tr></table></figure>

<h1 id="七、常见问题与解决方案"><a href="#七、常见问题与解决方案" class="headerlink" title="七、常见问题与解决方案"></a>七、常见问题与解决方案</h1><h2 id="（一）循环依赖问题"><a href="#（一）循环依赖问题" class="headerlink" title="（一）循环依赖问题"></a>（一）循环依赖问题</h2><h3 id="1-识别循环依赖"><a href="#1-识别循环依赖" class="headerlink" title="1. 识别循环依赖"></a>1. 识别循环依赖</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// dependencyTracker.js - 依赖关系追踪器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DependencyTracker</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dependencies</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">trackRequire</span>(<span class="params">requirer, required</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">dependencies</span>.<span class="title function_">has</span>(requirer)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">dependencies</span>.<span class="title function_">set</span>(requirer, <span class="keyword">new</span> <span class="title class_">Set</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">dependencies</span>.<span class="title function_">get</span>(requirer).<span class="title function_">add</span>(required);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查循环依赖</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">hasCycle</span>(required, requirer)) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`检测到循环依赖: <span class="subst">$&#123;requirer&#125;</span> &lt;-&gt; <span class="subst">$&#123;required&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">hasCycle</span>(<span class="params">start, target, visited = <span class="keyword">new</span> <span class="built_in">Set</span>()</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (start === target) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (visited.<span class="title function_">has</span>(start)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        visited.<span class="title function_">add</span>(start);</span><br><span class="line">        <span class="keyword">const</span> deps = <span class="variable language_">this</span>.<span class="property">dependencies</span>.<span class="title function_">get</span>(start);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (deps) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> dep <span class="keyword">of</span> deps) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">hasCycle</span>(dep, target, visited)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">printDependencyGraph</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;依赖关系图:&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> [<span class="variable language_">module</span>, deps] <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">dependencies</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">module</span>&#125;</span> -&gt; [<span class="subst">$&#123;<span class="built_in">Array</span>.<span class="keyword">from</span>(deps).join(<span class="string">&#x27;, &#x27;</span>)&#125;</span>]`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">DependencyTracker</span>();</span><br></pre></td></tr></table></figure>

<h3 id="2-解决循环依赖"><a href="#2-解决循环依赖" class="headerlink" title="2. 解决循环依赖"></a>2. 解决循环依赖</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方案1：延迟引用</span></span><br><span class="line"><span class="comment">// userService.js</span></span><br><span class="line"><span class="keyword">const</span> orderService = <span class="built_in">require</span>(<span class="string">&#x27;./orderService&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 延迟获取orderService的方法</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">getOrderService</span> = <span class="function">() =&gt;</span> orderService;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getUserOrders</span>(<span class="params">userId</span>) &#123;</span><br><span class="line">        <span class="comment">// 使用时才调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getOrderService</span>().<span class="title function_">getOrdersByUserId</span>(userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">UserService</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方案2：事件驱动解耦</span></span><br><span class="line"><span class="comment">// eventBus.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">EventEmitter</span> = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">EventEmitter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// userService.js</span></span><br><span class="line"><span class="keyword">const</span> eventBus = <span class="built_in">require</span>(<span class="string">&#x27;./eventBus&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="title function_">createUser</span>(<span class="params">userData</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> user = <span class="variable language_">this</span>.<span class="title function_">saveUser</span>(userData);</span><br><span class="line">        <span class="comment">// 通过事件通知，而不是直接调用</span></span><br><span class="line">        eventBus.<span class="title function_">emit</span>(<span class="string">&#x27;user:created&#x27;</span>, user);</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// orderService.js</span></span><br><span class="line"><span class="keyword">const</span> eventBus = <span class="built_in">require</span>(<span class="string">&#x27;./eventBus&#x27;</span>);</span><br><span class="line"></span><br><span class="line">eventBus.<span class="title function_">on</span>(<span class="string">&#x27;user:created&#x27;</span>, <span class="function">(<span class="params">user</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 处理用户创建后的订单相关逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`为用户 <span class="subst">$&#123;user.id&#125;</span> 初始化订单系统`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="（二）模块路径问题"><a href="#（二）模块路径问题" class="headerlink" title="（二）模块路径问题"></a>（二）模块路径问题</h2><h3 id="1-路径解析工具"><a href="#1-路径解析工具" class="headerlink" title="1. 路径解析工具"></a>1. 路径解析工具</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pathResolver.js - 路径解析工具</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PathResolver</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">baseDir = process.cwd()</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">baseDir</span> = baseDir;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">aliases</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置路径别名</span></span><br><span class="line">    <span class="title function_">setAlias</span>(<span class="params">alias, realPath</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">aliases</span>.<span class="title function_">set</span>(alias, path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">baseDir</span>, realPath));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解析路径</span></span><br><span class="line">    <span class="title function_">resolve</span>(<span class="params">modulePath</span>) &#123;</span><br><span class="line">        <span class="comment">// 检查是否使用了别名</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> [alias, realPath] <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">aliases</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (modulePath.<span class="title function_">startsWith</span>(alias + <span class="string">&#x27;/&#x27;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> modulePath.<span class="title function_">replace</span>(alias, realPath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 相对路径处理</span></span><br><span class="line">        <span class="keyword">if</span> (modulePath.<span class="title function_">startsWith</span>(<span class="string">&#x27;./&#x27;</span>) || modulePath.<span class="title function_">startsWith</span>(<span class="string">&#x27;../&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> path.<span class="title function_">resolve</span>(<span class="variable language_">this</span>.<span class="property">baseDir</span>, modulePath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> modulePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建require函数</span></span><br><span class="line">    <span class="title function_">createRequire</span>(<span class="params">fromPath</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> resolver = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">customRequire</span>(<span class="params">modulePath</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> resolvedPath = resolver.<span class="title function_">resolve</span>(modulePath);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">require</span>(resolvedPath);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> resolver = <span class="keyword">new</span> <span class="title class_">PathResolver</span>();</span><br><span class="line">resolver.<span class="title function_">setAlias</span>(<span class="string">&#x27;@lib&#x27;</span>, <span class="string">&#x27;./lib&#x27;</span>);</span><br><span class="line">resolver.<span class="title function_">setAlias</span>(<span class="string">&#x27;@utils&#x27;</span>, <span class="string">&#x27;./utils&#x27;</span>);</span><br><span class="line">resolver.<span class="title function_">setAlias</span>(<span class="string">&#x27;@config&#x27;</span>, <span class="string">&#x27;./config&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 现在可以使用别名</span></span><br><span class="line"><span class="keyword">const</span> customRequire = resolver.<span class="title function_">createRequire</span>(__dirname);</span><br><span class="line"><span class="keyword">const</span> utils = <span class="title function_">customRequire</span>(<span class="string">&#x27;@utils/fileUtils&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">PathResolver</span>;</span><br></pre></td></tr></table></figure>

<h1 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h1><h2 id="（一）CommonJS的优势"><a href="#（一）CommonJS的优势" class="headerlink" title="（一）CommonJS的优势"></a>（一）CommonJS的优势</h2><ol>
<li><strong>简单易用</strong>：语法简洁，学习成本低</li>
<li><strong>同步加载</strong>：适合服务端环境，文件读取速度快</li>
<li><strong>动态特性</strong>：支持条件加载和运行时模块解析</li>
<li><strong>成熟稳定</strong>：在Node.js生态中经过长期验证</li>
<li><strong>向后兼容</strong>：与大量现有npm包兼容</li>
</ol>
<h2 id="（二）使用建议"><a href="#（二）使用建议" class="headerlink" title="（二）使用建议"></a>（二）使用建议</h2><h3 id="1-最佳实践"><a href="#1-最佳实践" class="headerlink" title="1. 最佳实践"></a>1. 最佳实践</h3><ul>
<li><strong>模块职责单一</strong>：每个模块应该有明确的职责</li>
<li><strong>避免循环依赖</strong>：通过合理的架构设计避免循环引用</li>
<li><strong>合理使用缓存</strong>：利用模块缓存机制提高性能</li>
<li><strong>错误处理</strong>：在require时进行适当的错误处理</li>
<li><strong>文档完善</strong>：为模块提供清晰的API文档</li>
</ul>
<h3 id="2-性能优化"><a href="#2-性能优化" class="headerlink" title="2. 性能优化"></a>2. 性能优化</h3><ul>
<li><strong>延迟加载</strong>：对于大型模块使用延迟加载策略</li>
<li><strong>模块预加载</strong>：在应用启动时预加载核心模块</li>
<li><strong>缓存管理</strong>：在必要时清理模块缓存</li>
<li><strong>路径优化</strong>：使用绝对路径或别名减少路径解析开销</li>
</ul>
<h2 id="（三）发展趋势"><a href="#（三）发展趋势" class="headerlink" title="（三）发展趋势"></a>（三）发展趋势</h2><p>随着ES6模块的普及，CommonJS在前端开发中的使用逐渐减少，但在Node.js服务端开发中仍然占据重要地位。未来的发展趋势包括：</p>
<ol>
<li><strong>与ES6模块的互操作性</strong>：Node.js正在改进两种模块系统的兼容性</li>
<li><strong>性能优化</strong>：持续优化模块加载和缓存机制</li>
<li><strong>工具链支持</strong>：构建工具对CommonJS的支持将继续完善</li>
<li><strong>渐进式迁移</strong>：现有项目可以逐步迁移到ES6模块</li>
</ol>
<p>CommonJS作为JavaScript模块化的重要里程碑，为现代JavaScript开发奠定了坚实基础。理解和掌握CommonJS不仅有助于Node.js开发，也为学习其他模块系统提供了重要参考。</p>
<h1 id="九、参考资料"><a href="#九、参考资料" class="headerlink" title="九、参考资料"></a>九、参考资料</h1><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><ul>
<li><a href="https://nodejs.org/api/modules.html">Node.js Modules Documentation</a></li>
<li><a href="http://www.commonjs.org/">CommonJS官方规范</a></li>
<li><a href="https://docs.npmjs.com/">npm官方文档</a></li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83%EF%BC%9A%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8Document%E5%AF%B9%E8%B1%A1.md">【前端】JavaScript中的核心：理解和使用Document对象</a></li>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91TypeScript%E4%B8%8EJavaScript%E5%AF%B9%E6%AF%94%EF%BC%9A%E5%BC%82%E5%90%8C%E3%80%81%E4%BC%98%E5%8A%BF%E5%8F%8A%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.md">【前端】TypeScript与JavaScript对比：异同、优势及适用场景</a></li>
<li><a href="../Node.js/%E3%80%90Node.js%E3%80%91Node.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%93%E6%A0%8F%E4%BB%8B%E7%BB%8D.md">【Node.js】Node.js学习笔记专栏介绍</a></li>
<li><a href="../Node.js/%E3%80%90Node.js%E3%80%91Node.js%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%EF%BC%9A%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AANode.js%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97.md">【Node.js】Node.js多版本管理：一台电脑安装多个Node.js版本的完整指南</a></li>
</ul>
<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ul>
<li>《深入浅出Node.js》- 朴灵著</li>
<li>《Node.js实战》- Mike Cantelon等著</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Modules">MDN JavaScript模块</a></li>
<li><a href="https://es6.ruanyifeng.com/#docs/module">阮一峰ES6教程 - Module语法</a></li>
</ul>
<h2 id="在线资源"><a href="#在线资源" class="headerlink" title="在线资源"></a>在线资源</h2><ul>
<li><a href="https://nodejs.org/">Node.js官方网站</a></li>
<li><a href="http://javascript.ruanyifeng.com/nodejs/module.html">CommonJS规范详解</a></li>
<li><a href="https://github.com/seajs/seajs/issues/588">模块化发展历程</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[深入解析CommonJS模块系统的工作原理、语法特性、与ES6模块的区别，以及在现代JavaScript开发中的应用实践]]>
    
    </summary>
    
      <category term="后端" scheme="https://uwakeme.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="前端" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/tags/Node-js/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="模块化" scheme="https://uwakeme.top/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
      <category term="CommonJS" scheme="https://uwakeme.top/tags/CommonJS/"/>
    
      <category term="前端" scheme="https://uwakeme.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】JavaScript中的Class详解：从ES6语法糖到面向对象编程实践]]></title>
    <link href="https://uwakeme.top/2025/07/28/%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E4%B8%AD%E7%9A%84Class%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8EES6%E8%AF%AD%E6%B3%95%E7%B3%96%E5%88%B0%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    <id>https://uwakeme.top/2025/07/28/前端/【前端】JavaScript中的Class详解：从ES6语法糖到面向对象编程实践/</id>
    <published>2025-07-27T16:00:00.000Z</published>
    <updated>2025-07-28T11:00:49.996Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>ES6（ECMAScript 2015）引入了<code>class</code>关键字，为JavaScript带来了更加直观和熟悉的面向对象编程语法。虽然JavaScript的<code>class</code>本质上是基于原型链的语法糖，但它极大地简化了类的定义和继承的实现，使得从其他面向对象语言转来的开发者更容易理解和使用。本文将深入探讨JavaScript中<code>class</code>的各个方面，从基础语法到高级特性，帮助开发者全面掌握现代JavaScript的面向对象编程。</p>
<h1 id="一、Class的基本概念"><a href="#一、Class的基本概念" class="headerlink" title="一、Class的基本概念"></a>一、Class的基本概念</h1><h2 id="（一）什么是JavaScript-Class"><a href="#（一）什么是JavaScript-Class" class="headerlink" title="（一）什么是JavaScript Class"></a>（一）什么是JavaScript Class</h2><p>JavaScript的<code>class</code>是ES6引入的语法糖，它提供了一种更清晰、更简洁的方式来创建对象和实现继承。虽然语法类似于传统的面向对象语言，但JavaScript的类仍然基于原型链机制。</p>
<h3 id="1-Class的本质"><a href="#1-Class的本质" class="headerlink" title="1. Class的本质"></a>1. Class的本质</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6 Class语法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`Hello, I&#x27;m <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价的ES5构造函数写法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayHello</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`Hello, I&#x27;m <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证两者的等价性</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Person</span>); <span class="comment">// &quot;function&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> === <span class="title class_">Person</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="2-Class与构造函数的对比"><a href="#2-Class与构造函数的对比" class="headerlink" title="2. Class与构造函数的对比"></a>2. Class与构造函数的对比</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对比分析工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ClassAnalyzer</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">compareClassAndFunction</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// ES6 Class</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">ModernClass</span> &#123;</span><br><span class="line">            <span class="title function_">constructor</span>(<span class="params">value</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">value</span> = value;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="title function_">getValue</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// ES5 构造函数</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">TraditionalFunction</span>(<span class="params">value</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">value</span> = value;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="title class_">TraditionalFunction</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getValue</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">value</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建实例</span></span><br><span class="line">        <span class="keyword">const</span> modernInstance = <span class="keyword">new</span> <span class="title class_">ModernClass</span>(<span class="string">&#x27;modern&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> traditionalInstance = <span class="keyword">new</span> <span class="title class_">TraditionalFunction</span>(<span class="string">&#x27;traditional&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="comment">// 类型检查</span></span><br><span class="line">            <span class="attr">modernType</span>: <span class="keyword">typeof</span> <span class="title class_">ModernClass</span>, <span class="comment">// &quot;function&quot;</span></span><br><span class="line">            <span class="attr">traditionalType</span>: <span class="keyword">typeof</span> <span class="title class_">TraditionalFunction</span>, <span class="comment">// &quot;function&quot;</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 原型链检查</span></span><br><span class="line">            <span class="attr">modernProto</span>: <span class="title class_">ModernClass</span>.<span class="property"><span class="keyword">prototype</span></span>,</span><br><span class="line">            <span class="attr">traditionalProto</span>: <span class="title class_">TraditionalFunction</span>.<span class="property"><span class="keyword">prototype</span></span>,</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 实例检查</span></span><br><span class="line">            <span class="attr">modernInstanceOf</span>: modernInstance <span class="keyword">instanceof</span> <span class="title class_">ModernClass</span>, <span class="comment">// true</span></span><br><span class="line">            <span class="attr">traditionalInstanceOf</span>: traditionalInstance <span class="keyword">instanceof</span> <span class="title class_">TraditionalFunction</span>, <span class="comment">// true</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 方法检查</span></span><br><span class="line">            <span class="attr">modernHasMethod</span>: <span class="string">&#x27;getValue&#x27;</span> <span class="keyword">in</span> modernInstance, <span class="comment">// true</span></span><br><span class="line">            <span class="attr">traditionalHasMethod</span>: <span class="string">&#x27;getValue&#x27;</span> <span class="keyword">in</span> traditionalInstance, <span class="comment">// true</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 构造函数检查</span></span><br><span class="line">            <span class="attr">modernConstructor</span>: modernInstance.<span class="property">constructor</span> === <span class="title class_">ModernClass</span>, <span class="comment">// true</span></span><br><span class="line">            <span class="attr">traditionalConstructor</span>: traditionalInstance.<span class="property">constructor</span> === <span class="title class_">TraditionalFunction</span> <span class="comment">// true</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 运行对比分析</span></span><br><span class="line"><span class="keyword">const</span> analysis = <span class="title class_">ClassAnalyzer</span>.<span class="title function_">compareClassAndFunction</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Class vs Function Analysis:&#x27;</span>, analysis);</span><br></pre></td></tr></table></figure>

<h2 id="（二）Class的基本语法"><a href="#（二）Class的基本语法" class="headerlink" title="（二）Class的基本语法"></a>（二）Class的基本语法</h2><h3 id="1-类的定义"><a href="#1-类的定义" class="headerlink" title="1. 类的定义"></a>1. 类的定义</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基本类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span> &#123;</span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">width, height</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">width</span> = width;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">height</span> = height;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 实例方法</span></span><br><span class="line">    <span class="title function_">getArea</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">width</span> * <span class="variable language_">this</span>.<span class="property">height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getPerimeter</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * (<span class="variable language_">this</span>.<span class="property">width</span> + <span class="variable language_">this</span>.<span class="property">height</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Getter方法</span></span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">area</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getArea</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Setter方法</span></span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">dimensions</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(value) &amp;&amp; value.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">width</span> = value[<span class="number">0</span>];</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">height</span> = value[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">createSquare</span>(<span class="params">side</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Rectangle</span>(side, side);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 静态属性（ES2022）</span></span><br><span class="line">    <span class="keyword">static</span> defaultColor = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私有属性（ES2022）</span></span><br><span class="line">    #id = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">9</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私有方法（ES2022）</span></span><br><span class="line">    #<span class="title function_">generateId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">9</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 公共方法访问私有属性</span></span><br><span class="line">    <span class="title function_">getId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重新生成ID</span></span><br><span class="line">    <span class="title function_">regenerateId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#id = <span class="variable language_">this</span>.#<span class="title function_">generateId</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> rect = <span class="keyword">new</span> <span class="title class_">Rectangle</span>(<span class="number">10</span>, <span class="number">5</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rect.<span class="title function_">getArea</span>()); <span class="comment">// 50</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rect.<span class="property">area</span>); <span class="comment">// 50 (使用getter)</span></span><br><span class="line"></span><br><span class="line">rect.<span class="property">dimensions</span> = [<span class="number">8</span>, <span class="number">6</span>]; <span class="comment">// 使用setter</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rect.<span class="title function_">getArea</span>()); <span class="comment">// 48</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> square = <span class="title class_">Rectangle</span>.<span class="title function_">createSquare</span>(<span class="number">4</span>); <span class="comment">// 使用静态方法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(square.<span class="title function_">getArea</span>()); <span class="comment">// 16</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Rectangle</span>.<span class="property">defaultColor</span>); <span class="comment">// &quot;blue&quot; (静态属性)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rect.<span class="title function_">getId</span>()); <span class="comment">// 私有属性的值</span></span><br></pre></td></tr></table></figure>

<h3 id="2-类表达式"><a href="#2-类表达式" class="headerlink" title="2. 类表达式"></a>2. 类表达式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命名类表达式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NamedClass</span> = <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 在类内部可以使用MyClass引用自身</span></span><br><span class="line">    <span class="title function_">clone</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyClass</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匿名类表达式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AnonymousClass</span> = <span class="keyword">class</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">value</span> = value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getValue</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 立即执行的类表达式</span></span><br><span class="line"><span class="keyword">const</span> instance = <span class="title function_">new</span> (<span class="keyword">class</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timestamp</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getTimestamp</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">timestamp</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance.<span class="title function_">getTimestamp</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态类创建</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createClass</span>(<span class="params">className, methods = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">DynamicClass</span> = <span class="keyword">class</span> &#123;</span><br><span class="line">        <span class="title function_">constructor</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">args</span> = args;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">className</span> = className;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 动态添加方法</span></span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">keys</span>(methods).<span class="title function_">forEach</span>(<span class="function"><span class="params">methodName</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">DynamicClass</span>.<span class="property"><span class="keyword">prototype</span></span>[methodName] = methods[methodName];</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">DynamicClass</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用动态类创建</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CustomClass</span> = <span class="title function_">createClass</span>(<span class="string">&#x27;CustomClass&#x27;</span>, &#123;</span><br><span class="line">    <span class="title function_">greet</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`Hello from <span class="subst">$&#123;<span class="variable language_">this</span>.className&#125;</span>`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getArgs</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">args</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> customInstance = <span class="keyword">new</span> <span class="title class_">CustomClass</span>(<span class="string">&#x27;arg1&#x27;</span>, <span class="string">&#x27;arg2&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(customInstance.<span class="title function_">greet</span>()); <span class="comment">// &quot;Hello from CustomClass&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(customInstance.<span class="title function_">getArgs</span>()); <span class="comment">// [&#x27;arg1&#x27;, &#x27;arg2&#x27;]</span></span><br></pre></td></tr></table></figure>

<h1 id="二、Constructor构造函数"><a href="#二、Constructor构造函数" class="headerlink" title="二、Constructor构造函数"></a>二、Constructor构造函数</h1><h2 id="（一）构造函数的作用"><a href="#（一）构造函数的作用" class="headerlink" title="（一）构造函数的作用"></a>（一）构造函数的作用</h2><p>构造函数是类的特殊方法，用于创建和初始化类的实例。每个类只能有一个构造函数。</p>
<h3 id="1-基本构造函数"><a href="#1-基本构造函数" class="headerlink" title="1. 基本构造函数"></a>1. 基本构造函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">username, email, role = <span class="string">&#x27;user&#x27;</span></span>) &#123;</span><br><span class="line">        <span class="comment">// 参数验证</span></span><br><span class="line">        <span class="keyword">if</span> (!username || !email) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Username and email are required&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化实例属性</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">username</span> = username;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">email</span> = email;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">role</span> = role;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isActive</span> = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 调用初始化方法</span></span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">initialize</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私有初始化方法</span></span><br><span class="line">    #<span class="title function_">initialize</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = <span class="variable language_">this</span>.#<span class="title function_">generateUserId</span>();</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">setupDefaults</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">generateUserId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`user_<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>_<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substr(<span class="number">2</span>, <span class="number">5</span>)&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">setupDefaults</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">preferences</span> = &#123;</span><br><span class="line">            <span class="attr">theme</span>: <span class="string">&#x27;light&#x27;</span>,</span><br><span class="line">            <span class="attr">notifications</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">language</span>: <span class="string">&#x27;en&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">id</span>,</span><br><span class="line">            <span class="attr">username</span>: <span class="variable language_">this</span>.<span class="property">username</span>,</span><br><span class="line">            <span class="attr">email</span>: <span class="variable language_">this</span>.<span class="property">email</span>,</span><br><span class="line">            <span class="attr">role</span>: <span class="variable language_">this</span>.<span class="property">role</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="variable language_">this</span>.<span class="property">createdAt</span>,</span><br><span class="line">            <span class="attr">isActive</span>: <span class="variable language_">this</span>.<span class="property">isActive</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新用户信息</span></span><br><span class="line">    <span class="title function_">updateInfo</span>(<span class="params">updates</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> allowedFields = [<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;role&#x27;</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(updates).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (allowedFields.<span class="title function_">includes</span>(key)) &#123;</span><br><span class="line">                <span class="variable language_">this</span>[key] = updates[key];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> user1 = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&#x27;john_doe&#x27;</span>, <span class="string">&#x27;john@example.com&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(user1.<span class="title function_">getInfo</span>());</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> user2 = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;admin@example.com&#x27;</span>, <span class="string">&#x27;admin&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(user2.<span class="title function_">getInfo</span>());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 参数验证测试</span></span><br><span class="line">    <span class="keyword">const</span> invalidUser = <span class="keyword">new</span> <span class="title class_">User</span>(); <span class="comment">// 抛出错误</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error creating user:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-构造函数重载模拟"><a href="#2-构造函数重载模拟" class="headerlink" title="2. 构造函数重载模拟"></a>2. 构造函数重载模拟</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript不支持真正的方法重载，但可以通过参数检查模拟</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Product</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="comment">// 根据参数数量和类型进行不同的初始化</span></span><br><span class="line">        <span class="keyword">if</span> (args.<span class="property">length</span> === <span class="number">1</span> &amp;&amp; <span class="keyword">typeof</span> args[<span class="number">0</span>] === <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 对象参数构造</span></span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">initFromObject</span>(args[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (args.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// 两个参数构造</span></span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">initFromParams</span>(args[<span class="number">0</span>], args[<span class="number">1</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (args.<span class="property">length</span> === <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">// 三个参数构造</span></span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">initFromFullParams</span>(args[<span class="number">0</span>], args[<span class="number">1</span>], args[<span class="number">2</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 默认构造</span></span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">initDefault</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">initFromObject</span>(<span class="params">config</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = config.<span class="property">name</span> || <span class="string">&#x27;Unknown Product&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">price</span> = config.<span class="property">price</span> || <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">category</span> = config.<span class="property">category</span> || <span class="string">&#x27;General&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">description</span> = config.<span class="property">description</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">initFromParams</span>(<span class="params">name, price</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">category</span> = <span class="string">&#x27;General&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">description</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">initFromFullParams</span>(<span class="params">name, price, category</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">price</span> = price;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">category</span> = category;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">description</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    #<span class="title function_">initDefault</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;Default Product&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">price</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">category</span> = <span class="string">&#x27;General&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">description</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="variable language_">this</span>.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">price</span>: <span class="variable language_">this</span>.<span class="property">price</span>,</span><br><span class="line">            <span class="attr">category</span>: <span class="variable language_">this</span>.<span class="property">category</span>,</span><br><span class="line">            <span class="attr">description</span>: <span class="variable language_">this</span>.<span class="property">description</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="variable language_">this</span>.<span class="property">createdAt</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用不同的构造方式</span></span><br><span class="line"><span class="keyword">const</span> product1 = <span class="keyword">new</span> <span class="title class_">Product</span>(); <span class="comment">// 默认构造</span></span><br><span class="line"><span class="keyword">const</span> product2 = <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&#x27;Laptop&#x27;</span>, <span class="number">999</span>); <span class="comment">// 两参数构造</span></span><br><span class="line"><span class="keyword">const</span> product3 = <span class="keyword">new</span> <span class="title class_">Product</span>(<span class="string">&#x27;Phone&#x27;</span>, <span class="number">599</span>, <span class="string">&#x27;Electronics&#x27;</span>); <span class="comment">// 三参数构造</span></span><br><span class="line"><span class="keyword">const</span> product4 = <span class="keyword">new</span> <span class="title class_">Product</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Tablet&#x27;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">399</span>,</span><br><span class="line">    <span class="attr">category</span>: <span class="string">&#x27;Electronics&#x27;</span>,</span><br><span class="line">    <span class="attr">description</span>: <span class="string">&#x27;High-performance tablet&#x27;</span></span><br><span class="line">&#125;); <span class="comment">// 对象构造</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product 1:&#x27;</span>, product1.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product 2:&#x27;</span>, product2.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product 3:&#x27;</span>, product3.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Product 4:&#x27;</span>, product4.<span class="title function_">getInfo</span>());</span><br></pre></td></tr></table></figure>

<h2 id="（二）构造函数的高级特性"><a href="#（二）构造函数的高级特性" class="headerlink" title="（二）构造函数的高级特性"></a>（二）构造函数的高级特性</h2><h3 id="1-构造函数中的异步操作"><a href="#1-构造函数中的异步操作" class="headerlink" title="1. 构造函数中的异步操作"></a>1. 构造函数中的异步操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理构造函数中的异步操作</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AsyncInitializedClass</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">config</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">config</span> = config;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isInitialized</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">initPromise</span> = <span class="variable language_">this</span>.#<span class="title function_">asyncInit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> #<span class="title function_">asyncInit</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 模拟异步初始化操作</span></span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.#<span class="title function_">loadConfiguration</span>();</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.#<span class="title function_">setupConnections</span>();</span><br><span class="line">            <span class="keyword">await</span> <span class="variable language_">this</span>.#<span class="title function_">validateSetup</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">isInitialized</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Async initialization completed&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Initialization failed:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> #<span class="title function_">loadConfiguration</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟加载配置</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">settings</span> = &#123; ...<span class="variable language_">this</span>.<span class="property">config</span>, <span class="attr">loaded</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> #<span class="title function_">setupConnections</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟建立连接</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">connections</span> = [<span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;cache&#x27;</span>, <span class="string">&#x27;api&#x27;</span>];</span><br><span class="line">                <span class="title function_">resolve</span>();</span><br><span class="line">            &#125;, <span class="number">50</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> #<span class="title function_">validateSetup</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟验证设置</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">settings</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">connections</span>) &#123;</span><br><span class="line">                    <span class="title function_">resolve</span>();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Setup validation failed&#x27;</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">30</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 确保初始化完成后再执行操作</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">ready</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="property">initPromise</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isInitialized</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">performOperation</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">ready</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Operation completed successfully&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 静态工厂方法，返回已初始化的实例</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">create</span>(<span class="params">config</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> instance = <span class="keyword">new</span> <span class="title class_">AsyncInitializedClass</span>(config);</span><br><span class="line">        <span class="keyword">await</span> instance.<span class="title function_">ready</span>();</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用异步初始化的类</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">demonstrateAsyncInit</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 方法1：创建后等待初始化</span></span><br><span class="line">        <span class="keyword">const</span> instance1 = <span class="keyword">new</span> <span class="title class_">AsyncInitializedClass</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;test&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">await</span> instance1.<span class="title function_">ready</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Instance 1 ready&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 方法2：使用静态工厂方法</span></span><br><span class="line">        <span class="keyword">const</span> instance2 = <span class="keyword">await</span> <span class="title class_">AsyncInitializedClass</span>.<span class="title function_">create</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;test2&#x27;</span> &#125;);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Instance 2 ready&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行操作</span></span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> instance2.<span class="title function_">performOperation</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// demonstrateAsyncInit();</span></span><br></pre></td></tr></table></figure>

<h1 id="三、类的继承机制"><a href="#三、类的继承机制" class="headerlink" title="三、类的继承机制"></a>三、类的继承机制</h1><h2 id="（一）extends关键字"><a href="#（一）extends关键字" class="headerlink" title="（一）extends关键字"></a>（一）extends关键字</h2><p>JavaScript的类继承使用<code>extends</code>关键字实现，它基于原型链机制，但提供了更清晰的语法。</p>
<h3 id="1-基本继承"><a href="#1-基本继承" class="headerlink" title="1. 基本继承"></a>1. 基本继承</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基类（父类）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, species</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">species</span> = species;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isAlive</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例方法</span></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> makes a sound`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">eat</span>(<span class="params">food</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is eating <span class="subst">$&#123;food&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">sleep</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is sleeping`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取基本信息</span></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="variable language_">this</span>.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">species</span>: <span class="variable language_">this</span>.<span class="property">species</span>,</span><br><span class="line">            <span class="attr">isAlive</span>: <span class="variable language_">this</span>.<span class="property">isAlive</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getKingdom</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Animalia&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 派生类（子类）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, breed, age</span>) &#123;</span><br><span class="line">        <span class="comment">// 调用父类构造函数</span></span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;Canine&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">breed</span> = breed;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isLoyal</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写父类方法</span></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> barks: Woof! Woof!`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增方法</span></span><br><span class="line">    <span class="title function_">fetch</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> fetches the <span class="subst">$&#123;item&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">wagTail</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is wagging its tail happily`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写getInfo方法，添加更多信息</span></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            ...<span class="variable language_">super</span>.<span class="title function_">getInfo</span>(), <span class="comment">// 调用父类方法</span></span><br><span class="line">            <span class="attr">breed</span>: <span class="variable language_">this</span>.<span class="property">breed</span>,</span><br><span class="line">            <span class="attr">age</span>: <span class="variable language_">this</span>.<span class="property">age</span>,</span><br><span class="line">            <span class="attr">isLoyal</span>: <span class="variable language_">this</span>.<span class="property">isLoyal</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getDomesticationPeriod</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;15,000 years ago&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进一步继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GermanShepherd</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Dog</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, age, trainingLevel = <span class="string">&#x27;basic&#x27;</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;German Shepherd&#x27;</span>, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">trainingLevel</span> = trainingLevel;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isWorkingDog</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写方法</span></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> barks authoritatively: WOOF!`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增专业方法</span></span><br><span class="line">    <span class="title function_">guard</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is guarding the area`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">track</span>(<span class="params">scent</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is tracking the <span class="subst">$&#123;scent&#125;</span> scent`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            ...<span class="variable language_">super</span>.<span class="title function_">getInfo</span>(),</span><br><span class="line">            <span class="attr">trainingLevel</span>: <span class="variable language_">this</span>.<span class="property">trainingLevel</span>,</span><br><span class="line">            <span class="attr">isWorkingDog</span>: <span class="variable language_">this</span>.<span class="property">isWorkingDog</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> animal = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;Generic Animal&#x27;</span>, <span class="string">&#x27;Unknown&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> dog = <span class="keyword">new</span> <span class="title class_">Dog</span>(<span class="string">&#x27;Buddy&#x27;</span>, <span class="string">&#x27;Golden Retriever&#x27;</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">const</span> germanShepherd = <span class="keyword">new</span> <span class="title class_">GermanShepherd</span>(<span class="string">&#x27;Rex&#x27;</span>, <span class="number">5</span>, <span class="string">&#x27;advanced&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(animal.<span class="title function_">makeSound</span>()); <span class="comment">// &quot;Generic Animal makes a sound&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dog.<span class="title function_">makeSound</span>()); <span class="comment">// &quot;Buddy barks: Woof! Woof!&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(germanShepherd.<span class="title function_">makeSound</span>()); <span class="comment">// &quot;Rex barks authoritatively: WOOF!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dog.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(germanShepherd.<span class="title function_">getInfo</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态方法调用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Animal</span>.<span class="title function_">getKingdom</span>()); <span class="comment">// &quot;Animalia&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Dog</span>.<span class="title function_">getDomesticationPeriod</span>()); <span class="comment">// &quot;15,000 years ago&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-super关键字详解"><a href="#2-super关键字详解" class="headerlink" title="2. super关键字详解"></a>2. super关键字详解</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vehicle</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">make, model, year</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">make</span> = make;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">model</span> = model;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">year</span> = year;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.make&#125;</span> <span class="subst">$&#123;<span class="variable language_">this</span>.model&#125;</span> is starting...`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">stop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isRunning</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.make&#125;</span> <span class="subst">$&#123;<span class="variable language_">this</span>.model&#125;</span> has stopped`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">make</span>: <span class="variable language_">this</span>.<span class="property">make</span>,</span><br><span class="line">            <span class="attr">model</span>: <span class="variable language_">this</span>.<span class="property">model</span>,</span><br><span class="line">            <span class="attr">year</span>: <span class="variable language_">this</span>.<span class="property">year</span>,</span><br><span class="line">            <span class="attr">isRunning</span>: <span class="variable language_">this</span>.<span class="property">isRunning</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Car</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vehicle</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">make, model, year, doors, fuelType</span>) &#123;</span><br><span class="line">        <span class="comment">// super()必须在使用this之前调用</span></span><br><span class="line">        <span class="variable language_">super</span>(make, model, year);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">doors</span> = doors;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fuelType</span> = fuelType;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gear</span> = <span class="string">&#x27;P&#x27;</span>; <span class="comment">// Park</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 调用父类方法并扩展功能</span></span><br><span class="line">        <span class="keyword">const</span> parentResult = <span class="variable language_">super</span>.<span class="title function_">start</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gear</span> = <span class="string">&#x27;D&#x27;</span>; <span class="comment">// Drive</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;parentResult&#125;</span> Car is in Drive mode.`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">stop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 先执行子类逻辑，再调用父类方法</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">gear</span> = <span class="string">&#x27;P&#x27;</span>;</span><br><span class="line">        <span class="keyword">const</span> parentResult = <span class="variable language_">super</span>.<span class="title function_">stop</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`Car shifted to Park. <span class="subst">$&#123;parentResult&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 合并父类状态和子类状态</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            ...<span class="variable language_">super</span>.<span class="title function_">getStatus</span>(),</span><br><span class="line">            <span class="attr">doors</span>: <span class="variable language_">this</span>.<span class="property">doors</span>,</span><br><span class="line">            <span class="attr">fuelType</span>: <span class="variable language_">this</span>.<span class="property">fuelType</span>,</span><br><span class="line">            <span class="attr">gear</span>: <span class="variable language_">this</span>.<span class="property">gear</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增方法</span></span><br><span class="line">    <span class="title function_">honk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.make&#125;</span> <span class="subst">$&#123;<span class="variable language_">this</span>.model&#125;</span> honks: BEEP BEEP!`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ElectricCar</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Car</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">make, model, year, doors, batteryCapacity</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(make, model, year, doors, <span class="string">&#x27;Electric&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">batteryCapacity</span> = batteryCapacity;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">batteryLevel</span> = <span class="number">100</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chargingPort</span> = <span class="string">&#x27;Type 2&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">start</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">batteryLevel</span> &lt; <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.make&#125;</span> <span class="subst">$&#123;<span class="variable language_">this</span>.model&#125;</span> cannot start - low battery!`</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用父类的start方法</span></span><br><span class="line">        <span class="keyword">const</span> parentResult = <span class="variable language_">super</span>.<span class="title function_">start</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;parentResult&#125;</span> Electric motor engaged silently.`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">charge</span>(<span class="params">duration</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> chargeAmount = <span class="title class_">Math</span>.<span class="title function_">min</span>(duration * <span class="number">10</span>, <span class="number">100</span> - <span class="variable language_">this</span>.<span class="property">batteryLevel</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">batteryLevel</span> += chargeAmount;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`Charged for <span class="subst">$&#123;duration&#125;</span> hours. Battery level: <span class="subst">$&#123;<span class="variable language_">this</span>.batteryLevel&#125;</span>%`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getStatus</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            ...<span class="variable language_">super</span>.<span class="title function_">getStatus</span>(),</span><br><span class="line">            <span class="attr">batteryCapacity</span>: <span class="variable language_">this</span>.<span class="property">batteryCapacity</span>,</span><br><span class="line">            <span class="attr">batteryLevel</span>: <span class="variable language_">this</span>.<span class="property">batteryLevel</span>,</span><br><span class="line">            <span class="attr">chargingPort</span>: <span class="variable language_">this</span>.<span class="property">chargingPort</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> electricCar = <span class="keyword">new</span> <span class="title class_">ElectricCar</span>(<span class="string">&#x27;Tesla&#x27;</span>, <span class="string">&#x27;Model 3&#x27;</span>, <span class="number">2023</span>, <span class="number">4</span>, <span class="string">&#x27;75kWh&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(electricCar.<span class="title function_">start</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(electricCar.<span class="title function_">getStatus</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(electricCar.<span class="title function_">charge</span>(<span class="number">2</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(electricCar.<span class="title function_">stop</span>());</span><br></pre></td></tr></table></figure>

<h2 id="（二）多层继承和混入模式"><a href="#（二）多层继承和混入模式" class="headerlink" title="（二）多层继承和混入模式"></a>（二）多层继承和混入模式</h2><h3 id="1-多层继承链"><a href="#1-多层继承链" class="headerlink" title="1. 多层继承链"></a>1. 多层继承链</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 演示复杂的继承链</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LivingBeing</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isAlive</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">live</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is living`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">die</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isAlive</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> has died`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Organism</span> <span class="keyword">extends</span> <span class="title class_ inherited__">LivingBeing</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, cellType</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cellType</span> = cellType; <span class="comment">// &#x27;prokaryotic&#x27; or &#x27;eukaryotic&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">metabolize</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is metabolizing`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Organism</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, mobility</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;eukaryotic&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">mobility</span> = mobility;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">canMove</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">move</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">canMove</span> ? <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is moving`</span> : <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> cannot move`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">breathe</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is breathing`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mammal</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, furType</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;walking&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">furType</span> = furType;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isWarmBlooded</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hasHair</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">produceMilk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is producing milk`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">regulateTemperature</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is regulating body temperature`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Primate</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Mammal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, intelligence</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;fur&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">intelligence</span> = intelligence;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hasOpposableThumbs</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">useTools</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is using tools`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">communicate</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is communicating`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Human</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Primate</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, language, culture</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;high&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">language</span> = language;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">culture</span> = culture;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">canSpeak</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">canWrite</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">speak</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> says: &quot;<span class="subst">$&#123;message&#125;</span>&quot; in <span class="subst">$&#123;<span class="variable language_">this</span>.language&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">write</span>(<span class="params">text</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> writes: &quot;<span class="subst">$&#123;text&#125;</span>&quot;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">createArt</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is creating art influenced by <span class="subst">$&#123;<span class="variable language_">this</span>.culture&#125;</span> culture`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 展示继承链中的所有能力</span></span><br><span class="line">    <span class="title function_">demonstrateAbilities</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> abilities = [</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">live</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">metabolize</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">move</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">breathe</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">produceMilk</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">regulateTemperature</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">useTools</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">communicate</span>(),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">speak</span>(<span class="string">&#x27;Hello World&#x27;</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">write</span>(<span class="string">&#x27;JavaScript is awesome&#x27;</span>),</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">createArt</span>()</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> abilities;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> human = <span class="keyword">new</span> <span class="title class_">Human</span>(<span class="string">&#x27;Alice&#x27;</span>, <span class="string">&#x27;English&#x27;</span>, <span class="string">&#x27;Western&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Human abilities:&#x27;</span>);</span><br><span class="line">human.<span class="title function_">demonstrateAbilities</span>().<span class="title function_">forEach</span>(<span class="function"><span class="params">ability</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;- &#x27;</span> + ability));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查继承链</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\nInheritance chain:&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof Human:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">Human</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof Primate:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">Primate</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof Mammal:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">Mammal</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof Animal:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">Animal</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof Organism:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">Organism</span>); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;instanceof LivingBeing:&#x27;</span>, human <span class="keyword">instanceof</span> <span class="title class_">LivingBeing</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h3 id="2-混入（Mixin）模式"><a href="#2-混入（Mixin）模式" class="headerlink" title="2. 混入（Mixin）模式"></a>2. 混入（Mixin）模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 混入模式 - 模拟多重继承</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Flyable</span> = &#123;</span><br><span class="line">    <span class="title function_">fly</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is flying`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">land</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is landing`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getAltitude</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">altitude</span> || <span class="number">0</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setAltitude</span>(<span class="params">altitude</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">altitude</span> = altitude;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is now at <span class="subst">$&#123;altitude&#125;</span> feet`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Swimmable</span> = &#123;</span><br><span class="line">    <span class="title function_">swim</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is swimming`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">dive</span>(<span class="params">depth</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">depth</span> = depth;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> dives to <span class="subst">$&#123;depth&#125;</span> meters`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">surface</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">depth</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> surfaces`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Walkable</span> = &#123;</span><br><span class="line">    <span class="title function_">walk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is walking`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> is running`</span>;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="title function_">jump</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> jumps`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 混入函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">mixin</span>(<span class="params">target, ...sources</span>) &#123;</span><br><span class="line">    sources.<span class="title function_">forEach</span>(<span class="function"><span class="params">source</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(source).<span class="title function_">forEach</span>(<span class="function"><span class="params">name</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (name !== <span class="string">&#x27;constructor&#x27;</span>) &#123;</span><br><span class="line">                target.<span class="property"><span class="keyword">prototype</span></span>[name] = source[name];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> target;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基础动物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BaseAnimal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, species</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">species</span> = species;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> makes a sound`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建具有多种能力的动物类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Duck</span> <span class="keyword">extends</span> <span class="title class_ inherited__">BaseAnimal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;Duck&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">altitude</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">depth</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> quacks: Quack! Quack!`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用混入</span></span><br><span class="line"><span class="title function_">mixin</span>(<span class="title class_">Duck</span>, <span class="title class_">Flyable</span>, <span class="title class_">Swimmable</span>, <span class="title class_">Walkable</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Penguin</span> <span class="keyword">extends</span> <span class="title class_ inherited__">BaseAnimal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;Penguin&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">depth</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> makes penguin sounds`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 企鹅只能游泳和走路</span></span><br><span class="line"><span class="title function_">mixin</span>(<span class="title class_">Penguin</span>, <span class="title class_">Swimmable</span>, <span class="title class_">Walkable</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Eagle</span> <span class="keyword">extends</span> <span class="title class_ inherited__">BaseAnimal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, <span class="string">&#x27;Eagle&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">altitude</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">makeSound</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span> screeches`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 老鹰只能飞行和走路</span></span><br><span class="line"><span class="title function_">mixin</span>(<span class="title class_">Eagle</span>, <span class="title class_">Flyable</span>, <span class="title class_">Walkable</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> duck = <span class="keyword">new</span> <span class="title class_">Duck</span>(<span class="string">&#x27;Donald&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> penguin = <span class="keyword">new</span> <span class="title class_">Penguin</span>(<span class="string">&#x27;Pingu&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> eagle = <span class="keyword">new</span> <span class="title class_">Eagle</span>(<span class="string">&#x27;Eddie&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Duck abilities:&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(duck.<span class="title function_">makeSound</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(duck.<span class="title function_">fly</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(duck.<span class="title function_">swim</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(duck.<span class="title function_">walk</span>());</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\nPenguin abilities:&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(penguin.<span class="title function_">makeSound</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(penguin.<span class="title function_">swim</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(penguin.<span class="title function_">walk</span>());</span><br><span class="line"><span class="comment">// console.log(penguin.fly()); // 这会报错，因为企鹅没有飞行能力</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;\nEagle abilities:&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eagle.<span class="title function_">makeSound</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eagle.<span class="title function_">fly</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eagle.<span class="title function_">walk</span>());</span><br><span class="line"><span class="comment">// console.log(eagle.swim()); // 这会报错，因为老鹰没有游泳能力</span></span><br></pre></td></tr></table></figure>

<h1 id="四、静态方法和属性"><a href="#四、静态方法和属性" class="headerlink" title="四、静态方法和属性"></a>四、静态方法和属性</h1><h2 id="（一）静态方法"><a href="#（一）静态方法" class="headerlink" title="（一）静态方法"></a>（一）静态方法</h2><p>静态方法属于类本身，而不是类的实例。它们通过类名直接调用，不能通过实例调用。</p>
<h3 id="1-基本静态方法"><a href="#1-基本静态方法" class="headerlink" title="1. 基本静态方法"></a>1. 基本静态方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MathUtils</span> &#123;</span><br><span class="line">    <span class="comment">// 静态方法 - 工具函数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">multiply</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a * b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">factorial</span>(<span class="params">n</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> n * <span class="title class_">MathUtils</span>.<span class="title function_">factorial</span>(n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">isPrime</span>(<span class="params">num</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt;= <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(num); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % i === <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">fibonacci</span>(<span class="params">n</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">MathUtils</span>.<span class="title function_">fibonacci</span>(n - <span class="number">1</span>) + <span class="title class_">MathUtils</span>.<span class="title function_">fibonacci</span>(n - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法可以调用其他静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getRandomPrime</span>(<span class="params">max = <span class="number">100</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> candidates = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt;= max; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isPrime</span>(i)) &#123;</span><br><span class="line">                candidates.<span class="title function_">push</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> candidates[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * candidates.<span class="property">length</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用静态方法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">MathUtils</span>.<span class="title function_">add</span>(<span class="number">5</span>, <span class="number">3</span>)); <span class="comment">// 8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">MathUtils</span>.<span class="title function_">factorial</span>(<span class="number">5</span>)); <span class="comment">// 120</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">MathUtils</span>.<span class="title function_">isPrime</span>(<span class="number">17</span>)); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">MathUtils</span>.<span class="title function_">fibonacci</span>(<span class="number">10</span>)); <span class="comment">// 55</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">MathUtils</span>.<span class="title function_">getRandomPrime</span>(<span class="number">50</span>)); <span class="comment">// 随机质数</span></span><br></pre></td></tr></table></figure>

<h3 id="2-工厂模式中的静态方法"><a href="#2-工厂模式中的静态方法" class="headerlink" title="2. 工厂模式中的静态方法"></a>2. 工厂模式中的静态方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, email, role, permissions</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">email</span> = email;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">role</span> = role;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">permissions</span> = permissions;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = <span class="title class_">User</span>.<span class="title function_">generateId</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例方法</span></span><br><span class="line">    <span class="title function_">hasPermission</span>(<span class="params">permission</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">permissions</span>.<span class="title function_">includes</span>(permission);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">id</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="variable language_">this</span>.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">email</span>: <span class="variable language_">this</span>.<span class="property">email</span>,</span><br><span class="line">            <span class="attr">role</span>: <span class="variable language_">this</span>.<span class="property">role</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="variable language_">this</span>.<span class="property">createdAt</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - ID生成器</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">generateId</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`user_<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>_<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substr(<span class="number">2</span>, <span class="number">5</span>)&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态工厂方法 - 创建管理员用户</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">createAdmin</span>(<span class="params">name, email</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> adminPermissions = [</span><br><span class="line">            <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;write&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;manage_users&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;manage_system&#x27;</span>, <span class="string">&#x27;view_analytics&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(name, email, <span class="string">&#x27;admin&#x27;</span>, adminPermissions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态工厂方法 - 创建普通用户</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">createRegularUser</span>(<span class="params">name, email</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> userPermissions = [<span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;write&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(name, email, <span class="string">&#x27;user&#x27;</span>, userPermissions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态工厂方法 - 创建访客用户</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">createGuest</span>(<span class="params">name = <span class="string">&#x27;Guest&#x27;</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> guestPermissions = [<span class="string">&#x27;read&#x27;</span>];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(name, <span class="string">&#x27;guest@example.com&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>, guestPermissions);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 批量创建用户</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">createBatch</span>(<span class="params">userDataArray</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> userDataArray.<span class="title function_">map</span>(<span class="function"><span class="params">userData</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (userData.<span class="property">role</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;admin&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="title class_">User</span>.<span class="title function_">createAdmin</span>(userData.<span class="property">name</span>, userData.<span class="property">email</span>);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;user&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="title class_">User</span>.<span class="title function_">createRegularUser</span>(userData.<span class="property">name</span>, userData.<span class="property">email</span>);</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;guest&#x27;</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="title class_">User</span>.<span class="title function_">createGuest</span>(userData.<span class="property">name</span>);</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Unknown role: <span class="subst">$&#123;userData.role&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态验证方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">validateEmail</span>(<span class="params">email</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> emailRegex = <span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span>;</span><br><span class="line">        <span class="keyword">return</span> emailRegex.<span class="title function_">test</span>(email);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">validateUserData</span>(<span class="params">userData</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> errors = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!userData.<span class="property">name</span> || userData.<span class="property">name</span>.<span class="title function_">trim</span>().<span class="property">length</span> &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            errors.<span class="title function_">push</span>(<span class="string">&#x27;Name must be at least 2 characters long&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="title function_">validateEmail</span>(userData.<span class="property">email</span>)) &#123;</span><br><span class="line">            errors.<span class="title function_">push</span>(<span class="string">&#x27;Invalid email format&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (![<span class="string">&#x27;admin&#x27;</span>, <span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;guest&#x27;</span>].<span class="title function_">includes</span>(userData.<span class="property">role</span>)) &#123;</span><br><span class="line">            errors.<span class="title function_">push</span>(<span class="string">&#x27;Invalid role&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">isValid</span>: errors.<span class="property">length</span> === <span class="number">0</span>,</span><br><span class="line">            errors</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用工厂方法创建用户</span></span><br><span class="line"><span class="keyword">const</span> admin = <span class="title class_">User</span>.<span class="title function_">createAdmin</span>(<span class="string">&#x27;John Admin&#x27;</span>, <span class="string">&#x27;john@admin.com&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> regularUser = <span class="title class_">User</span>.<span class="title function_">createRegularUser</span>(<span class="string">&#x27;Jane User&#x27;</span>, <span class="string">&#x27;jane@user.com&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> guest = <span class="title class_">User</span>.<span class="title function_">createGuest</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Admin info:&#x27;</span>, admin.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Admin has manage_users permission:&#x27;</span>, admin.<span class="title function_">hasPermission</span>(<span class="string">&#x27;manage_users&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Regular user info:&#x27;</span>, regularUser.<span class="title function_">getInfo</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Regular user has delete permission:&#x27;</span>, regularUser.<span class="title function_">hasPermission</span>(<span class="string">&#x27;delete&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 批量创建用户</span></span><br><span class="line"><span class="keyword">const</span> usersData = [</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span>, <span class="attr">email</span>: <span class="string">&#x27;alice@example.com&#x27;</span>, <span class="attr">role</span>: <span class="string">&#x27;admin&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Bob&#x27;</span>, <span class="attr">email</span>: <span class="string">&#x27;bob@example.com&#x27;</span>, <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">name</span>: <span class="string">&#x27;Charlie&#x27;</span>, <span class="attr">role</span>: <span class="string">&#x27;guest&#x27;</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> users = <span class="title class_">User</span>.<span class="title function_">createBatch</span>(usersData);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Batch created users:&#x27;</span>, users.<span class="title function_">map</span>(<span class="function"><span class="params">user</span> =&gt;</span> user.<span class="title function_">getInfo</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证用户数据</span></span><br><span class="line"><span class="keyword">const</span> validation = <span class="title class_">User</span>.<span class="title function_">validateUserData</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Test User&#x27;</span>,</span><br><span class="line">    <span class="attr">email</span>: <span class="string">&#x27;invalid-email&#x27;</span>,</span><br><span class="line">    <span class="attr">role</span>: <span class="string">&#x27;unknown&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Validation result:&#x27;</span>, validation);</span><br></pre></td></tr></table></figure>

<h2 id="（二）静态属性"><a href="#（二）静态属性" class="headerlink" title="（二）静态属性"></a>（二）静态属性</h2><p>静态属性属于类本身，所有实例共享同一个静态属性值。</p>
<h3 id="1-静态属性的定义和使用"><a href="#1-静态属性的定义和使用" class="headerlink" title="1. 静态属性的定义和使用"></a>1. 静态属性的定义和使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Counter</span> &#123;</span><br><span class="line">    <span class="comment">// 静态属性（ES2022语法）</span></span><br><span class="line">    <span class="keyword">static</span> totalInstances = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> maxInstances = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">static</span> instanceRegistry = [];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="comment">// 检查实例数量限制</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Counter</span>.<span class="property">totalInstances</span> &gt;= <span class="title class_">Counter</span>.<span class="property">maxInstances</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Cannot create more than <span class="subst">$&#123;Counter.maxInstances&#125;</span> instances`</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">id</span> = ++<span class="title class_">Counter</span>.<span class="property">totalInstances</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">createdAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册实例</span></span><br><span class="line">        <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Created instance <span class="subst">$&#123;<span class="variable language_">this</span>.id&#125;</span>: <span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实例方法</span></span><br><span class="line">    <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="variable language_">this</span>.<span class="property">id</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="variable language_">this</span>.<span class="property">name</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="variable language_">this</span>.<span class="property">createdAt</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法访问静态属性</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getTotalInstances</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Counter</span>.<span class="property">totalInstances</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getInstanceRegistry</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span>.<span class="title function_">map</span>(<span class="function"><span class="params">instance</span> =&gt;</span> instance.<span class="title function_">getInfo</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">findInstanceByName</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span>.<span class="title function_">find</span>(<span class="function"><span class="params">instance</span> =&gt;</span> instance.<span class="property">name</span> === name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">resetCounter</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">Counter</span>.<span class="property">totalInstances</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span> = [];</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Counter reset&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">setMaxInstances</span>(<span class="params">max</span>) &#123;</span><br><span class="line">        <span class="title class_">Counter</span>.<span class="property">maxInstances</span> = max;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Max instances set to <span class="subst">$&#123;max&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 销毁实例</span></span><br><span class="line">    <span class="title function_">destroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> index = <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="title class_">Counter</span>.<span class="property">instanceRegistry</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Instance <span class="subst">$&#123;<span class="variable language_">this</span>.id&#125;</span> destroyed`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> counter1 = <span class="keyword">new</span> <span class="title class_">Counter</span>(<span class="string">&#x27;First&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> counter2 = <span class="keyword">new</span> <span class="title class_">Counter</span>(<span class="string">&#x27;Second&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> counter3 = <span class="keyword">new</span> <span class="title class_">Counter</span>(<span class="string">&#x27;Third&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Total instances:&#x27;</span>, <span class="title class_">Counter</span>.<span class="title function_">getTotalInstances</span>());</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Instance registry:&#x27;</span>, <span class="title class_">Counter</span>.<span class="title function_">getInstanceRegistry</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找实例</span></span><br><span class="line">    <span class="keyword">const</span> found = <span class="title class_">Counter</span>.<span class="title function_">findInstanceByName</span>(<span class="string">&#x27;Second&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Found instance:&#x27;</span>, found?.<span class="title function_">getInfo</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 销毁实例</span></span><br><span class="line">    counter2.<span class="title function_">destroy</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;After destruction:&#x27;</span>, <span class="title class_">Counter</span>.<span class="title function_">getInstanceRegistry</span>());</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-配置管理中的静态属性"><a href="#2-配置管理中的静态属性" class="headerlink" title="2. 配置管理中的静态属性"></a>2. 配置管理中的静态属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">AppConfig</span> &#123;</span><br><span class="line">    <span class="comment">// 静态配置属性</span></span><br><span class="line">    <span class="keyword">static</span> #config = &#123;</span><br><span class="line">        <span class="attr">apiUrl</span>: <span class="string">&#x27;https://api.example.com&#x27;</span>,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">        <span class="attr">retryAttempts</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">debug</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">version</span>: <span class="string">&#x27;1.0.0&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> #environment = <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line">    <span class="keyword">static</span> #initialized = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 初始化配置</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">initialize</span>(<span class="params">config = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">AppConfig</span>.#initialized) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;AppConfig already initialized&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 合并配置</span></span><br><span class="line">        <span class="title class_">AppConfig</span>.#config = &#123; ...<span class="title class_">AppConfig</span>.#config, ...config &#125;;</span><br><span class="line">        <span class="title class_">AppConfig</span>.#initialized = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;AppConfig initialized:&#x27;</span>, <span class="title class_">AppConfig</span>.#config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 获取配置值</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">get</span>(<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">AppConfig</span>.#initialized) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;AppConfig not initialized. Call AppConfig.initialize() first.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">AppConfig</span>.#config[key];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 设置配置值</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">set</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">AppConfig</span>.#initialized) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;AppConfig not initialized. Call AppConfig.initialize() first.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> oldValue = <span class="title class_">AppConfig</span>.#config[key];</span><br><span class="line">        <span class="title class_">AppConfig</span>.#config[key] = value;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Config updated: <span class="subst">$&#123;key&#125;</span> = <span class="subst">$&#123;value&#125;</span> (was: <span class="subst">$&#123;oldValue&#125;</span>)`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 获取所有配置</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getAll</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">AppConfig</span>.#initialized) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;AppConfig not initialized&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123; ...<span class="title class_">AppConfig</span>.#config &#125;; <span class="comment">// 返回副本</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 设置环境</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">setEnvironment</span>(<span class="params">env</span>) &#123;</span><br><span class="line">        <span class="title class_">AppConfig</span>.#environment = env;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据环境调整配置</span></span><br><span class="line">        <span class="keyword">switch</span> (env) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;production&#x27;</span>:</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;debug&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;apiUrl&#x27;</span>, <span class="string">&#x27;https://api.production.com&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;development&#x27;</span>:</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;debug&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;apiUrl&#x27;</span>, <span class="string">&#x27;https://api.dev.com&#x27;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;testing&#x27;</span>:</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;debug&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;apiUrl&#x27;</span>, <span class="string">&#x27;https://api.test.com&#x27;</span>);</span><br><span class="line">                <span class="title class_">AppConfig</span>.<span class="title function_">set</span>(<span class="string">&#x27;timeout&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Environment set to: <span class="subst">$&#123;env&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 获取环境</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getEnvironment</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">AppConfig</span>.#environment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 重置配置</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">reset</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title class_">AppConfig</span>.#config = &#123;</span><br><span class="line">            <span class="attr">apiUrl</span>: <span class="string">&#x27;https://api.example.com&#x27;</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">            <span class="attr">retryAttempts</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">debug</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">version</span>: <span class="string">&#x27;1.0.0&#x27;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="title class_">AppConfig</span>.#environment = <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line">        <span class="title class_">AppConfig</span>.#initialized = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;AppConfig reset to defaults&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法 - 验证配置</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">validate</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> required = [<span class="string">&#x27;apiUrl&#x27;</span>, <span class="string">&#x27;timeout&#x27;</span>, <span class="string">&#x27;retryAttempts&#x27;</span>];</span><br><span class="line">        <span class="keyword">const</span> missing = required.<span class="title function_">filter</span>(<span class="function"><span class="params">key</span> =&gt;</span> !(key <span class="keyword">in</span> <span class="title class_">AppConfig</span>.#config));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (missing.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Missing required config keys: <span class="subst">$&#123;missing.join(<span class="string">&#x27;, &#x27;</span>)&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 类型验证</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">AppConfig</span>.#config.<span class="property">timeout</span> !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;timeout must be a number&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">AppConfig</span>.#config.<span class="property">retryAttempts</span> !== <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;retryAttempts must be a number&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Configuration is valid&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用配置管理</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 初始化配置</span></span><br><span class="line">    <span class="title class_">AppConfig</span>.<span class="title function_">initialize</span>(&#123;</span><br><span class="line">        <span class="attr">apiUrl</span>: <span class="string">&#x27;https://my-api.com&#x27;</span>,</span><br><span class="line">        <span class="attr">debug</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">customSetting</span>: <span class="string">&#x27;custom value&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取配置</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;API URL:&#x27;</span>, <span class="title class_">AppConfig</span>.<span class="title function_">get</span>(<span class="string">&#x27;apiUrl&#x27;</span>));</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Debug mode:&#x27;</span>, <span class="title class_">AppConfig</span>.<span class="title function_">get</span>(<span class="string">&#x27;debug&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置环境</span></span><br><span class="line">    <span class="title class_">AppConfig</span>.<span class="title function_">setEnvironment</span>(<span class="string">&#x27;production&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证配置</span></span><br><span class="line">    <span class="title class_">AppConfig</span>.<span class="title function_">validate</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有配置</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;All config:&#x27;</span>, <span class="title class_">AppConfig</span>.<span class="title function_">getAll</span>());</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Config error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、私有属性和方法"><a href="#五、私有属性和方法" class="headerlink" title="五、私有属性和方法"></a>五、私有属性和方法</h1><p>ES2022引入了真正的私有字段和方法，使用<code>#</code>前缀标识。</p>
<h2 id="（一）私有属性"><a href="#（一）私有属性" class="headerlink" title="（一）私有属性"></a>（一）私有属性</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BankAccount</span> &#123;</span><br><span class="line">    <span class="comment">// 私有属性</span></span><br><span class="line">    #balance = <span class="number">0</span>;</span><br><span class="line">    #accountNumber;</span><br><span class="line">    #pin;</span><br><span class="line">    #transactionHistory = [];</span><br><span class="line">    #isLocked = <span class="literal">false</span>;</span><br><span class="line">    #failedAttempts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态私有属性</span></span><br><span class="line">    <span class="keyword">static</span> #totalAccounts = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> #bankName = <span class="string">&#x27;SecureBank&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">initialBalance, pin</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (initialBalance &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Initial balance cannot be negative&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#balance = initialBalance;</span><br><span class="line">        <span class="variable language_">this</span>.#pin = pin;</span><br><span class="line">        <span class="variable language_">this</span>.#accountNumber = <span class="variable language_">this</span>.#<span class="title function_">generateAccountNumber</span>();</span><br><span class="line"></span><br><span class="line">        <span class="title class_">BankAccount</span>.#totalAccounts++;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addTransaction</span>(<span class="string">&#x27;Account opened&#x27;</span>, initialBalance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法</span></span><br><span class="line">    #<span class="title function_">generateAccountNumber</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`ACC<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span><span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substr(<span class="number">2</span>, <span class="number">4</span>).toUpperCase()&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #<span class="title function_">validatePin</span>(<span class="params">pin</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#pin === pin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #<span class="title function_">addTransaction</span>(<span class="params">type, amount, balance = <span class="variable language_">this</span>.#balance</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#transactionHistory.<span class="title function_">push</span>(&#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">            type,</span><br><span class="line">            amount,</span><br><span class="line">            balance,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #<span class="title function_">checkAccountLock</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#isLocked) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Account is locked due to multiple failed attempts&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #<span class="title function_">handleFailedAttempt</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#failedAttempts &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#isLocked = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Account locked after 3 failed PIN attempts&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Invalid PIN. <span class="subst">$&#123;<span class="number">3</span> - <span class="variable language_">this</span>.#failedAttempts&#125;</span> attempts remaining`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法</span></span><br><span class="line">    <span class="title function_">deposit</span>(<span class="params">amount, pin</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">checkAccountLock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validatePin</span>(pin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">handleFailedAttempt</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>; <span class="comment">// 重置失败次数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (amount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Deposit amount must be positive&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#balance += amount;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addTransaction</span>(<span class="string">&#x27;Deposit&#x27;</span>, amount);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">`Deposited $<span class="subst">$&#123;amount&#125;</span>`</span>,</span><br><span class="line">            <span class="attr">balance</span>: <span class="variable language_">this</span>.#balance</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">withdraw</span>(<span class="params">amount, pin</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">checkAccountLock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validatePin</span>(pin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">handleFailedAttempt</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (amount &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Withdrawal amount must be positive&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (amount &gt; <span class="variable language_">this</span>.#balance) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Insufficient funds&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#balance -= amount;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addTransaction</span>(<span class="string">&#x27;Withdrawal&#x27;</span>, -amount);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">`Withdrew $<span class="subst">$&#123;amount&#125;</span>`</span>,</span><br><span class="line">            <span class="attr">balance</span>: <span class="variable language_">this</span>.#balance</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getBalance</span>(<span class="params">pin</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">checkAccountLock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validatePin</span>(pin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">handleFailedAttempt</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#balance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getAccountInfo</span>(<span class="params">pin</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">checkAccountLock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validatePin</span>(pin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">handleFailedAttempt</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">accountNumber</span>: <span class="variable language_">this</span>.#accountNumber,</span><br><span class="line">            <span class="attr">balance</span>: <span class="variable language_">this</span>.#balance,</span><br><span class="line">            <span class="attr">isLocked</span>: <span class="variable language_">this</span>.#isLocked,</span><br><span class="line">            <span class="attr">transactionCount</span>: <span class="variable language_">this</span>.#transactionHistory.<span class="property">length</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getTransactionHistory</span>(<span class="params">pin, limit = <span class="number">10</span></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">checkAccountLock</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validatePin</span>(pin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">handleFailedAttempt</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#transactionHistory</span><br><span class="line">            .<span class="title function_">slice</span>(-limit)</span><br><span class="line">            .<span class="title function_">reverse</span>(); <span class="comment">// 最新的在前面</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 管理员方法（仅用于演示，实际应用中需要更严格的权限控制）</span></span><br><span class="line">    <span class="title function_">unlockAccount</span>(<span class="params">adminCode</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (adminCode === <span class="string">&#x27;ADMIN123&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#isLocked = <span class="literal">false</span>;</span><br><span class="line">            <span class="variable language_">this</span>.#failedAttempts = <span class="number">0</span>;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">addTransaction</span>(<span class="string">&#x27;Account unlocked by admin&#x27;</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">success</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&#x27;Account unlocked&#x27;</span> &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid admin code&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getTotalAccounts</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">BankAccount</span>.#totalAccounts;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">getBankName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">BankAccount</span>.#bankName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> account = <span class="keyword">new</span> <span class="title class_">BankAccount</span>(<span class="number">1000</span>, <span class="string">&#x27;1234&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Account created&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Balance:&#x27;</span>, account.<span class="title function_">getBalance</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存款</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(account.<span class="title function_">deposit</span>(<span class="number">500</span>, <span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取款</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(account.<span class="title function_">withdraw</span>(<span class="number">200</span>, <span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取账户信息</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Account info:&#x27;</span>, account.<span class="title function_">getAccountInfo</span>(<span class="string">&#x27;1234&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取交易历史</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Transaction history:&#x27;</span>, account.<span class="title function_">getTransactionHistory</span>(<span class="string">&#x27;1234&#x27;</span>, <span class="number">5</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试访问私有属性（会失败）</span></span><br><span class="line">    <span class="comment">// console.log(account.#balance); // SyntaxError: Private field &#x27;#balance&#x27; must be declared in an enclosing class</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误的PIN测试</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        account.<span class="title function_">getBalance</span>(<span class="string">&#x27;wrong&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;PIN error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Total accounts:&#x27;</span>, <span class="title class_">BankAccount</span>.<span class="title function_">getTotalAccounts</span>());</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Account error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）私有方法的高级应用"><a href="#（二）私有方法的高级应用" class="headerlink" title="（二）私有方法的高级应用"></a>（二）私有方法的高级应用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DataProcessor</span> &#123;</span><br><span class="line">    <span class="comment">// 私有属性</span></span><br><span class="line">    #data = [];</span><br><span class="line">    #processedData = <span class="literal">null</span>;</span><br><span class="line">    #isProcessing = <span class="literal">false</span>;</span><br><span class="line">    #processingSteps = [];</span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">initialData = []</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#data = [...initialData];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 数据验证</span></span><br><span class="line">    #<span class="title function_">validateData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title class_">Array</span>.<span class="title function_">isArray</span>(data)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Data must be an array&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data.<span class="title function_">every</span>(<span class="function"><span class="params">item</span> =&gt;</span></span><br><span class="line">            <span class="keyword">typeof</span> item === <span class="string">&#x27;object&#x27;</span> &amp;&amp;</span><br><span class="line">            item !== <span class="literal">null</span> &amp;&amp;</span><br><span class="line">            <span class="string">&#x27;value&#x27;</span> <span class="keyword">in</span> item</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 数据清洗</span></span><br><span class="line">    #<span class="title function_">cleanData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Data cleaning started&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> cleaned = data</span><br><span class="line">            .<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">value</span> !== <span class="literal">null</span> &amp;&amp; item.<span class="property">value</span> !== <span class="literal">undefined</span>)</span><br><span class="line">            .<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (&#123;</span><br><span class="line">                ...item,</span><br><span class="line">                <span class="attr">value</span>: <span class="keyword">typeof</span> item.<span class="property">value</span> === <span class="string">&#x27;string&#x27;</span> ? item.<span class="property">value</span>.<span class="title function_">trim</span>() : item.<span class="property">value</span></span><br><span class="line">            &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">`Data cleaning completed. <span class="subst">$&#123;cleaned.length&#125;</span> items remaining`</span>);</span><br><span class="line">        <span class="keyword">return</span> cleaned;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 数据转换</span></span><br><span class="line">    #<span class="title function_">transformData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Data transformation started&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> transformed = data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> (&#123;</span><br><span class="line">            ...item,</span><br><span class="line">            <span class="attr">value</span>: <span class="keyword">typeof</span> item.<span class="property">value</span> === <span class="string">&#x27;string&#x27;</span> ?</span><br><span class="line">                <span class="built_in">parseFloat</span>(item.<span class="property">value</span>) || <span class="number">0</span> :</span><br><span class="line">                <span class="title class_">Number</span>(item.<span class="property">value</span>) || <span class="number">0</span>,</span><br><span class="line">            <span class="attr">processed</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">processedAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Data transformation completed&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> transformed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 数据聚合</span></span><br><span class="line">    #<span class="title function_">aggregateData</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Data aggregation started&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> aggregated = &#123;</span><br><span class="line">            <span class="attr">total</span>: data.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">sum</span>: data.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">value</span>, <span class="number">0</span>),</span><br><span class="line">            <span class="attr">average</span>: <span class="number">0</span>,</span><br><span class="line">            <span class="attr">min</span>: <span class="title class_">Math</span>.<span class="title function_">min</span>(...data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">value</span>)),</span><br><span class="line">            <span class="attr">max</span>: <span class="title class_">Math</span>.<span class="title function_">max</span>(...data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">value</span>)),</span><br><span class="line">            <span class="attr">items</span>: data</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        aggregated.<span class="property">average</span> = aggregated.<span class="property">total</span> &gt; <span class="number">0</span> ? aggregated.<span class="property">sum</span> / aggregated.<span class="property">total</span> : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Data aggregation completed&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> aggregated;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 添加处理步骤记录</span></span><br><span class="line">    #<span class="title function_">addProcessingStep</span>(<span class="params">step</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#processingSteps.<span class="title function_">push</span>(&#123;</span><br><span class="line">            step,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有方法 - 重置处理状态</span></span><br><span class="line">    #<span class="title function_">resetProcessingState</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.#isProcessing = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.#processingSteps = [];</span><br><span class="line">        <span class="variable language_">this</span>.#processedData = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 添加数据</span></span><br><span class="line">    <span class="title function_">addData</span>(<span class="params">newData</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#isProcessing) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Cannot add data while processing&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#<span class="title function_">validateData</span>(newData)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid data format&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#data.<span class="title function_">push</span>(...newData);</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">resetProcessingState</span>(); <span class="comment">// 重置之前的处理结果</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.#data.<span class="property">length</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 处理数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">processData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#isProcessing) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Processing already in progress&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#data.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;No data to process&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#isProcessing = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">resetProcessingState</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Processing started&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟异步处理</span></span><br><span class="line">            <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> processedData = [...<span class="variable language_">this</span>.#data];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 执行处理管道</span></span><br><span class="line">            processedData = <span class="variable language_">this</span>.#<span class="title function_">cleanData</span>(processedData);</span><br><span class="line">            <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">            processedData = <span class="variable language_">this</span>.#<span class="title function_">transformData</span>(processedData);</span><br><span class="line">            <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">50</span>));</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.#processedData = <span class="variable language_">this</span>.#<span class="title function_">aggregateData</span>(processedData);</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">&#x27;Processing completed successfully&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">result</span>: <span class="variable language_">this</span>.#processedData,</span><br><span class="line">                <span class="attr">steps</span>: [...<span class="variable language_">this</span>.#processingSteps]</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#<span class="title function_">addProcessingStep</span>(<span class="string">`Processing failed: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.#isProcessing = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 获取处理结果</span></span><br><span class="line">    <span class="title function_">getProcessedData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#isProcessing) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Processing in progress&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.#processedData) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;No processed data available. Call processData() first.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123; ...<span class="variable language_">this</span>.#processedData &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 获取处理步骤</span></span><br><span class="line">    <span class="title function_">getProcessingSteps</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [...<span class="variable language_">this</span>.#processingSteps];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 获取原始数据统计</span></span><br><span class="line">    <span class="title function_">getDataStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">totalItems</span>: <span class="variable language_">this</span>.#data.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">isProcessing</span>: <span class="variable language_">this</span>.#isProcessing,</span><br><span class="line">            <span class="attr">hasProcessedData</span>: <span class="variable language_">this</span>.#processedData !== <span class="literal">null</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 公共方法 - 清除所有数据</span></span><br><span class="line">    <span class="title function_">clearData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.#isProcessing) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Cannot clear data while processing&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.#data = [];</span><br><span class="line">        <span class="variable language_">this</span>.#<span class="title function_">resetProcessingState</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">demonstrateDataProcessor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> processor = <span class="keyword">new</span> <span class="title class_">DataProcessor</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加测试数据</span></span><br><span class="line">    <span class="keyword">const</span> testData = [</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">value</span>: <span class="string">&#x27;10.5&#x27;</span>, <span class="attr">category</span>: <span class="string">&#x27;A&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">value</span>: <span class="number">20</span>, <span class="attr">category</span>: <span class="string">&#x27;B&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">value</span>: <span class="string">&#x27;30.7&#x27;</span>, <span class="attr">category</span>: <span class="string">&#x27;A&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">value</span>: <span class="literal">null</span>, <span class="attr">category</span>: <span class="string">&#x27;C&#x27;</span> &#125;, <span class="comment">// 将被清理掉</span></span><br><span class="line">        &#123; <span class="attr">id</span>: <span class="number">5</span>, <span class="attr">value</span>: <span class="string">&#x27;  15.2  &#x27;</span>, <span class="attr">category</span>: <span class="string">&#x27;B&#x27;</span> &#125; <span class="comment">// 将被trim</span></span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Adding data...&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> count = processor.<span class="title function_">addData</span>(testData);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Added <span class="subst">$&#123;count&#125;</span> total items`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Data stats:&#x27;</span>, processor.<span class="title function_">getDataStats</span>());</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Processing data...&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> processor.<span class="title function_">processData</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Processing result:&#x27;</span>, result.<span class="property">result</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Processing steps:&#x27;</span>);</span><br><span class="line">        result.<span class="property">steps</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">step</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`- <span class="subst">$&#123;step.step&#125;</span> at <span class="subst">$&#123;step.timestamp.toISOString()&#125;</span>`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取处理后的数据</span></span><br><span class="line">        <span class="keyword">const</span> processedData = processor.<span class="title function_">getProcessedData</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Final processed data:&#x27;</span>, processedData);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// demonstrateDataProcessor();</span></span><br></pre></td></tr></table></figure>

<h1 id="六、参考资料"><a href="#六、参考资料" class="headerlink" title="六、参考资料"></a>六、参考资料</h1><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes">MDN - Classes</a></li>
<li><a href="https://www.ecma-international.org/ecma-262/6.0/#sec-class-definitions">ECMAScript 2015 Language Specification</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor">MDN - Constructor</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/static">MDN - Static</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/Private_class_fields">MDN - Private class features</a></li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83%EF%BC%9A%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8Document%E5%AF%B9%E8%B1%A1.md">【前端】JavaScript中的核心：理解和使用Document对象</a></li>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91TypeScript%E4%B8%8EJavaScript%E5%AF%B9%E6%AF%94%EF%BC%9A%E5%BC%82%E5%90%8C%E3%80%81%E4%BC%98%E5%8A%BF%E5%8F%8A%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF.md">【前端】TypeScript与JavaScript对比：异同、优势及适用场景</a></li>
<li><a href="../%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91JavaScript%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E6%94%BB%E7%95%A5%EF%BC%9A%E5%89%8D%E7%AB%AF%E5%88%B0%E5%90%8E%E7%AB%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E5%BE%81%E7%A8%8B.md">【学习路线】JavaScript全栈开发攻略：前端到后端的完整征程</a></li>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8E%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%88%B0%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97.md">【前端】跨域问题详解：从同源策略到解决方案的完整指南</a></li>
</ul>
<h2 id="技术资源"><a href="#技术资源" class="headerlink" title="技术资源"></a>技术资源</h2><ul>
<li><a href="https://babeljs.io/repl">Babel在线转换器</a></li>
<li><a href="https://kangax.github.io/compat-table/es6/">JavaScript类兼容性表</a></li>
<li><a href="https://node.green/">Node.js ES6支持情况</a></li>
<li><a href="https://caniuse.com/es6-class">Can I Use - JavaScript Classes</a></li>
</ul>
<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ul>
<li><a href="https://book.douban.com/subject/10546125/">JavaScript高级程序设计</a></li>
<li><a href="https://book.douban.com/subject/26351021/">你不知道的JavaScript</a></li>
<li><a href="https://book.douban.com/subject/27127030/">ES6标准入门</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[深入解析JavaScript中Class的本质、语法特性、继承机制，以及与传统原型链的关系，掌握现代JavaScript面向对象编程的核心概念]]>
    
    </summary>
    
      <category term="前端" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="面向对象" scheme="https://uwakeme.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="ES6" scheme="https://uwakeme.top/tags/ES6/"/>
    
      <category term="Class" scheme="https://uwakeme.top/tags/Class/"/>
    
      <category term="原型链" scheme="https://uwakeme.top/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    
      <category term="继承" scheme="https://uwakeme.top/tags/%E7%BB%A7%E6%89%BF/"/>
    
      <category term="编程范式" scheme="https://uwakeme.top/tags/%E7%BC%96%E7%A8%8B%E8%8C%83%E5%BC%8F/"/>
    
      <category term="前端" scheme="https://uwakeme.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【前端】跨域问题详解：从同源策略到解决方案的完整指南]]></title>
    <link href="https://uwakeme.top/2025/07/28/%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E8%AF%A6%E8%A7%A3%EF%BC%9A%E4%BB%8E%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E5%88%B0%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>https://uwakeme.top/2025/07/28/前端/【前端】跨域问题详解：从同源策略到解决方案的完整指南/</id>
    <published>2025-07-27T16:00:00.000Z</published>
    <updated>2025-07-28T03:33:31.304Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>跨域问题是前端开发中最常遇到的问题之一，它源于浏览器的同源策略安全机制。随着现代Web应用架构的复杂化，前后端分离、微服务架构的普及，跨域问题变得更加突出。本文将从同源策略的基本概念出发，深入分析跨域问题的本质，并详细介绍各种跨域解决方案的原理、实现方式和适用场景。</p>
<h1 id="一、同源策略基础"><a href="#一、同源策略基础" class="headerlink" title="一、同源策略基础"></a>一、同源策略基础</h1><h2 id="（一）什么是同源策略"><a href="#（一）什么是同源策略" class="headerlink" title="（一）什么是同源策略"></a>（一）什么是同源策略</h2><p>同源策略（Same-Origin Policy）是浏览器的一个重要安全机制，它限制了从一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文档的重要安全机制。</p>
<h3 id="1-源的定义"><a href="#1-源的定义" class="headerlink" title="1. 源的定义"></a>1. 源的定义</h3><p>一个源由三个部分组成：</p>
<ul>
<li><strong>协议（Protocol）</strong>：如 <code>http://</code> 或 <code>https://</code></li>
<li><strong>域名（Domain）</strong>：如 <code>example.com</code> 或 <code>api.example.com</code></li>
<li><strong>端口（Port）</strong>：如 <code>:80</code>、<code>:443</code>、<code>:3000</code></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同源示例</span></span><br><span class="line"><span class="keyword">const</span> currentOrigin = <span class="string">&#x27;https://www.example.com:443&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下URL与当前源的对比：</span></span><br><span class="line"><span class="keyword">const</span> urls = [</span><br><span class="line">    <span class="string">&#x27;https://www.example.com:443/api/data&#x27;</span>,     <span class="comment">// ✅ 同源（协议、域名、端口都相同）</span></span><br><span class="line">    <span class="string">&#x27;https://www.example.com/api/data&#x27;</span>,         <span class="comment">// ✅ 同源（HTTPS默认端口443）</span></span><br><span class="line">    <span class="string">&#x27;http://www.example.com:443/api/data&#x27;</span>,      <span class="comment">// ❌ 跨域（协议不同）</span></span><br><span class="line">    <span class="string">&#x27;https://api.example.com:443/api/data&#x27;</span>,     <span class="comment">// ❌ 跨域（域名不同）</span></span><br><span class="line">    <span class="string">&#x27;https://www.example.com:8080/api/data&#x27;</span>,    <span class="comment">// ❌ 跨域（端口不同）</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h3 id="2-同源策略的限制范围"><a href="#2-同源策略的限制范围" class="headerlink" title="2. 同源策略的限制范围"></a>2. 同源策略的限制范围</h3><p>同源策略主要限制以下几个方面：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. XMLHttpRequest和Fetch API</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://api.other-domain.com/data&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 跨域请求会被阻止</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;CORS error:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. DOM访问限制</span></span><br><span class="line"><span class="comment">// 无法访问不同源的iframe内容</span></span><br><span class="line"><span class="keyword">const</span> iframe = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;cross-origin-iframe&#x27;</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> iframeDocument = iframe.<span class="property">contentDocument</span>; <span class="comment">// 会抛出错误</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Cannot access cross-origin iframe:&#x27;</span>, error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. Cookie、LocalStorage、SessionStorage访问限制</span></span><br><span class="line"><span class="comment">// 无法读取其他域的存储数据</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）同源策略的安全意义"><a href="#（二）同源策略的安全意义" class="headerlink" title="（二）同源策略的安全意义"></a>（二）同源策略的安全意义</h2><h3 id="1-防止恶意脚本攻击"><a href="#1-防止恶意脚本攻击" class="headerlink" title="1. 防止恶意脚本攻击"></a>1. 防止恶意脚本攻击</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 恶意网站示例：如果没有同源策略</span></span><br><span class="line"><span class="comment">// 恶意网站 evil.com 上的脚本</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">stealUserData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 如果没有同源策略，恶意脚本可以：</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1. 读取用户在银行网站的Cookie</span></span><br><span class="line">    <span class="keyword">const</span> bankCookies = <span class="variable language_">document</span>.<span class="property">cookie</span>; <span class="comment">// 被同源策略阻止</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2. 向银行API发送请求</span></span><br><span class="line">    <span class="title function_">fetch</span>(<span class="string">&#x27;https://bank.com/api/transfer&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">to</span>: <span class="string">&#x27;evil-account&#x27;</span>,</span><br><span class="line">            <span class="attr">amount</span>: <span class="number">10000</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;); <span class="comment">// 被同源策略阻止</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 3. 读取用户的个人信息</span></span><br><span class="line">    <span class="keyword">const</span> userInfo = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;userInfo&#x27;</span>); <span class="comment">// 被同源策略阻止</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-保护用户隐私"><a href="#2-保护用户隐私" class="headerlink" title="2. 保护用户隐私"></a>2. 保护用户隐私</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同源策略保护用户隐私的示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PrivacyProtection</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sensitiveData</span> = &#123;</span><br><span class="line">            <span class="attr">personalInfo</span>: <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;personalInfo&#x27;</span>),</span><br><span class="line">            <span class="attr">authToken</span>: <span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;authToken&#x27;</span>),</span><br><span class="line">            <span class="attr">userPreferences</span>: <span class="variable language_">this</span>.<span class="title function_">getCookieValue</span>(<span class="string">&#x27;preferences&#x27;</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 只有同源的脚本才能访问这些数据</span></span><br><span class="line">    <span class="title function_">getSensitiveData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 这些数据只能被同源的脚本访问</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sensitiveData</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">getCookieValue</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> value = <span class="string">`; <span class="subst">$&#123;<span class="variable language_">document</span>.cookie&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">const</span> parts = value.<span class="title function_">split</span>(<span class="string">`; <span class="subst">$&#123;name&#125;</span>=`</span>);</span><br><span class="line">        <span class="keyword">if</span> (parts.<span class="property">length</span> === <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> parts.<span class="title function_">pop</span>().<span class="title function_">split</span>(<span class="string">&#x27;;&#x27;</span>).<span class="title function_">shift</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、跨域问题的表现形式"><a href="#二、跨域问题的表现形式" class="headerlink" title="二、跨域问题的表现形式"></a>二、跨域问题的表现形式</h1><h2 id="（一）常见的跨域错误"><a href="#（一）常见的跨域错误" class="headerlink" title="（一）常见的跨域错误"></a>（一）常见的跨域错误</h2><h3 id="1-CORS错误"><a href="#1-CORS错误" class="headerlink" title="1. CORS错误"></a>1. CORS错误</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 典型的CORS错误示例</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchCrossOriginData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://api.external-service.com/data&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// 浏览器控制台会显示类似错误：</span></span><br><span class="line">        <span class="comment">// Access to fetch at &#x27;https://api.external-service.com/data&#x27; </span></span><br><span class="line">        <span class="comment">// from origin &#x27;https://my-website.com&#x27; has been blocked by CORS policy</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;CORS Error:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-不同类型请求的跨域表现"><a href="#2-不同类型请求的跨域表现" class="headerlink" title="2. 不同类型请求的跨域表现"></a>2. 不同类型请求的跨域表现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跨域请求检测工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrossOriginDetector</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">currentOrigin</span> = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">origin</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检测URL是否跨域</span></span><br><span class="line">    <span class="title function_">isCrossOrigin</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> targetURL = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line">            <span class="keyword">const</span> currentURL = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="variable language_">this</span>.<span class="property">currentOrigin</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> (</span><br><span class="line">                targetURL.<span class="property">protocol</span> !== currentURL.<span class="property">protocol</span> ||</span><br><span class="line">                targetURL.<span class="property">hostname</span> !== currentURL.<span class="property">hostname</span> ||</span><br><span class="line">                targetURL.<span class="property">port</span> !== currentURL.<span class="property">port</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Invalid URL:&#x27;</span>, url);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 测试不同类型的跨域请求</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">testCrossOriginRequests</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> testUrls = [</span><br><span class="line">            <span class="string">&#x27;https://api.github.com/users/octocat&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://httpbin.org/get&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> url <span class="keyword">of</span> testUrls) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Testing: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Is cross-origin: <span class="subst">$&#123;<span class="variable language_">this</span>.isCrossOrigin(url)&#125;</span>`</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 测试fetch请求</span></span><br><span class="line">                <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`✅ Fetch successful: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`❌ Fetch failed: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 测试图片加载（通常不受CORS限制）</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">testImageLoad</span>(url);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">testImageLoad</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">        img.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`✅ Image load successful: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">        img.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`❌ Image load failed: <span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line">        img.<span class="property">src</span> = url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> detector = <span class="keyword">new</span> <span class="title class_">CrossOriginDetector</span>();</span><br><span class="line">detector.<span class="title function_">testCrossOriginRequests</span>();</span><br></pre></td></tr></table></figure>

<h2 id="（二）哪些资源不受同源策略限制"><a href="#（二）哪些资源不受同源策略限制" class="headerlink" title="（二）哪些资源不受同源策略限制"></a>（二）哪些资源不受同源策略限制</h2><h3 id="1-标签嵌入资源"><a href="#1-标签嵌入资源" class="headerlink" title="1. 标签嵌入资源"></a>1. 标签嵌入资源</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 以下资源通常不受同源策略限制 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://external-site.com/image.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;External Image&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 样式表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://external-site.com/styles.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 脚本文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://external-site.com/script.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 字体文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@font-face</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">font-family</span>: <span class="string">&#x27;ExternalFont&#x27;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://external-site.com/font.woff2&#x27;</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 视频和音频 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;https://external-site.com/video.mp4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;https://external-site.com/audio.mp3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- iframe（但内容访问受限） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://external-site.com/page.html&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-表单提交"><a href="#2-表单提交" class="headerlink" title="2. 表单提交"></a>2. 表单提交</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 表单可以向任何域提交数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://external-api.com/submit&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;data&quot;</span> <span class="attr">value</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Submit to External Domain<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript表单提交也不受同源策略限制</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">submitToExternalDomain</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line">    form.<span class="property">method</span> = <span class="string">&#x27;POST&#x27;</span>;</span><br><span class="line">    form.<span class="property">action</span> = <span class="string">&#x27;https://external-api.com/submit&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">    input.<span class="property">type</span> = <span class="string">&#x27;hidden&#x27;</span>;</span><br><span class="line">    input.<span class="property">name</span> = <span class="string">&#x27;data&#x27;</span>;</span><br><span class="line">    input.<span class="property">value</span> = <span class="string">&#x27;test data&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    form.<span class="title function_">appendChild</span>(input);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(form);</span><br><span class="line">    form.<span class="title function_">submit</span>(); <span class="comment">// 这个提交不会被同源策略阻止</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、CORS（跨域资源共享）详解"><a href="#三、CORS（跨域资源共享）详解" class="headerlink" title="三、CORS（跨域资源共享）详解"></a>三、CORS（跨域资源共享）详解</h1><h2 id="（一）CORS基本概念"><a href="#（一）CORS基本概念" class="headerlink" title="（一）CORS基本概念"></a>（一）CORS基本概念</h2><p>CORS（Cross-Origin Resource Sharing）是W3C标准，它使用额外的HTTP头来告诉浏览器让运行在一个域上的Web应用被准许访问来自不同源服务器上的指定资源。</p>
<h3 id="1-CORS工作原理"><a href="#1-CORS工作原理" class="headerlink" title="1. CORS工作原理"></a>1. CORS工作原理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CORS请求流程示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CORSExample</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">apiBase</span> = <span class="string">&#x27;https://api.external-service.com&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 简单请求示例</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">makeSimpleRequest</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.apiBase&#125;</span>/data`</span>, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 浏览器会自动添加Origin头</span></span><br><span class="line">            <span class="comment">// Origin: https://my-website.com</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 服务器需要返回适当的CORS头</span></span><br><span class="line">            <span class="comment">// Access-Control-Allow-Origin: https://my-website.com</span></span><br><span class="line">            <span class="comment">// 或者 Access-Control-Allow-Origin: *</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;CORS request failed:&#x27;</span>, error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预检请求示例</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">makePreflightRequest</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;<span class="variable language_">this</span>.apiBase&#125;</span>/data`</span>, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;X-Custom-Header&#x27;</span>: <span class="string">&#x27;custom-value&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">data</span>: <span class="string">&#x27;test&#x27;</span> &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 浏览器会先发送OPTIONS预检请求</span></span><br><span class="line">            <span class="comment">// OPTIONS /data HTTP/1.1</span></span><br><span class="line">            <span class="comment">// Origin: https://my-website.com</span></span><br><span class="line">            <span class="comment">// Access-Control-Request-Method: PUT</span></span><br><span class="line">            <span class="comment">// Access-Control-Request-Headers: X-Custom-Header</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Preflight request failed:&#x27;</span>, error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-简单请求-vs-预检请求"><a href="#2-简单请求-vs-预检请求" class="headerlink" title="2. 简单请求 vs 预检请求"></a>2. 简单请求 vs 预检请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求类型判断工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CORSRequestAnalyzer</span> &#123;</span><br><span class="line">    <span class="comment">// 简单请求的条件</span></span><br><span class="line">    <span class="title function_">isSimpleRequest</span>(<span class="params">method, headers, contentType</span>) &#123;</span><br><span class="line">        <span class="comment">// 1. 方法必须是以下之一</span></span><br><span class="line">        <span class="keyword">const</span> simpleMethods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;HEAD&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!simpleMethods.<span class="title function_">includes</span>(method.<span class="title function_">toUpperCase</span>())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2. 只能包含简单头部</span></span><br><span class="line">        <span class="keyword">const</span> simpleHeaders = [</span><br><span class="line">            <span class="string">&#x27;accept&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;accept-language&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;content-language&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;content-type&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> headerKeys = <span class="title class_">Object</span>.<span class="title function_">keys</span>(headers).<span class="title function_">map</span>(<span class="function"><span class="params">key</span> =&gt;</span> key.<span class="title function_">toLowerCase</span>());</span><br><span class="line">        <span class="keyword">const</span> hasComplexHeaders = headerKeys.<span class="title function_">some</span>(<span class="function"><span class="params">key</span> =&gt;</span> !simpleHeaders.<span class="title function_">includes</span>(key));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (hasComplexHeaders) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3. Content-Type必须是以下之一</span></span><br><span class="line">        <span class="keyword">if</span> (contentType) &#123;</span><br><span class="line">            <span class="keyword">const</span> simpleContentTypes = [</span><br><span class="line">                <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;multipart/form-data&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">            ];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (!simpleContentTypes.<span class="title function_">includes</span>(contentType)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分析请求类型</span></span><br><span class="line">    <span class="title function_">analyzeRequest</span>(<span class="params">method, headers = &#123;&#125;, contentType = <span class="literal">null</span></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> isSimple = <span class="variable language_">this</span>.<span class="title function_">isSimpleRequest</span>(method, headers, contentType);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            isSimple,</span><br><span class="line">            <span class="attr">requiresPreflight</span>: !isSimple,</span><br><span class="line">            <span class="attr">analysis</span>: &#123;</span><br><span class="line">                <span class="attr">method</span>: method,</span><br><span class="line">                <span class="attr">headers</span>: headers,</span><br><span class="line">                <span class="attr">contentType</span>: contentType,</span><br><span class="line">                <span class="attr">reason</span>: isSimple ? <span class="string">&#x27;Meets all simple request criteria&#x27;</span> : <span class="string">&#x27;Contains complex headers or method&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> analyzer = <span class="keyword">new</span> <span class="title class_">CORSRequestAnalyzer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单请求示例</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(analyzer.<span class="title function_">analyzeRequest</span>(<span class="string">&#x27;GET&#x27;</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预检请求示例</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(analyzer.<span class="title function_">analyzeRequest</span>(<span class="string">&#x27;PUT&#x27;</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer token123&#x27;</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>

<h2 id="（二）服务端CORS配置"><a href="#（二）服务端CORS配置" class="headerlink" title="（二）服务端CORS配置"></a>（二）服务端CORS配置</h2><h3 id="1-Node-js-Express-CORS配置"><a href="#1-Node-js-Express-CORS配置" class="headerlink" title="1. Node.js&#x2F;Express CORS配置"></a>1. Node.js&#x2F;Express CORS配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Express服务器CORS配置示例</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;cors&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 基本CORS配置</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 自定义CORS配置</span></span><br><span class="line"><span class="keyword">const</span> corsOptions = &#123;</span><br><span class="line">    <span class="attr">origin</span>: <span class="keyword">function</span> (<span class="params">origin, callback</span>) &#123;</span><br><span class="line">        <span class="comment">// 允许的域名列表</span></span><br><span class="line">        <span class="keyword">const</span> allowedOrigins = [</span><br><span class="line">            <span class="string">&#x27;https://my-website.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://admin.my-website.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;http://localhost:3000&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 允许没有origin的请求（如移动应用）</span></span><br><span class="line">        <span class="keyword">if</span> (!origin) <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (allowedOrigins.<span class="title function_">indexOf</span>(origin) !== -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Not allowed by CORS&#x27;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span><br><span class="line">    <span class="attr">allowedHeaders</span>: [<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;Authorization&#x27;</span>, <span class="string">&#x27;X-Requested-With&#x27;</span>],</span><br><span class="line">    <span class="attr">credentials</span>: <span class="literal">true</span>, <span class="comment">// 允许携带Cookie</span></span><br><span class="line">    <span class="attr">maxAge</span>: <span class="number">86400</span> <span class="comment">// 预检请求缓存时间（秒）</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>(corsOptions));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 手动设置CORS头</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> origin = req.<span class="property">headers</span>.<span class="property">origin</span>;</span><br><span class="line">    <span class="keyword">const</span> allowedOrigins = [<span class="string">&#x27;https://my-website.com&#x27;</span>, <span class="string">&#x27;http://localhost:3000&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">includes</span>(origin)) &#123;</span><br><span class="line">        res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, origin);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;GET, POST, PUT, DELETE, OPTIONS&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;Content-Type, Authorization&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Max-Age&#x27;</span>, <span class="string">&#x27;86400&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理预检请求</span></span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">200</span>).<span class="title function_">end</span>();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// API路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/data&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; <span class="attr">message</span>: <span class="string">&#x27;CORS enabled data&#x27;</span>, <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3001</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;CORS-enabled server running on port 3001&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="2-其他服务器CORS配置"><a href="#2-其他服务器CORS配置" class="headerlink" title="2. 其他服务器CORS配置"></a>2. 其他服务器CORS配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx CORS配置</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> api.example.com;</span><br><span class="line">    </span><br><span class="line">    <span class="section">location</span> /api/ &#123;</span><br><span class="line">        <span class="comment"># 处理预检请求</span></span><br><span class="line">        <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;<span class="variable">$http_origin</span>&#x27;</span> always;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE, OPTIONS&#x27;</span> always;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;Content-Type, Authorization, X-Requested-With&#x27;</span> always;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="number">86400</span> always;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Content-Length&#x27;</span> <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Content-Type&#x27;</span> <span class="string">&#x27;text/plain&#x27;</span>;</span><br><span class="line">            <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 处理实际请求</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;<span class="variable">$http_origin</span>&#x27;</span> always;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="string">&#x27;true&#x27;</span> always;</span><br><span class="line">        </span><br><span class="line">        <span class="attribute">proxy_pass</span> http://backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Apache CORS配置 (.htaccess)</span></span><br><span class="line"><span class="section">&lt;IfModule mod_headers.c&gt;</span></span><br><span class="line">    <span class="comment"># 处理预检请求</span></span><br><span class="line">    <span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line">    <span class="attribute">RewriteCond</span> <span class="variable">%&#123;REQUEST_METHOD&#125;</span> OPTIONS</span><br><span class="line">    <span class="attribute">RewriteRule</span> ^(.*)$ $<span class="number">1</span><span class="meta"> [R=200,L]</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 设置CORS头</span></span><br><span class="line">    <span class="attribute">Header</span> always set Access-Control-<span class="literal">Allow</span>-Origin <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="attribute">Header</span> always set Access-Control-<span class="literal">Allow</span>-Methods <span class="string">&quot;GET, POST, PUT, DELETE, OPTIONS&quot;</span></span><br><span class="line">    <span class="attribute">Header</span> always set Access-Control-<span class="literal">Allow</span>-Headers <span class="string">&quot;Content-Type, Authorization, X-Requested-With&quot;</span></span><br><span class="line">    <span class="attribute">Header</span> always set Access-Control-Max-Age <span class="string">&quot;86400&quot;</span></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="四、JSONP跨域解决方案"><a href="#四、JSONP跨域解决方案" class="headerlink" title="四、JSONP跨域解决方案"></a>四、JSONP跨域解决方案</h1><h2 id="（一）JSONP原理与实现"><a href="#（一）JSONP原理与实现" class="headerlink" title="（一）JSONP原理与实现"></a>（一）JSONP原理与实现</h2><p>JSONP（JSON with Padding）是一种利用<code>&lt;script&gt;</code>标签不受同源策略限制的特性来实现跨域请求的技术。</p>
<h3 id="1-JSONP基本原理"><a href="#1-JSONP基本原理" class="headerlink" title="1. JSONP基本原理"></a>1. JSONP基本原理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSONP实现原理</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSONPClient</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">callbackCounter</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">callbacks</span> = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送JSONP请求</span></span><br><span class="line">    <span class="title function_">request</span>(<span class="params">url, options = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 生成唯一的回调函数名</span></span><br><span class="line">            <span class="keyword">const</span> callbackName = <span class="string">`jsonp_callback_<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>_<span class="subst">$&#123;++<span class="variable language_">this</span>.callbackCounter&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置超时时间</span></span><br><span class="line">            <span class="keyword">const</span> timeout = options.<span class="property">timeout</span> || <span class="number">10000</span>;</span><br><span class="line">            <span class="keyword">let</span> timeoutId;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建全局回调函数</span></span><br><span class="line">            <span class="variable language_">window</span>[callbackName] = <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="comment">// 清理工作</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">cleanup</span>(callbackName, timeoutId);</span><br><span class="line">                <span class="title function_">resolve</span>(data);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建script标签</span></span><br><span class="line">            <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">            script.<span class="property">src</span> = <span class="variable language_">this</span>.<span class="title function_">buildURL</span>(url, callbackName, options.<span class="property">params</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 错误处理</span></span><br><span class="line">            script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">cleanup</span>(callbackName, timeoutId);</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;JSONP request failed&#x27;</span>));</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置超时</span></span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">cleanup</span>(callbackName, timeoutId);</span><br><span class="line">                <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;JSONP request timeout&#x27;</span>));</span><br><span class="line">            &#125;, timeout);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加到页面并发送请求</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建请求URL</span></span><br><span class="line">    <span class="title function_">buildURL</span>(<span class="params">url, callbackName, params = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> urlObj = <span class="keyword">new</span> <span class="title function_">URL</span>(url);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加回调参数</span></span><br><span class="line">        urlObj.<span class="property">searchParams</span>.<span class="title function_">set</span>(<span class="string">&#x27;callback&#x27;</span>, callbackName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加其他参数</span></span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(params).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">            urlObj.<span class="property">searchParams</span>.<span class="title function_">set</span>(key, params[key]);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> urlObj.<span class="title function_">toString</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清理资源</span></span><br><span class="line">    <span class="title function_">cleanup</span>(<span class="params">callbackName, timeoutId</span>) &#123;</span><br><span class="line">        <span class="comment">// 清除超时定时器</span></span><br><span class="line">        <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 删除全局回调函数</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">window</span>[callbackName]) &#123;</span><br><span class="line">            <span class="keyword">delete</span> <span class="variable language_">window</span>[callbackName];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移除script标签</span></span><br><span class="line">        <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`script[src*=&quot;<span class="subst">$&#123;callbackName&#125;</span>&quot;]`</span>);</span><br><span class="line">        <span class="keyword">if</span> (script &amp;&amp; script.<span class="property">parentNode</span>) &#123;</span><br><span class="line">            script.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(script);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> jsonpClient = <span class="keyword">new</span> <span class="title class_">JSON</span>PClient();</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchWeatherData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = <span class="keyword">await</span> jsonpClient.<span class="title function_">request</span>(<span class="string">&#x27;https://api.weather.com/data&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">params</span>: &#123;</span><br><span class="line">                <span class="attr">city</span>: <span class="string">&#x27;Beijing&#x27;</span>,</span><br><span class="line">                <span class="attr">key</span>: <span class="string">&#x27;your-api-key&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="number">5000</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Weather data:&#x27;</span>, data);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to fetch weather data:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-服务端JSONP支持"><a href="#2-服务端JSONP支持" class="headerlink" title="2. 服务端JSONP支持"></a>2. 服务端JSONP支持</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Node.js服务端JSONP支持</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// JSONP中间件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">jsonp</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">    res.<span class="property">jsonp</span> = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> callback = req.<span class="property">query</span>.<span class="property">callback</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (callback) &#123;</span><br><span class="line">            <span class="comment">// 安全检查：确保callback是有效的函数名</span></span><br><span class="line">            <span class="keyword">if</span> (!<span class="regexp">/^[a-zA-Z_$][a-zA-Z0-9_$]*$/</span>.<span class="title function_">test</span>(callback)) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;Invalid callback name&#x27;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 返回JSONP响应</span></span><br><span class="line">            res.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;application/javascript&#x27;</span>);</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">`<span class="subst">$&#123;callback&#125;</span>(<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>);`</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 普通JSON响应</span></span><br><span class="line">            res.<span class="title function_">json</span>(data);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(jsonp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// API端点</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/api/data&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> data = &#123;</span><br><span class="line">        <span class="attr">message</span>: <span class="string">&#x27;Hello from JSONP API&#x27;</span>,</span><br><span class="line">        <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">        <span class="attr">params</span>: req.<span class="property">query</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    res.<span class="title function_">jsonp</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3002</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;JSONP server running on port 3002&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="（二）JSONP的优缺点"><a href="#（二）JSONP的优缺点" class="headerlink" title="（二）JSONP的优缺点"></a>（二）JSONP的优缺点</h2><h3 id="1-优点"><a href="#1-优点" class="headerlink" title="1. 优点"></a>1. 优点</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSONP优点演示</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSONPAdvantages</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 兼容性好 - 支持所有浏览器</span></span><br><span class="line">    <span class="title function_">demonstrateCompatibility</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;JSONP works in all browsers, including IE6+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 即使在老旧浏览器中也能工作</span></span><br><span class="line">        <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">        script.<span class="property">src</span> = <span class="string">&#x27;https://api.example.com/data?callback=handleData&#x27;</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 实现简单</span></span><br><span class="line">    <span class="title function_">simpleImplementation</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 最简单的JSONP实现</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">jsonp</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> callbackName = <span class="string">&#x27;jsonp_&#x27;</span> + <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">window</span>[callbackName] = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="title function_">callback</span>(data);</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">removeChild</span>(script);</span><br><span class="line">                <span class="keyword">delete</span> <span class="variable language_">window</span>[callbackName];</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            script.<span class="property">src</span> = url + <span class="string">&#x27;?callback=&#x27;</span> + callbackName;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用</span></span><br><span class="line">        <span class="title function_">jsonp</span>(<span class="string">&#x27;https://api.example.com/data&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received data:&#x27;</span>, data);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 不需要服务器特殊配置（相比CORS）</span></span><br><span class="line">    <span class="title function_">noSpecialServerConfig</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server only needs to support callback parameter&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;No need for CORS headers configuration&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-缺点和限制"><a href="#2-缺点和限制" class="headerlink" title="2. 缺点和限制"></a>2. 缺点和限制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSONP缺点演示</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">JSONPLimitations</span> &#123;</span><br><span class="line">    <span class="comment">// 1. 只支持GET请求</span></span><br><span class="line">    <span class="title function_">demonstrateGETOnly</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;JSONP只能发送GET请求，无法发送POST、PUT、DELETE等&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无法实现的操作</span></span><br><span class="line">        <span class="comment">// jsonp(&#x27;https://api.example.com/users&#x27;, &#x27;POST&#x27;, userData); // 不可能</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 安全风险</span></span><br><span class="line">    <span class="title function_">demonstrateSecurityRisks</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// XSS风险：恶意服务器可以执行任意JavaScript代码</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">unsafeJSONP</span>(<span class="params">url</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">            script.<span class="property">src</span> = url; <span class="comment">// 如果服务器返回恶意代码，会被执行</span></span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 安全的JSONP实现应该验证响应</span></span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">safeJSONP</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> callbackName = <span class="string">&#x27;jsonp_&#x27;</span> + <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">window</span>[callbackName] = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 验证数据格式</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&#x27;object&#x27;</span> &amp;&amp; data !== <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="title function_">callback</span>(data);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Invalid JSONP response&#x27;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;JSONP security error:&#x27;</span>, error);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="comment">// 清理</span></span><br><span class="line">                    <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">removeChild</span>(script);</span><br><span class="line">                    <span class="keyword">delete</span> <span class="variable language_">window</span>[callbackName];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            script.<span class="property">src</span> = url + <span class="string">&#x27;?callback=&#x27;</span> + callbackName;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 错误处理困难</span></span><br><span class="line">    <span class="title function_">demonstrateErrorHandling</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">jsonpWithErrorHandling</span>(<span class="params">url, callback, errorCallback</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> callbackName = <span class="string">&#x27;jsonp_&#x27;</span> + <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">            <span class="keyword">let</span> timeoutId;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 成功回调</span></span><br><span class="line">            <span class="variable language_">window</span>[callbackName] = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">                <span class="title function_">callback</span>(data);</span><br><span class="line">                <span class="title function_">cleanup</span>();</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 错误处理</span></span><br><span class="line">            script.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">                <span class="title function_">errorCallback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;JSONP request failed&#x27;</span>));</span><br><span class="line">                <span class="title function_">cleanup</span>();</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 超时处理</span></span><br><span class="line">            timeoutId = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">errorCallback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;JSONP request timeout&#x27;</span>));</span><br><span class="line">                <span class="title function_">cleanup</span>();</span><br><span class="line">            &#125;, <span class="number">10000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">function</span> <span class="title function_">cleanup</span>(<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (script.<span class="property">parentNode</span>) &#123;</span><br><span class="line">                    script.<span class="property">parentNode</span>.<span class="title function_">removeChild</span>(script);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">delete</span> <span class="variable language_">window</span>[callbackName];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            script.<span class="property">src</span> = url + <span class="string">&#x27;?callback=&#x27;</span> + callbackName;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、代理服务器解决方案"><a href="#五、代理服务器解决方案" class="headerlink" title="五、代理服务器解决方案"></a>五、代理服务器解决方案</h1><h2 id="（一）开发环境代理配置"><a href="#（一）开发环境代理配置" class="headerlink" title="（一）开发环境代理配置"></a>（一）开发环境代理配置</h2><h3 id="1-Webpack-Dev-Server代理"><a href="#1-Webpack-Dev-Server代理" class="headerlink" title="1. Webpack Dev Server代理"></a>1. Webpack Dev Server代理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// webpack.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">// ... 其他配置</span></span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">port</span>: <span class="number">3000</span>,</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="comment">// 代理API请求</span></span><br><span class="line">            <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;https://api.external-service.com&#x27;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span> <span class="comment">// 移除/api前缀</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">secure</span>: <span class="literal">true</span>, <span class="comment">// 支持HTTPS</span></span><br><span class="line">                <span class="attr">logLevel</span>: <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 多个代理配置</span></span><br><span class="line">            <span class="string">&#x27;/auth&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;https://auth.external-service.com&#x27;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer your-token&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 条件代理</span></span><br><span class="line">            <span class="string">&#x27;/conditional&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;https://api.external-service.com&#x27;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">bypass</span>: <span class="keyword">function</span>(<span class="params">req, res, proxyOptions</span>) &#123;</span><br><span class="line">                    <span class="comment">// 根据条件决定是否代理</span></span><br><span class="line">                    <span class="keyword">if</span> (req.<span class="property">headers</span>.<span class="property">accept</span>.<span class="title function_">indexOf</span>(<span class="string">&#x27;html&#x27;</span>) !== -<span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">&#x27;/index.html&#x27;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-Vite代理配置"><a href="#2-Vite代理配置" class="headerlink" title="2. Vite代理配置"></a>2. Vite代理配置</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite.config.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">server</span>: &#123;</span><br><span class="line">        <span class="attr">port</span>: <span class="number">3000</span>,</span><br><span class="line">        <span class="attr">proxy</span>: &#123;</span><br><span class="line">            <span class="comment">// 字符串简写</span></span><br><span class="line">            <span class="string">&#x27;/api&#x27;</span>: <span class="string">&#x27;https://api.external-service.com&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 详细配置</span></span><br><span class="line">            <span class="string">&#x27;/api/v2&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;https://api-v2.external-service.com&#x27;</span>,</span><br><span class="line">                <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api\/v2/</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">                <span class="attr">configure</span>: <span class="function">(<span class="params">proxy, options</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="comment">// 自定义代理配置</span></span><br><span class="line">                    proxy.<span class="title function_">on</span>(<span class="string">&#x27;proxyReq&#x27;</span>, <span class="function">(<span class="params">proxyReq, req, res</span>) =&gt;</span> &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Proxying request:&#x27;</span>, req.<span class="property">url</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// WebSocket代理</span></span><br><span class="line">            <span class="string">&#x27;/socket.io&#x27;</span>: &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="string">&#x27;ws://localhost:3001&#x27;</span>,</span><br><span class="line">                <span class="attr">ws</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3-Create-React-App代理"><a href="#3-Create-React-App代理" class="headerlink" title="3. Create React App代理"></a>3. Create React App代理</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-app&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;proxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api.external-service.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 或者使用setupProxy.js进行高级配置</span></span><br><span class="line"><span class="comment">// src/setupProxy.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; createProxyMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span>(<span class="params">app</span>) &#123;</span><br><span class="line">    app.<span class="title function_">use</span>(</span><br><span class="line">        <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">        <span class="title function_">createProxyMiddleware</span>(&#123;</span><br><span class="line">            <span class="attr">target</span>: <span class="string">&#x27;https://api.external-service.com&#x27;</span>,</span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">onProxyReq</span>: <span class="keyword">function</span>(<span class="params">proxyReq, req, res</span>) &#123;</span><br><span class="line">                <span class="comment">// 修改代理请求</span></span><br><span class="line">                proxyReq.<span class="title function_">setHeader</span>(<span class="string">&#x27;X-Forwarded-For&#x27;</span>, req.<span class="property">ip</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">onProxyRes</span>: <span class="keyword">function</span>(<span class="params">proxyRes, req, res</span>) &#123;</span><br><span class="line">                <span class="comment">// 修改代理响应</span></span><br><span class="line">                proxyRes.<span class="property">headers</span>[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    app.<span class="title function_">use</span>(</span><br><span class="line">        <span class="string">&#x27;/auth&#x27;</span>,</span><br><span class="line">        <span class="title function_">createProxyMiddleware</span>(&#123;</span><br><span class="line">            <span class="attr">target</span>: <span class="string">&#x27;https://auth.external-service.com&#x27;</span>,</span><br><span class="line">            <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">secure</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（二）生产环境代理"><a href="#（二）生产环境代理" class="headerlink" title="（二）生产环境代理"></a>（二）生产环境代理</h2><h3 id="1-Nginx反向代理"><a href="#1-Nginx反向代理" class="headerlink" title="1. Nginx反向代理"></a>1. Nginx反向代理</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nginx.conf</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> my-website.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 前端静态文件</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">root</span> /var/www/html;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># API代理</span></span><br><span class="line">    <span class="section">location</span> /api/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> https://api.external-service.com/;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 处理CORS</span></span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span> always;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="string">&#x27;GET, POST, PUT, DELETE, OPTIONS&#x27;</span> always;</span><br><span class="line">        <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="string">&#x27;Content-Type, Authorization&#x27;</span> always;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 预检请求处理</span></span><br><span class="line">        <span class="attribute">if</span> (<span class="variable">$request_method</span> = <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Access-Control-Max-Age&#x27;</span> <span class="number">86400</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Content-Length&#x27;</span> <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">add_header</span> <span class="string">&#x27;Content-Type&#x27;</span> <span class="string">&#x27;text/plain&#x27;</span>;</span><br><span class="line">            <span class="attribute">return</span> <span class="number">204</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># WebSocket代理</span></span><br><span class="line">    <span class="section">location</span> /ws/ &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> https://ws.external-service.com/;</span><br><span class="line">        <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Upgrade <span class="variable">$http_upgrade</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Connection <span class="string">&quot;upgrade&quot;</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Node-js代理服务器"><a href="#2-Node-js代理服务器" class="headerlink" title="2. Node.js代理服务器"></a>2. Node.js代理服务器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// proxy-server.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; createProxyMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&#x27;http-proxy-middleware&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态文件服务</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;build&#x27;</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">// API代理中间件</span></span><br><span class="line"><span class="keyword">const</span> apiProxy = <span class="title function_">createProxyMiddleware</span>(<span class="string">&#x27;/api&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">target</span>: <span class="string">&#x27;https://api.external-service.com&#x27;</span>,</span><br><span class="line">    <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">pathRewrite</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onProxyReq</span>: <span class="function">(<span class="params">proxyReq, req, res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 添加认证头</span></span><br><span class="line">        <span class="keyword">if</span> (req.<span class="property">headers</span>.<span class="property">authorization</span>) &#123;</span><br><span class="line">            proxyReq.<span class="title function_">setHeader</span>(<span class="string">&#x27;Authorization&#x27;</span>, req.<span class="property">headers</span>.<span class="property">authorization</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录请求</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Proxying <span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;req.url&#125;</span> to <span class="subst">$&#123;proxyReq.path&#125;</span>`</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onProxyRes</span>: <span class="function">(<span class="params">proxyRes, req, res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 添加CORS头</span></span><br><span class="line">        proxyRes.<span class="property">headers</span>[<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        proxyRes.<span class="property">headers</span>[<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>] = <span class="string">&#x27;true&#x27;</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">onError</span>: <span class="function">(<span class="params">err, req, res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Proxy error:&#x27;</span>, err);</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;Proxy error&#x27;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(apiProxy);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理SPA路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;*&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;build&#x27;</span>, <span class="string">&#x27;index.html&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Proxy server running on port <span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="六、其他跨域解决方案"><a href="#六、其他跨域解决方案" class="headerlink" title="六、其他跨域解决方案"></a>六、其他跨域解决方案</h1><h2 id="（一）PostMessage跨域通信"><a href="#（一）PostMessage跨域通信" class="headerlink" title="（一）PostMessage跨域通信"></a>（一）PostMessage跨域通信</h2><h3 id="1-父子窗口通信"><a href="#1-父子窗口通信" class="headerlink" title="1. 父子窗口通信"></a>1. 父子窗口通信</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父窗口代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ParentWindowCommunicator</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">childWindow</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">targetOrigin</span> = <span class="string">&#x27;https://child-domain.com&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMessageListener</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开子窗口</span></span><br><span class="line">    <span class="title function_">openChildWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">childWindow</span> = <span class="variable language_">window</span>.<span class="title function_">open</span>(</span><br><span class="line">            <span class="string">&#x27;https://child-domain.com/child.html&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;childWindow&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;width=600,height=400&#x27;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待子窗口加载完成后发送消息</span></span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">sendMessageToChild</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;INIT&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123; <span class="attr">message</span>: <span class="string">&#x27;Hello from parent!&#x27;</span> &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息到子窗口</span></span><br><span class="line">    <span class="title function_">sendMessageToChild</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">childWindow</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">childWindow</span>.<span class="property">closed</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">childWindow</span>.<span class="title function_">postMessage</span>(message, <span class="variable language_">this</span>.<span class="property">targetOrigin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听来自子窗口的消息</span></span><br><span class="line">    <span class="title function_">setupMessageListener</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 验证消息来源</span></span><br><span class="line">            <span class="keyword">if</span> (event.<span class="property">origin</span> !== <span class="variable language_">this</span>.<span class="property">targetOrigin</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;Received message from untrusted origin:&#x27;</span>, event.<span class="property">origin</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received message from child:&#x27;</span>, event.<span class="property">data</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理不同类型的消息</span></span><br><span class="line">            <span class="keyword">switch</span> (event.<span class="property">data</span>.<span class="property">type</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;CHILD_READY&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleChildReady</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;DATA_REQUEST&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleDataRequest</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;CLOSE_REQUEST&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleCloseRequest</span>();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Unknown message type:&#x27;</span>, event.<span class="property">data</span>.<span class="property">type</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleChildReady</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Child window is ready&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToChild</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;CONFIG&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123; <span class="attr">theme</span>: <span class="string">&#x27;dark&#x27;</span>, <span class="attr">language</span>: <span class="string">&#x27;zh-CN&#x27;</span> &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleDataRequest</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟数据获取</span></span><br><span class="line">        <span class="keyword">const</span> responseData = &#123;</span><br><span class="line">            <span class="attr">users</span>: [</span><br><span class="line">                &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;Alice&#x27;</span> &#125;,</span><br><span class="line">                &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;Bob&#x27;</span> &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToChild</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;DATA_RESPONSE&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: responseData,</span><br><span class="line">            <span class="attr">requestId</span>: data.<span class="property">requestId</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleCloseRequest</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">childWindow</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">childWindow</span>.<span class="title function_">close</span>();</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">childWindow</span> = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> communicator = <span class="keyword">new</span> <span class="title class_">ParentWindowCommunicator</span>();</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;openChild&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    communicator.<span class="title function_">openChildWindow</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子窗口代码 (child.html)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChildWindowCommunicator</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">parentOrigin</span> = <span class="string">&#x27;https://parent-domain.com&#x27;</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMessageListener</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">notifyParentReady</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通知父窗口子窗口已准备就绪</span></span><br><span class="line">    <span class="title function_">notifyParentReady</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;CHILD_READY&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123; <span class="attr">timestamp</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息到父窗口</span></span><br><span class="line">    <span class="title function_">sendMessageToParent</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(message, <span class="variable language_">this</span>.<span class="property">parentOrigin</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听来自父窗口的消息</span></span><br><span class="line">    <span class="title function_">setupMessageListener</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 验证消息来源</span></span><br><span class="line">            <span class="keyword">if</span> (event.<span class="property">origin</span> !== <span class="variable language_">this</span>.<span class="property">parentOrigin</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;Received message from untrusted origin:&#x27;</span>, event.<span class="property">origin</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received message from parent:&#x27;</span>, event.<span class="property">data</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理不同类型的消息</span></span><br><span class="line">            <span class="keyword">switch</span> (event.<span class="property">data</span>.<span class="property">type</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;INIT&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleInit</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;CONFIG&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleConfig</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;DATA_RESPONSE&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleDataResponse</span>(event.<span class="property">data</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Unknown message type:&#x27;</span>, event.<span class="property">data</span>.<span class="property">type</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleInit</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;message&#x27;</span>).<span class="property">textContent</span> = data.<span class="property">data</span>.<span class="property">message</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleConfig</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 应用配置</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">className</span> = data.<span class="property">data</span>.<span class="property">theme</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">lang</span> = data.<span class="property">data</span>.<span class="property">language</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleDataResponse</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 显示数据</span></span><br><span class="line">        <span class="keyword">const</span> userList = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;userList&#x27;</span>);</span><br><span class="line">        userList.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        data.<span class="property">data</span>.<span class="property">users</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">user</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">            li.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;user.id&#125;</span>: <span class="subst">$&#123;user.name&#125;</span>`</span>;</span><br><span class="line">            userList.<span class="title function_">appendChild</span>(li);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求数据</span></span><br><span class="line">    <span class="title function_">requestData</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;DATA_REQUEST&#x27;</span>,</span><br><span class="line">            <span class="attr">requestId</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求关闭窗口</span></span><br><span class="line">    <span class="title function_">requestClose</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;CLOSE_REQUEST&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化子窗口通信</span></span><br><span class="line"><span class="keyword">const</span> childCommunicator = <span class="keyword">new</span> <span class="title class_">ChildWindowCommunicator</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;requestData&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    childCommunicator.<span class="title function_">requestData</span>();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;closeWindow&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    childCommunicator.<span class="title function_">requestClose</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="2-iframe跨域通信"><a href="#2-iframe跨域通信" class="headerlink" title="2. iframe跨域通信"></a>2. iframe跨域通信</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主页面代码</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IframeCommunicator</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">iframeId, targetOrigin</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">iframe</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(iframeId);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">targetOrigin</span> = targetOrigin;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMessageListener</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送消息到iframe</span></span><br><span class="line">    <span class="title function_">sendMessageToIframe</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">iframe</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span>.<span class="title function_">postMessage</span>(message, <span class="variable language_">this</span>.<span class="property">targetOrigin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听来自iframe的消息</span></span><br><span class="line">    <span class="title function_">setupMessageListener</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (event.<span class="property">origin</span> !== <span class="variable language_">this</span>.<span class="property">targetOrigin</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received message from iframe:&#x27;</span>, event.<span class="property">data</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (event.<span class="property">data</span>.<span class="property">type</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;IFRAME_LOADED&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleIframeLoaded</span>();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;HEIGHT_CHANGE&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleHeightChange</span>(event.<span class="property">data</span>.<span class="property">height</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;NAVIGATION&#x27;</span>:</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">handleNavigation</span>(event.<span class="property">data</span>.<span class="property">url</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleIframeLoaded</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Iframe loaded successfully&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">sendMessageToIframe</span>(&#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;INIT_CONFIG&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">theme</span>: <span class="string">&#x27;light&#x27;</span>,</span><br><span class="line">                <span class="attr">apiKey</span>: <span class="string">&#x27;your-api-key&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleHeightChange</span>(<span class="params">height</span>) &#123;</span><br><span class="line">        <span class="comment">// 动态调整iframe高度</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">iframe</span>.<span class="property">style</span>.<span class="property">height</span> = height + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleNavigation</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Iframe navigated to:&#x27;</span>, url);</span><br><span class="line">        <span class="comment">// 可以在这里更新主页面的状态</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> iframeCommunicator = <span class="keyword">new</span> <span class="title class_">IframeCommunicator</span>(<span class="string">&#x27;myIframe&#x27;</span>, <span class="string">&#x27;https://iframe-domain.com&#x27;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- iframe页面代码 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Iframe Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Iframe Content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;changeHeight&quot;</span>&gt;</span>Change Height<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span>Navigate<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">class</span> <span class="title class_">IframeChild</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">parentOrigin</span> = <span class="string">&#x27;https://parent-domain.com&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">setupMessageListener</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">notifyLoaded</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">notifyLoaded</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;IFRAME_LOADED&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">sendMessageToParent</span>(<span class="params">message</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(message, <span class="variable language_">this</span>.<span class="property">parentOrigin</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">setupMessageListener</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (event.<span class="property">origin</span> !== <span class="variable language_">this</span>.<span class="property">parentOrigin</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">switch</span> (event.<span class="property">data</span>.<span class="property">type</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">case</span> <span class="string">&#x27;INIT_CONFIG&#x27;</span>:</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">this</span>.<span class="title function_">handleConfig</span>(event.<span class="property">data</span>.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">handleConfig</span>(<span class="params">config</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">className</span> = config.<span class="property">theme</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 使用API密钥等配置</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">changeHeight</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> newHeight = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">300</span> + <span class="number">200</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;content&#x27;</span>).<span class="property">style</span>.<span class="property">height</span> = newHeight + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;HEIGHT_CHANGE&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">height</span>: newHeight</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">navigate</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">sendMessageToParent</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;NAVIGATION&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span></span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> iframeChild = <span class="keyword">new</span> <span class="title class_">IframeChild</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;changeHeight&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        iframeChild.<span class="title function_">changeHeight</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;navigate&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        iframeChild.<span class="title function_">navigate</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）WebSocket跨域通信"><a href="#（二）WebSocket跨域通信" class="headerlink" title="（二）WebSocket跨域通信"></a>（二）WebSocket跨域通信</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WebSocket跨域通信示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrossOriginWebSocket</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">url</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">url</span> = url;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span> = <span class="number">5</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">reconnectInterval</span> = <span class="number">1000</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">messageQueue</span> = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">connect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span> = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="variable language_">this</span>.<span class="property">url</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">setupEventHandlers</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket connection failed:&#x27;</span>, error);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleReconnect</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setupEventHandlers</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onopen</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket connected&#x27;</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送队列中的消息</span></span><br><span class="line">            <span class="keyword">while</span> (<span class="variable language_">this</span>.<span class="property">messageQueue</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">const</span> message = <span class="variable language_">this</span>.<span class="property">messageQueue</span>.<span class="title function_">shift</span>();</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onmessage</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(event.<span class="property">data</span>);</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">handleMessage</span>(data);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to parse WebSocket message:&#x27;</span>, error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onclose</span> = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket disconnected:&#x27;</span>, event.<span class="property">code</span>, event.<span class="property">reason</span>);</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">handleReconnect</span>();</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">onerror</span> = <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket error:&#x27;</span>, error);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleMessage</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">switch</span> (data.<span class="property">type</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;PING&#x27;</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">send</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;PONG&#x27;</span> &#125;);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;DATA&#x27;</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">onDataReceived</span>(data.<span class="property">payload</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;ERROR&#x27;</span>:</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">onErrorReceived</span>(data.<span class="property">error</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Unknown message type:&#x27;</span>, data.<span class="property">type</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">send</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">OPEN</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">send</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(message));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 连接未就绪，加入队列</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">messageQueue</span>.<span class="title function_">push</span>(message);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">ws</span> || <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="property">readyState</span> === <span class="title class_">WebSocket</span>.<span class="property">CLOSED</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">handleReconnect</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">reconnectAttempts</span> &lt; <span class="variable language_">this</span>.<span class="property">maxReconnectAttempts</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span>++;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Attempting to reconnect (<span class="subst">$&#123;<span class="variable language_">this</span>.reconnectAttempts&#125;</span>/<span class="subst">$&#123;<span class="variable language_">this</span>.maxReconnectAttempts&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">connect</span>();</span><br><span class="line">            &#125;, <span class="variable language_">this</span>.<span class="property">reconnectInterval</span> * <span class="variable language_">this</span>.<span class="property">reconnectAttempts</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Max reconnection attempts reached&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onDataReceived</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="comment">// 处理接收到的数据</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received data:&#x27;</span>, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">onErrorReceived</span>(<span class="params">error</span>) &#123;</span><br><span class="line">        <span class="comment">// 处理错误</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Received error:&#x27;</span>, error);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">close</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">ws</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">ws</span>.<span class="title function_">close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> wsClient = <span class="keyword">new</span> <span class="title class_">CrossOriginWebSocket</span>(<span class="string">&#x27;wss://api.external-service.com/ws&#x27;</span>);</span><br><span class="line">wsClient.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送消息</span></span><br><span class="line">wsClient.<span class="title function_">send</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;SUBSCRIBE&#x27;</span>,</span><br><span class="line">    <span class="attr">channel</span>: <span class="string">&#x27;user-updates&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="七、跨域解决方案对比与选择"><a href="#七、跨域解决方案对比与选择" class="headerlink" title="七、跨域解决方案对比与选择"></a>七、跨域解决方案对比与选择</h1><h2 id="（一）解决方案对比表"><a href="#（一）解决方案对比表" class="headerlink" title="（一）解决方案对比表"></a>（一）解决方案对比表</h2><table>
<thead>
<tr>
<th>解决方案</th>
<th>适用场景</th>
<th>优点</th>
<th>缺点</th>
<th>浏览器支持</th>
</tr>
</thead>
<tbody><tr>
<td>CORS</td>
<td>现代Web应用</td>
<td>标准化、安全、功能完整</td>
<td>需要服务端支持</td>
<td>IE10+</td>
</tr>
<tr>
<td>JSONP</td>
<td>简单数据获取</td>
<td>兼容性好、实现简单</td>
<td>只支持GET、安全风险</td>
<td>所有浏览器</td>
</tr>
<tr>
<td>代理服务器</td>
<td>开发环境、生产环境</td>
<td>透明、无需客户端修改</td>
<td>增加服务器复杂度</td>
<td>不依赖浏览器</td>
</tr>
<tr>
<td>PostMessage</td>
<td>窗口间通信</td>
<td>安全、灵活</td>
<td>只适用于窗口通信</td>
<td>IE8+</td>
</tr>
<tr>
<td>WebSocket</td>
<td>实时通信</td>
<td>双向通信、实时性好</td>
<td>复杂度高</td>
<td>IE10+</td>
</tr>
</tbody></table>
<h2 id="（二）选择建议"><a href="#（二）选择建议" class="headerlink" title="（二）选择建议"></a>（二）选择建议</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跨域解决方案选择器</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrossOriginSolutionSelector</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scenarios</span> = &#123;</span><br><span class="line">            <span class="attr">modernWebApp</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;CORS&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;标准化、安全、功能完整&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;server-side CORS headers&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">legacySupport</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;JSONP&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;兼容老旧浏览器&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;callback-based requests&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">development</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;Proxy&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;开发环境透明代理&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;webpack-dev-server proxy&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">production</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;Nginx Proxy&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;生产环境反向代理&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;nginx reverse proxy&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">windowCommunication</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;PostMessage&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;窗口间安全通信&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;window.postMessage API&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">realTimeData</span>: &#123;</span><br><span class="line">                <span class="attr">solution</span>: <span class="string">&#x27;WebSocket&#x27;</span>,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;实时双向通信&#x27;</span>,</span><br><span class="line">                <span class="attr">implementation</span>: <span class="string">&#x27;WebSocket connection&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">recommend</span>(<span class="params">requirements</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;</span><br><span class="line">            browserSupport,</span><br><span class="line">            requestTypes,</span><br><span class="line">            realTime,</span><br><span class="line">            security,</span><br><span class="line">            serverControl</span><br><span class="line">        &#125; = requirements;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 实时通信需求</span></span><br><span class="line">        <span class="keyword">if</span> (realTime) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">realTimeData</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 窗口间通信</span></span><br><span class="line">        <span class="keyword">if</span> (requirements.<span class="property">windowCommunication</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">windowCommunication</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 无服务端控制权</span></span><br><span class="line">        <span class="keyword">if</span> (!serverControl) &#123;</span><br><span class="line">            <span class="keyword">if</span> (browserSupport === <span class="string">&#x27;legacy&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">legacySupport</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">development</span>; <span class="comment">// 使用代理</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 有服务端控制权</span></span><br><span class="line">        <span class="keyword">if</span> (serverControl) &#123;</span><br><span class="line">            <span class="keyword">if</span> (security === <span class="string">&#x27;high&#x27;</span> &amp;&amp; browserSupport === <span class="string">&#x27;modern&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">modernWebApp</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (browserSupport === <span class="string">&#x27;legacy&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">legacySupport</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">modernWebApp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 默认推荐CORS</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">scenarios</span>.<span class="property">modernWebApp</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成实现建议</span></span><br><span class="line">    <span class="title function_">generateImplementationGuide</span>(<span class="params">solution</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> guides = &#123;</span><br><span class="line">            <span class="string">&#x27;CORS&#x27;</span>: <span class="string">`</span></span><br><span class="line"><span class="string">                1. 服务端设置CORS头：</span></span><br><span class="line"><span class="string">                   Access-Control-Allow-Origin: https://your-domain.com</span></span><br><span class="line"><span class="string">                   Access-Control-Allow-Methods: GET, POST, PUT, DELETE</span></span><br><span class="line"><span class="string">                   Access-Control-Allow-Headers: Content-Type, Authorization</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                2. 客户端正常发送请求：</span></span><br><span class="line"><span class="string">                   fetch(&#x27;https://api.example.com/data&#x27;)</span></span><br><span class="line"><span class="string">            `</span>,</span><br><span class="line">            <span class="string">&#x27;JSONP&#x27;</span>: <span class="string">`</span></span><br><span class="line"><span class="string">                1. 服务端支持callback参数：</span></span><br><span class="line"><span class="string">                   app.get(&#x27;/api/data&#x27;, (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="string">                       const data = &#123; message: &#x27;Hello&#x27; &#125;;</span></span><br><span class="line"><span class="string">                       res.send(\`\$&#123;req.query.callback&#125;(\$&#123;JSON.stringify(data)&#125;);\`);</span></span><br><span class="line"><span class="string">                   &#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                2. 客户端使用JSONP：</span></span><br><span class="line"><span class="string">                   jsonp(&#x27;https://api.example.com/data&#x27;, callback);</span></span><br><span class="line"><span class="string">            `</span>,</span><br><span class="line">            <span class="string">&#x27;Proxy&#x27;</span>: <span class="string">`</span></span><br><span class="line"><span class="string">                1. 开发环境配置代理：</span></span><br><span class="line"><span class="string">                   // webpack.config.js</span></span><br><span class="line"><span class="string">                   devServer: &#123;</span></span><br><span class="line"><span class="string">                       proxy: &#123;</span></span><br><span class="line"><span class="string">                           &#x27;/api&#x27;: &#x27;https://api.example.com&#x27;</span></span><br><span class="line"><span class="string">                       &#125;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                2. 生产环境使用Nginx：</span></span><br><span class="line"><span class="string">                   location /api/ &#123;</span></span><br><span class="line"><span class="string">                       proxy_pass https://api.example.com/;</span></span><br><span class="line"><span class="string">                   &#125;</span></span><br><span class="line"><span class="string">            `</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> guides[solution] || <span class="string">&#x27;请参考相应文档&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> selector = <span class="keyword">new</span> <span class="title class_">CrossOriginSolutionSelector</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> recommendation = selector.<span class="title function_">recommend</span>(&#123;</span><br><span class="line">    <span class="attr">browserSupport</span>: <span class="string">&#x27;modern&#x27;</span>,</span><br><span class="line">    <span class="attr">requestTypes</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>],</span><br><span class="line">    <span class="attr">realTime</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">security</span>: <span class="string">&#x27;high&#x27;</span>,</span><br><span class="line">    <span class="attr">serverControl</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;推荐方案:&#x27;</span>, recommendation);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;实现指南:&#x27;</span>, selector.<span class="title function_">generateImplementationGuide</span>(recommendation.<span class="property">solution</span>));</span><br></pre></td></tr></table></figure>

<h1 id="八、最佳实践与安全考虑"><a href="#八、最佳实践与安全考虑" class="headerlink" title="八、最佳实践与安全考虑"></a>八、最佳实践与安全考虑</h1><h2 id="（一）CORS安全最佳实践"><a href="#（一）CORS安全最佳实践" class="headerlink" title="（一）CORS安全最佳实践"></a>（一）CORS安全最佳实践</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// CORS安全配置示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SecureCORSConfig</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allowedOrigins</span> = [</span><br><span class="line">            <span class="string">&#x27;https://trusted-domain.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://admin.trusted-domain.com&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allowedMethods</span> = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">allowedHeaders</span> = [<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;Authorization&#x27;</span>, <span class="string">&#x27;X-Requested-With&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 验证Origin</span></span><br><span class="line">    <span class="title function_">validateOrigin</span>(<span class="params">origin</span>) &#123;</span><br><span class="line">        <span class="comment">// 生产环境严格验证</span></span><br><span class="line">        <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">allowedOrigins</span>.<span class="title function_">includes</span>(origin);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开发环境允许localhost</span></span><br><span class="line">        <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> localhostPattern = <span class="regexp">/^https?:\/\/localhost(:\d+)?$/</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">allowedOrigins</span>.<span class="title function_">includes</span>(origin) || localhostPattern.<span class="title function_">test</span>(origin);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成CORS中间件</span></span><br><span class="line">    <span class="title function_">createCORSMiddleware</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> origin = req.<span class="property">headers</span>.<span class="property">origin</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 验证Origin</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">validateOrigin</span>(origin)) &#123;</span><br><span class="line">                res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, origin);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置其他CORS头</span></span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="variable language_">this</span>.<span class="property">allowedMethods</span>.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>));</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="variable language_">this</span>.<span class="property">allowedHeaders</span>.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>));</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="string">&#x27;true&#x27;</span>);</span><br><span class="line">            res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Max-Age&#x27;</span>, <span class="string">&#x27;86400&#x27;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理预检请求</span></span><br><span class="line">            <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&#x27;OPTIONS&#x27;</span>) &#123;</span><br><span class="line">                res.<span class="title function_">status</span>(<span class="number">204</span>).<span class="title function_">end</span>();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">next</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动态Origin验证</span></span><br><span class="line">    <span class="title function_">createDynamicOriginValidator</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function">(<span class="params">origin, callback</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 从数据库或配置文件获取允许的域名</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">getAllowedOriginsFromDB</span>()</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function"><span class="params">allowedOrigins</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (allowedOrigins.<span class="title function_">includes</span>(origin)) &#123;</span><br><span class="line">                        <span class="title function_">callback</span>(<span class="literal">null</span>, <span class="literal">true</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;Not allowed by CORS&#x27;</span>));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="title function_">callback</span>(error);</span><br><span class="line">                &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">getAllowedOriginsFromDB</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 模拟从数据库获取允许的域名</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">resolve</span>([</span><br><span class="line">                    <span class="string">&#x27;https://trusted-domain.com&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;https://partner-domain.com&#x27;</span></span><br><span class="line">                ]);</span><br><span class="line">            &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）跨域请求监控与日志"><a href="#（二）跨域请求监控与日志" class="headerlink" title="（二）跨域请求监控与日志"></a>（二）跨域请求监控与日志</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跨域请求监控</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CrossOriginMonitor</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">requestLog</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">suspiciousRequests</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">rateLimiter</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录跨域请求</span></span><br><span class="line">    <span class="title function_">logCrossOriginRequest</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> origin = req.<span class="property">headers</span>.<span class="property">origin</span>;</span><br><span class="line">        <span class="keyword">const</span> userAgent = req.<span class="property">headers</span>[<span class="string">&#x27;user-agent&#x27;</span>];</span><br><span class="line">        <span class="keyword">const</span> ip = req.<span class="property">ip</span> || req.<span class="property">connection</span>.<span class="property">remoteAddress</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> logEntry = &#123;</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>(),</span><br><span class="line">            origin,</span><br><span class="line">            <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">            <span class="attr">url</span>: req.<span class="property">url</span>,</span><br><span class="line">            userAgent,</span><br><span class="line">            ip,</span><br><span class="line">            <span class="attr">headers</span>: req.<span class="property">headers</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">requestLog</span>.<span class="title function_">push</span>(logEntry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检测可疑请求</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">detectSuspiciousActivity</span>(logEntry);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 速率限制</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">checkRateLimit</span>(ip, origin)) &#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">429</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;Too many requests&#x27;</span> &#125;);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测可疑活动</span></span><br><span class="line">    <span class="title function_">detectSuspiciousActivity</span>(<span class="params">logEntry</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; origin, ip, userAgent &#125; = logEntry;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检测未知Origin</span></span><br><span class="line">        <span class="keyword">if</span> (origin &amp;&amp; !<span class="variable language_">this</span>.<span class="title function_">isKnownOrigin</span>(origin)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">suspiciousRequests</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                ...logEntry,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;Unknown origin&#x27;</span>,</span><br><span class="line">                <span class="attr">severity</span>: <span class="string">&#x27;medium&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检测异常User-Agent</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isAbnormalUserAgent</span>(userAgent)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">suspiciousRequests</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                ...logEntry,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;Abnormal user agent&#x27;</span>,</span><br><span class="line">                <span class="attr">severity</span>: <span class="string">&#x27;low&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检测频繁请求</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">isHighFrequencyRequest</span>(ip)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">suspiciousRequests</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                ...logEntry,</span><br><span class="line">                <span class="attr">reason</span>: <span class="string">&#x27;High frequency requests&#x27;</span>,</span><br><span class="line">                <span class="attr">severity</span>: <span class="string">&#x27;high&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">isKnownOrigin</span>(<span class="params">origin</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> knownOrigins = [</span><br><span class="line">            <span class="string">&#x27;https://trusted-domain.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;https://partner-domain.com&#x27;</span>,</span><br><span class="line">            <span class="regexp">/^https:\/\/.*\.trusted-domain\.com$/</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> knownOrigins.<span class="title function_">some</span>(<span class="function"><span class="params">known</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> known === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> known === origin;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (known <span class="keyword">instanceof</span> <span class="title class_">RegExp</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> known.<span class="title function_">test</span>(origin);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">isAbnormalUserAgent</span>(<span class="params">userAgent</span>) &#123;</span><br><span class="line">        <span class="comment">// 检测爬虫或自动化工具</span></span><br><span class="line">        <span class="keyword">const</span> suspiciousPatterns = [</span><br><span class="line">            <span class="regexp">/bot/i</span>,</span><br><span class="line">            <span class="regexp">/crawler/i</span>,</span><br><span class="line">            <span class="regexp">/spider/i</span>,</span><br><span class="line">            <span class="regexp">/curl/i</span>,</span><br><span class="line">            <span class="regexp">/wget/i</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> suspiciousPatterns.<span class="title function_">some</span>(<span class="function"><span class="params">pattern</span> =&gt;</span> pattern.<span class="title function_">test</span>(userAgent));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">checkRateLimit</span>(<span class="params">ip, origin</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> key = <span class="string">`<span class="subst">$&#123;ip&#125;</span>:<span class="subst">$&#123;origin&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        <span class="keyword">const</span> windowMs = <span class="number">60000</span>; <span class="comment">// 1分钟</span></span><br><span class="line">        <span class="keyword">const</span> maxRequests = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">rateLimiter</span>.<span class="title function_">has</span>(key)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">rateLimiter</span>.<span class="title function_">set</span>(key, &#123; <span class="attr">count</span>: <span class="number">1</span>, <span class="attr">resetTime</span>: now + windowMs &#125;);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> limiter = <span class="variable language_">this</span>.<span class="property">rateLimiter</span>.<span class="title function_">get</span>(key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (now &gt; limiter.<span class="property">resetTime</span>) &#123;</span><br><span class="line">            limiter.<span class="property">count</span> = <span class="number">1</span>;</span><br><span class="line">            limiter.<span class="property">resetTime</span> = now + windowMs;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        limiter.<span class="property">count</span>++;</span><br><span class="line">        <span class="keyword">return</span> limiter.<span class="property">count</span> &gt; maxRequests;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">isHighFrequencyRequest</span>(<span class="params">ip</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> recentRequests = <span class="variable language_">this</span>.<span class="property">requestLog</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">log</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> timeDiff = <span class="title class_">Date</span>.<span class="title function_">now</span>() - <span class="keyword">new</span> <span class="title class_">Date</span>(log.<span class="property">timestamp</span>).<span class="title function_">getTime</span>();</span><br><span class="line">            <span class="keyword">return</span> log.<span class="property">ip</span> === ip &amp;&amp; timeDiff &lt; <span class="number">60000</span>; <span class="comment">// 最近1分钟</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> recentRequests.<span class="property">length</span> &gt; <span class="number">50</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成安全报告</span></span><br><span class="line">    <span class="title function_">generateSecurityReport</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="keyword">const</span> last24Hours = <span class="keyword">new</span> <span class="title class_">Date</span>(now.<span class="title function_">getTime</span>() - <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> recentRequests = <span class="variable language_">this</span>.<span class="property">requestLog</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">log</span> =&gt;</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Date</span>(log.<span class="property">timestamp</span>) &gt; last24Hours</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> recentSuspicious = <span class="variable language_">this</span>.<span class="property">suspiciousRequests</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">log</span> =&gt;</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Date</span>(log.<span class="property">timestamp</span>) &gt; last24Hours</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">period</span>: <span class="string">&#x27;24 hours&#x27;</span>,</span><br><span class="line">            <span class="attr">totalRequests</span>: recentRequests.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">suspiciousRequests</span>: recentSuspicious.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">topOrigins</span>: <span class="variable language_">this</span>.<span class="title function_">getTopOrigins</span>(recentRequests),</span><br><span class="line">            <span class="attr">suspiciousActivities</span>: recentSuspicious,</span><br><span class="line">            <span class="attr">recommendations</span>: <span class="variable language_">this</span>.<span class="title function_">generateRecommendations</span>(recentSuspicious)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getTopOrigins</span>(<span class="params">requests</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> originCounts = &#123;&#125;;</span><br><span class="line">        requests.<span class="title function_">forEach</span>(<span class="function"><span class="params">req</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (req.<span class="property">origin</span>) &#123;</span><br><span class="line">                originCounts[req.<span class="property">origin</span>] = (originCounts[req.<span class="property">origin</span>] || <span class="number">0</span>) + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(originCounts)</span><br><span class="line">            .<span class="title function_">sort</span>(<span class="function">(<span class="params">[,a], [,b]</span>) =&gt;</span> b - a)</span><br><span class="line">            .<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">            .<span class="title function_">map</span>(<span class="function">(<span class="params">[origin, count]</span>) =&gt;</span> (&#123; origin, count &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">generateRecommendations</span>(<span class="params">suspiciousRequests</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> recommendations = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> unknownOrigins = suspiciousRequests.<span class="title function_">filter</span>(<span class="function"><span class="params">req</span> =&gt;</span></span><br><span class="line">            req.<span class="property">reason</span> === <span class="string">&#x27;Unknown origin&#x27;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (unknownOrigins.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            recommendations.<span class="title function_">push</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;security&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: <span class="string">`发现 <span class="subst">$&#123;unknownOrigins.length&#125;</span> 个未知来源的请求，建议审查Origin白名单`</span>,</span><br><span class="line">                <span class="attr">priority</span>: <span class="string">&#x27;medium&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> highFrequencyRequests = suspiciousRequests.<span class="title function_">filter</span>(<span class="function"><span class="params">req</span> =&gt;</span></span><br><span class="line">            req.<span class="property">reason</span> === <span class="string">&#x27;High frequency requests&#x27;</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (highFrequencyRequests.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            recommendations.<span class="title function_">push</span>(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;performance&#x27;</span>,</span><br><span class="line">                <span class="attr">message</span>: <span class="string">`发现 <span class="subst">$&#123;highFrequencyRequests.length&#125;</span> 个高频请求，建议加强速率限制`</span>,</span><br><span class="line">                <span class="attr">priority</span>: <span class="string">&#x27;high&#x27;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> recommendations;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> monitor = <span class="keyword">new</span> <span class="title class_">CrossOriginMonitor</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在Express中使用</span></span><br><span class="line">app.<span class="title function_">use</span>(monitor.<span class="property">logCrossOriginRequest</span>.<span class="title function_">bind</span>(monitor));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定期生成报告</span></span><br><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> report = monitor.<span class="title function_">generateSecurityReport</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Security Report:&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(report, <span class="literal">null</span>, <span class="number">2</span>));</span><br><span class="line">&#125;, <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>); <span class="comment">// 每24小时</span></span><br></pre></td></tr></table></figure>

<h1 id="九、总结"><a href="#九、总结" class="headerlink" title="九、总结"></a>九、总结</h1><h2 id="（一）核心要点回顾"><a href="#（一）核心要点回顾" class="headerlink" title="（一）核心要点回顾"></a>（一）核心要点回顾</h2><ol>
<li><strong>同源策略是浏览器的重要安全机制</strong>，限制不同源之间的资源访问</li>
<li><strong>CORS是现代Web应用的标准跨域解决方案</strong>，提供了安全、灵活的跨域访问控制</li>
<li><strong>JSONP适用于简单的跨域数据获取</strong>，但存在安全风险和功能限制</li>
<li><strong>代理服务器是开发和生产环境的通用解决方案</strong>，对客户端透明</li>
<li><strong>PostMessage和WebSocket适用于特定的通信场景</strong></li>
</ol>
<h2 id="（二）选择建议-1"><a href="#（二）选择建议-1" class="headerlink" title="（二）选择建议"></a>（二）选择建议</h2><ul>
<li><strong>现代Web应用</strong>：优先选择CORS，配合适当的安全措施</li>
<li><strong>遗留系统支持</strong>：考虑JSONP，但要注意安全风险</li>
<li><strong>开发环境</strong>：使用构建工具的代理功能</li>
<li><strong>生产环境</strong>：使用Nginx等反向代理服务器</li>
<li><strong>实时通信</strong>：选择WebSocket或Server-Sent Events</li>
</ul>
<h2 id="（三）安全注意事项"><a href="#（三）安全注意事项" class="headerlink" title="（三）安全注意事项"></a>（三）安全注意事项</h2><ol>
<li><strong>严格验证Origin</strong>：不要使用通配符<code>*</code>在生产环境中</li>
<li><strong>最小权限原则</strong>：只允许必要的方法和头部</li>
<li><strong>监控和日志</strong>：记录跨域请求，及时发现异常</li>
<li><strong>定期审查</strong>：定期检查和更新跨域配置</li>
</ol>
<p>跨域问题虽然复杂，但通过理解其本质和掌握各种解决方案，我们可以在保证安全的前提下实现灵活的跨域访问。选择合适的解决方案，并遵循安全最佳实践，是构建现代Web应用的重要技能。</p>
<h1 id="十、参考资料"><a href="#十、参考资料" class="headerlink" title="十、参考资料"></a>十、参考资料</h1><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy">MDN - 同源策略</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS">MDN - CORS</a></li>
<li><a href="https://www.w3.org/TR/cors/">W3C CORS规范</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage">MDN - PostMessage API</a></li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E4%B8%AD%E7%9A%84%E6%A0%B8%E5%BF%83%EF%BC%9A%E7%90%86%E8%A7%A3%E5%92%8C%E4%BD%BF%E7%94%A8Document%E5%AF%B9%E8%B1%A1.md">【前端】JavaScript中的核心：理解和使用Document对象</a></li>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88%E6%A6%82%E8%A7%88.md">【前端】前端开发技术栈概览</a></li>
<li><a href="../%E5%AD%A6%E4%B9%A0/%E3%80%90%E5%AD%A6%E4%B9%A0%E3%80%91%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E8%AF%A6%E8%A7%A3%E4%B8%8E%E5%BA%94%E7%94%A8%E5%AE%9E%E8%B7%B5.md">【学习】网络代理详解与应用实践</a></li>
<li><a href="./%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91JavaScript%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%B8%8E%E8%BD%AE%E8%AF%A2%E6%9C%BA%E5%88%B6%E8%AF%A6%E8%A7%A3.md">【前端】JavaScript定时任务与轮询机制详解</a></li>
</ul>
<h2 id="技术资源"><a href="#技术资源" class="headerlink" title="技术资源"></a>技术资源</h2><ul>
<li><a href="https://cors-test.codehappy.dev/">CORS测试工具</a></li>
<li><a href="https://httpstatuses.com/">HTTP状态码参考</a></li>
<li><a href="https://caniuse.com/cors">浏览器兼容性查询</a></li>
<li><a href="https://enable-cors.org/server_nginx.html">Nginx CORS配置生成器</a></li>
</ul>
<h2 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h2><ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html">阮一峰 - 跨域资源共享 CORS 详解</a></li>
<li><a href="https://book.douban.com/subject/10546125/">JavaScript高级程序设计</a></li>
<li><a href="https://book.douban.com/subject/10746113/">HTTP权威指南</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[深入解析跨域问题的本质、同源策略的作用机制，以及CORS、JSONP、代理服务器等多种跨域解决方案的原理与实践应用]]>
    
    </summary>
    
      <category term="前端" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="跨域" scheme="https://uwakeme.top/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="CORS" scheme="https://uwakeme.top/tags/CORS/"/>
    
      <category term="同源策略" scheme="https://uwakeme.top/tags/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"/>
    
      <category term="网络安全" scheme="https://uwakeme.top/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
      <category term="JSONP" scheme="https://uwakeme.top/tags/JSONP/"/>
    
      <category term="代理服务器" scheme="https://uwakeme.top/tags/%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="前端" scheme="https://uwakeme.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【BUG解决】nvm无法安装低版本Node.js：The system cannot find the file specified解决方案]]></title>
    <link href="https://uwakeme.top/2025/07/25/BUG%E8%A7%A3%E5%86%B3/%E3%80%90BUG%E8%A7%A3%E5%86%B3%E3%80%91nvm%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E4%BD%8E%E7%89%88%E6%9C%ACNode.js%EF%BC%9AThe%20system%20cannot%20find%20the%20file%20specified%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://uwakeme.top/2025/07/25/BUG解决/【BUG解决】nvm无法安装低版本Node.js：The system cannot find the file specified解决方案/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T06:32:02.244Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在使用nvm管理Node.js版本时，很多开发者会遇到一个常见问题：当尝试安装较低版本的Node.js（如Node.js 12.x、14.x等）时，会出现”The system cannot find the file specified”错误。这个问题在Windows系统上尤为常见，本文将详细分析问题原因并提供多种解决方案。</p>
<h1 id="一、问题现象"><a href="#一、问题现象" class="headerlink" title="一、问题现象"></a>一、问题现象</h1><h2 id="（一）错误描述"><a href="#（一）错误描述" class="headerlink" title="（一）错误描述"></a>（一）错误描述</h2><p>当使用nvm安装低版本Node.js时，会出现以下错误信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\wake\Desktop&gt; nvm install 12.22.12</span><br><span class="line">Downloading node.js version 12.22.12 (64-bit)...</span><br><span class="line">Complete</span><br><span class="line">Downloading npm...</span><br><span class="line">Creating C:\Users\wake\AppData\Local\Temp\nvm-install-3831866538\temp</span><br><span class="line"></span><br><span class="line">Downloading npm version 6.14.16... Complete</span><br><span class="line">Installing npm v6.14.16...</span><br><span class="line">error installing 12.22.12: open C:\Users\wake\AppData\Local\Temp\nvm-npm-329d497460\npm-v6.14.16.zip: The system cannot find the file specified.</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/nvmbug20250725-01.png" alt="错误截图"></p>
<h2 id="（二）解决后的效果"><a href="#（二）解决后的效果" class="headerlink" title="（二）解决后的效果"></a>（二）解决后的效果</h2><p>按照本文提供的解决方案（降级nvm版本）后，同样的安装命令可以成功执行：</p>
<p><img src="/2025/07/25/BUG%E8%A7%A3%E5%86%B3/%E3%80%90BUG%E8%A7%A3%E5%86%B3%E3%80%91nvm%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85%E4%BD%8E%E7%89%88%E6%9C%ACNode/post/BUG/nvmbug3.png" alt="成功安装对比"></p>
<h2 id="（三）问题特征"><a href="#（三）问题特征" class="headerlink" title="（三）问题特征"></a>（三）问题特征</h2><ol>
<li><strong>版本特异性</strong>：主要影响Node.js 12.x、13.x、14.x等较低版本</li>
<li><strong>系统特异性</strong>：主要在Windows系统上出现</li>
<li><strong>npm相关</strong>：错误通常发生在下载或安装npm阶段</li>
<li><strong>临时文件问题</strong>：错误信息指向临时文件路径</li>
</ol>
<h1 id="二、问题原因分析"><a href="#二、问题原因分析" class="headerlink" title="二、问题原因分析"></a>二、问题原因分析</h1><h2 id="（一）根本原因"><a href="#（一）根本原因" class="headerlink" title="（一）根本原因"></a>（一）根本原因</h2><p>这个问题的根本原因是<strong>nvm版本与Node.js版本的兼容性问题</strong>：</p>
<ol>
<li><strong>nvm版本过高</strong>：较新版本的nvm-windows（如1.2.2）与老版本Node.js的npm下载机制不兼容</li>
<li><strong>下载链接变更</strong>：npm的下载链接在不同时期有所变化，新版nvm可能无法正确处理老版本的下载链接</li>
<li><strong>临时文件处理</strong>：新版nvm在处理临时文件时的逻辑与老版本Node.js不匹配</li>
</ol>
<h2 id="（二）技术细节"><a href="#（二）技术细节" class="headerlink" title="（二）技术细节"></a>（二）技术细节</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 问题发生的技术流程</span></span><br><span class="line">1. nvm下载Node.js二进制文件 ✓ (成功)</span><br><span class="line">2. nvm尝试下载对应的npm版本 ✓ (成功)</span><br><span class="line">3. nvm尝试解压npm文件到临时目录 ✗ (失败)</span><br><span class="line">4. 系统报告找不到指定文件</span><br></pre></td></tr></table></figure>

<h1 id="三、解决方案"><a href="#三、解决方案" class="headerlink" title="三、解决方案"></a>三、解决方案</h1><h2 id="（一）方案一：降级nvm版本（推荐）"><a href="#（一）方案一：降级nvm版本（推荐）" class="headerlink" title="（一）方案一：降级nvm版本（推荐）"></a>（一）方案一：降级nvm版本（推荐）</h2><h3 id="1-卸载当前nvm"><a href="#1-卸载当前nvm" class="headerlink" title="1. 卸载当前nvm"></a>1. 卸载当前nvm</h3><h4 id="第一步：通过控制面板卸载nvm-windows"><a href="#第一步：通过控制面板卸载nvm-windows" class="headerlink" title="第一步：通过控制面板卸载nvm-windows"></a>第一步：通过控制面板卸载nvm-windows</h4><ol>
<li>打开<strong>控制面板</strong> → <strong>程序和功能</strong></li>
<li>找到<strong>NVM for Windows</strong></li>
<li>点击<strong>卸载</strong>并确认</li>
</ol>
<h4 id="第二步：删除环境变量中的NVM相关配置"><a href="#第二步：删除环境变量中的NVM相关配置" class="headerlink" title="第二步：删除环境变量中的NVM相关配置"></a>第二步：删除环境变量中的NVM相关配置</h4><ol>
<li>右键<strong>此电脑</strong> → <strong>属性</strong> → <strong>高级系统设置</strong></li>
<li>点击<strong>环境变量</strong>按钮</li>
<li>在系统变量中删除以下变量（如果存在）：<ul>
<li><code>NVM_HOME</code></li>
<li><code>NVM_SYMLINK</code></li>
</ul>
</li>
<li>在PATH变量中删除nvm相关的路径</li>
</ol>
<h4 id="第三步：删除nvm安装目录"><a href="#第三步：删除nvm安装目录" class="headerlink" title="第三步：删除nvm安装目录"></a>第三步：删除nvm安装目录</h4><ol>
<li>删除nvm安装目录（通常在<code>C:\Users\&#123;用户名&#125;\AppData\Roaming\nvm</code>）</li>
<li>删除Node.js符号链接目录（通常在<code>C:\Program Files\nodejs</code>）</li>
</ol>
<h3 id="2-安装兼容版本nvm"><a href="#2-安装兼容版本nvm" class="headerlink" title="2. 安装兼容版本nvm"></a>2. 安装兼容版本nvm</h3><h4 id="第一步：下载nvm-windows-1-1-12版本"><a href="#第一步：下载nvm-windows-1-1-12版本" class="headerlink" title="第一步：下载nvm-windows 1.1.12版本"></a>第一步：下载nvm-windows 1.1.12版本</h4><ol>
<li>访问GitHub发布页面：<a href="https://github.com/coreybutler/nvm-windows/releases/tag/1.1.12">https://github.com/coreybutler/nvm-windows/releases/tag/1.1.12</a></li>
<li>下载<strong>nvm-setup.zip</strong>文件</li>
<li>解压下载的压缩包</li>
</ol>
<h4 id="第二步：安装nvm-1-1-12"><a href="#第二步：安装nvm-1-1-12" class="headerlink" title="第二步：安装nvm 1.1.12"></a>第二步：安装nvm 1.1.12</h4><ol>
<li><strong>以管理员身份</strong>运行<code>nvm-setup.exe</code></li>
<li>选择安装路径（建议使用默认路径）</li>
<li>选择Node.js符号链接路径</li>
<li>完成安装向导</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/nvmbug20250725-02.png" alt="解决方案截图"></p>
<h3 id="3-验证安装"><a href="#3-验证安装" class="headerlink" title="3. 验证安装"></a>3. 验证安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查nvm版本</span></span><br><span class="line">nvm version</span><br><span class="line"><span class="comment"># 应该显示：1.1.12</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新安装Node.js 12</span></span><br><span class="line">nvm install 12.22.12</span><br><span class="line">nvm use 12.22.12</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证安装结果</span></span><br><span class="line">node --version</span><br><span class="line">npm --version</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/nvmbug20250725-03.png" alt="成功安装截图"></p>
<p>如上图所示，降级nvm版本后，Node.js 12.22.12安装成功，没有再出现”The system cannot find the file specified”错误。</p>
<h2 id="（二）方案二：手动安装npm"><a href="#（二）方案二：手动安装npm" class="headerlink" title="（二）方案二：手动安装npm"></a>（二）方案二：手动安装npm</h2><h3 id="1-先安装Node-js（忽略npm错误）"><a href="#1-先安装Node-js（忽略npm错误）" class="headerlink" title="1. 先安装Node.js（忽略npm错误）"></a>1. 先安装Node.js（忽略npm错误）</h3><h4 id="执行安装命令："><a href="#执行安装命令：" class="headerlink" title="执行安装命令："></a>执行安装命令：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强制安装Node.js（即使npm安装失败）</span></span><br><span class="line">nvm install 12.22.12</span><br><span class="line">nvm use 12.22.12</span><br></pre></td></tr></table></figure>

<h3 id="2-手动下载并安装npm"><a href="#2-手动下载并安装npm" class="headerlink" title="2. 手动下载并安装npm"></a>2. 手动下载并安装npm</h3><h4 id="第一步：下载对应版本的npm"><a href="#第一步：下载对应版本的npm" class="headerlink" title="第一步：下载对应版本的npm"></a>第一步：下载对应版本的npm</h4><ol>
<li>访问npm注册表：<a href="https://registry.npmjs.org/npm/-/npm-6.14.16.tgz">https://registry.npmjs.org/npm/-/npm-6.14.16.tgz</a></li>
<li>下载npm-6.14.16.tgz文件</li>
<li>解压下载的压缩包</li>
</ol>
<h4 id="第二步：安装npm到Node-js目录"><a href="#第二步：安装npm到Node-js目录" class="headerlink" title="第二步：安装npm到Node.js目录"></a>第二步：安装npm到Node.js目录</h4><ol>
<li>找到Node.js安装目录（通常在<code>C:\Users\&#123;用户名&#125;\AppData\Roaming\nvm\v12.22.12\</code>）</li>
<li>将解压的npm文件夹复制到<code>node_modules</code>目录下</li>
<li>确保npm文件夹路径为：<code>C:\Users\&#123;用户名&#125;\AppData\Roaming\nvm\v12.22.12\node_modules\npm</code></li>
</ol>
<h3 id="3-配置npm"><a href="#3-配置npm" class="headerlink" title="3. 配置npm"></a>3. 配置npm</h3><h4 id="第一步：创建npm命令文件"><a href="#第一步：创建npm命令文件" class="headerlink" title="第一步：创建npm命令文件"></a>第一步：创建npm命令文件</h4><p>在Node.js安装目录下创建<code>npm.cmd</code>文件：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> @IF EXIST <span class="string">&quot;%~dp0\node.exe&quot;</span> ( <span class="string">&quot;%~dp0\node.exe&quot;</span> <span class="string">&quot;%~dp0\node_modules\npm\bin\npm-cli.js&quot;</span> %* ) ELSE ( @SETLOCAL &amp; @SET PATHEXT=%PATHEXT:;.JS;=;% &amp; node <span class="string">&quot;%~dp0\node_modules\npm\bin\npm-cli.js&quot;</span> %* ) &gt; npm.cmd</span><br></pre></td></tr></table></figure>

<h4 id="第二步：验证npm安装"><a href="#第二步：验证npm安装" class="headerlink" title="第二步：验证npm安装"></a>第二步：验证npm安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --version</span><br></pre></td></tr></table></figure>

<p>如果显示版本号，说明npm配置成功。</p>
<h2 id="（三）方案三：使用替代版本管理工具"><a href="#（三）方案三：使用替代版本管理工具" class="headerlink" title="（三）方案三：使用替代版本管理工具"></a>（三）方案三：使用替代版本管理工具</h2><h3 id="1-使用fnm"><a href="#1-使用fnm" class="headerlink" title="1. 使用fnm"></a>1. 使用fnm</h3><h4 id="第一步：安装fnm"><a href="#第一步：安装fnm" class="headerlink" title="第一步：安装fnm"></a>第一步：安装fnm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install Schniz.fnm</span><br></pre></td></tr></table></figure>

<h4 id="第二步：使用fnm安装Node-js"><a href="#第二步：使用fnm安装Node-js" class="headerlink" title="第二步：使用fnm安装Node.js"></a>第二步：使用fnm安装Node.js</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fnm install 12.22.12</span><br><span class="line">fnm use 12.22.12</span><br></pre></td></tr></table></figure>

<h3 id="2-使用volta"><a href="#2-使用volta" class="headerlink" title="2. 使用volta"></a>2. 使用volta</h3><h4 id="第一步：安装volta"><a href="#第一步：安装volta" class="headerlink" title="第一步：安装volta"></a>第一步：安装volta</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install Volta.Volta</span><br></pre></td></tr></table></figure>

<h4 id="第二步：使用volta安装Node-js"><a href="#第二步：使用volta安装Node-js" class="headerlink" title="第二步：使用volta安装Node.js"></a>第二步：使用volta安装Node.js</h4><p>volta install <a href="mailto:&#x6e;&#111;&#x64;&#x65;&#64;&#x31;&#50;&#x2e;&#x32;&#x32;&#x2e;&#x31;&#x32;">&#x6e;&#111;&#x64;&#x65;&#64;&#x31;&#50;&#x2e;&#x32;&#x32;&#x2e;&#x31;&#x32;</a></p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## （四）方案四：修改nvm配置</span><br><span class="line"></span><br><span class="line">### 1. 修改nvm设置</span><br><span class="line"></span><br><span class="line">#### 第一步：编辑nvm配置文件</span><br><span class="line">1. 找到nvm的`settings.txt`文件（路径：`C:\Users\&#123;用户名&#125;\AppData\Roaming\nvm\settings.txt`）</span><br><span class="line">2. 使用文本编辑器打开该文件</span><br><span class="line">3. 添加或修改以下配置：</span><br><span class="line"></span><br><span class="line">```text</span><br><span class="line">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class="line">npm_mirror: https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure>

<h3 id="2-清理缓存重试"><a href="#2-清理缓存重试" class="headerlink" title="2. 清理缓存重试"></a>2. 清理缓存重试</h3><h4 id="第一步：清理nvm缓存"><a href="#第一步：清理nvm缓存" class="headerlink" title="第一步：清理nvm缓存"></a>第一步：清理nvm缓存</h4><ol>
<li>打开文件资源管理器</li>
<li>导航到<code>C:\Users\&#123;用户名&#125;\AppData\Local\Temp\</code></li>
<li>删除所有以<code>nvm-</code>开头的临时文件夹</li>
</ol>
<h4 id="第二步：重新尝试安装"><a href="#第二步：重新尝试安装" class="headerlink" title="第二步：重新尝试安装"></a>第二步：重新尝试安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install 12.22.12</span><br></pre></td></tr></table></figure>

<h1 id="四、预防措施"><a href="#四、预防措施" class="headerlink" title="四、预防措施"></a>四、预防措施</h1><h2 id="（一）版本兼容性检查"><a href="#（一）版本兼容性检查" class="headerlink" title="（一）版本兼容性检查"></a>（一）版本兼容性检查</h2><h3 id="1-创建兼容性对照表"><a href="#1-创建兼容性对照表" class="headerlink" title="1. 创建兼容性对照表"></a>1. 创建兼容性对照表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| nvm版本 | 支持的Node.js版本范围 | 推荐使用场景 |</span><br><span class="line">|---------|---------------------|-------------|</span><br><span class="line">| 1.1.12  | 8.x - 18.x         | 需要老版本Node.js |</span><br><span class="line">| 1.2.x   | 16.x - 最新        | 只使用新版本Node.js |</span><br></pre></td></tr></table></figure>

<h3 id="2-安装前检查"><a href="#2-安装前检查" class="headerlink" title="2. 安装前检查"></a>2. 安装前检查</h3><h4 id="第一步：检查要安装的Node-js版本"><a href="#第一步：检查要安装的Node-js版本" class="headerlink" title="第一步：检查要安装的Node.js版本"></a>第一步：检查要安装的Node.js版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm list available</span><br></pre></td></tr></table></figure>

<h4 id="第二步：查看当前nvm版本"><a href="#第二步：查看当前nvm版本" class="headerlink" title="第二步：查看当前nvm版本"></a>第二步：查看当前nvm版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm version</span><br></pre></td></tr></table></figure>

<h4 id="第三步：版本兼容性判断"><a href="#第三步：版本兼容性判断" class="headerlink" title="第三步：版本兼容性判断"></a>第三步：版本兼容性判断</h4><p>根据上述兼容性对照表，选择合适的nvm版本。如果需要安装Node.js 12.x等低版本，建议使用nvm 1.1.12。</p>
<h2 id="（二）环境配置最佳实践"><a href="#（二）环境配置最佳实践" class="headerlink" title="（二）环境配置最佳实践"></a>（二）环境配置最佳实践</h2><h3 id="1-备份配置"><a href="#1-备份配置" class="headerlink" title="1. 备份配置"></a>1. 备份配置</h3><h4 id="第一步：备份nvm配置文件"><a href="#第一步：备份nvm配置文件" class="headerlink" title="第一步：备份nvm配置文件"></a>第一步：备份nvm配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy <span class="string">&quot;%APPDATA%\nvm\settings.txt&quot;</span> <span class="string">&quot;%APPDATA%\nvm\settings.txt.backup&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="第二步：备份环境变量"><a href="#第二步：备份环境变量" class="headerlink" title="第二步：备份环境变量"></a>第二步：备份环境变量</h4><ol>
<li>打开<strong>系统属性</strong> → <strong>高级</strong> → <strong>环境变量</strong></li>
<li>记录或截图保存以下环境变量的值：<ul>
<li><code>NVM_HOME</code></li>
<li><code>NVM_SYMLINK</code></li>
<li>PATH中的nvm相关路径</li>
</ul>
</li>
</ol>
<h3 id="2-分离环境"><a href="#2-分离环境" class="headerlink" title="2. 分离环境"></a>2. 分离环境</h3><h4 id="为不同项目创建独立的Node-js环境："><a href="#为不同项目创建独立的Node-js环境：" class="headerlink" title="为不同项目创建独立的Node.js环境："></a>为不同项目创建独立的Node.js环境：</h4><h4 id="第一步：创建-nvmrc文件"><a href="#第一步：创建-nvmrc文件" class="headerlink" title="第一步：创建.nvmrc文件"></a>第一步：创建.nvmrc文件</h4><p>在项目根目录创建<code>.nvmrc</code>文件，指定项目所需的Node.js版本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;12.22.12&quot;</span> &gt; .nvmrc</span><br></pre></td></tr></table></figure>

<h4 id="第二步：使用指定版本"><a href="#第二步：使用指定版本" class="headerlink" title="第二步：使用指定版本"></a>第二步：使用指定版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use</span><br></pre></td></tr></table></figure>

<p>这样可以确保每个项目使用正确的Node.js版本，避免版本冲突。</p>
<h1 id="五、故障排除"><a href="#五、故障排除" class="headerlink" title="五、故障排除"></a>五、故障排除</h1><h2 id="（一）常见错误及解决方法"><a href="#（一）常见错误及解决方法" class="headerlink" title="（一）常见错误及解决方法"></a>（一）常见错误及解决方法</h2><h3 id="1-权限错误"><a href="#1-权限错误" class="headerlink" title="1. 权限错误"></a>1. 权限错误</h3><h4 id="错误现象："><a href="#错误现象：" class="headerlink" title="错误现象："></a>错误现象：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access denied</span><br></pre></td></tr></table></figure>

<h4 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h4><ol>
<li>右键点击<strong>PowerShell</strong>或<strong>命令提示符</strong></li>
<li>选择<strong>以管理员身份运行</strong></li>
<li>重新执行nvm命令</li>
</ol>
<h3 id="2-网络错误"><a href="#2-网络错误" class="headerlink" title="2. 网络错误"></a>2. 网络错误</h3><h4 id="错误现象：-1"><a href="#错误现象：-1" class="headerlink" title="错误现象："></a>错误现象：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Download failed</span><br></pre></td></tr></table></figure>

<h4 id="解决方法：-1"><a href="#解决方法：-1" class="headerlink" title="解决方法："></a>解决方法：</h4><p>配置国内镜像源加速下载：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure>

<h3 id="3-路径错误"><a href="#3-路径错误" class="headerlink" title="3. 路径错误"></a>3. 路径错误</h3><h4 id="错误现象：-2"><a href="#错误现象：-2" class="headerlink" title="错误现象："></a>错误现象：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Path too long</span><br></pre></td></tr></table></figure>

<h4 id="解决方法：-2"><a href="#解决方法：-2" class="headerlink" title="解决方法："></a>解决方法：</h4><ol>
<li>卸载当前nvm</li>
<li>重新安装nvm到较短的路径，如<code>C:\nvm</code></li>
<li>避免使用包含空格或特殊字符的路径</li>
</ol>
<h2 id="（二）验证安装"><a href="#（二）验证安装" class="headerlink" title="（二）验证安装"></a>（二）验证安装</h2><h3 id="1-完整性检查"><a href="#1-完整性检查" class="headerlink" title="1. 完整性检查"></a>1. 完整性检查</h3><h4 id="第一步：检查Node-js"><a href="#第一步：检查Node-js" class="headerlink" title="第一步：检查Node.js"></a>第一步：检查Node.js</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br><span class="line">node -e <span class="string">&quot;console.log(&#x27;Node.js is working!&#x27;)&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="第二步：检查npm"><a href="#第二步：检查npm" class="headerlink" title="第二步：检查npm"></a>第二步：检查npm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm --version</span><br><span class="line">npm list -g --depth=0</span><br></pre></td></tr></table></figure>

<h4 id="第三步：检查nvm"><a href="#第三步：检查nvm" class="headerlink" title="第三步：检查nvm"></a>第三步：检查nvm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm list</span><br><span class="line">nvm current</span><br></pre></td></tr></table></figure>

<h3 id="2-功能测试"><a href="#2-功能测试" class="headerlink" title="2. 功能测试"></a>2. 功能测试</h3><h4 id="第一步：创建测试项目"><a href="#第一步：创建测试项目" class="headerlink" title="第一步：创建测试项目"></a>第一步：创建测试项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> nvm-test</span><br><span class="line"><span class="built_in">cd</span> nvm-test</span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure>

<h4 id="第二步：安装测试包"><a href="#第二步：安装测试包" class="headerlink" title="第二步：安装测试包"></a>第二步：安装测试包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install lodash</span><br></pre></td></tr></table></figure>

<h4 id="第三步：运行测试"><a href="#第三步：运行测试" class="headerlink" title="第三步：运行测试"></a>第三步：运行测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -e <span class="string">&quot;console.log(require(&#x27;lodash&#x27;).VERSION)&quot;</span></span><br></pre></td></tr></table></figure>

<p>如果所有命令都能正常执行并返回预期结果，说明nvm和Node.js安装成功。</p>
<h1 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h1><p>nvm安装低版本Node.js的”The system cannot find the file specified”错误主要是由于nvm版本兼容性问题导致的。解决这个问题的最佳方案是：</p>
<h2 id="（一）推荐解决流程"><a href="#（一）推荐解决流程" class="headerlink" title="（一）推荐解决流程"></a>（一）推荐解决流程</h2><ol>
<li><strong>降级nvm</strong>：安装nvm-windows 1.1.12版本</li>
<li><strong>验证兼容性</strong>：确认目标Node.js版本与nvm版本兼容</li>
<li><strong>配置镜像源</strong>：使用国内镜像提高下载成功率</li>
<li><strong>测试安装</strong>：完整验证Node.js和npm功能</li>
</ol>
<p><strong>实际验证结果</strong>：按照本文推荐的方案一（降级nvm版本），已成功解决Node.js 12.22.12的安装问题，验证了解决方案的有效性。</p>
<h2 id="（二）长期建议"><a href="#（二）长期建议" class="headerlink" title="（二）长期建议"></a>（二）长期建议</h2><ol>
<li><strong>版本规划</strong>：根据项目需求选择合适的nvm版本</li>
<li><strong>定期更新</strong>：关注nvm和Node.js的兼容性更新</li>
<li><strong>备份配置</strong>：保存工作环境的配置信息</li>
<li><strong>团队统一</strong>：确保团队使用相同的版本管理策略</li>
</ol>
<p>通过本文的解决方案，您应该能够成功安装所需的Node.js版本，并避免类似问题的再次发生。记住，版本管理工具的选择和配置对开发效率有重要影响，值得投入时间进行合理规划。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://github.com/coreybutler/nvm-windows">nvm-windows官方文档</a></li>
<li><a href="https://nodejs.org/en/download/">Node.js官方下载页面</a></li>
<li><a href="https://docs.npmjs.com/">npm官方文档</a></li>
<li><a href="https://github.com/coreybutler/nvm-windows/issues">nvm-windows问题追踪</a></li>
<li><a href="https://nvm.uihtm.com/doc/nvm-old.html">nvm常见问题</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[详细解决nvm在Windows系统下安装低版本Node.js时出现"The system cannot find the file specified"错误的问题，提供多种解决方案和预防措施]]>
    
    </summary>
    
      <category term="BUG解决" scheme="https://uwakeme.top/tags/BUG%E8%A7%A3%E5%86%B3/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/tags/Node-js/"/>
    
      <category term="nvm" scheme="https://uwakeme.top/tags/nvm/"/>
    
      <category term="版本管理" scheme="https://uwakeme.top/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
      <category term="Windows" scheme="https://uwakeme.top/tags/Windows/"/>
    
      <category term="环境配置" scheme="https://uwakeme.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="BUG解决" scheme="https://uwakeme.top/categories/BUG%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Node.js】Node.js多版本管理：一台电脑安装多个Node.js版本的完整指南]]></title>
    <link href="https://uwakeme.top/2025/07/25/Node.js/%E3%80%90Node.js%E3%80%91Node.js%E5%A4%9A%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%EF%BC%9A%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E5%AE%89%E8%A3%85%E5%A4%9A%E4%B8%AANode.js%E7%89%88%E6%9C%AC%E7%9A%84%E5%AE%8C%E6%95%B4%E6%8C%87%E5%8D%97/"/>
    <id>https://uwakeme.top/2025/07/25/Node.js/【Node.js】Node.js多版本管理：一台电脑安装多个Node.js版本的完整指南/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T07:58:09.525Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代前端和后端开发中，不同的项目往往需要不同版本的Node.js。有些老项目可能依赖较旧的Node.js版本，而新项目则需要最新的特性。在一台电脑上管理多个Node.js版本是开发者的常见需求。本文将详细介绍如何在同一台电脑上安装和管理多个Node.js版本。</p>
<h1 id="一、为什么需要多版本Node-js"><a href="#一、为什么需要多版本Node-js" class="headerlink" title="一、为什么需要多版本Node.js"></a>一、为什么需要多版本Node.js</h1><h2 id="（一）常见场景"><a href="#（一）常见场景" class="headerlink" title="（一）常见场景"></a>（一）常见场景</h2><h3 id="1-项目兼容性需求"><a href="#1-项目兼容性需求" class="headerlink" title="1. 项目兼容性需求"></a>1. 项目兼容性需求</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 老项目可能需要Node.js 14.x</span></span><br><span class="line">项目A: Node.js 14.21.3 + npm 6.x</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新项目需要最新的Node.js 20.x</span></span><br><span class="line">项目B: Node.js 20.11.0 + npm 10.x</span><br></pre></td></tr></table></figure>

<h3 id="2-依赖包版本限制"><a href="#2-依赖包版本限制" class="headerlink" title="2. 依赖包版本限制"></a>2. 依赖包版本限制</h3><p>某些npm包可能对Node.js版本有严格要求：</p>
<ul>
<li>老版本的包可能不支持新版本Node.js</li>
<li>新版本的包可能需要最新的Node.js特性</li>
</ul>
<h3 id="3-团队开发统一"><a href="#3-团队开发统一" class="headerlink" title="3. 团队开发统一"></a>3. 团队开发统一</h3><p>确保团队成员使用相同的Node.js版本，避免”在我机器上能跑”的问题。</p>
<h2 id="（二）版本管理的优势"><a href="#（二）版本管理的优势" class="headerlink" title="（二）版本管理的优势"></a>（二）版本管理的优势</h2><ol>
<li><strong>项目隔离</strong>：不同项目使用独立的Node.js环境</li>
<li><strong>快速切换</strong>：一条命令即可切换Node.js版本</li>
<li><strong>避免冲突</strong>：防止全局包版本冲突</li>
<li><strong>测试兼容性</strong>：轻松测试应用在不同Node.js版本下的表现</li>
</ol>
<h1 id="二、Node-js版本管理工具对比"><a href="#二、Node-js版本管理工具对比" class="headerlink" title="二、Node.js版本管理工具对比"></a>二、Node.js版本管理工具对比</h1><h2 id="（一）主流版本管理工具"><a href="#（一）主流版本管理工具" class="headerlink" title="（一）主流版本管理工具"></a>（一）主流版本管理工具</h2><table>
<thead>
<tr>
<th>工具</th>
<th>平台支持</th>
<th>特点</th>
<th>推荐度</th>
</tr>
</thead>
<tbody><tr>
<td>nvm</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>功能全面，社区活跃</td>
<td>⭐⭐⭐⭐⭐</td>
</tr>
<tr>
<td>n</td>
<td>macOS&#x2F;Linux</td>
<td>简单易用，轻量级</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>fnm</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>速度快，Rust编写</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>volta</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>项目级版本管理</td>
<td>⭐⭐⭐</td>
</tr>
</tbody></table>
<h2 id="（二）工具选择建议"><a href="#（二）工具选择建议" class="headerlink" title="（二）工具选择建议"></a>（二）工具选择建议</h2><ul>
<li><strong>Windows用户</strong>：推荐使用nvm-windows</li>
<li><strong>macOS&#x2F;Linux用户</strong>：推荐使用nvm或fnm</li>
<li><strong>追求速度</strong>：选择fnm</li>
<li><strong>项目级管理</strong>：选择volta</li>
</ul>
<h1 id="三、Windows系统安装多版本Node-js"><a href="#三、Windows系统安装多版本Node-js" class="headerlink" title="三、Windows系统安装多版本Node.js"></a>三、Windows系统安装多版本Node.js</h1><h2 id="（一）使用nvm-windows"><a href="#（一）使用nvm-windows" class="headerlink" title="（一）使用nvm-windows"></a>（一）使用nvm-windows</h2><h3 id="1-卸载现有Node-js"><a href="#1-卸载现有Node-js" class="headerlink" title="1. 卸载现有Node.js"></a>1. 卸载现有Node.js</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 通过控制面板卸载Node.js</span></span><br><span class="line"><span class="comment"># 2. 删除残留文件夹</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span> <span class="string">&quot;C:\Program Files\nodejs&quot;</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span> <span class="string">&quot;C:\Users\&#123;用户名&#125;\AppData\Roaming\npm&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-下载安装nvm-windows"><a href="#2-下载安装nvm-windows" class="headerlink" title="2. 下载安装nvm-windows"></a>2. 下载安装nvm-windows</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问GitHub下载最新版本</span></span><br><span class="line">https://github.com/coreybutler/nvm-windows/releases</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载nvm-setup.zip并安装</span></span><br></pre></td></tr></table></figure>

<h3 id="3-配置nvm"><a href="#3-配置nvm" class="headerlink" title="3. 配置nvm"></a>3. 配置nvm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看nvm版本</span></span><br><span class="line">nvm version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置镜像源（可选，提高下载速度）</span></span><br><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure>

<h3 id="4-安装和管理Node-js版本"><a href="#4-安装和管理Node-js版本" class="headerlink" title="4. 安装和管理Node.js版本"></a>4. 安装和管理Node.js版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看可安装的Node.js版本</span></span><br><span class="line">nvm list available</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line">nvm install 18.19.0</span><br><span class="line">nvm install 20.11.0</span><br><span class="line">nvm install latest  <span class="comment"># 安装最新版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已安装版本</span></span><br><span class="line">nvm list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本</span></span><br><span class="line">nvm use 18.19.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认版本</span></span><br><span class="line">nvm <span class="built_in">alias</span> default 18.19.0</span><br></pre></td></tr></table></figure>

<h2 id="（二）验证安装"><a href="#（二）验证安装" class="headerlink" title="（二）验证安装"></a>（二）验证安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查当前Node.js版本</span></span><br><span class="line">node --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查npm版本</span></span><br><span class="line">npm --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装路径</span></span><br><span class="line"><span class="built_in">where</span> node</span><br><span class="line"><span class="built_in">where</span> npm</span><br></pre></td></tr></table></figure>

<h1 id="四、macOS-Linux系统安装多版本Node-js"><a href="#四、macOS-Linux系统安装多版本Node-js" class="headerlink" title="四、macOS&#x2F;Linux系统安装多版本Node.js"></a>四、macOS&#x2F;Linux系统安装多版本Node.js</h1><h2 id="（一）使用nvm"><a href="#（一）使用nvm" class="headerlink" title="（一）使用nvm"></a>（一）使用nvm</h2><h3 id="1-安装nvm"><a href="#1-安装nvm" class="headerlink" title="1. 安装nvm"></a>1. 安装nvm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用curl安装</span></span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或使用wget安装</span></span><br><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载shell配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>

<h3 id="2-验证nvm安装"><a href="#2-验证nvm安装" class="headerlink" title="2. 验证nvm安装"></a>2. 验证nvm安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查nvm版本</span></span><br><span class="line">nvm --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果提示command not found，手动添加到PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export NVM_DIR=&quot;$HOME/.nvm&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="3-安装和管理Node-js"><a href="#3-安装和管理Node-js" class="headerlink" title="3. 安装和管理Node.js"></a>3. 安装和管理Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装最新LTS版本</span></span><br><span class="line">nvm install --lts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line">nvm install 18.19.0</span><br><span class="line">nvm install 20.11.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看已安装版本</span></span><br><span class="line">nvm <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程可用版本</span></span><br><span class="line">nvm ls-remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本</span></span><br><span class="line">nvm use 18.19.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认版本</span></span><br><span class="line">nvm <span class="built_in">alias</span> default 18.19.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在当前shell中使用指定版本</span></span><br><span class="line">nvm <span class="built_in">exec</span> 20.11.0 node --version</span><br></pre></td></tr></table></figure>

<h2 id="（二）使用fnm（更快的替代方案）"><a href="#（二）使用fnm（更快的替代方案）" class="headerlink" title="（二）使用fnm（更快的替代方案）"></a>（二）使用fnm（更快的替代方案）</h2><h3 id="1-安装fnm"><a href="#1-安装fnm" class="headerlink" title="1. 安装fnm"></a>1. 安装fnm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># macOS使用Homebrew</span></span><br><span class="line">brew install fnm</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux使用curl</span></span><br><span class="line">curl -fsSL https://fnm.vercel.app/install | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加到shell配置</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;eval &quot;$(fnm env --use-on-cd)&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<h3 id="2-使用fnm管理版本"><a href="#2-使用fnm管理版本" class="headerlink" title="2. 使用fnm管理版本"></a>2. 使用fnm管理版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Node.js版本</span></span><br><span class="line">fnm install 18.19.0</span><br><span class="line">fnm install 20.11.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出已安装版本</span></span><br><span class="line">fnm list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换版本</span></span><br><span class="line">fnm use 18.19.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置默认版本</span></span><br><span class="line">fnm default 18.19.0</span><br></pre></td></tr></table></figure>

<h1 id="五、项目级版本管理"><a href="#五、项目级版本管理" class="headerlink" title="五、项目级版本管理"></a>五、项目级版本管理</h1><h2 id="（一）使用-nvmrc文件"><a href="#（一）使用-nvmrc文件" class="headerlink" title="（一）使用.nvmrc文件"></a>（一）使用.nvmrc文件</h2><h3 id="1-创建-nvmrc文件"><a href="#1-创建-nvmrc文件" class="headerlink" title="1. 创建.nvmrc文件"></a>1. 创建.nvmrc文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在项目根目录创建.nvmrc文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;18.19.0&quot;</span> &gt; .nvmrc</span><br></pre></td></tr></table></figure>

<h3 id="2-自动切换版本"><a href="#2-自动切换版本" class="headerlink" title="2. 自动切换版本"></a>2. 自动切换版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录时自动切换</span></span><br><span class="line">nvm use</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果版本未安装，先安装再使用</span></span><br><span class="line">nvm install</span><br></pre></td></tr></table></figure>

<h3 id="3-shell自动切换配置"><a href="#3-shell自动切换配置" class="headerlink" title="3. shell自动切换配置"></a>3. shell自动切换配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加到~/.bashrc或~/.zshrc</span></span><br><span class="line"><span class="function"><span class="title">cdnvm</span></span>() &#123;</span><br><span class="line">    <span class="built_in">command</span> <span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>;</span><br><span class="line">    nvm_path=$(nvm_find_up .nvmrc | <span class="built_in">tr</span> -d <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ ! <span class="variable">$nvm_path</span> = *[^[:space:]]* ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">declare</span> default_version;</span><br><span class="line">        default_version=$(nvm version default);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$default_version</span> == <span class="string">&quot;N/A&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">            nvm install node;</span><br><span class="line">            default_version=$(nvm version default);</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [[ $(nvm current) != <span class="string">&quot;<span class="variable">$default_version</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">            nvm use default;</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">elif</span> [[ -s <span class="variable">$nvm_path</span>/.nvmrc &amp;&amp; -r <span class="variable">$nvm_path</span>/.nvmrc ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">declare</span> nvm_version</span><br><span class="line">        nvm_version=$(&lt;<span class="string">&quot;<span class="variable">$nvm_path</span>&quot;</span>/.nvmrc)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">declare</span> locally_resolved_nvm_version</span><br><span class="line">        locally_resolved_nvm_version=$(nvm <span class="built_in">ls</span> --no-colors <span class="string">&quot;<span class="variable">$nvm_version</span>&quot;</span> | <span class="built_in">tail</span> -1 | <span class="built_in">tr</span> -d <span class="string">&#x27;\-&gt;*&#x27;</span> | <span class="built_in">tr</span> -d <span class="string">&#x27;[:space:]&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$locally_resolved_nvm_version</span>&quot;</span> == <span class="string">&quot;N/A&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">            nvm install <span class="string">&quot;<span class="variable">$nvm_version</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">elif</span> [[ $(nvm current) != <span class="string">&quot;<span class="variable">$locally_resolved_nvm_version</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">            nvm use <span class="string">&quot;<span class="variable">$nvm_version</span>&quot;</span>;</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cd</span>=<span class="string">&#x27;cdnvm&#x27;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）使用package-json指定版本"><a href="#（二）使用package-json指定版本" class="headerlink" title="（二）使用package.json指定版本"></a>（二）使用package.json指定版本</h2><h3 id="1-在package-json中指定引擎版本"><a href="#1-在package-json中指定引擎版本" class="headerlink" title="1. 在package.json中指定引擎版本"></a>1. 在package.json中指定引擎版本</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=18.19.0 &lt;19.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;npm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=9.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-强制版本检查"><a href="#2-强制版本检查" class="headerlink" title="2. 强制版本检查"></a>2. 强制版本检查</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;preinstall&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node -e \&quot;if(process.version.slice(1).split(&#x27;.&#x27;)[0] &lt; 18) throw new Error(&#x27;Node.js version must be &gt;= 18&#x27;)\&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="六、常见问题与解决方案"><a href="#六、常见问题与解决方案" class="headerlink" title="六、常见问题与解决方案"></a>六、常见问题与解决方案</h1><h2 id="（一）权限问题"><a href="#（一）权限问题" class="headerlink" title="（一）权限问题"></a>（一）权限问题</h2><h3 id="1-Windows权限问题"><a href="#1-Windows权限问题" class="headerlink" title="1. Windows权限问题"></a>1. Windows权限问题</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以管理员身份运行PowerShell</span></span><br><span class="line"><span class="comment"># 设置执行策略</span></span><br><span class="line"><span class="built_in">Set-ExecutionPolicy</span> <span class="literal">-ExecutionPolicy</span> RemoteSigned <span class="literal">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>

<h3 id="2-macOS-Linux权限问题"><a href="#2-macOS-Linux权限问题" class="headerlink" title="2. macOS&#x2F;Linux权限问题"></a>2. macOS&#x2F;Linux权限问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 避免使用sudo安装全局包</span></span><br><span class="line"><span class="comment"># 配置npm全局目录</span></span><br><span class="line"><span class="built_in">mkdir</span> ~/.npm-global</span><br><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&#x27;~/.npm-global&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=~/.npm-global/bin:$PATH&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="（二）版本切换失效"><a href="#（二）版本切换失效" class="headerlink" title="（二）版本切换失效"></a>（二）版本切换失效</h2><h3 id="1-检查PATH环境变量"><a href="#1-检查PATH环境变量" class="headerlink" title="1. 检查PATH环境变量"></a>1. 检查PATH环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前PATH</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保nvm路径在最前面</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$NVM_DIR</span>/versions/node/<span class="subst">$(nvm version)</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-重新加载配置"><a href="#2-重新加载配置" class="headerlink" title="2. 重新加载配置"></a>2. 重新加载配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载shell配置</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或重启终端</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）npm全局包问题"><a href="#（三）npm全局包问题" class="headerlink" title="（三）npm全局包问题"></a>（三）npm全局包问题</h2><h3 id="1-版本切换后全局包丢失"><a href="#1-版本切换后全局包丢失" class="headerlink" title="1. 版本切换后全局包丢失"></a>1. 版本切换后全局包丢失</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每个Node.js版本都有独立的全局包</span></span><br><span class="line"><span class="comment"># 切换版本后需要重新安装全局包</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前全局包</span></span><br><span class="line">npm list -g --depth=0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用全局包安装脚本</span></span><br><span class="line">npm install -g yarn pnpm nodemon pm2 typescript</span><br></pre></td></tr></table></figure>

<h3 id="2-全局包迁移"><a href="#2-全局包迁移" class="headerlink" title="2. 全局包迁移"></a>2. 全局包迁移</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从一个版本迁移全局包到另一个版本</span></span><br><span class="line">nvm reinstall-packages &lt;version&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例如：从18.19.0迁移到20.11.0</span></span><br><span class="line">nvm use 20.11.0</span><br><span class="line">nvm reinstall-packages 18.19.0</span><br></pre></td></tr></table></figure>

<h1 id="七、最佳实践"><a href="#七、最佳实践" class="headerlink" title="七、最佳实践"></a>七、最佳实践</h1><h2 id="（一）版本选择策略"><a href="#（一）版本选择策略" class="headerlink" title="（一）版本选择策略"></a>（一）版本选择策略</h2><h3 id="1-项目版本选择"><a href="#1-项目版本选择" class="headerlink" title="1. 项目版本选择"></a>1. 项目版本选择</h3><ul>
<li><strong>新项目</strong>：使用最新LTS版本</li>
<li><strong>维护项目</strong>：保持原有版本，除非有升级需求</li>
<li><strong>企业项目</strong>：统一使用团队约定的版本</li>
</ul>
<h3 id="2-版本升级策略"><a href="#2-版本升级策略" class="headerlink" title="2. 版本升级策略"></a>2. 版本升级策略</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 渐进式升级</span></span><br><span class="line">1. 在开发环境测试新版本</span><br><span class="line">2. 更新CI/CD配置</span><br><span class="line">3. 团队成员统一升级</span><br><span class="line">4. 生产环境最后升级</span><br></pre></td></tr></table></figure>

<h2 id="（二）团队协作"><a href="#（二）团队协作" class="headerlink" title="（二）团队协作"></a>（二）团队协作</h2><h3 id="1-版本文档化"><a href="#1-版本文档化" class="headerlink" title="1. 版本文档化"></a>1. 版本文档化</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 项目README.md</span></span><br><span class="line"><span class="section">## 环境要求</span></span><br><span class="line"><span class="bullet">-</span> Node.js: 18.19.0</span><br><span class="line"><span class="bullet">-</span> npm: 9.6.0</span><br><span class="line"></span><br><span class="line"><span class="section">## 快速开始</span></span><br><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code"># 安装指定Node.js版本</span></span><br><span class="line"><span class="code">nvm install 18.19.0</span></span><br><span class="line"><span class="code">nvm use 18.19.0</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"># 安装依赖</span></span><br><span class="line"><span class="code">npm install</span></span><br></pre></td></tr></table></figure>

<h3 id="2-CI-CD配置"><a href="#2-CI-CD配置" class="headerlink" title="2. CI&#x2F;CD配置"></a>2. CI&#x2F;CD配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .github/workflows/ci.yml</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI</span></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>, <span class="string">pull_request</span>]</span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">test:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">strategy:</span></span><br><span class="line">      <span class="attr">matrix:</span></span><br><span class="line">        <span class="attr">node-version:</span> [<span class="number">18.19</span><span class="number">.0</span>, <span class="number">20.11</span><span class="number">.0</span>]</span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">$&#123;&#123;</span> <span class="string">matrix.node-version</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">ci</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>

<h1 id="八、总结"><a href="#八、总结" class="headerlink" title="八、总结"></a>八、总结</h1><p>在一台电脑上安装多个Node.js版本不仅是可能的，而且是现代开发的标准做法。通过使用版本管理工具如nvm、fnm等，我们可以：</p>
<ol>
<li><strong>灵活切换</strong>：根据项目需求快速切换Node.js版本</li>
<li><strong>环境隔离</strong>：避免不同项目间的版本冲突</li>
<li><strong>团队协作</strong>：确保团队成员使用统一的开发环境</li>
<li><strong>兼容性测试</strong>：轻松测试应用在不同版本下的表现</li>
</ol>
<p>选择合适的版本管理工具，建立规范的版本管理流程，将大大提高开发效率和项目稳定性。记住，版本管理不仅仅是技术问题，更是团队协作和项目管理的重要组成部分。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://github.com/nvm-sh/nvm">nvm官方文档</a></li>
<li><a href="https://github.com/coreybutler/nvm-windows">nvm-windows官方文档</a></li>
<li><a href="https://github.com/Schniz/fnm">fnm官方文档</a></li>
<li><a href="https://nodejs.org/en/about/releases/">Node.js官方版本发布计划</a></li>
<li><a href="https://docs.npmjs.com/">npm官方文档</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[详细介绍如何在一台电脑上安装和管理多个Node.js版本，包括nvm、n、fnm等版本管理工具的使用方法，以及不同项目间Node.js版本切换的最佳实践]]>
    
    </summary>
    
      <category term="后端" scheme="https://uwakeme.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/tags/Node-js/"/>
    
      <category term="nvm" scheme="https://uwakeme.top/tags/nvm/"/>
    
      <category term="版本管理" scheme="https://uwakeme.top/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
      <category term="开发环境" scheme="https://uwakeme.top/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
      <category term="工具" scheme="https://uwakeme.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/categories/Node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【工具】NVM完全指南：Node.js版本管理工具的安装与使用详解]]></title>
    <link href="https://uwakeme.top/2025/07/25/%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91NVM%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%EF%BC%9ANode.js%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/"/>
    <id>https://uwakeme.top/2025/07/25/工具/【工具】NVM完全指南：Node.js版本管理工具的安装与使用详解/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T06:14:18.517Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代前端和后端开发中，Node.js已经成为不可或缺的运行环境。然而，不同的项目往往需要不同版本的Node.js，这就产生了版本管理的需求。NVM（Node.js Version Manager）作为最受欢迎的Node.js版本管理工具，能够帮助开发者在同一台机器上安装、管理和切换多个Node.js版本。本文将详细介绍NVM的安装、配置和使用方法。<br><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/20250725113309590.png" alt="NVM"></p>
<h1 id="一、NVM简介"><a href="#一、NVM简介" class="headerlink" title="一、NVM简介"></a>一、NVM简介</h1><h2 id="（一）什么是NVM"><a href="#（一）什么是NVM" class="headerlink" title="（一）什么是NVM"></a>（一）什么是NVM</h2><p>NVM全称为Node.js Version Management，是一个Node.js的版本管理工具。它允许开发者：</p>
<ol>
<li><strong>安装多个Node.js版本</strong>：在同一台机器上安装不同版本的Node.js</li>
<li><strong>快速切换版本</strong>：根据项目需求快速切换Node.js版本</li>
<li><strong>隔离项目环境</strong>：不同项目使用独立的Node.js环境</li>
<li><strong>解决兼容性问题</strong>：避免因Node.js版本不兼容导致的项目问题</li>
</ol>
<h2 id="（二）NVM的优势"><a href="#（二）NVM的优势" class="headerlink" title="（二）NVM的优势"></a>（二）NVM的优势</h2><h3 id="1-版本隔离"><a href="#1-版本隔离" class="headerlink" title="1. 版本隔离"></a>1. 版本隔离</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 项目A使用Node.js 14.x</span></span><br><span class="line"><span class="built_in">cd</span> project-a</span><br><span class="line">nvm use 14.21.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 项目B使用Node.js 18.x</span></span><br><span class="line"><span class="built_in">cd</span> project-b</span><br><span class="line">nvm use 18.19.0</span><br></pre></td></tr></table></figure>

<h3 id="2-简化管理"><a href="#2-简化管理" class="headerlink" title="2. 简化管理"></a>2. 简化管理</h3><ul>
<li>一条命令安装Node.js版本</li>
<li>一条命令切换版本</li>
<li>自动管理npm版本</li>
</ul>
<h3 id="3-团队协作"><a href="#3-团队协作" class="headerlink" title="3. 团队协作"></a>3. 团队协作</h3><ul>
<li>确保团队成员使用相同的Node.js版本</li>
<li>通过.nvmrc文件统一项目环境</li>
</ul>
<h2 id="（三）NVM-vs-其他工具"><a href="#（三）NVM-vs-其他工具" class="headerlink" title="（三）NVM vs 其他工具"></a>（三）NVM vs 其他工具</h2><table>
<thead>
<tr>
<th>工具</th>
<th>平台支持</th>
<th>特点</th>
<th>适用场景</th>
</tr>
</thead>
<tbody><tr>
<td>nvm</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>功能全面，社区活跃</td>
<td>通用版本管理</td>
</tr>
<tr>
<td>n</td>
<td>macOS&#x2F;Linux</td>
<td>轻量级，简单易用</td>
<td>简单版本切换</td>
</tr>
<tr>
<td>fnm</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>速度快，Rust编写</td>
<td>追求性能</td>
</tr>
<tr>
<td>volta</td>
<td>Windows&#x2F;macOS&#x2F;Linux</td>
<td>项目级管理</td>
<td>企业级项目</td>
</tr>
</tbody></table>
<h1 id="二、Windows系统安装NVM"><a href="#二、Windows系统安装NVM" class="headerlink" title="二、Windows系统安装NVM"></a>二、Windows系统安装NVM</h1><h2 id="（一）准备工作"><a href="#（一）准备工作" class="headerlink" title="（一）准备工作"></a>（一）准备工作</h2><h3 id="1-卸载现有Node-js"><a href="#1-卸载现有Node-js" class="headerlink" title="1. 卸载现有Node.js"></a>1. 卸载现有Node.js</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 通过控制面板卸载Node.js</span></span><br><span class="line"><span class="comment"># 2. 删除残留文件夹</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span> <span class="string">&quot;C:\Program Files\nodejs&quot;</span></span><br><span class="line"><span class="built_in">Remove-Item</span> <span class="literal">-Recurse</span> <span class="literal">-Force</span> <span class="string">&quot;C:\Users\&#123;用户名&#125;\AppData\Roaming\npm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 清理环境变量中的Node.js路径</span></span><br></pre></td></tr></table></figure>

<h3 id="2-下载NVM-for-Windows"><a href="#2-下载NVM-for-Windows" class="headerlink" title="2. 下载NVM for Windows"></a>2. 下载NVM for Windows</h3><ul>
<li><p>NVM 官网下载地址<br><a href="https://nvm.uihtm.com/">https://nvm.uihtm.com/</a></p>
</li>
<li><p>官方GitHub地址<br><a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p>
</li>
<li><p>当前最新版本：v1.2.2（更新日期：2025-01-01）</p>
</li>
<li><p>下载文件：nvm-setup.zip</p>
</li>
<li><p>注意，nvm 1.2.2版本，安装node低于14的版本有无法安装的问题<br><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/nvm14bug.png" alt="问题截图"></p>
</li>
</ul>
<h2 id="（二）安装步骤"><a href="#（二）安装步骤" class="headerlink" title="（二）安装步骤"></a>（二）安装步骤</h2><h3 id="1-运行安装程序"><a href="#1-运行安装程序" class="headerlink" title="1. 运行安装程序"></a>1. 运行安装程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压下载的nvm-setup.zip</span></span><br><span class="line"><span class="comment"># 运行nvm-setup.exe</span></span><br></pre></td></tr></table></figure>

<h3 id="2-选择安装路径"><a href="#2-选择安装路径" class="headerlink" title="2. 选择安装路径"></a>2. 选择安装路径</h3><ul>
<li><strong>NVM安装路径</strong>：建议使用默认路径或选择较短路径（如C:\nvm）</li>
<li><strong>Node.js路径</strong>：选择Node.js的符号链接路径（如C:\nodejs）</li>
</ul>
<h3 id="3-完成安装"><a href="#3-完成安装" class="headerlink" title="3. 完成安装"></a>3. 完成安装</h3><p>安装完成后，打开新的命令提示符或PowerShell窗口，输入以下命令验证：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm version</span><br><span class="line"><span class="comment"># 应该显示：1.2.2</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）配置国内镜像"><a href="#（三）配置国内镜像" class="headerlink" title="（三）配置国内镜像"></a>（三）配置国内镜像</h2><p>为了提高下载速度，建议配置国内镜像源：</p>
<h3 id="1-方法一：命令行配置"><a href="#1-方法一：命令行配置" class="headerlink" title="1. 方法一：命令行配置"></a>1. 方法一：命令行配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 阿里云镜像</span></span><br><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 腾讯云镜像</span></span><br><span class="line">nvm node_mirror http://mirrors.cloud.tencent.com/nodejs-release/</span><br><span class="line">nvm npm_mirror http://mirrors.cloud.tencent.com/npm/</span><br></pre></td></tr></table></figure>

<h3 id="2-方法二：修改配置文件"><a href="#2-方法二：修改配置文件" class="headerlink" title="2. 方法二：修改配置文件"></a>2. 方法二：修改配置文件</h3><p>编辑NVM安装目录下的<code>settings.txt</code>文件：</p>
<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root: C:\nvm</span><br><span class="line">path: C:\nodejs</span><br><span class="line">node_mirror: https://npmmirror.com/mirrors/node/</span><br><span class="line">npm_mirror: https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure>

<h1 id="三、macOS系统安装NVM"><a href="#三、macOS系统安装NVM" class="headerlink" title="三、macOS系统安装NVM"></a>三、macOS系统安装NVM</h1><h2 id="（一）安装前准备"><a href="#（一）安装前准备" class="headerlink" title="（一）安装前准备"></a>（一）安装前准备</h2><h3 id="1-确保已安装Git"><a href="#1-确保已安装Git" class="headerlink" title="1. 确保已安装Git"></a>1. 确保已安装Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查Git是否已安装</span></span><br><span class="line">git --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果未安装，通过Xcode Command Line Tools安装</span></span><br><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure>

<h3 id="2-检查Shell配置文件"><a href="#2-检查Shell配置文件" class="headerlink" title="2. 检查Shell配置文件"></a>2. 检查Shell配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入用户主目录</span></span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看现有配置文件</span></span><br><span class="line"><span class="built_in">ls</span> -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有.bash_profile，创建一个</span></span><br><span class="line"><span class="built_in">touch</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>

<h2 id="（二）安装NVM"><a href="#（二）安装NVM" class="headerlink" title="（二）安装NVM"></a>（二）安装NVM</h2><h3 id="1-使用curl安装"><a href="#1-使用curl安装" class="headerlink" title="1. 使用curl安装"></a>1. 使用curl安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="2-使用wget安装"><a href="#2-使用wget安装" class="headerlink" title="2. 使用wget安装"></a>2. 使用wget安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="3-重新加载配置"><a href="#3-重新加载配置" class="headerlink" title="3. 重新加载配置"></a>3. 重新加载配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载.bash_profile</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者重启终端</span></span><br></pre></td></tr></table></figure>

<h3 id="4-验证安装"><a href="#4-验证安装" class="headerlink" title="4. 验证安装"></a>4. 验证安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br><span class="line"><span class="comment"># 应该显示版本号，如：0.39.3</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）注意事项"><a href="#（三）注意事项" class="headerlink" title="（三）注意事项"></a>（三）注意事项</h2><h3 id="1-不要使用Homebrew安装"><a href="#1-不要使用Homebrew安装" class="headerlink" title="1. 不要使用Homebrew安装"></a>1. 不要使用Homebrew安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ❌ 错误做法</span></span><br><span class="line">brew install nvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># ✅ 正确做法：使用官方安装脚本</span></span><br></pre></td></tr></table></figure>

<h3 id="2-环境变量自动配置"><a href="#2-环境变量自动配置" class="headerlink" title="2. 环境变量自动配置"></a>2. 环境变量自动配置</h3><p>安装脚本会自动在<code>.bash_profile</code>中添加以下内容：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure>

<h1 id="四、Linux系统安装NVM"><a href="#四、Linux系统安装NVM" class="headerlink" title="四、Linux系统安装NVM"></a>四、Linux系统安装NVM</h1><h2 id="（一）下载安装"><a href="#（一）下载安装" class="headerlink" title="（一）下载安装"></a>（一）下载安装</h2><h3 id="1-下载压缩包"><a href="#1-下载压缩包" class="headerlink" title="1. 下载压缩包"></a>1. 下载压缩包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line">wget https://github.com/nvm-sh/nvm/archive/refs/tags/v0.39.1.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="2-解压安装"><a href="#2-解压安装" class="headerlink" title="2. 解压安装"></a>2. 解压安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建nvm目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.nvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压到nvm目录</span></span><br><span class="line">tar -zxvf nvm-0.39.1.tar.gz -C ~/.nvm</span><br></pre></td></tr></table></figure>

<h3 id="3-配置环境变量"><a href="#3-配置环境变量" class="headerlink" title="3. 配置环境变量"></a>3. 配置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑bashrc文件</span></span><br><span class="line">vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文件末尾添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> NVM_DIR=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm/nvm-0.39.1&quot;</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/nvm.sh&quot;</span>  <span class="comment"># This loads nvm</span></span><br><span class="line">[ -s <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span> ] &amp;&amp; \. <span class="string">&quot;<span class="variable">$NVM_DIR</span>/bash_completion&quot;</span>  <span class="comment"># This loads nvm bash_completion</span></span><br></pre></td></tr></table></figure>

<h3 id="4-使配置生效"><a href="#4-使配置生效" class="headerlink" title="4. 使配置生效"></a>4. 使配置生效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<h2 id="（二）验证安装"><a href="#（二）验证安装" class="headerlink" title="（二）验证安装"></a>（二）验证安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br><span class="line"><span class="comment"># 显示版本号表示安装成功</span></span><br></pre></td></tr></table></figure>

<h1 id="五、NVM常用命令详解"><a href="#五、NVM常用命令详解" class="headerlink" title="五、NVM常用命令详解"></a>五、NVM常用命令详解</h1><h2 id="（一）基础命令"><a href="#（一）基础命令" class="headerlink" title="（一）基础命令"></a>（一）基础命令</h2><h3 id="1-查看版本和帮助"><a href="#1-查看版本和帮助" class="headerlink" title="1. 查看版本和帮助"></a>1. 查看版本和帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm version          <span class="comment"># 显示nvm版本</span></span><br><span class="line">nvm --<span class="built_in">help</span>          <span class="comment"># 显示帮助信息</span></span><br></pre></td></tr></table></figure>

<h3 id="2-架构相关"><a href="#2-架构相关" class="headerlink" title="2. 架构相关"></a>2. 架构相关</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">arch</span>            <span class="comment"># 显示当前系统架构（32位或64位）</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）Node-js安装管理"><a href="#（二）Node-js安装管理" class="headerlink" title="（二）Node.js安装管理"></a>（二）Node.js安装管理</h2><h3 id="1-查看可用版本"><a href="#1-查看可用版本" class="headerlink" title="1. 查看可用版本"></a>1. 查看可用版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm list available  <span class="comment"># 显示可安装的Node.js版本列表</span></span><br><span class="line">nvm ls-remote       <span class="comment"># (macOS/Linux) 显示远程可用版本</span></span><br></pre></td></tr></table></figure>

<h3 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2. 安装Node.js"></a>2. 安装Node.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm install latest          <span class="comment"># 安装最新版本</span></span><br><span class="line">nvm install 18.19.0         <span class="comment"># 安装指定版本</span></span><br><span class="line">nvm install 18.19.0 32      <span class="comment"># 安装32位版本（Windows）</span></span><br><span class="line">nvm install --lts           <span class="comment"># 安装最新LTS版本</span></span><br></pre></td></tr></table></figure>

<h3 id="3-查看已安装版本"><a href="#3-查看已安装版本" class="headerlink" title="3. 查看已安装版本"></a>3. 查看已安装版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm list            <span class="comment"># 显示已安装的版本</span></span><br><span class="line">nvm <span class="built_in">ls</span>              <span class="comment"># 简写形式</span></span><br></pre></td></tr></table></figure>

<h3 id="4-使用和切换版本"><a href="#4-使用和切换版本" class="headerlink" title="4. 使用和切换版本"></a>4. 使用和切换版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvm use 18.19.0     <span class="comment"># 切换到指定版本</span></span><br><span class="line">nvm use latest      <span class="comment"># 切换到最新版本</span></span><br><span class="line">nvm use --lts       <span class="comment"># 切换到最新LTS版本</span></span><br></pre></td></tr></table></figure>

<h3 id="5-卸载版本"><a href="#5-卸载版本" class="headerlink" title="5. 卸载版本"></a>5. 卸载版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm uninstall 16.20.0  <span class="comment"># 卸载指定版本</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）配置管理"><a href="#（三）配置管理" class="headerlink" title="（三）配置管理"></a>（三）配置管理</h2><h3 id="1-设置默认版本"><a href="#1-设置默认版本" class="headerlink" title="1. 设置默认版本"></a>1. 设置默认版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default 18.19.0    <span class="comment"># 设置默认版本</span></span><br><span class="line">nvm <span class="built_in">alias</span> default node       <span class="comment"># 设置最新版本为默认</span></span><br></pre></td></tr></table></figure>

<h3 id="2-镜像配置"><a href="#2-镜像配置" class="headerlink" title="2. 镜像配置"></a>2. 镜像配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br><span class="line">nvm npm_mirror https://npmmirror.com/mirrors/npm/</span><br></pre></td></tr></table></figure>

<h3 id="3-代理设置"><a href="#3-代理设置" class="headerlink" title="3. 代理设置"></a>3. 代理设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm proxy http://proxy.company.com:8080  <span class="comment"># 设置代理</span></span><br><span class="line">nvm proxy none                           <span class="comment"># 移除代理</span></span><br></pre></td></tr></table></figure>

<h2 id="（四）高级功能"><a href="#（四）高级功能" class="headerlink" title="（四）高级功能"></a>（四）高级功能</h2><h3 id="1-目录管理"><a href="#1-目录管理" class="headerlink" title="1. 目录管理"></a>1. 目录管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm root                    <span class="comment"># 显示nvm根目录</span></span><br><span class="line">nvm root C:\new-nvm-path   <span class="comment"># 设置新的根目录</span></span><br></pre></td></tr></table></figure>

<h3 id="2-开关控制"><a href="#2-开关控制" class="headerlink" title="2. 开关控制"></a>2. 开关控制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm on              <span class="comment"># 启用nvm</span></span><br><span class="line">nvm off             <span class="comment"># 禁用nvm</span></span><br></pre></td></tr></table></figure>

<h1 id="六、实际使用场景"><a href="#六、实际使用场景" class="headerlink" title="六、实际使用场景"></a>六、实际使用场景</h1><h2 id="（一）项目级版本管理"><a href="#（一）项目级版本管理" class="headerlink" title="（一）项目级版本管理"></a>（一）项目级版本管理</h2><h3 id="1-创建-nvmrc文件"><a href="#1-创建-nvmrc文件" class="headerlink" title="1. 创建.nvmrc文件"></a>1. 创建.nvmrc文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在项目根目录创建.nvmrc文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;18.19.0&quot;</span> &gt; .nvmrc</span><br></pre></td></tr></table></figure>

<h3 id="2-自动切换版本"><a href="#2-自动切换版本" class="headerlink" title="2. 自动切换版本"></a>2. 自动切换版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入项目目录时自动切换</span></span><br><span class="line">nvm use</span><br><span class="line"><span class="comment"># 如果版本未安装，先安装</span></span><br><span class="line">nvm install</span><br></pre></td></tr></table></figure>

<h2 id="（二）多项目环境切换"><a href="#（二）多项目环境切换" class="headerlink" title="（二）多项目环境切换"></a>（二）多项目环境切换</h2><h3 id="1-前端项目（需要Node-js-18）"><a href="#1-前端项目（需要Node-js-18）" class="headerlink" title="1. 前端项目（需要Node.js 18）"></a>1. 前端项目（需要Node.js 18）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frontend-project</span><br><span class="line">nvm use 18.19.0</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<h3 id="2-后端项目（需要Node-js-16）"><a href="#2-后端项目（需要Node-js-16）" class="headerlink" title="2. 后端项目（需要Node.js 16）"></a>2. 后端项目（需要Node.js 16）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> backend-project</span><br><span class="line">nvm use 16.20.0</span><br><span class="line">npm install</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure>

<h2 id="（三）团队协作"><a href="#（三）团队协作" class="headerlink" title="（三）团队协作"></a>（三）团队协作</h2><h3 id="1-统一开发环境"><a href="#1-统一开发环境" class="headerlink" title="1. 统一开发环境"></a>1. 统一开发环境</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=18.19.0 &lt;19.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;npm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=9.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-CI-CD配置"><a href="#2-CI-CD配置" class="headerlink" title="2. CI&#x2F;CD配置"></a>2. CI&#x2F;CD配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .github/workflows/ci.yml</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">node-version-file:</span> <span class="string">&#x27;.nvmrc&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="七、常见问题与解决方案"><a href="#七、常见问题与解决方案" class="headerlink" title="七、常见问题与解决方案"></a>七、常见问题与解决方案</h1><h2 id="（一）安装问题"><a href="#（一）安装问题" class="headerlink" title="（一）安装问题"></a>（一）安装问题</h2><h3 id="1-权限错误"><a href="#1-权限错误" class="headerlink" title="1. 权限错误"></a>1. 权限错误</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Windows: 以管理员身份运行</span></span><br><span class="line"><span class="comment"># macOS/Linux: 检查文件权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure>

<h3 id="2-网络问题"><a href="#2-网络问题" class="headerlink" title="2. 网络问题"></a>2. 网络问题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置代理或使用镜像源</span></span><br><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br></pre></td></tr></table></figure>

<h2 id="（二）使用问题"><a href="#（二）使用问题" class="headerlink" title="（二）使用问题"></a>（二）使用问题</h2><h3 id="1-命令未找到"><a href="#1-命令未找到" class="headerlink" title="1. 命令未找到"></a>1. 命令未找到</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新加载配置文件</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>

<h3 id="2-版本切换失效"><a href="#2-版本切换失效" class="headerlink" title="2. 版本切换失效"></a>2. 版本切换失效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查环境变量</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line"><span class="comment"># 确保nvm路径在最前面</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）性能优化"><a href="#（三）性能优化" class="headerlink" title="（三）性能优化"></a>（三）性能优化</h2><h3 id="1-清理缓存"><a href="#1-清理缓存" class="headerlink" title="1. 清理缓存"></a>1. 清理缓存</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 清理npm缓存</span></span><br><span class="line">npm cache clean --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理nvm缓存（删除临时文件）</span></span><br></pre></td></tr></table></figure>

<h3 id="2-使用本地镜像"><a href="#2-使用本地镜像" class="headerlink" title="2. 使用本地镜像"></a>2. 使用本地镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置更快的镜像源</span></span><br><span class="line">nvm node_mirror https://npmmirror.com/mirrors/node/</span><br></pre></td></tr></table></figure>

<h1 id="八、最佳实践"><a href="#八、最佳实践" class="headerlink" title="八、最佳实践"></a>八、最佳实践</h1><h2 id="（一）版本选择策略"><a href="#（一）版本选择策略" class="headerlink" title="（一）版本选择策略"></a>（一）版本选择策略</h2><h3 id="1-项目版本规划"><a href="#1-项目版本规划" class="headerlink" title="1. 项目版本规划"></a>1. 项目版本规划</h3><ul>
<li><strong>新项目</strong>：使用最新LTS版本</li>
<li><strong>维护项目</strong>：保持现有版本，谨慎升级</li>
<li><strong>实验项目</strong>：可以尝试最新版本</li>
</ul>
<h3 id="2-版本命名规范"><a href="#2-版本命名规范" class="headerlink" title="2. 版本命名规范"></a>2. 版本命名规范</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用语义化版本号</span></span><br><span class="line">nvm install 18.19.0  <span class="comment"># 明确的版本号</span></span><br><span class="line">nvm <span class="built_in">alias</span> stable 18.19.0  <span class="comment"># 为稳定版本创建别名</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）团队协作规范"><a href="#（二）团队协作规范" class="headerlink" title="（二）团队协作规范"></a>（二）团队协作规范</h2><h3 id="1-文档化要求"><a href="#1-文档化要求" class="headerlink" title="1. 文档化要求"></a>1. 文档化要求</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 环境要求</span></span><br><span class="line"><span class="bullet">-</span> Node.js: 18.19.0 (使用nvm管理)</span><br><span class="line"><span class="bullet">-</span> npm: 9.6.0</span><br><span class="line"></span><br><span class="line"><span class="section">## 快速开始</span></span><br><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code">nvm install 18.19.0</span></span><br><span class="line"><span class="code">nvm use 18.19.0</span></span><br><span class="line"><span class="code">npm install</span></span><br></pre></td></tr></table></figure>

<h3 id="2-自动化脚本"><a href="#2-自动化脚本" class="headerlink" title="2. 自动化脚本"></a>2. 自动化脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># setup.sh</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;.nvmrc&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  nvm use</span><br><span class="line">  <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">    nvm install</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h2 id="（三）维护建议"><a href="#（三）维护建议" class="headerlink" title="（三）维护建议"></a>（三）维护建议</h2><h3 id="1-定期清理"><a href="#1-定期清理" class="headerlink" title="1. 定期清理"></a>1. 定期清理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看已安装版本</span></span><br><span class="line">nvm list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载不再使用的版本</span></span><br><span class="line">nvm uninstall 14.21.3</span><br></pre></td></tr></table></figure>

<h3 id="2-备份配置"><a href="#2-备份配置" class="headerlink" title="2. 备份配置"></a>2. 备份配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份nvm配置</span></span><br><span class="line"><span class="built_in">cp</span> ~/.nvm/alias/default ~/.nvm/alias/default.backup</span><br></pre></td></tr></table></figure>

<h1 id="九、总结"><a href="#九、总结" class="headerlink" title="九、总结"></a>九、总结</h1><p>NVM作为Node.js版本管理的标准工具，为开发者提供了强大而灵活的版本管理能力。通过本文的详细介绍，您应该能够：</p>
<h2 id="（一）掌握的技能"><a href="#（一）掌握的技能" class="headerlink" title="（一）掌握的技能"></a>（一）掌握的技能</h2><ol>
<li><strong>安装配置</strong>：在不同操作系统上正确安装和配置NVM</li>
<li><strong>版本管理</strong>：熟练使用NVM命令管理Node.js版本</li>
<li><strong>项目应用</strong>：在实际项目中应用版本管理策略</li>
<li><strong>问题解决</strong>：处理常见的安装和使用问题</li>
</ol>
<h2 id="（二）关键要点"><a href="#（二）关键要点" class="headerlink" title="（二）关键要点"></a>（二）关键要点</h2><ol>
<li><strong>选择合适版本</strong>：根据项目需求选择合适的NVM版本</li>
<li><strong>配置镜像源</strong>：使用国内镜像提高下载速度</li>
<li><strong>团队协作</strong>：建立统一的版本管理规范</li>
<li><strong>持续维护</strong>：定期清理和更新版本</li>
</ol>
<h2 id="（三）发展趋势"><a href="#（三）发展趋势" class="headerlink" title="（三）发展趋势"></a>（三）发展趋势</h2><p>随着Node.js生态的不断发展，版本管理工具也在持续演进。NVM作为最成熟的解决方案，将继续在开发者工具链中发挥重要作用。掌握NVM的使用，不仅能提高开发效率，更是现代Node.js开发的必备技能。</p>
<p>记住，好的工具配合正确的使用方法，才能发挥最大的价值。希望本文能帮助您更好地使用NVM，提升您的开发体验！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://github.com/nvm-sh/nvm">NVM官方文档</a></li>
<li><a href="https://github.com/coreybutler/nvm-windows">NVM for Windows</a></li>
<li><a href="https://nodejs.org/">Node.js官方网站</a></li>
<li><a href="https://nvm.uihtm.com/">NVM中文文档</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[全面详解NVM（Node.js Version Manager）的安装、配置和使用方法，涵盖Windows、macOS、Linux三大平台的完整操作指南，帮助开发者轻松管理多个Node.js版本]]>
    
    </summary>
    
      <category term="开发工具" scheme="https://uwakeme.top/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
      <category term="后端" scheme="https://uwakeme.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/tags/Node-js/"/>
    
      <category term="nvm" scheme="https://uwakeme.top/tags/nvm/"/>
    
      <category term="版本管理" scheme="https://uwakeme.top/tags/%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/"/>
    
      <category term="环境配置" scheme="https://uwakeme.top/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
      <category term="工具" scheme="https://uwakeme.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【后端】函数自动执行模式详解：Java Spring与Node.js实现指南]]></title>
    <link href="https://uwakeme.top/2025/07/25/%E5%90%8E%E7%AB%AF/%E3%80%90%E5%90%8E%E7%AB%AF%E3%80%91%E5%87%BD%E6%95%B0%E8%87%AA%E5%8A%A8%E6%89%A7%E8%A1%8C%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3%EF%BC%9AJava%20Spring%E4%B8%8ENode.js%E5%AE%9E%E7%8E%B0%E6%8C%87%E5%8D%97/"/>
    <id>https://uwakeme.top/2025/07/25/后端/【后端】函数自动执行模式详解：Java Spring与Node.js实现指南/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T07:34:36.556Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代后端开发中，经常需要在某个函数执行时自动触发其他相关函数，比如日志记录、缓存更新、消息通知等。这种需求在Java Spring和Node.js开发中都很常见。本文将详细介绍在这两个技术栈中实现函数自动执行的多种模式和最佳实践。</p>
<h1 id="一、Java-Spring实现方案"><a href="#一、Java-Spring实现方案" class="headerlink" title="一、Java Spring实现方案"></a>一、Java Spring实现方案</h1><h2 id="（一）AOP切面编程（推荐）"><a href="#（一）AOP切面编程（推荐）" class="headerlink" title="（一）AOP切面编程（推荐）"></a>（一）AOP切面编程（推荐）</h2><h3 id="1-基础AOP实现"><a href="#1-基础AOP实现" class="headerlink" title="1. 基础AOP实现"></a>1. 基础AOP实现</h3><h4 id="第一步：添加依赖"><a href="#第一步：添加依赖" class="headerlink" title="第一步：添加依赖"></a>第一步：添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pom.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="第二步：启用AOP"><a href="#第二步：启用AOP" class="headerlink" title="第二步：启用AOP"></a>第二步：启用AOP</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第三步：创建自定义注解"><a href="#第三步：创建自定义注解" class="headerlink" title="第三步：创建自定义注解"></a>第三步：创建自定义注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> AutoExecute &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动执行的类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否异步执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">async</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行顺序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">order</span><span class="params">()</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="第四步：实现切面类"><a href="#第四步：实现切面类" class="headerlink" title="第四步：实现切面类"></a>第四步：实现切面类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoExecuteAspect</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationEventPublisher eventPublisher;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TaskExecutor taskExecutor;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法执行前自动执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Before(&quot;@annotation(autoExecute)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeExecute</span><span class="params">(JoinPoint joinPoint, AutoExecute autoExecute)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;方法执行前：&#123;&#125;, 参数：&#123;&#125;&quot;</span>, methodName, Arrays.toString(args));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行前置逻辑</span></span><br><span class="line">        executeAutoFunctions(<span class="string">&quot;before&quot;</span>, methodName, args, autoExecute);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法执行后自动执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterReturning(value = &quot;@annotation(autoExecute)&quot;, returning = &quot;result&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterExecute</span><span class="params">(JoinPoint joinPoint, Object result, AutoExecute autoExecute)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;方法执行后：&#123;&#125;, 结果：&#123;&#125;&quot;</span>, methodName, result);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行后置逻辑</span></span><br><span class="line">        executeAutoFunctions(<span class="string">&quot;after&quot;</span>, methodName, result, autoExecute);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法执行异常时自动执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AfterThrowing(value = &quot;@annotation(autoExecute)&quot;, throwing = &quot;exception&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowing</span><span class="params">(JoinPoint joinPoint, Exception exception, AutoExecute autoExecute)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        </span><br><span class="line">        log.error(<span class="string">&quot;方法执行异常：&#123;&#125;, 异常：&#123;&#125;&quot;</span>, methodName, exception.getMessage());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行异常处理逻辑</span></span><br><span class="line">        executeAutoFunctions(<span class="string">&quot;error&quot;</span>, methodName, exception, autoExecute);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 环绕通知 - 完全控制方法执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(autoExecute)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">aroundExecute</span><span class="params">(ProceedingJoinPoint joinPoint, AutoExecute autoExecute)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> joinPoint.getSignature().getName();</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 执行前置逻辑</span></span><br><span class="line">            executeAutoFunctions(<span class="string">&quot;before&quot;</span>, methodName, joinPoint.getArgs(), autoExecute);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行原方法</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> joinPoint.proceed();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行后置逻辑</span></span><br><span class="line">            executeAutoFunctions(<span class="string">&quot;after&quot;</span>, methodName, result, autoExecute);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// 执行异常逻辑</span></span><br><span class="line">            executeAutoFunctions(<span class="string">&quot;error&quot;</span>, methodName, e, autoExecute);</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 执行清理逻辑</span></span><br><span class="line">            <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            log.info(<span class="string">&quot;方法执行耗时：&#123;&#125;ms&quot;</span>, endTime - startTime);</span><br><span class="line">            executeAutoFunctions(<span class="string">&quot;finally&quot;</span>, methodName, endTime - startTime, autoExecute);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行自动函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">executeAutoFunctions</span><span class="params">(String phase, String methodName, Object data, AutoExecute autoExecute)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (String type : autoExecute.value()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (autoExecute.async()) &#123;</span><br><span class="line">                <span class="comment">// 异步执行</span></span><br><span class="line">                taskExecutor.execute(() -&gt; &#123;</span><br><span class="line">                    executeByType(phase, type, methodName, data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 同步执行</span></span><br><span class="line">                executeByType(phase, type, methodName, data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据类型执行对应的自动函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">executeByType</span><span class="params">(String phase, String type, String methodName, Object data)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;log&quot;</span>:</span><br><span class="line">                logFunction(phase, methodName, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;cache&quot;</span>:</span><br><span class="line">                cacheFunction(phase, methodName, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;notification&quot;</span>:</span><br><span class="line">                notificationFunction(phase, methodName, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;audit&quot;</span>:</span><br><span class="line">                auditFunction(phase, methodName, data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                log.warn(<span class="string">&quot;未知的自动执行类型：&#123;&#125;&quot;</span>, type);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">logFunction</span><span class="params">(String phase, String methodName, Object data)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;自动日志记录 - 阶段：&#123;&#125;, 方法：&#123;&#125;, 数据：&#123;&#125;&quot;</span>, phase, methodName, data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">cacheFunction</span><span class="params">(String phase, String methodName, Object data)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;自动缓存操作 - 阶段：&#123;&#125;, 方法：&#123;&#125;, 数据：&#123;&#125;&quot;</span>, phase, methodName, data);</span><br><span class="line">        <span class="comment">// 实际的缓存操作逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">notificationFunction</span><span class="params">(String phase, String methodName, Object data)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;自动通知发送 - 阶段：&#123;&#125;, 方法：&#123;&#125;, 数据：&#123;&#125;&quot;</span>, phase, methodName, data);</span><br><span class="line">        <span class="comment">// 发送通知的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">auditFunction</span><span class="params">(String phase, String methodName, Object data)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;自动审计记录 - 阶段：&#123;&#125;, 方法：&#123;&#125;, 数据：&#123;&#125;&quot;</span>, phase, methodName, data);</span><br><span class="line">        <span class="comment">// 审计日志记录逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-业务服务使用示例"><a href="#2-业务服务使用示例" class="headerlink" title="2. 业务服务使用示例"></a>2. 业务服务使用示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderRepository orderRepository;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建订单 - 自动执行日志、缓存、通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AutoExecute(value = &#123;&quot;log&quot;, &quot;cache&quot;, &quot;notification&quot;&#125;, async = true)</span></span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">createOrder</span><span class="params">(CreateOrderRequest request)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;开始创建订单：&#123;&#125;&quot;</span>, request);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 业务逻辑</span></span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        order.setUserId(request.getUserId());</span><br><span class="line">        order.setProductId(request.getProductId());</span><br><span class="line">        order.setQuantity(request.getQuantity());</span><br><span class="line">        order.setStatus(OrderStatus.PENDING);</span><br><span class="line">        order.setCreateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 保存订单</span></span><br><span class="line">        <span class="type">Order</span> <span class="variable">savedOrder</span> <span class="operator">=</span> orderRepository.save(order);</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;订单创建成功：&#123;&#125;&quot;</span>, savedOrder.getId());</span><br><span class="line">        <span class="keyword">return</span> savedOrder;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新订单状态 - 自动执行审计和通知</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AutoExecute(value = &#123;&quot;audit&quot;, &quot;notification&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">updateOrderStatus</span><span class="params">(Long orderId, OrderStatus newStatus)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(orderId)</span><br><span class="line">            .orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">OrderNotFoundException</span>(<span class="string">&quot;订单不存在：&quot;</span> + orderId));</span><br><span class="line">        </span><br><span class="line">        <span class="type">OrderStatus</span> <span class="variable">oldStatus</span> <span class="operator">=</span> order.getStatus();</span><br><span class="line">        order.setStatus(newStatus);</span><br><span class="line">        order.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="type">Order</span> <span class="variable">updatedOrder</span> <span class="operator">=</span> orderRepository.save(order);</span><br><span class="line">        </span><br><span class="line">        log.info(<span class="string">&quot;订单状态更新：&#123;&#125; &#123;&#125; -&gt; &#123;&#125;&quot;</span>, orderId, oldStatus, newStatus);</span><br><span class="line">        <span class="keyword">return</span> updatedOrder;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除订单 - 自动执行缓存清理和审计</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@AutoExecute(value = &#123;&quot;cache&quot;, &quot;audit&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deleteOrder</span><span class="params">(Long orderId)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(orderId)</span><br><span class="line">            .orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">OrderNotFoundException</span>(<span class="string">&quot;订单不存在：&quot;</span> + orderId));</span><br><span class="line">        </span><br><span class="line">        orderRepository.delete(order);</span><br><span class="line">        log.info(<span class="string">&quot;订单删除成功：&#123;&#125;&quot;</span>, orderId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）Spring事件机制"><a href="#（二）Spring事件机制" class="headerlink" title="（二）Spring事件机制"></a>（二）Spring事件机制</h2><h3 id="1-自定义事件类"><a href="#1-自定义事件类" class="headerlink" title="1. 自定义事件类"></a>1. 自定义事件类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基础业务事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BusinessEvent</span> <span class="keyword">extends</span> <span class="title class_">ApplicationEvent</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String eventType;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> LocalDateTime timestamp;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">BusinessEvent</span><span class="params">(Object source, String eventType, Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(source);</span><br><span class="line">        <span class="built_in">this</span>.eventType = eventType;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="built_in">this</span>.timestamp = LocalDateTime.now();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getters...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderEvent</span> <span class="keyword">extends</span> <span class="title class_">BusinessEvent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">OrderEvent</span><span class="params">(Object source, String eventType, Order order)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(source, eventType, order);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Order) getData();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserEvent</span> <span class="keyword">extends</span> <span class="title class_">BusinessEvent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserEvent</span><span class="params">(Object source, String eventType, User user)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(source, eventType, user);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (User) getData();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-事件监听器"><a href="#2-事件监听器" class="headerlink" title="2. 事件监听器"></a>2. 事件监听器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BusinessEventListener</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> NotificationService notificationService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CacheService cacheService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuditService auditService;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听订单创建事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleOrderCreated</span><span class="params">(OrderEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;ORDER_CREATED&quot;</span>.equals(event.getEventType())) &#123;</span><br><span class="line">            <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> event.getOrder();</span><br><span class="line">            log.info(<span class="string">&quot;处理订单创建事件：&#123;&#125;&quot;</span>, order.getId());</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 自动执行相关操作</span></span><br><span class="line">            notificationService.sendOrderCreatedNotification(order);</span><br><span class="line">            cacheService.updateOrderCache(order);</span><br><span class="line">            auditService.recordOrderCreation(order);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听订单状态更新事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleOrderStatusUpdated</span><span class="params">(OrderEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;ORDER_STATUS_UPDATED&quot;</span>.equals(event.getEventType())) &#123;</span><br><span class="line">            <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> event.getOrder();</span><br><span class="line">            log.info(<span class="string">&quot;处理订单状态更新事件：&#123;&#125;&quot;</span>, order.getId());</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 根据不同状态执行不同操作</span></span><br><span class="line">            <span class="keyword">switch</span> (order.getStatus()) &#123;</span><br><span class="line">                <span class="keyword">case</span> PAID:</span><br><span class="line">                    notificationService.sendPaymentConfirmation(order);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> SHIPPED:</span><br><span class="line">                    notificationService.sendShippingNotification(order);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> COMPLETED:</span><br><span class="line">                    notificationService.sendOrderCompletedNotification(order);</span><br><span class="line">                    auditService.recordOrderCompletion(order);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听用户注册事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleUserRegistered</span><span class="params">(UserEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;USER_REGISTERED&quot;</span>.equals(event.getEventType())) &#123;</span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> event.getUser();</span><br><span class="line">            log.info(<span class="string">&quot;处理用户注册事件：&#123;&#125;&quot;</span>, user.getId());</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 自动执行欢迎流程</span></span><br><span class="line">            notificationService.sendWelcomeEmail(user);</span><br><span class="line">            notificationService.sendWelcomeSMS(user);</span><br><span class="line">            auditService.recordUserRegistration(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用事件处理器 - 处理所有业务事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleAllBusinessEvents</span><span class="params">(BusinessEvent event)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;记录业务事件：类型=&#123;&#125;, 时间=&#123;&#125;&quot;</span>, event.getEventType(), event.getTimestamp());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 通用的事件记录逻辑</span></span><br><span class="line">        auditService.recordBusinessEvent(event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-在业务服务中发布事件"><a href="#3-在业务服务中发布事件" class="headerlink" title="3. 在业务服务中发布事件"></a>3. 在业务服务中发布事件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ApplicationEventPublisher eventPublisher;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> OrderRepository orderRepository;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">createOrder</span><span class="params">(CreateOrderRequest request)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建订单的业务逻辑</span></span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">        order.setUserId(request.getUserId());</span><br><span class="line">        order.setProductId(request.getProductId());</span><br><span class="line">        order.setQuantity(request.getQuantity());</span><br><span class="line">        order.setStatus(OrderStatus.PENDING);</span><br><span class="line">        order.setCreateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="type">Order</span> <span class="variable">savedOrder</span> <span class="operator">=</span> orderRepository.save(order);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布事件，自动触发相关操作</span></span><br><span class="line">        eventPublisher.publishEvent(<span class="keyword">new</span> <span class="title class_">OrderEvent</span>(<span class="built_in">this</span>, <span class="string">&quot;ORDER_CREATED&quot;</span>, savedOrder));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> savedOrder;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Order <span class="title function_">updateOrderStatus</span><span class="params">(Long orderId, OrderStatus newStatus)</span> &#123;</span><br><span class="line">        <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderRepository.findById(orderId)</span><br><span class="line">            .orElseThrow(() -&gt; <span class="keyword">new</span> <span class="title class_">OrderNotFoundException</span>(<span class="string">&quot;订单不存在：&quot;</span> + orderId));</span><br><span class="line">        </span><br><span class="line">        order.setStatus(newStatus);</span><br><span class="line">        order.setUpdateTime(LocalDateTime.now());</span><br><span class="line">        </span><br><span class="line">        <span class="type">Order</span> <span class="variable">updatedOrder</span> <span class="operator">=</span> orderRepository.save(order);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布状态更新事件</span></span><br><span class="line">        eventPublisher.publishEvent(<span class="keyword">new</span> <span class="title class_">OrderEvent</span>(<span class="built_in">this</span>, <span class="string">&quot;ORDER_STATUS_UPDATED&quot;</span>, updatedOrder));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> updatedOrder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）Spring-Boot自动配置"><a href="#（三）Spring-Boot自动配置" class="headerlink" title="（三）Spring Boot自动配置"></a>（三）Spring Boot自动配置</h2><h3 id="1-自动执行配置类"><a href="#1-自动执行配置类" class="headerlink" title="1. 自动执行配置类"></a>1. 自动执行配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoExecuteConfiguration</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异步任务执行器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;autoExecuteTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> TaskExecutor <span class="title function_">autoExecuteTaskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        executor.setCorePoolSize(<span class="number">5</span>);</span><br><span class="line">        executor.setMaxPoolSize(<span class="number">20</span>);</span><br><span class="line">        executor.setQueueCapacity(<span class="number">100</span>);</span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">&quot;auto-execute-&quot;</span>);</span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动执行管理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> AutoExecuteManager <span class="title function_">autoExecuteManager</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">AutoExecuteManager</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-自动执行管理器"><a href="#2-自动执行管理器" class="headerlink" title="2. 自动执行管理器"></a>2. 自动执行管理器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoExecuteManager</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, List&lt;AutoExecuteHandler&gt;&gt; handlers = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TaskExecutor autoExecuteTaskExecutor;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册自动执行处理器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">registerHandler</span><span class="params">(String type, AutoExecuteHandler handler)</span> &#123;</span><br><span class="line">        handlers.computeIfAbsent(type, k -&gt; <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;()).add(handler);</span><br><span class="line">        log.info(<span class="string">&quot;注册自动执行处理器：类型=&#123;&#125;, 处理器=&#123;&#125;&quot;</span>, type, handler.getClass().getSimpleName());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行自动函数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(String type, Object data, <span class="type">boolean</span> async)</span> &#123;</span><br><span class="line">        List&lt;AutoExecuteHandler&gt; typeHandlers = handlers.get(type);</span><br><span class="line">        <span class="keyword">if</span> (typeHandlers == <span class="literal">null</span> || typeHandlers.isEmpty()) &#123;</span><br><span class="line">            log.warn(<span class="string">&quot;未找到类型为 &#123;&#125; 的自动执行处理器&quot;</span>, type);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (AutoExecuteHandler handler : typeHandlers) &#123;</span><br><span class="line">            <span class="keyword">if</span> (async) &#123;</span><br><span class="line">                autoExecuteTaskExecutor.execute(() -&gt; &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        handler.handle(data);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                        log.error(<span class="string">&quot;异步执行自动函数失败：&#123;&#125;&quot;</span>, e.getMessage(), e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    handler.handle(data);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    log.error(<span class="string">&quot;同步执行自动函数失败：&#123;&#125;&quot;</span>, e.getMessage(), e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自动执行处理器接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AutoExecuteHandler</span> &#123;</span><br><span class="line">        <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">(Object data)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="二、Node-js实现方案"><a href="#二、Node-js实现方案" class="headerlink" title="二、Node.js实现方案"></a>二、Node.js实现方案</h1><h2 id="（一）EventEmitter事件驱动模式"><a href="#（一）EventEmitter事件驱动模式" class="headerlink" title="（一）EventEmitter事件驱动模式"></a>（一）EventEmitter事件驱动模式</h2><h3 id="1-基础EventEmitter实现"><a href="#1-基础EventEmitter实现" class="headerlink" title="1. 基础EventEmitter实现"></a>1. 基础EventEmitter实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">EventEmitter</span> = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 业务事件发射器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BusinessEventEmitter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">EventEmitter</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setMaxListeners</span>(<span class="number">50</span>); <span class="comment">// 设置最大监听器数量</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行函数并自动触发事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">executeWithEvents</span>(<span class="params">eventName, mainFunction, ...args</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 触发执行前事件</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">`<span class="subst">$&#123;eventName&#125;</span>:before`</span>, &#123; args, <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>() &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行主函数</span></span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">mainFunction</span>(...args);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 触发执行后事件</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">`<span class="subst">$&#123;eventName&#125;</span>:after`</span>, &#123; result, args, <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>() &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="comment">// 触发错误事件</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">`<span class="subst">$&#123;eventName&#125;</span>:error`</span>, &#123; error, args, <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>() &#125;);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量注册事件监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">registerAutoExecuteListeners</span>(<span class="params">eventName, listeners</span>) &#123;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(listeners).<span class="title function_">forEach</span>(<span class="function"><span class="params">phase</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> phaseListeners = listeners[phase];</span><br><span class="line">            <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(phaseListeners)) &#123;</span><br><span class="line">                phaseListeners.<span class="title function_">forEach</span>(<span class="function"><span class="params">listener</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">`<span class="subst">$&#123;eventName&#125;</span>:<span class="subst">$&#123;phase&#125;</span>`</span>, listener);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> phaseListeners === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">`<span class="subst">$&#123;eventName&#125;</span>:<span class="subst">$&#123;phase&#125;</span>`</span>, phaseListeners);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建全局事件发射器实例</span></span><br><span class="line"><span class="keyword">const</span> businessEvents = <span class="keyword">new</span> <span class="title class_">BusinessEventEmitter</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="title class_">BusinessEventEmitter</span>, businessEvents &#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-自动执行装饰器"><a href="#2-自动执行装饰器" class="headerlink" title="2. 自动执行装饰器"></a>2. 自动执行装饰器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动执行装饰器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">autoExecute</span>(<span class="params">options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        eventName,</span><br><span class="line">        <span class="attr">async</span>: isAsync = <span class="literal">false</span>,</span><br><span class="line">        beforeHandlers = [],</span><br><span class="line">        afterHandlers = [],</span><br><span class="line">        errorHandlers = []</span><br><span class="line">    &#125; = options;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">target, propertyKey, descriptor</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> originalMethod = descriptor.<span class="property">value</span>;</span><br><span class="line">        </span><br><span class="line">        descriptor.<span class="property">value</span> = <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> context = &#123;</span><br><span class="line">                <span class="attr">target</span>: <span class="variable language_">this</span>,</span><br><span class="line">                <span class="attr">methodName</span>: propertyKey,</span><br><span class="line">                args,</span><br><span class="line">                <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 执行前置处理器</span></span><br><span class="line">                <span class="keyword">if</span> (isAsync) &#123;</span><br><span class="line">                    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(beforeHandlers.<span class="title function_">map</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    beforeHandlers.<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context));</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 执行原方法</span></span><br><span class="line">                <span class="keyword">const</span> result = <span class="keyword">await</span> originalMethod.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 更新上下文</span></span><br><span class="line">                context.<span class="property">result</span> = result;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 执行后置处理器</span></span><br><span class="line">                <span class="keyword">if</span> (isAsync) &#123;</span><br><span class="line">                    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(afterHandlers.<span class="title function_">map</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    afterHandlers.<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context));</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                context.<span class="property">error</span> = error;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 执行错误处理器</span></span><br><span class="line">                <span class="keyword">if</span> (isAsync) &#123;</span><br><span class="line">                    <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(errorHandlers.<span class="title function_">map</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context)));</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    errorHandlers.<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context));</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">throw</span> error;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> descriptor;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; autoExecute &#125;;</span><br></pre></td></tr></table></figure>

<h3 id="3-业务服务实现"><a href="#3-业务服务实现" class="headerlink" title="3. 业务服务实现"></a>3. 业务服务实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; businessEvents &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./BusinessEventEmitter&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; autoExecute &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./AutoExecuteDecorator&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 订单服务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">orders</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupEventListeners</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置事件监听器</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">setupEventListeners</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 订单创建事件监听器</span></span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:created&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleOrderCreated</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:updated&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleOrderUpdated</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:deleted&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleOrderDeleted</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 通用事件监听器</span></span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:before&#x27;</span>, <span class="variable language_">this</span>.<span class="property">logBefore</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:after&#x27;</span>, <span class="variable language_">this</span>.<span class="property">logAfter</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        businessEvents.<span class="title function_">on</span>(<span class="string">&#x27;order:error&#x27;</span>, <span class="variable language_">this</span>.<span class="property">logError</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建订单 - 使用装饰器自动执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title function_">autoExecute</span>(&#123;</span><br><span class="line">        <span class="attr">eventName</span>: <span class="string">&#x27;order&#x27;</span>,</span><br><span class="line">        <span class="attr">async</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">beforeHandlers</span>: [</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;准备创建订单:&#x27;</span>, context.<span class="property">args</span>),</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">validateOrderData</span>(context.<span class="property">args</span>[<span class="number">0</span>])</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">afterHandlers</span>: [</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">sendOrderCreatedNotification</span>(context.<span class="property">result</span>),</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">updateOrderCache</span>(context.<span class="property">result</span>),</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">recordOrderAudit</span>(context.<span class="property">result</span>)</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">errorHandlers</span>: [</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;创建订单失败:&#x27;</span>, context.<span class="property">error</span>.<span class="property">message</span>),</span><br><span class="line">            <span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">sendErrorNotification</span>(context.<span class="property">error</span>)</span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">createOrder</span>(<span class="params">orderData</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> order = &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(),</span><br><span class="line">            ...orderData,</span><br><span class="line">            <span class="attr">status</span>: <span class="string">&#x27;pending&#x27;</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(),</span><br><span class="line">            <span class="attr">updatedAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">orders</span>.<span class="title function_">set</span>(order.<span class="property">id</span>, order);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布订单创建事件</span></span><br><span class="line">        businessEvents.<span class="title function_">emit</span>(<span class="string">&#x27;order:created&#x27;</span>, order);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> order;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新订单状态</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">updateOrderStatus</span>(<span class="params">orderId, newStatus</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> order = <span class="variable language_">this</span>.<span class="property">orders</span>.<span class="title function_">get</span>(orderId);</span><br><span class="line">        <span class="keyword">if</span> (!order) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`订单不存在: <span class="subst">$&#123;orderId&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> oldStatus = order.<span class="property">status</span>;</span><br><span class="line">        order.<span class="property">status</span> = newStatus;</span><br><span class="line">        order.<span class="property">updatedAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 使用事件发射器自动执行相关操作</span></span><br><span class="line">        <span class="keyword">await</span> businessEvents.<span class="title function_">executeWithEvents</span>(<span class="string">&#x27;orderStatusUpdate&#x27;</span>, </span><br><span class="line">            <span class="title function_">async</span> (id, status) =&gt; &#123;</span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">orders</span>.<span class="title function_">set</span>(id, order);</span><br><span class="line">                <span class="keyword">return</span> order;</span><br><span class="line">            &#125;, </span><br><span class="line">            orderId, newStatus</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布订单更新事件</span></span><br><span class="line">        businessEvents.<span class="title function_">emit</span>(<span class="string">&#x27;order:updated&#x27;</span>, &#123; order, oldStatus, newStatus &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> order;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除订单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">deleteOrder</span>(<span class="params">orderId</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> order = <span class="variable language_">this</span>.<span class="property">orders</span>.<span class="title function_">get</span>(orderId);</span><br><span class="line">        <span class="keyword">if</span> (!order) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`订单不存在: <span class="subst">$&#123;orderId&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">orders</span>.<span class="title function_">delete</span>(orderId);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发布订单删除事件</span></span><br><span class="line">        businessEvents.<span class="title function_">emit</span>(<span class="string">&#x27;order:deleted&#x27;</span>, order);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 事件处理方法</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleOrderCreated</span>(<span class="params">order</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动处理订单创建:&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">        <span class="comment">// 自动执行的业务逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleOrderUpdated</span>(<span class="params">&#123; order, oldStatus, newStatus &#125;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`自动处理订单状态更新: <span class="subst">$&#123;order.id&#125;</span> <span class="subst">$&#123;oldStatus&#125;</span> -&gt; <span class="subst">$&#123;newStatus&#125;</span>`</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 根据状态变化执行不同操作</span></span><br><span class="line">        <span class="keyword">switch</span> (newStatus) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;paid&#x27;</span>:</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">handleOrderPaid</span>(order);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;shipped&#x27;</span>:</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">handleOrderShipped</span>(order);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;completed&#x27;</span>:</span><br><span class="line">                <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">handleOrderCompleted</span>(order);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleOrderDeleted</span>(<span class="params">order</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动处理订单删除:&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">        <span class="comment">// 清理相关数据</span></span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">clearOrderCache</span>(order.<span class="property">id</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">recordOrderDeletion</span>(order);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 辅助方法</span></span><br><span class="line">    <span class="title function_">validateOrderData</span>(<span class="params">orderData</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!orderData.<span class="property">userId</span> || !orderData.<span class="property">productId</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;订单数据不完整&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">sendOrderCreatedNotification</span>(<span class="params">order</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送订单创建通知:&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">        <span class="comment">// 实际的通知发送逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">updateOrderCache</span>(<span class="params">order</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新订单缓存:&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">        <span class="comment">// 实际的缓存更新逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">recordOrderAudit</span>(<span class="params">order</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;记录订单审计:&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">        <span class="comment">// 实际的审计记录逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">logBefore</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;方法执行前:&#x27;</span>, context);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">logAfter</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;方法执行后:&#x27;</span>, context);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">logError</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;方法执行错误:&#x27;</span>, context);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">OrderService</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）Express中间件模式"><a href="#（二）Express中间件模式" class="headerlink" title="（二）Express中间件模式"></a>（二）Express中间件模式</h2><h3 id="1-自动执行中间件"><a href="#1-自动执行中间件" class="headerlink" title="1. 自动执行中间件"></a>1. 自动执行中间件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动执行中间件工厂</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createAutoExecuteMiddleware</span>(<span class="params">options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        beforeHandlers = [],</span><br><span class="line">        afterHandlers = [],</span><br><span class="line">        errorHandlers = [],</span><br><span class="line">        <span class="attr">async</span>: isAsync = <span class="literal">false</span></span><br><span class="line">    &#125; = options;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">autoExecuteMiddleware</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> originalSend = res.<span class="property">send</span>;</span><br><span class="line">        <span class="keyword">const</span> originalJson = res.<span class="property">json</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行前置处理器</span></span><br><span class="line">        <span class="keyword">const</span> <span class="title function_">executeHandlers</span> = <span class="keyword">async</span> (<span class="params">handlers, context</span>) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (isAsync) &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(handlers.<span class="title function_">map</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context)));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                handlers.<span class="title function_">forEach</span>(<span class="function"><span class="params">handler</span> =&gt;</span> <span class="title function_">handler</span>(context));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建上下文</span></span><br><span class="line">        <span class="keyword">const</span> context = &#123;</span><br><span class="line">            req,</span><br><span class="line">            res,</span><br><span class="line">            <span class="attr">startTime</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">            <span class="attr">method</span>: req.<span class="property">method</span>,</span><br><span class="line">            <span class="attr">url</span>: req.<span class="property">url</span>,</span><br><span class="line">            <span class="attr">ip</span>: req.<span class="property">ip</span></span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 执行前置处理器</span></span><br><span class="line">        <span class="title function_">executeHandlers</span>(beforeHandlers, context).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 重写响应方法以捕获响应数据</span></span><br><span class="line">            res.<span class="property">send</span> = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                context.<span class="property">responseData</span> = data;</span><br><span class="line">                context.<span class="property">endTime</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">                context.<span class="property">duration</span> = context.<span class="property">endTime</span> - context.<span class="property">startTime</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 执行后置处理器</span></span><br><span class="line">                <span class="title function_">executeHandlers</span>(afterHandlers, context).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    originalSend.<span class="title function_">call</span>(<span class="variable language_">this</span>, data);</span><br><span class="line">                &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;后置处理器执行失败:&#x27;</span>, error);</span><br><span class="line">                    originalSend.<span class="title function_">call</span>(<span class="variable language_">this</span>, data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">            res.<span class="property">json</span> = <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">                context.<span class="property">responseData</span> = data;</span><br><span class="line">                context.<span class="property">endTime</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">                context.<span class="property">duration</span> = context.<span class="property">endTime</span> - context.<span class="property">startTime</span>;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 执行后置处理器</span></span><br><span class="line">                <span class="title function_">executeHandlers</span>(afterHandlers, context).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                    originalJson.<span class="title function_">call</span>(<span class="variable language_">this</span>, data);</span><br><span class="line">                &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;后置处理器执行失败:&#x27;</span>, error);</span><br><span class="line">                    originalJson.<span class="title function_">call</span>(<span class="variable language_">this</span>, data);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">            </span><br><span class="line">            <span class="title function_">next</span>();</span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">            context.<span class="property">error</span> = error;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 执行错误处理器</span></span><br><span class="line">            <span class="title function_">executeHandlers</span>(errorHandlers, context).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">next</span>(error);</span><br><span class="line">            &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">handlerError</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;错误处理器执行失败:&#x27;</span>, handlerError);</span><br><span class="line">                <span class="title function_">next</span>(error);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; createAutoExecuteMiddleware &#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-Express路由中使用"><a href="#2-Express路由中使用" class="headerlink" title="2. Express路由中使用"></a>2. Express路由中使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; createAutoExecuteMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./AutoExecuteMiddleware&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动执行处理器</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">logHandler</span> = (<span class="params">context</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`请求日志: <span class="subst">$&#123;context.method&#125;</span> <span class="subst">$&#123;context.url&#125;</span> - <span class="subst">$&#123;context.ip&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">auditHandler</span> = (<span class="params">context</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`审计记录: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        method: context.method,</span></span></span><br><span class="line"><span class="subst"><span class="string">        url: context.url,</span></span></span><br><span class="line"><span class="subst"><span class="string">        ip: context.ip,</span></span></span><br><span class="line"><span class="subst"><span class="string">        timestamp: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span></span></span><br><span class="line"><span class="subst"><span class="string">        duration: context.duration</span></span></span><br><span class="line"><span class="subst"><span class="string">    &#125;)&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">cacheHandler</span> = (<span class="params">context</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (context.<span class="property">method</span> === <span class="string">&#x27;GET&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`缓存操作: <span class="subst">$&#123;context.url&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">notificationHandler</span> = (<span class="params">context</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (context.<span class="property">responseData</span> &amp;&amp; context.<span class="property">responseData</span>.<span class="property">success</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送成功通知&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用自动执行中间件</span></span><br><span class="line">router.<span class="title function_">use</span>(<span class="title function_">createAutoExecuteMiddleware</span>(&#123;</span><br><span class="line">    <span class="attr">beforeHandlers</span>: [logHandler],</span><br><span class="line">    <span class="attr">afterHandlers</span>: [auditHandler, cacheHandler, notificationHandler],</span><br><span class="line">    <span class="attr">errorHandlers</span>: [<span class="function">(<span class="params">context</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求处理失败:&#x27;</span>, context.<span class="property">error</span>)],</span><br><span class="line">    <span class="attr">async</span>: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 订单相关路由</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/orders&#x27;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> orderData = req.<span class="property">body</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建订单的业务逻辑</span></span><br><span class="line">        <span class="keyword">const</span> order = &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(),</span><br><span class="line">            ...orderData,</span><br><span class="line">            <span class="attr">status</span>: <span class="string">&#x27;pending&#x27;</span>,</span><br><span class="line">            <span class="attr">createdAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        res.<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">data</span>: order,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;订单创建成功&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">message</span>: error.<span class="property">message</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">put</span>(<span class="string">&#x27;/orders/:id/status&#x27;</span>, <span class="title function_">async</span> (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; id &#125; = req.<span class="property">params</span>;</span><br><span class="line">        <span class="keyword">const</span> &#123; status &#125; = req.<span class="property">body</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 更新订单状态的业务逻辑</span></span><br><span class="line">        <span class="keyword">const</span> updatedOrder = &#123;</span><br><span class="line">            id,</span><br><span class="line">            status,</span><br><span class="line">            <span class="attr">updatedAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        res.<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">data</span>: updatedOrder,</span><br><span class="line">            <span class="attr">message</span>: <span class="string">&#x27;订单状态更新成功&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">json</span>(&#123;</span><br><span class="line">            <span class="attr">success</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">message</span>: error.<span class="property">message</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/api&#x27;</span>, router);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = app;</span><br></pre></td></tr></table></figure>

<h2 id="（三）Promise链式自动执行"><a href="#（三）Promise链式自动执行" class="headerlink" title="（三）Promise链式自动执行"></a>（三）Promise链式自动执行</h2><h3 id="1-Promise链管理器"><a href="#1-Promise链管理器" class="headerlink" title="1. Promise链管理器"></a>1. Promise链管理器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Promise链自动执行管理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PromiseChainManager</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chains</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册执行链</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">registerChain</span>(<span class="params">name, chain</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chains</span>.<span class="title function_">set</span>(name, chain);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行指定的链</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">executeChain</span>(<span class="params">name, initialData</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> chain = <span class="variable language_">this</span>.<span class="property">chains</span>.<span class="title function_">get</span>(name);</span><br><span class="line">        <span class="keyword">if</span> (!chain) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`未找到名为 <span class="subst">$&#123;name&#125;</span> 的执行链`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> result = initialData;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> step <span class="keyword">of</span> chain) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> step === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                    result = <span class="keyword">await</span> <span class="title function_">step</span>(result);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (step.<span class="property">handler</span> &amp;&amp; <span class="keyword">typeof</span> step.<span class="property">handler</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> stepResult = <span class="keyword">await</span> step.<span class="title function_">handler</span>(result);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// 如果步骤配置了后续处理器，则执行</span></span><br><span class="line">                    <span class="keyword">if</span> (step.<span class="property">afterHandlers</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">const</span> afterHandler <span class="keyword">of</span> step.<span class="property">afterHandlers</span>) &#123;</span><br><span class="line">                            <span class="keyword">await</span> <span class="title function_">afterHandler</span>(stepResult, result);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                    result = stepResult;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="comment">// 如果步骤配置了错误处理器，则执行</span></span><br><span class="line">                <span class="keyword">if</span> (step.<span class="property">errorHandlers</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">const</span> errorHandler <span class="keyword">of</span> step.<span class="property">errorHandlers</span>) &#123;</span><br><span class="line">                        <span class="keyword">await</span> <span class="title function_">errorHandler</span>(error, result);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">throw</span> error;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建自动执行的Promise链</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">createAutoExecuteChain</span>(<span class="params">mainFunction, autoFunctions = []</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">async</span> (data) =&gt; &#123;</span><br><span class="line">            <span class="comment">// 执行主函数</span></span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">mainFunction</span>(data);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 自动执行其他函数</span></span><br><span class="line">            <span class="keyword">const</span> autoResults = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(</span><br><span class="line">                autoFunctions.<span class="title function_">map</span>(<span class="function"><span class="params">func</span> =&gt;</span> <span class="title function_">func</span>(result, data))</span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">mainResult</span>: result,</span><br><span class="line">                autoResults</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> chainManager = <span class="keyword">new</span> <span class="title class_">PromiseChainManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册订单处理链</span></span><br><span class="line">chainManager.<span class="title function_">registerChain</span>(<span class="string">&#x27;orderProcessing&#x27;</span>, [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">handler</span>: <span class="title function_">async</span> (orderData) =&gt; &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;步骤1: 验证订单数据&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!orderData.<span class="property">userId</span> || !orderData.<span class="property">productId</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;订单数据不完整&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> orderData;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">afterHandlers</span>: [</span><br><span class="line">            <span class="title function_">async</span> (result) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;验证完成:&#x27;</span>, result)</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">errorHandlers</span>: [</span><br><span class="line">            <span class="title function_">async</span> (error) =&gt; <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;验证失败:&#x27;</span>, error.<span class="property">message</span>)</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">handler</span>: <span class="title function_">async</span> (orderData) =&gt; &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;步骤2: 创建订单&#x27;</span>);</span><br><span class="line">            <span class="keyword">const</span> order = &#123;</span><br><span class="line">                <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(),</span><br><span class="line">                ...orderData,</span><br><span class="line">                <span class="attr">status</span>: <span class="string">&#x27;pending&#x27;</span>,</span><br><span class="line">                <span class="attr">createdAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> order;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">afterHandlers</span>: [</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;订单创建成功:&#x27;</span>, order.<span class="property">id</span>),</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送创建通知&#x27;</span>),</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新缓存&#x27;</span>)</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">handler</span>: <span class="title function_">async</span> (order) =&gt; &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;步骤3: 处理支付&#x27;</span>);</span><br><span class="line">            <span class="comment">// 模拟支付处理</span></span><br><span class="line">            <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">1000</span>));</span><br><span class="line">            order.<span class="property">status</span> = <span class="string">&#x27;paid&#x27;</span>;</span><br><span class="line">            order.<span class="property">paidAt</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">            <span class="keyword">return</span> order;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">afterHandlers</span>: [</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;支付完成:&#x27;</span>, order.<span class="property">id</span>),</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送支付通知&#x27;</span>),</span><br><span class="line">            <span class="title function_">async</span> (order) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;更新订单状态&#x27;</span>)</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123; <span class="title class_">PromiseChainManager</span>, chainManager &#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2-业务服务中使用Promise链"><a href="#2-业务服务中使用Promise链" class="headerlink" title="2. 业务服务中使用Promise链"></a>2. 业务服务中使用Promise链</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; chainManager &#125; = <span class="built_in">require</span>(<span class="string">&#x27;./PromiseChainManager&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderService</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupAutoExecuteChains</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置自动执行链</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">setupAutoExecuteChains</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 创建订单自动执行链</span></span><br><span class="line">        <span class="keyword">const</span> createOrderChain = chainManager.<span class="title function_">createAutoExecuteChain</span>(</span><br><span class="line">            <span class="comment">// 主函数：创建订单</span></span><br><span class="line">            <span class="title function_">async</span> (orderData) =&gt; &#123;</span><br><span class="line">                <span class="keyword">const</span> order = &#123;</span><br><span class="line">                    <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(),</span><br><span class="line">                    ...orderData,</span><br><span class="line">                    <span class="attr">status</span>: <span class="string">&#x27;pending&#x27;</span>,</span><br><span class="line">                    <span class="attr">createdAt</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">                &#125;;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;主函数：订单创建完成&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">                <span class="keyword">return</span> order;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 自动执行的函数数组</span></span><br><span class="line">            [</span><br><span class="line">                <span class="title function_">async</span> (order) =&gt; &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动执行：发送邮件通知&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">                    <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&#x27;email&#x27;</span>, <span class="attr">sent</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_">async</span> (order) =&gt; &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动执行：更新缓存&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">                    <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&#x27;cache&#x27;</span>, <span class="attr">updated</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_">async</span> (order) =&gt; &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动执行：记录审计日志&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">                    <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&#x27;audit&#x27;</span>, <span class="attr">recorded</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="title function_">async</span> (order) =&gt; &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;自动执行：发送短信通知&#x27;</span>, order.<span class="property">id</span>);</span><br><span class="line">                    <span class="keyword">return</span> &#123; <span class="attr">type</span>: <span class="string">&#x27;sms&#x27;</span>, <span class="attr">sent</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        chainManager.<span class="title function_">registerChain</span>(<span class="string">&#x27;createOrder&#x27;</span>, [createOrderChain]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建订单</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">createOrder</span>(<span class="params">orderData</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> chainManager.<span class="title function_">executeChain</span>(<span class="string">&#x27;createOrder&#x27;</span>, orderData);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;订单创建流程完成:&#x27;</span>, result);</span><br><span class="line">            <span class="keyword">return</span> result.<span class="property">mainResult</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;订单创建失败:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 处理订单（使用预定义的处理链）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">processOrder</span>(<span class="params">orderData</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> result = <span class="keyword">await</span> chainManager.<span class="title function_">executeChain</span>(<span class="string">&#x27;orderProcessing&#x27;</span>, orderData);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;订单处理完成:&#x27;</span>, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;订单处理失败:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">throw</span> error;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">OrderService</span>;</span><br></pre></td></tr></table></figure>

<h1 id="三、最佳实践与性能优化"><a href="#三、最佳实践与性能优化" class="headerlink" title="三、最佳实践与性能优化"></a>三、最佳实践与性能优化</h1><h2 id="（一）性能优化策略"><a href="#（一）性能优化策略" class="headerlink" title="（一）性能优化策略"></a>（一）性能优化策略</h2><h3 id="1-Java-Spring优化"><a href="#1-Java-Spring优化" class="headerlink" title="1. Java Spring优化"></a>1. Java Spring优化</h3><h4 id="异步执行配置"><a href="#异步执行配置" class="headerlink" title="异步执行配置"></a>异步执行配置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncConfiguration</span> <span class="keyword">implements</span> <span class="title class_">AsyncConfigurer</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Bean(name = &quot;autoExecuteTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Executor <span class="title function_">getAsyncExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        executor.setCorePoolSize(<span class="number">10</span>);</span><br><span class="line">        executor.setMaxPoolSize(<span class="number">50</span>);</span><br><span class="line">        executor.setQueueCapacity(<span class="number">200</span>);</span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">&quot;auto-execute-&quot;</span>);</span><br><span class="line">        executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line">        executor.setWaitForTasksToCompleteOnShutdown(<span class="literal">true</span>);</span><br><span class="line">        executor.setAwaitTerminationSeconds(<span class="number">30</span>);</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> AsyncUncaughtExceptionHandler <span class="title function_">getAsyncUncaughtExceptionHandler</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAsyncUncaughtExceptionHandler</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="条件化自动执行"><a href="#条件化自动执行" class="headerlink" title="条件化自动执行"></a>条件化自动执行</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConditionalAutoExecuteAspect</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(autoExecute)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">conditionalExecute</span><span class="params">(ProceedingJoinPoint joinPoint, AutoExecute autoExecute)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">// 根据条件决定是否执行自动函数</span></span><br><span class="line">        <span class="keyword">if</span> (shouldExecuteAutoFunctions(joinPoint, autoExecute)) &#123;</span><br><span class="line">            <span class="keyword">return</span> executeWithAutoFunctions(joinPoint, autoExecute);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> joinPoint.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">shouldExecuteAutoFunctions</span><span class="params">(ProceedingJoinPoint joinPoint, AutoExecute autoExecute)</span> &#123;</span><br><span class="line">        <span class="comment">// 实现条件判断逻辑</span></span><br><span class="line">        <span class="comment">// 例如：根据环境、用户权限、系统负载等条件</span></span><br><span class="line">        <span class="keyword">return</span> !isHighLoadPeriod() &amp;&amp; isFeatureEnabled(<span class="string">&quot;auto-execute&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Node-js优化"><a href="#2-Node-js优化" class="headerlink" title="2. Node.js优化"></a>2. Node.js优化</h3><h4 id="事件监听器优化"><a href="#事件监听器优化" class="headerlink" title="事件监听器优化"></a>事件监听器优化</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">OptimizedEventEmitter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">EventEmitter</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">executionQueue</span> = [];</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isProcessing</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxConcurrency</span> = <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量处理事件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">processBatch</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isProcessing</span> || <span class="variable language_">this</span>.<span class="property">executionQueue</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isProcessing</span> = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> batch = <span class="variable language_">this</span>.<span class="property">executionQueue</span>.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="variable language_">this</span>.<span class="property">maxConcurrency</span>);</span><br><span class="line">            <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(batch.<span class="title function_">map</span>(<span class="function"><span class="params">task</span> =&gt;</span> <span class="title function_">task</span>()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;批量处理失败:&#x27;</span>, error);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">isProcessing</span> = <span class="literal">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 如果还有待处理的任务，继续处理</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">executionQueue</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="title function_">setImmediate</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">processBatch</span>());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加到执行队列</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">queueExecution</span>(<span class="params">task</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">executionQueue</span>.<span class="title function_">push</span>(task);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果当前没有在处理，立即开始处理</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">isProcessing</span>) &#123;</span><br><span class="line">            <span class="title function_">setImmediate</span>(<span class="function">() =&gt;</span> <span class="variable language_">this</span>.<span class="title function_">processBatch</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）错误处理与监控"><a href="#（二）错误处理与监控" class="headerlink" title="（二）错误处理与监控"></a>（二）错误处理与监控</h2><h3 id="1-Java-Spring错误处理"><a href="#1-Java-Spring错误处理" class="headerlink" title="1. Java Spring错误处理"></a>1. Java Spring错误处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoExecuteErrorHandler</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MeterRegistry meterRegistry;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleAutoExecuteError</span><span class="params">(AutoExecuteErrorEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 记录错误指标</span></span><br><span class="line">        Counter.builder(<span class="string">&quot;auto.execute.error&quot;</span>)</span><br><span class="line">            .tag(<span class="string">&quot;method&quot;</span>, event.getMethodName())</span><br><span class="line">            .tag(<span class="string">&quot;type&quot;</span>, event.getExecuteType())</span><br><span class="line">            .register(meterRegistry)</span><br><span class="line">            .increment();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 记录详细错误日志</span></span><br><span class="line">        log.error(<span class="string">&quot;自动执行失败: method=&#123;&#125;, type=&#123;&#125;, error=&#123;&#125;&quot;</span>, </span><br><span class="line">            event.getMethodName(), </span><br><span class="line">            event.getExecuteType(), </span><br><span class="line">            event.getError().getMessage(), </span><br><span class="line">            event.getError());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 发送告警</span></span><br><span class="line">        sendAlert(event);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">sendAlert</span><span class="params">(AutoExecuteErrorEvent event)</span> &#123;</span><br><span class="line">        <span class="comment">// 实现告警逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Node-js错误处理"><a href="#2-Node-js错误处理" class="headerlink" title="2. Node.js错误处理"></a>2. Node.js错误处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorHandlingEventEmitter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">EventEmitter</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorCount</span> = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">maxErrors</span> = <span class="number">5</span>;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorWindow</span> = <span class="number">60000</span>; <span class="comment">// 1分钟</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监听未捕获的错误</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="variable language_">this</span>.<span class="property">handleError</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">handleError</span>(<span class="params">error, context = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> errorKey = <span class="string">`<span class="subst">$&#123;context.method || <span class="string">&#x27;unknown&#x27;</span>&#125;</span>:<span class="subst">$&#123;error.message&#125;</span>`</span>;</span><br><span class="line">        <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 错误计数</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">errorCount</span>.<span class="title function_">has</span>(errorKey)) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">errorCount</span>.<span class="title function_">set</span>(errorKey, []);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">const</span> errors = <span class="variable language_">this</span>.<span class="property">errorCount</span>.<span class="title function_">get</span>(errorKey);</span><br><span class="line">        errors.<span class="title function_">push</span>(now);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 清理过期的错误记录</span></span><br><span class="line">        <span class="keyword">const</span> validErrors = errors.<span class="title function_">filter</span>(<span class="function"><span class="params">time</span> =&gt;</span> now - time &lt; <span class="variable language_">this</span>.<span class="property">errorWindow</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">errorCount</span>.<span class="title function_">set</span>(errorKey, validErrors);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果错误频率过高，触发熔断</span></span><br><span class="line">        <span class="keyword">if</span> (validErrors.<span class="property">length</span> &gt;= <span class="variable language_">this</span>.<span class="property">maxErrors</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">emit</span>(<span class="string">&#x27;circuit-breaker&#x27;</span>, &#123; errorKey, <span class="attr">count</span>: validErrors.<span class="property">length</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 记录错误日志</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;自动执行错误:&#x27;</span>, &#123;</span><br><span class="line">            <span class="attr">error</span>: error.<span class="property">message</span>,</span><br><span class="line">            context,</span><br><span class="line">            <span class="attr">count</span>: validErrors.<span class="property">length</span>,</span><br><span class="line">            <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）监控与指标"><a href="#（三）监控与指标" class="headerlink" title="（三）监控与指标"></a>（三）监控与指标</h2><h3 id="1-Java-Spring监控"><a href="#1-Java-Spring监控" class="headerlink" title="1. Java Spring监控"></a>1. Java Spring监控</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AutoExecuteMetrics</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Timer executionTimer;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Counter successCounter;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Counter errorCounter;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AutoExecuteMetrics</span><span class="params">(MeterRegistry meterRegistry)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.executionTimer = Timer.builder(<span class="string">&quot;auto.execute.duration&quot;</span>)</span><br><span class="line">            .description(<span class="string">&quot;自动执行耗时&quot;</span>)</span><br><span class="line">            .register(meterRegistry);</span><br><span class="line">            </span><br><span class="line">        <span class="built_in">this</span>.successCounter = Counter.builder(<span class="string">&quot;auto.execute.success&quot;</span>)</span><br><span class="line">            .description(<span class="string">&quot;自动执行成功次数&quot;</span>)</span><br><span class="line">            .register(meterRegistry);</span><br><span class="line">            </span><br><span class="line">        <span class="built_in">this</span>.errorCounter = Counter.builder(<span class="string">&quot;auto.execute.error&quot;</span>)</span><br><span class="line">            .description(<span class="string">&quot;自动执行失败次数&quot;</span>)</span><br><span class="line">            .register(meterRegistry);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">recordExecution</span><span class="params">(String type, <span class="type">long</span> duration, <span class="type">boolean</span> success)</span> &#123;</span><br><span class="line">        executionTimer.record(duration, TimeUnit.MILLISECONDS);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            successCounter.increment(Tags.of(<span class="string">&quot;type&quot;</span>, type));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            errorCounter.increment(Tags.of(<span class="string">&quot;type&quot;</span>, type));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Node-js监控"><a href="#2-Node-js监控" class="headerlink" title="2. Node.js监控"></a>2. Node.js监控</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promClient = <span class="built_in">require</span>(<span class="string">&#x27;prom-client&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建指标</span></span><br><span class="line"><span class="keyword">const</span> executionDuration = <span class="keyword">new</span> promClient.<span class="title class_">Histogram</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;auto_execute_duration_seconds&#x27;</span>,</span><br><span class="line">    <span class="attr">help</span>: <span class="string">&#x27;自动执行耗时&#x27;</span>,</span><br><span class="line">    <span class="attr">labelNames</span>: [<span class="string">&#x27;method&#x27;</span>, <span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;status&#x27;</span>]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> executionCounter = <span class="keyword">new</span> promClient.<span class="title class_">Counter</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;auto_execute_total&#x27;</span>,</span><br><span class="line">    <span class="attr">help</span>: <span class="string">&#x27;自动执行总次数&#x27;</span>,</span><br><span class="line">    <span class="attr">labelNames</span>: [<span class="string">&#x27;method&#x27;</span>, <span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;status&#x27;</span>]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MonitoringEventEmitter</span> <span class="keyword">extends</span> <span class="title class_ inherited__">EventEmitter</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>();</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setupMonitoring</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">setupMonitoring</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">&#x27;execution:start&#x27;</span>, <span class="variable language_">this</span>.<span class="property">recordStart</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">&#x27;execution:end&#x27;</span>, <span class="variable language_">this</span>.<span class="property">recordEnd</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">on</span>(<span class="string">&#x27;execution:error&#x27;</span>, <span class="variable language_">this</span>.<span class="property">recordError</span>.<span class="title function_">bind</span>(<span class="variable language_">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">recordStart</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        context.<span class="property">startTime</span> = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">recordEnd</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> duration = (<span class="title class_">Date</span>.<span class="title function_">now</span>() - context.<span class="property">startTime</span>) / <span class="number">1000</span>;</span><br><span class="line">        </span><br><span class="line">        executionDuration</span><br><span class="line">            .<span class="title function_">labels</span>(context.<span class="property">method</span>, context.<span class="property">type</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">            .<span class="title function_">observe</span>(duration);</span><br><span class="line">            </span><br><span class="line">        executionCounter</span><br><span class="line">            .<span class="title function_">labels</span>(context.<span class="property">method</span>, context.<span class="property">type</span>, <span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">            .<span class="title function_">inc</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">recordError</span>(<span class="params">context</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> duration = (<span class="title class_">Date</span>.<span class="title function_">now</span>() - context.<span class="property">startTime</span>) / <span class="number">1000</span>;</span><br><span class="line">        </span><br><span class="line">        executionDuration</span><br><span class="line">            .<span class="title function_">labels</span>(context.<span class="property">method</span>, context.<span class="property">type</span>, <span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">            .<span class="title function_">observe</span>(duration);</span><br><span class="line">            </span><br><span class="line">        executionCounter</span><br><span class="line">            .<span class="title function_">labels</span>(context.<span class="property">method</span>, context.<span class="property">type</span>, <span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">            .<span class="title function_">inc</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>函数自动执行是现代后端开发中的重要模式，通过合理的设计和实现，可以大大提高代码的可维护性和系统的可扩展性。</p>
<h2 id="（一）技术选择建议"><a href="#（一）技术选择建议" class="headerlink" title="（一）技术选择建议"></a>（一）技术选择建议</h2><h3 id="Java-Spring项目"><a href="#Java-Spring项目" class="headerlink" title="Java Spring项目"></a>Java Spring项目</h3><ol>
<li><strong>简单场景</strong>：使用AOP切面编程</li>
<li><strong>复杂业务</strong>：结合Spring事件机制</li>
<li><strong>高性能要求</strong>：使用异步执行和条件化执行</li>
<li><strong>企业级应用</strong>：完整的监控和错误处理机制</li>
</ol>
<h3 id="Node-js项目"><a href="#Node-js项目" class="headerlink" title="Node.js项目"></a>Node.js项目</h3><ol>
<li><strong>事件驱动</strong>：使用EventEmitter模式</li>
<li><strong>Web应用</strong>：结合Express中间件</li>
<li><strong>复杂流程</strong>：使用Promise链管理器</li>
<li><strong>高并发</strong>：优化事件处理和批量执行</li>
</ol>
<h2 id="（二）最佳实践总结"><a href="#（二）最佳实践总结" class="headerlink" title="（二）最佳实践总结"></a>（二）最佳实践总结</h2><ol>
<li><strong>性能优先</strong>：合理使用异步执行，避免阻塞主流程</li>
<li><strong>错误隔离</strong>：自动执行的失败不应影响主业务逻辑</li>
<li><strong>监控完善</strong>：建立完整的指标监控和告警机制</li>
<li><strong>可配置化</strong>：支持动态开关和条件执行</li>
<li><strong>文档清晰</strong>：明确标注自动执行的副作用和依赖关系</li>
</ol>
<p>通过这些模式和实践，可以构建出既高效又可维护的自动执行系统，为业务开发提供强有力的技术支撑。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop">Spring AOP官方文档</a></li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#context-functionality-events">Spring Events官方文档</a></li>
<li><a href="https://nodejs.org/api/events.html">Node.js EventEmitter文档</a></li>
<li><a href="https://expressjs.com/en/guide/using-middleware.html">Express中间件指南</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[详细介绍在Java Spring和Node.js中实现函数自动执行的多种模式，包括AOP切面编程、事件监听、装饰器模式、中间件等实用技术方案]]>
    
    </summary>
    
      <category term="后端" scheme="https://uwakeme.top/tags/%E5%90%8E%E7%AB%AF/"/>
    
      <category term="Java" scheme="https://uwakeme.top/tags/Java/"/>
    
      <category term="Node.js" scheme="https://uwakeme.top/tags/Node-js/"/>
    
      <category term="设计模式" scheme="https://uwakeme.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="异步编程" scheme="https://uwakeme.top/tags/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Spring" scheme="https://uwakeme.top/tags/Spring/"/>
    
      <category term="AOP" scheme="https://uwakeme.top/tags/AOP/"/>
    
      <category term="后端" scheme="https://uwakeme.top/categories/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【工具】jsDelivr CDN完全指南：免费高速的开源项目CDN服务]]></title>
    <link href="https://uwakeme.top/2025/07/25/%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91jsDelivr%20CDN%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E5%85%8D%E8%B4%B9%E9%AB%98%E9%80%9F%E7%9A%84%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AECDN%E6%9C%8D%E5%8A%A1/"/>
    <id>https://uwakeme.top/2025/07/25/工具/【工具】jsDelivr CDN完全指南：免费高速的开源项目CDN服务/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T03:37:08.331Z</updated>
    <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/uwakeme/personal-image-repository/images/jsdelivr-banner.png" alt="jsDelivr CDN"></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在现代Web开发中，内容分发网络（CDN）已经成为提升网站性能的重要工具。jsDelivr作为一个免费、快速、可靠的开源CDN服务，为全球开发者提供了优质的静态资源分发服务。无论是加速GitHub仓库访问、分发npm包，还是为开源项目提供CDN支持，jsDelivr都是开发者的首选方案。本文将全面介绍jsDelivr的使用方法、配置技巧和最佳实践。</p>
<h1 id="一、jsDelivr简介"><a href="#一、jsDelivr简介" class="headerlink" title="一、jsDelivr简介"></a>一、jsDelivr简介</h1><h2 id="（一）什么是jsDelivr"><a href="#（一）什么是jsDelivr" class="headerlink" title="（一）什么是jsDelivr"></a>（一）什么是jsDelivr</h2><p>jsDelivr是一个免费的开源CDN（Content Delivery Network），专门为开源项目提供快速、可靠的静态资源分发服务。它支持多种资源来源，包括GitHub、npm、WordPress等。</p>
<h3 id="1-核心特性"><a href="#1-核心特性" class="headerlink" title="1. 核心特性"></a>1. 核心特性</h3><ul>
<li><strong>完全免费</strong>：无需注册，无使用费用</li>
<li><strong>全球覆盖</strong>：超过750个CDN节点遍布全球</li>
<li><strong>高性能</strong>：智能路由和缓存策略</li>
<li><strong>多源支持</strong>：GitHub、npm、WordPress等多种来源</li>
<li><strong>高可用性</strong>：99.9%的服务可用性保证</li>
</ul>
<h3 id="2-服务优势"><a href="#2-服务优势" class="headerlink" title="2. 服务优势"></a>2. 服务优势</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**速度优势**</span></span><br><span class="line"><span class="bullet">-</span> 全球CDN节点就近访问</span><br><span class="line"><span class="bullet">-</span> 智能缓存和压缩</span><br><span class="line"><span class="bullet">-</span> HTTP/2和HTTP/3支持</span><br><span class="line"></span><br><span class="line"><span class="strong">**稳定性优势**</span></span><br><span class="line"><span class="bullet">-</span> 多重备份机制</span><br><span class="line"><span class="bullet">-</span> 自动故障转移</span><br><span class="line"><span class="bullet">-</span> 24/7监控服务</span><br><span class="line"></span><br><span class="line"><span class="strong">**易用性优势**</span></span><br><span class="line"><span class="bullet">-</span> 无需注册即可使用</span><br><span class="line"><span class="bullet">-</span> 简单的URL格式</span><br><span class="line"><span class="bullet">-</span> 丰富的API接口</span><br></pre></td></tr></table></figure>

<h2 id="（二）jsDelivr的工作原理"><a href="#（二）jsDelivr的工作原理" class="headerlink" title="（二）jsDelivr的工作原理"></a>（二）jsDelivr的工作原理</h2><h3 id="1-基本架构"><a href="#1-基本架构" class="headerlink" title="1. 基本架构"></a>1. 基本架构</h3><pre class="mermaid">graph LR
    A[用户请求] --> B[jsDelivr CDN]
    B --> C{缓存检查}
    C -->|命中| D[返回缓存内容]
    C -->|未命中| E[从源站获取]
    E --> F[GitHub/npm/WordPress]
    F --> G[缓存并返回]
    G --> A</pre>

<h3 id="2-缓存策略"><a href="#2-缓存策略" class="headerlink" title="2. 缓存策略"></a>2. 缓存策略</h3><ul>
<li><strong>智能缓存</strong>：根据文件类型和访问频率自动调整缓存时间</li>
<li><strong>版本控制</strong>：支持特定版本和最新版本的缓存</li>
<li><strong>全球同步</strong>：确保全球节点内容一致性</li>
</ul>
<h2 id="（三）支持的资源类型"><a href="#（三）支持的资源类型" class="headerlink" title="（三）支持的资源类型"></a>（三）支持的资源类型</h2><h3 id="1-GitHub仓库"><a href="#1-GitHub仓库" class="headerlink" title="1. GitHub仓库"></a>1. GitHub仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本格式</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名@版本号/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.6.0/dist/jquery.min.js</span><br></pre></td></tr></table></figure>

<h3 id="2-npm包"><a href="#2-npm包" class="headerlink" title="2. npm包"></a>2. npm包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本格式</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名@版本号/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3.3.4/dist/vue.global.js</span><br></pre></td></tr></table></figure>

<h3 id="3-WordPress插件"><a href="#3-WordPress插件" class="headerlink" title="3. WordPress插件"></a>3. WordPress插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本格式</span></span><br><span class="line">https://cdn.jsdelivr.net/wp/plugins/插件名/版本号/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例</span></span><br><span class="line">https://cdn.jsdelivr.net/wp/plugins/contact-form-7/5.7.7/includes/css/styles.css</span><br></pre></td></tr></table></figure>

<h1 id="二、GitHub仓库加速"><a href="#二、GitHub仓库加速" class="headerlink" title="二、GitHub仓库加速"></a>二、GitHub仓库加速</h1><h2 id="（一）基本使用方法"><a href="#（一）基本使用方法" class="headerlink" title="（一）基本使用方法"></a>（一）基本使用方法</h2><h3 id="1-URL格式规则"><a href="#1-URL格式规则" class="headerlink" title="1. URL格式规则"></a>1. URL格式规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 完整格式</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名@分支或标签/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用默认分支（推荐）</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定分支</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名@main/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定标签版本</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/用户名/仓库名@v1.0.0/文件路径</span><br></pre></td></tr></table></figure>

<h3 id="2-实际应用示例"><a href="#2-实际应用示例" class="headerlink" title="2. 实际应用示例"></a>2. 实际应用示例</h3><h4 id="图片资源加速"><a href="#图片资源加速" class="headerlink" title="图片资源加速"></a>图片资源加速</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- GitHub原始链接（慢） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://raw.githubusercontent.com/uwakeme/my-images/main/logo.png&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jsDelivr CDN链接（快） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/uwakeme/my-images/logo.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="JavaScript库加速"><a href="#JavaScript库加速" class="headerlink" title="JavaScript库加速"></a>JavaScript库加速</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加载开源JavaScript库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/highlightjs/highlight.js@11.8.0/build/highlight.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 加载CSS样式文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/highlightjs/highlight.js@11.8.0/build/styles/default.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）图床应用场景"><a href="#（二）图床应用场景" class="headerlink" title="（二）图床应用场景"></a>（二）图床应用场景</h2><h3 id="1-博客图片托管"><a href="#1-博客图片托管" class="headerlink" title="1. 博客图片托管"></a>1. 博客图片托管</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 在Markdown中使用</span></span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">https://cdn.jsdelivr.net/gh/username/image-repo/images/photo.jpg</span>)</span><br><span class="line"></span><br><span class="line"><span class="section"># 在HTML中使用</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/username/image-repo/images/photo.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片描述&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="2-PicGo配置"><a href="#2-PicGo配置" class="headerlink" title="2. PicGo配置"></a>2. PicGo配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;username/image-hosting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;branch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your_github_token&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/username/image-hosting&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-批量图片处理"><a href="#3-批量图片处理" class="headerlink" title="3. 批量图片处理"></a>3. 批量图片处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量转换GitHub链接为jsDelivr链接</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">convertToJsDelivr</span>(<span class="params">githubUrl</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> regex = <span class="regexp">/https:\/\/raw\.githubusercontent\.com\/([^\/]+)\/([^\/]+)\/([^\/]+)\/(.+)/</span>;</span><br><span class="line">  <span class="keyword">const</span> match = githubUrl.<span class="title function_">match</span>(regex);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (match) &#123;</span><br><span class="line">    <span class="keyword">const</span> [, user, repo, branch, path] = match;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`https://cdn.jsdelivr.net/gh/<span class="subst">$&#123;user&#125;</span>/<span class="subst">$&#123;repo&#125;</span>@<span class="subst">$&#123;branch&#125;</span>/<span class="subst">$&#123;path&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> githubUrl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> originalUrl = <span class="string">&quot;https://raw.githubusercontent.com/user/repo/main/image.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> cdnUrl = <span class="title function_">convertToJsDelivr</span>(originalUrl);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(cdnUrl); <span class="comment">// https://cdn.jsdelivr.net/gh/user/repo@main/image.jpg</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）版本管理策略"><a href="#（三）版本管理策略" class="headerlink" title="（三）版本管理策略"></a>（三）版本管理策略</h2><h3 id="1-使用标签版本（推荐）"><a href="#1-使用标签版本（推荐）" class="headerlink" title="1. 使用标签版本（推荐）"></a>1. 使用标签版本（推荐）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用具体版本标签，确保稳定性</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3.6.0/dist/jquery.min.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用语义化版本范围</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js  <span class="comment"># 最新3.x版本</span></span><br></pre></td></tr></table></figure>

<h3 id="2-使用分支版本"><a href="#2-使用分支版本" class="headerlink" title="2. 使用分支版本"></a>2. 使用分支版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用主分支（内容可能变化）</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/username/repo@main/file.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用开发分支</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/username/repo@develop/file.js</span><br></pre></td></tr></table></figure>

<h3 id="3-版本选择建议"><a href="#3-版本选择建议" class="headerlink" title="3. 版本选择建议"></a>3. 版本选择建议</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**生产环境**</span></span><br><span class="line"><span class="bullet">-</span> 使用具体的标签版本</span><br><span class="line"><span class="bullet">-</span> 避免使用分支名称</span><br><span class="line"><span class="bullet">-</span> 定期更新版本</span><br><span class="line"></span><br><span class="line"><span class="strong">**开发环境**</span></span><br><span class="line"><span class="bullet">-</span> 可以使用分支名称</span><br><span class="line"><span class="bullet">-</span> 便于测试最新功能</span><br><span class="line"><span class="bullet">-</span> 注意缓存问题</span><br></pre></td></tr></table></figure>

<h1 id="三、npm包分发服务"><a href="#三、npm包分发服务" class="headerlink" title="三、npm包分发服务"></a>三、npm包分发服务</h1><h2 id="（一）npm包CDN使用"><a href="#（一）npm包CDN使用" class="headerlink" title="（一）npm包CDN使用"></a>（一）npm包CDN使用</h2><h3 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 完整格式</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名@版本号/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用最新版本</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名/文件路径</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定版本范围</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名@^1.0.0/文件路径</span><br></pre></td></tr></table></figure>

<h3 id="2-常用前端库示例"><a href="#2-常用前端库示例" class="headerlink" title="2. 常用前端库示例"></a>2. 常用前端库示例</h3><h4 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Vue 3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Vue 2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="React"><a href="#React" class="headerlink" title="React"></a>React</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- React 开发版 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/react@18/umd/react.development.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/react-dom@18/umd/react-dom.development.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- React 生产版 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/react@18/umd/react.production.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/react-dom@18/umd/react-dom.production.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="工具库"><a href="#工具库" class="headerlink" title="工具库"></a>工具库</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Lodash --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lodash@4/lodash.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Moment.js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/moment@2/moment.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Axios --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios@1/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）包文件浏览"><a href="#（二）包文件浏览" class="headerlink" title="（二）包文件浏览"></a>（二）包文件浏览</h2><h3 id="1-浏览包内容"><a href="#1-浏览包内容" class="headerlink" title="1. 浏览包内容"></a>1. 浏览包内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看包的所有文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看特定版本的文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/包名@版本号/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：查看Vue包内容</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3/</span><br></pre></td></tr></table></figure>

<h3 id="2-自动文件选择"><a href="#2-自动文件选择" class="headerlink" title="2. 自动文件选择"></a>2. 自动文件选择</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jsDelivr会自动选择合适的文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3  <span class="comment"># 自动选择 dist/vue.global.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动指定文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3/dist/vue.esm-browser.js</span><br></pre></td></tr></table></figure>

<h2 id="（三）组合加载功能"><a href="#（三）组合加载功能" class="headerlink" title="（三）组合加载功能"></a>（三）组合加载功能</h2><h3 id="1-多文件合并"><a href="#1-多文件合并" class="headerlink" title="1. 多文件合并"></a>1. 多文件合并</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 合并多个文件为一个请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/combine/npm/jquery@3,npm/bootstrap@5/dist/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 合并CSS文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/combine/npm/bootstrap@5/dist/css/bootstrap.min.css,npm/font-awesome@6/css/all.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-压缩和优化"><a href="#2-压缩和优化" class="headerlink" title="2. 压缩和优化"></a>2. 压缩和优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动压缩（添加.min后缀）</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.min.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 原始文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js</span><br></pre></td></tr></table></figure>

<h1 id="四、高级功能与配置"><a href="#四、高级功能与配置" class="headerlink" title="四、高级功能与配置"></a>四、高级功能与配置</h1><h2 id="（一）API接口使用"><a href="#（一）API接口使用" class="headerlink" title="（一）API接口使用"></a>（一）API接口使用</h2><h3 id="1-包信息查询"><a href="#1-包信息查询" class="headerlink" title="1. 包信息查询"></a>1. 包信息查询</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取包的基本信息</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://data.jsdelivr.com/v1/package/npm/vue&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取包的版本列表</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://data.jsdelivr.com/v1/package/npm/vue/versions&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data));</span><br></pre></td></tr></table></figure>

<h3 id="2-文件列表查询"><a href="#2-文件列表查询" class="headerlink" title="2. 文件列表查询"></a>2. 文件列表查询</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取包的文件列表</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://data.jsdelivr.com/v1/package/npm/vue@3/flat&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">files</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取GitHub仓库文件列表</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://data.jsdelivr.com/v1/package/gh/jquery/jquery@3.6.0/flat&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">files</span>));</span><br></pre></td></tr></table></figure>

<h3 id="3-统计信息查询"><a href="#3-统计信息查询" class="headerlink" title="3. 统计信息查询"></a>3. 统计信息查询</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取包的下载统计</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://data.jsdelivr.com/v1/package/npm/vue/stats&#x27;</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data));</span><br></pre></td></tr></table></figure>

<h2 id="（二）缓存控制"><a href="#（二）缓存控制" class="headerlink" title="（二）缓存控制"></a>（二）缓存控制</h2><h3 id="1-缓存策略理解"><a href="#1-缓存策略理解" class="headerlink" title="1. 缓存策略理解"></a>1. 缓存策略理解</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**默认缓存时间**</span></span><br><span class="line"><span class="bullet">-</span> 稳定版本：7天</span><br><span class="line"><span class="bullet">-</span> 预发布版本：1天</span><br><span class="line"><span class="bullet">-</span> 分支版本：12小时</span><br><span class="line"></span><br><span class="line"><span class="strong">**缓存刷新**</span></span><br><span class="line"><span class="bullet">-</span> 自动刷新：根据版本更新</span><br><span class="line"><span class="bullet">-</span> 手动刷新：通过API接口</span><br></pre></td></tr></table></figure>

<h3 id="2-缓存刷新方法"><a href="#2-缓存刷新方法" class="headerlink" title="2. 缓存刷新方法"></a>2. 缓存刷新方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过API刷新缓存</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://purge.jsdelivr.net/npm/package@version/file&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 示例：刷新特定文件缓存</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://purge.jsdelivr.net/npm/vue@3/dist/vue.global.js&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="（三）性能优化技巧"><a href="#（三）性能优化技巧" class="headerlink" title="（三）性能优化技巧"></a>（三）性能优化技巧</h2><h3 id="1-预加载和预连接"><a href="#1-预加载和预连接" class="headerlink" title="1. 预加载和预连接"></a>1. 预加载和预连接</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- DNS预解析 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;dns-prefetch&quot;</span> <span class="attr">href</span>=<span class="string">&quot;//cdn.jsdelivr.net&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 预连接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preconnect&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 预加载关键资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-资源优先级控制"><a href="#2-资源优先级控制" class="headerlink" title="2. 资源优先级控制"></a>2. 资源优先级控制</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 高优先级资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 低优先级资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lodash@4/lodash.min.js&quot;</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-错误处理和回退"><a href="#3-错误处理和回退" class="headerlink" title="3. 错误处理和回退"></a>3. 错误处理和回退</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// CDN加载失败时的回退方案</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">loadScript</span>(<span class="params">src, fallback</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  script.<span class="property">src</span> = src;</span></span><br><span class="line"><span class="language-javascript">  script.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&#x27;CDN加载失败，使用备用源&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> fallbackScript = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    fallbackScript.<span class="property">src</span> = fallback;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(fallbackScript);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 使用示例</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">loadScript</span>(</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&#x27;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="string">&#x27;/local/vue.global.js&#x27;</span>  <span class="comment">// 本地备用文件</span></span></span><br><span class="line"><span class="language-javascript">);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="五、实际应用案例"><a href="#五、实际应用案例" class="headerlink" title="五、实际应用案例"></a>五、实际应用案例</h1><h2 id="（一）个人博客优化"><a href="#（一）个人博客优化" class="headerlink" title="（一）个人博客优化"></a>（一）个人博客优化</h2><h3 id="1-静态资源CDN化"><a href="#1-静态资源CDN化" class="headerlink" title="1. 静态资源CDN化"></a>1. 静态资源CDN化</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- CSS库 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5/dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/prismjs@1/themes/prism.css&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 自定义样式（通过GitHub仓库） --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/username/blog-assets/css/custom.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- JavaScript库 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5/dist/js/bootstrap.bundle.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-core.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 自定义脚本 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/username/blog-assets/js/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-图片资源优化"><a href="#2-图片资源优化" class="headerlink" title="2. 图片资源优化"></a>2. 图片资源优化</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 博客文章中的图片 --&gt;</span><br><span class="line">![<span class="string">文章配图</span>](<span class="link">https://cdn.jsdelivr.net/gh/username/blog-images/posts/article-1/cover.jpg</span>)</span><br><span class="line"></span><br><span class="line">&lt;!-- 头像和Logo --&gt;</span><br><span class="line">![<span class="string">头像</span>](<span class="link">https://cdn.jsdelivr.net/gh/username/blog-images/avatar.jpg</span>)</span><br><span class="line">![<span class="string">Logo</span>](<span class="link">https://cdn.jsdelivr.net/gh/username/blog-images/logo.svg</span>)</span><br></pre></td></tr></table></figure>

<h2 id="（二）开源项目文档"><a href="#（二）开源项目文档" class="headerlink" title="（二）开源项目文档"></a>（二）开源项目文档</h2><h3 id="1-文档站点资源"><a href="#1-文档站点资源" class="headerlink" title="1. 文档站点资源"></a>1. 文档站点资源</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文档主题样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/vue.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 文档功能插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify@4/lib/docsify.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/docsify@4/lib/plugins/search.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-bash.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-示例代码托管"><a href="#2-示例代码托管" class="headerlink" title="2. 示例代码托管"></a>2. 示例代码托管</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在文档中引用GitHub仓库的示例代码</span></span><br><span class="line"><span class="keyword">const</span> exampleUrl = <span class="string">&#x27;https://cdn.jsdelivr.net/gh/username/project-examples/basic-usage.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(exampleUrl)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">text</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">code</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code-example&#x27;</span>).<span class="property">textContent</span> = code;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="（三）企业级应用"><a href="#（三）企业级应用" class="headerlink" title="（三）企业级应用"></a>（三）企业级应用</h2><h3 id="1-微前端架构"><a href="#1-微前端架构" class="headerlink" title="1. 微前端架构"></a>1. 微前端架构</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态加载微应用资源</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">loadMicroApp</span> = <span class="keyword">async</span> (<span class="params">appName, version</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> baseUrl = <span class="string">`https://cdn.jsdelivr.net/gh/company/<span class="subst">$&#123;appName&#125;</span>@<span class="subst">$&#123;version&#125;</span>`</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 加载CSS</span></span><br><span class="line">  <span class="keyword">const</span> link = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;link&#x27;</span>);</span><br><span class="line">  link.<span class="property">rel</span> = <span class="string">&#x27;stylesheet&#x27;</span>;</span><br><span class="line">  link.<span class="property">href</span> = <span class="string">`<span class="subst">$&#123;baseUrl&#125;</span>/dist/app.css`</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(link);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 加载JavaScript</span></span><br><span class="line">  <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">  script.<span class="property">src</span> = <span class="string">`<span class="subst">$&#123;baseUrl&#125;</span>/dist/app.js`</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="title function_">loadMicroApp</span>(<span class="string">&#x27;user-management&#x27;</span>, <span class="string">&#x27;v1.2.0&#x27;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="2-组件库分发"><a href="#2-组件库分发" class="headerlink" title="2. 组件库分发"></a>2. 组件库分发</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 企业组件库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/company/ui-components@latest/dist/components.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/company/ui-components@latest/dist/components.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 特定版本的组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/company/ui-components@v2.1.0/dist/button.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="六、最佳实践与注意事项"><a href="#六、最佳实践与注意事项" class="headerlink" title="六、最佳实践与注意事项"></a>六、最佳实践与注意事项</h1><h2 id="（一）使用最佳实践"><a href="#（一）使用最佳实践" class="headerlink" title="（一）使用最佳实践"></a>（一）使用最佳实践</h2><h3 id="1-版本管理策略"><a href="#1-版本管理策略" class="headerlink" title="1. 版本管理策略"></a>1. 版本管理策略</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**生产环境建议**</span></span><br><span class="line"><span class="bullet">-</span> 使用具体的版本号，避免使用latest</span><br><span class="line"><span class="bullet">-</span> 定期更新依赖版本</span><br><span class="line"><span class="bullet">-</span> 建立版本回退机制</span><br><span class="line"></span><br><span class="line"><span class="strong">**开发环境建议**</span></span><br><span class="line"><span class="bullet">-</span> 可以使用分支名称进行测试</span><br><span class="line"><span class="bullet">-</span> 注意缓存对开发的影响</span><br><span class="line"><span class="bullet">-</span> 使用本地开发服务器作为备用</span><br></pre></td></tr></table></figure>

<h3 id="2-性能优化建议"><a href="#2-性能优化建议" class="headerlink" title="2. 性能优化建议"></a>2. 性能优化建议</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 资源预加载 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 关键CSS内联 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 关键样式内联，非关键样式使用CDN */</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5/dist/css/bootstrap.min.css&quot;</span> <span class="attr">media</span>=<span class="string">&quot;print&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;this.media=&#x27;all&#x27;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 非阻塞加载 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/lodash@4/lodash.min.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-安全性考虑"><a href="#3-安全性考虑" class="headerlink" title="3. 安全性考虑"></a>3. 安全性考虑</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用SRI确保文件完整性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3.3.4/dist/vue.global.js&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">integrity</span>=<span class="string">&quot;sha384-...&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- CSP策略配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Security-Policy&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">&quot;script-src &#x27;self&#x27; https://cdn.jsdelivr.net; style-src &#x27;self&#x27; https://cdn.jsdelivr.net;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）常见问题解决"><a href="#（二）常见问题解决" class="headerlink" title="（二）常见问题解决"></a>（二）常见问题解决</h2><h3 id="1-缓存问题"><a href="#1-缓存问题" class="headerlink" title="1. 缓存问题"></a>1. 缓存问题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 强制刷新缓存的方法</span></span><br><span class="line"><span class="keyword">const</span> timestamp = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">`https://cdn.jsdelivr.net/gh/username/repo/file.js?t=<span class="subst">$&#123;timestamp&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者使用版本号</span></span><br><span class="line"><span class="keyword">const</span> version = <span class="string">&#x27;1.0.1&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">`https://cdn.jsdelivr.net/gh/username/repo@v<span class="subst">$&#123;version&#125;</span>/file.js`</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-访问限制"><a href="#2-访问限制" class="headerlink" title="2. 访问限制"></a>2. 访问限制</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**文件大小限制**</span></span><br><span class="line"><span class="bullet">-</span> 单个文件最大50MB</span><br><span class="line"><span class="bullet">-</span> 建议将大文件分割或压缩</span><br><span class="line"></span><br><span class="line"><span class="strong">**仓库大小限制**</span></span><br><span class="line"><span class="bullet">-</span> GitHub仓库建议不超过1GB</span><br><span class="line"><span class="bullet">-</span> 定期清理不必要的文件</span><br><span class="line"></span><br><span class="line"><span class="strong">**流量限制**</span></span><br><span class="line"><span class="bullet">-</span> 个人使用通常不会触及限制</span><br><span class="line"><span class="bullet">-</span> 商业用途建议联系jsDelivr团队</span><br></pre></td></tr></table></figure>

<h3 id="3-故障处理"><a href="#3-故障处理" class="headerlink" title="3. 故障处理"></a>3. 故障处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 多CDN备用方案</span></span><br><span class="line"><span class="keyword">const</span> cdnSources = [</span><br><span class="line">  <span class="string">&#x27;https://cdn.jsdelivr.net/npm/vue@3/dist/vue.global.js&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.global.js&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;/local/vue.global.js&#x27;</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadWithFallback</span>(<span class="params">sources, index = <span class="number">0</span></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (index &gt;= sources.<span class="property">length</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;所有CDN源都无法访问&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line">  script.<span class="property">src</span> = sources[index];</span><br><span class="line">  script.<span class="property">onload</span> = <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`成功加载: <span class="subst">$&#123;sources[index]&#125;</span>`</span>);</span><br><span class="line">  script.<span class="property">onerror</span> = <span class="function">() =&gt;</span> <span class="title function_">loadWithFallback</span>(sources, index + <span class="number">1</span>);</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">head</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">loadWithFallback</span>(cdnSources);</span><br></pre></td></tr></table></figure>

<h1 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h1><p>jsDelivr作为一个优秀的免费CDN服务，为全球开发者提供了强大的静态资源分发能力。通过本文的详细介绍，您应该能够：</p>
<h2 id="（一）核心收获"><a href="#（一）核心收获" class="headerlink" title="（一）核心收获"></a>（一）核心收获</h2><ol>
<li><strong>理解jsDelivr</strong>：掌握jsDelivr的基本概念和工作原理</li>
<li><strong>熟练使用</strong>：能够正确配置和使用各种jsDelivr服务</li>
<li><strong>性能优化</strong>：通过CDN显著提升网站访问速度</li>
<li><strong>最佳实践</strong>：遵循安全和性能的最佳实践</li>
</ol>
<h2 id="（二）应用场景"><a href="#（二）应用场景" class="headerlink" title="（二）应用场景"></a>（二）应用场景</h2><h3 id="1-个人项目"><a href="#1-个人项目" class="headerlink" title="1. 个人项目"></a>1. 个人项目</h3><ul>
<li><strong>博客图床</strong>：GitHub + jsDelivr的完美组合</li>
<li><strong>静态网站</strong>：加速CSS、JS等静态资源</li>
<li><strong>开源项目</strong>：为项目提供可靠的CDN支持</li>
</ul>
<h3 id="2-企业应用"><a href="#2-企业应用" class="headerlink" title="2. 企业应用"></a>2. 企业应用</h3><ul>
<li><strong>微前端</strong>：动态加载和分发微应用资源</li>
<li><strong>组件库</strong>：企业级组件的CDN分发</li>
<li><strong>文档站点</strong>：技术文档的资源优化</li>
</ul>
<h2 id="（三）发展趋势"><a href="#（三）发展趋势" class="headerlink" title="（三）发展趋势"></a>（三）发展趋势</h2><p>随着Web技术的不断发展，CDN服务也在持续演进：</p>
<ol>
<li><strong>边缘计算</strong>：更靠近用户的内容分发</li>
<li><strong>智能优化</strong>：AI驱动的缓存和路由策略</li>
<li><strong>安全增强</strong>：更强的内容安全和完整性保护</li>
<li><strong>生态整合</strong>：与更多开发工具和平台的深度集成</li>
</ol>
<p>jsDelivr作为开源CDN的领导者，将继续为开发者提供更好的服务。掌握jsDelivr的使用，不仅能提升项目性能，更是现代Web开发的必备技能。</p>
<p>记住，好的CDN服务配合正确的使用方法，才能发挥最大的价值。希望本文能帮助您更好地使用jsDelivr，提升您的Web项目性能！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jsdelivr.com/">jsDelivr官方网站</a></li>
<li><a href="https://github.com/jsdelivr/jsdelivr">jsDelivr GitHub仓库</a></li>
<li><a href="https://github.com/jsdelivr/data.jsdelivr.com">jsDelivr API文档</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/content-distribution-networks">CDN最佳实践指南</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[全面介绍jsDelivr CDN服务的使用方法、配置技巧和最佳实践，涵盖GitHub仓库加速、npm包分发、开源项目CDN等多种应用场景]]>
    
    </summary>
    
      <category term="GitHub" scheme="https://uwakeme.top/tags/GitHub/"/>
    
      <category term="前端" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="性能优化" scheme="https://uwakeme.top/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="工具" scheme="https://uwakeme.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="开源" scheme="https://uwakeme.top/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="CDN" scheme="https://uwakeme.top/tags/CDN/"/>
    
      <category term="jsDelivr" scheme="https://uwakeme.top/tags/jsDelivr/"/>
    
      <category term="工具" scheme="https://uwakeme.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【工具】图床完全指南：从选择到搭建的全方位解决方案]]></title>
    <link href="https://uwakeme.top/2025/07/25/%E5%B7%A5%E5%85%B7/%E3%80%90%E5%B7%A5%E5%85%B7%E3%80%91%E5%9B%BE%E5%BA%8A%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97%EF%BC%9A%E4%BB%8E%E9%80%89%E6%8B%A9%E5%88%B0%E6%90%AD%E5%BB%BA%E7%9A%84%E5%85%A8%E6%96%B9%E4%BD%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://uwakeme.top/2025/07/25/工具/【工具】图床完全指南：从选择到搭建的全方位解决方案/</id>
    <published>2025-07-24T16:00:00.000Z</published>
    <updated>2025-07-25T03:18:00.665Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在数字化内容创作的时代，图片已经成为博客、文档、社交媒体等平台不可或缺的元素。然而，如何高效、稳定地存储和分发图片资源，一直是内容创作者面临的重要问题。图床（Image Hosting）作为专门的图片存储和分发服务，为这个问题提供了完美的解决方案。本文将全面介绍图床的概念、分类、选择标准以及各种搭建方案。</p>
<h1 id="一、图床基础概念"><a href="#一、图床基础概念" class="headerlink" title="一、图床基础概念"></a>一、图床基础概念</h1><h2 id="（一）什么是图床"><a href="#（一）什么是图床" class="headerlink" title="（一）什么是图床"></a>（一）什么是图床</h2><p>图床是指专门用于存储图片并提供外链访问的服务平台。它的主要功能包括：</p>
<ol>
<li><strong>图片存储</strong>：提供稳定的图片存储空间</li>
<li><strong>外链服务</strong>：生成可直接访问的图片URL</li>
<li><strong>CDN加速</strong>：通过内容分发网络提高访问速度</li>
<li><strong>批量管理</strong>：支持图片的批量上传、删除、分类等操作</li>
</ol>
<h2 id="（二）图床的工作原理"><a href="#（二）图床的工作原理" class="headerlink" title="（二）图床的工作原理"></a>（二）图床的工作原理</h2><pre class="mermaid">graph LR
    A[用户上传图片] --> B[图床服务器]
    B --> C[存储到云端]
    C --> D[生成外链URL]
    D --> E[CDN分发]
    E --> F[用户访问图片]</pre>

<h3 id="1-上传流程"><a href="#1-上传流程" class="headerlink" title="1. 上传流程"></a>1. 上传流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 典型的图片上传流程</span></span><br><span class="line">1. 用户选择图片文件</span><br><span class="line">2. 客户端压缩/处理图片（可选）</span><br><span class="line">3. 上传到图床服务器</span><br><span class="line">4. 服务器存储图片</span><br><span class="line">5. 返回图片的访问URL</span><br></pre></td></tr></table></figure>

<h3 id="2-访问流程"><a href="#2-访问流程" class="headerlink" title="2. 访问流程"></a>2. 访问流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图片访问流程</span></span><br><span class="line">1. 用户请求图片URL</span><br><span class="line">2. CDN节点检查缓存</span><br><span class="line">3. 如果缓存命中，直接返回</span><br><span class="line">4. 如果缓存未命中，从源站获取</span><br><span class="line">5. 返回图片给用户并缓存</span><br></pre></td></tr></table></figure>

<h2 id="（三）图床的优势"><a href="#（三）图床的优势" class="headerlink" title="（三）图床的优势"></a>（三）图床的优势</h2><h3 id="1-减轻服务器压力"><a href="#1-减轻服务器压力" class="headerlink" title="1. 减轻服务器压力"></a>1. 减轻服务器压力</h3><ul>
<li>将图片资源分离到专门的存储服务</li>
<li>减少主服务器的带宽和存储压力</li>
<li>提高网站整体性能</li>
</ul>
<h3 id="2-提升访问速度"><a href="#2-提升访问速度" class="headerlink" title="2. 提升访问速度"></a>2. 提升访问速度</h3><ul>
<li>利用CDN全球节点加速</li>
<li>专业的图片优化和压缩</li>
<li>支持多种图片格式和尺寸</li>
</ul>
<h3 id="3-降低成本"><a href="#3-降低成本" class="headerlink" title="3. 降低成本"></a>3. 降低成本</h3><ul>
<li>专业的存储服务成本更低</li>
<li>按需付费，避免资源浪费</li>
<li>减少服务器维护成本</li>
</ul>
<h3 id="4-提高可靠性"><a href="#4-提高可靠性" class="headerlink" title="4. 提高可靠性"></a>4. 提高可靠性</h3><ul>
<li>多重备份保障数据安全</li>
<li>专业的运维团队维护</li>
<li>高可用性保证</li>
</ul>
<h1 id="二、图床分类与对比"><a href="#二、图床分类与对比" class="headerlink" title="二、图床分类与对比"></a>二、图床分类与对比</h1><h2 id="（一）按服务类型分类"><a href="#（一）按服务类型分类" class="headerlink" title="（一）按服务类型分类"></a>（一）按服务类型分类</h2><h3 id="1-免费图床"><a href="#1-免费图床" class="headerlink" title="1. 免费图床"></a>1. 免费图床</h3><table>
<thead>
<tr>
<th>服务商</th>
<th>存储空间</th>
<th>单文件限制</th>
<th>CDN</th>
<th>稳定性</th>
<th>推荐度</th>
</tr>
</thead>
<tbody><tr>
<td>GitHub</td>
<td>1GB</td>
<td>25MB</td>
<td>有</td>
<td>高</td>
<td>⭐⭐⭐⭐⭐</td>
</tr>
<tr>
<td>Gitee</td>
<td>1GB</td>
<td>1MB</td>
<td>无</td>
<td>中</td>
<td>⭐⭐⭐</td>
</tr>
<tr>
<td>SM.MS</td>
<td>5GB</td>
<td>5MB</td>
<td>有</td>
<td>中</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>ImgBB</td>
<td>无限</td>
<td>32MB</td>
<td>有</td>
<td>中</td>
<td>⭐⭐⭐</td>
</tr>
</tbody></table>
<h3 id="2-付费图床"><a href="#2-付费图床" class="headerlink" title="2. 付费图床"></a>2. 付费图床</h3><table>
<thead>
<tr>
<th>服务商</th>
<th>价格</th>
<th>存储空间</th>
<th>带宽</th>
<th>CDN</th>
<th>推荐度</th>
</tr>
</thead>
<tbody><tr>
<td>七牛云</td>
<td>0.148元&#x2F;GB&#x2F;月</td>
<td>按需</td>
<td>0.29元&#x2F;GB</td>
<td>有</td>
<td>⭐⭐⭐⭐⭐</td>
</tr>
<tr>
<td>阿里云OSS</td>
<td>0.148元&#x2F;GB&#x2F;月</td>
<td>按需</td>
<td>0.5元&#x2F;GB</td>
<td>有</td>
<td>⭐⭐⭐⭐⭐</td>
</tr>
<tr>
<td>腾讯云COS</td>
<td>0.118元&#x2F;GB&#x2F;月</td>
<td>按需</td>
<td>0.5元&#x2F;GB</td>
<td>有</td>
<td>⭐⭐⭐⭐⭐</td>
</tr>
<tr>
<td>又拍云</td>
<td>0.117元&#x2F;GB&#x2F;月</td>
<td>按需</td>
<td>0.29元&#x2F;GB</td>
<td>有</td>
<td>⭐⭐⭐⭐</td>
</tr>
</tbody></table>
<h3 id="3-自建图床"><a href="#3-自建图床" class="headerlink" title="3. 自建图床"></a>3. 自建图床</h3><table>
<thead>
<tr>
<th>方案</th>
<th>成本</th>
<th>技术难度</th>
<th>可控性</th>
<th>稳定性</th>
<th>推荐度</th>
</tr>
</thead>
<tbody><tr>
<td>服务器+Nginx</td>
<td>中</td>
<td>中</td>
<td>高</td>
<td>中</td>
<td>⭐⭐⭐</td>
</tr>
<tr>
<td>MinIO</td>
<td>低</td>
<td>中</td>
<td>高</td>
<td>中</td>
<td>⭐⭐⭐⭐</td>
</tr>
<tr>
<td>Chevereto</td>
<td>中</td>
<td>低</td>
<td>高</td>
<td>中</td>
<td>⭐⭐⭐⭐</td>
</tr>
</tbody></table>
<h2 id="（二）按使用场景分类"><a href="#（二）按使用场景分类" class="headerlink" title="（二）按使用场景分类"></a>（二）按使用场景分类</h2><h3 id="1-个人博客图床"><a href="#1-个人博客图床" class="headerlink" title="1. 个人博客图床"></a>1. 个人博客图床</h3><p><strong>推荐方案</strong>：GitHub + jsDelivr CDN</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">优势：</span><br><span class="line"><span class="bullet">-</span> 完全免费</span><br><span class="line"><span class="bullet">-</span> 稳定可靠</span><br><span class="line"><span class="bullet">-</span> 版本控制</span><br><span class="line"><span class="bullet">-</span> 全球CDN加速</span><br><span class="line"></span><br><span class="line">劣势：</span><br><span class="line"><span class="bullet">-</span> 国内访问可能较慢</span><br><span class="line"><span class="bullet">-</span> 单文件25MB限制</span><br><span class="line"><span class="bullet">-</span> 需要一定技术基础</span><br></pre></td></tr></table></figure>

<h3 id="2-商业网站图床"><a href="#2-商业网站图床" class="headerlink" title="2. 商业网站图床"></a>2. 商业网站图床</h3><p><strong>推荐方案</strong>：阿里云OSS + CDN</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">优势：</span><br><span class="line"><span class="bullet">-</span> 高可用性</span><br><span class="line"><span class="bullet">-</span> 专业技术支持</span><br><span class="line"><span class="bullet">-</span> 丰富的API接口</span><br><span class="line"><span class="bullet">-</span> 强大的图片处理能力</span><br><span class="line"></span><br><span class="line">劣势：</span><br><span class="line"><span class="bullet">-</span> 需要付费</span><br><span class="line"><span class="bullet">-</span> 配置相对复杂</span><br></pre></td></tr></table></figure>

<h3 id="3-临时分享图床"><a href="#3-临时分享图床" class="headerlink" title="3. 临时分享图床"></a>3. 临时分享图床</h3><p><strong>推荐方案</strong>：SM.MS 或 ImgBB</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">优势：</span><br><span class="line"><span class="bullet">-</span> 无需注册</span><br><span class="line"><span class="bullet">-</span> 操作简单</span><br><span class="line"><span class="bullet">-</span> 即传即用</span><br><span class="line"></span><br><span class="line">劣势：</span><br><span class="line"><span class="bullet">-</span> 稳定性一般</span><br><span class="line"><span class="bullet">-</span> 功能有限</span><br><span class="line"><span class="bullet">-</span> 可能有时效限制</span><br></pre></td></tr></table></figure>

<h1 id="三、主流图床服务详解"><a href="#三、主流图床服务详解" class="headerlink" title="三、主流图床服务详解"></a>三、主流图床服务详解</h1><h2 id="（一）GitHub图床"><a href="#（一）GitHub图床" class="headerlink" title="（一）GitHub图床"></a>（一）GitHub图床</h2><h3 id="1-优势特点"><a href="#1-优势特点" class="headerlink" title="1. 优势特点"></a>1. 优势特点</h3><ul>
<li><strong>完全免费</strong>：每个仓库1GB存储空间</li>
<li><strong>版本控制</strong>：支持Git版本管理</li>
<li><strong>全球CDN</strong>：通过jsDelivr等CDN加速</li>
<li><strong>高稳定性</strong>：GitHub的可靠性保证</li>
</ul>
<h3 id="2-搭建步骤"><a href="#2-搭建步骤" class="headerlink" title="2. 搭建步骤"></a>2. 搭建步骤</h3><h4 id="第一步：创建GitHub仓库"><a href="#第一步：创建GitHub仓库" class="headerlink" title="第一步：创建GitHub仓库"></a>第一步：创建GitHub仓库</h4><ol>
<li>访问 <a href="https://github.com/new">https://github.com/new</a></li>
<li>输入仓库名称，如：<code>my-image-hosting</code></li>
<li>选择<strong>Public</strong>（公开仓库）</li>
<li>点击<strong>Create repository</strong>创建仓库</li>
</ol>
<h4 id="第二步：生成Personal-Access-Token"><a href="#第二步：生成Personal-Access-Token" class="headerlink" title="第二步：生成Personal Access Token"></a>第二步：生成Personal Access Token</h4><ol>
<li>进入GitHub设置页面：<strong>Settings</strong> → <strong>Developer settings</strong> → <strong>Personal access tokens</strong></li>
<li>点击<strong>Generate new token</strong></li>
<li>勾选<strong>repo</strong>权限（完整的仓库访问权限）</li>
<li>点击<strong>Generate token</strong>并保存生成的token</li>
</ol>
<h4 id="第三步：配置PicGo"><a href="#第三步：配置PicGo" class="headerlink" title="第三步：配置PicGo"></a>第三步：配置PicGo</h4><p>在PicGo中添加GitHub图床配置：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;repo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;username/my-image-hosting&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;branch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your_github_token&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;customUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/username/my-image-hosting&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-使用示例"><a href="#3-使用示例" class="headerlink" title="3. 使用示例"></a>3. 使用示例</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 原始GitHub链接</span></span><br><span class="line">https://raw.githubusercontent.com/username/repo/main/images/photo.jpg</span><br><span class="line"></span><br><span class="line"><span class="section"># jsDelivr CDN链接</span></span><br><span class="line">https://cdn.jsdelivr.net/gh/username/repo/images/photo.jpg</span><br><span class="line"></span><br><span class="line"><span class="section"># 在Markdown中使用</span></span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">https://cdn.jsdelivr.net/gh/username/repo/images/photo.jpg</span>)</span><br></pre></td></tr></table></figure>

<h2 id="（二）七牛云图床"><a href="#（二）七牛云图床" class="headerlink" title="（二）七牛云图床"></a>（二）七牛云图床</h2><h3 id="1-服务特点"><a href="#1-服务特点" class="headerlink" title="1. 服务特点"></a>1. 服务特点</h3><ul>
<li><strong>专业CDN</strong>：全球500+节点</li>
<li><strong>图片处理</strong>：支持实时图片处理</li>
<li><strong>API丰富</strong>：完善的开发接口</li>
<li><strong>价格合理</strong>：存储和流量费用较低</li>
</ul>
<h3 id="2-配置步骤"><a href="#2-配置步骤" class="headerlink" title="2. 配置步骤"></a>2. 配置步骤</h3><h4 id="第一步：注册七牛云账号"><a href="#第一步：注册七牛云账号" class="headerlink" title="第一步：注册七牛云账号"></a>第一步：注册七牛云账号</h4><ol>
<li>访问 <a href="https://www.qiniu.com/">https://www.qiniu.com/</a></li>
<li>点击<strong>注册</strong>按钮完成账号注册</li>
<li>完成实名认证（根据需要）</li>
</ol>
<h4 id="第二步：创建存储空间"><a href="#第二步：创建存储空间" class="headerlink" title="第二步：创建存储空间"></a>第二步：创建存储空间</h4><ol>
<li>登录七牛云控制台</li>
<li>进入<strong>对象存储</strong> → <strong>空间管理</strong></li>
<li>点击<strong>新建存储空间</strong></li>
<li>填写存储空间名称</li>
<li>选择存储区域（建议选择离用户较近的区域）</li>
<li>设置访问控制（建议选择<strong>公开空间</strong>）</li>
</ol>
<h4 id="第三步：获取密钥"><a href="#第三步：获取密钥" class="headerlink" title="第三步：获取密钥"></a>第三步：获取密钥</h4><ol>
<li>进入<strong>个人中心</strong> → <strong>密钥管理</strong></li>
<li>记录<strong>AccessKey</strong>和<strong>SecretKey</strong></li>
<li>妥善保管密钥信息</li>
</ol>
<h4 id="第四步：配置域名"><a href="#第四步：配置域名" class="headerlink" title="第四步：配置域名"></a>第四步：配置域名</h4><ol>
<li>在存储空间中绑定自定义域名</li>
<li>或使用七牛云提供的测试域名（有时效限制）</li>
</ol>
<h3 id="3-PicGo配置"><a href="#3-PicGo配置" class="headerlink" title="3. PicGo配置"></a>3. PicGo配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;accessKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your_access_key&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;secretKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your_secret_key&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;bucket&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your_bucket_name&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://your_domain.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;area&quot;</span><span class="punctuation">:</span> <span class="string">&quot;z0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/&#123;year&#125;/&#123;month&#125;/&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）阿里云OSS图床"><a href="#（三）阿里云OSS图床" class="headerlink" title="（三）阿里云OSS图床"></a>（三）阿里云OSS图床</h2><h3 id="1-服务优势"><a href="#1-服务优势" class="headerlink" title="1. 服务优势"></a>1. 服务优势</h3><ul>
<li><strong>高可用性</strong>：99.9%的服务可用性</li>
<li><strong>安全可靠</strong>：多重数据保护机制</li>
<li><strong>弹性扩展</strong>：按需扩展存储容量</li>
<li><strong>图片处理</strong>：强大的图片处理服务</li>
</ul>
<h3 id="2-基础配置"><a href="#2-基础配置" class="headerlink" title="2. 基础配置"></a>2. 基础配置</h3><h4 id="第一步：开通OSS服务"><a href="#第一步：开通OSS服务" class="headerlink" title="第一步：开通OSS服务"></a>第一步：开通OSS服务</h4><ol>
<li>访问阿里云控制台：<a href="https://oss.console.aliyun.com/">https://oss.console.aliyun.com/</a></li>
<li>点击<strong>立即开通</strong>对象存储OSS服务</li>
<li>根据需要选择计费方式</li>
</ol>
<h4 id="第二步：创建Bucket"><a href="#第二步：创建Bucket" class="headerlink" title="第二步：创建Bucket"></a>第二步：创建Bucket</h4><ol>
<li>在OSS控制台点击<strong>创建Bucket</strong></li>
<li>填写Bucket名称（全局唯一）</li>
<li>选择地域（建议选择离用户较近的地域）</li>
<li>选择存储类型（标准存储、低频访问、归档存储等）</li>
<li>设置读写权限（建议选择<strong>公共读</strong>）</li>
<li>点击<strong>确定</strong>创建</li>
</ol>
<h4 id="第三步：配置跨域规则"><a href="#第三步：配置跨域规则" class="headerlink" title="第三步：配置跨域规则"></a>第三步：配置跨域规则</h4><ol>
<li>进入创建的Bucket管理页面</li>
<li>点击<strong>权限管理</strong> → <strong>跨域设置</strong></li>
<li>点击<strong>设置</strong>添加跨域规则：<ul>
<li><strong>来源</strong>：<code>*</code>（允许所有来源）</li>
<li><strong>允许Methods</strong>：<code>GET, POST, PUT, DELETE, HEAD</code></li>
<li><strong>允许Headers</strong>：<code>*</code>（允许所有请求头）</li>
</ul>
</li>
</ol>
<h3 id="3-使用示例-1"><a href="#3-使用示例-1" class="headerlink" title="3. 使用示例"></a>3. 使用示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用阿里云OSS SDK上传图片</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">OSS</span> = <span class="built_in">require</span>(<span class="string">&#x27;ali-oss&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title function_">OSS</span>(&#123;</span><br><span class="line">  <span class="attr">region</span>: <span class="string">&#x27;oss-cn-hangzhou&#x27;</span>,</span><br><span class="line">  <span class="attr">accessKeyId</span>: <span class="string">&#x27;your_access_key_id&#x27;</span>,</span><br><span class="line">  <span class="attr">accessKeySecret</span>: <span class="string">&#x27;your_access_key_secret&#x27;</span>,</span><br><span class="line">  <span class="attr">bucket</span>: <span class="string">&#x27;your_bucket_name&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传图片</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">uploadImage</span>(<span class="params">file</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> client.<span class="title function_">put</span>(<span class="string">`images/<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>.jpg`</span>, file);</span><br><span class="line">    <span class="keyword">return</span> result.<span class="property">url</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;上传失败:&#x27;</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、图床工具推荐"><a href="#四、图床工具推荐" class="headerlink" title="四、图床工具推荐"></a>四、图床工具推荐</h1><h2 id="（一）PicGo-图片上传工具"><a href="#（一）PicGo-图片上传工具" class="headerlink" title="（一）PicGo - 图片上传工具"></a>（一）PicGo - 图片上传工具</h2><h3 id="1-功能特点"><a href="#1-功能特点" class="headerlink" title="1. 功能特点"></a>1. 功能特点</h3><ul>
<li><strong>多平台支持</strong>：Windows、macOS、Linux</li>
<li><strong>插件生态</strong>：丰富的插件扩展</li>
<li><strong>批量上传</strong>：支持拖拽批量上传</li>
<li><strong>快捷键</strong>：支持全局快捷键上传</li>
</ul>
<h3 id="2-安装配置"><a href="#2-安装配置" class="headerlink" title="2. 安装配置"></a>2. 安装配置</h3><h4 id="第一步：下载安装PicGo"><a href="#第一步：下载安装PicGo" class="headerlink" title="第一步：下载安装PicGo"></a>第一步：下载安装PicGo</h4><ol>
<li>访问PicGo官网：<a href="https://molunerfinn.com/PicGo/">https://molunerfinn.com/PicGo/</a></li>
<li>根据操作系统下载对应的安装包：<ul>
<li>Windows：下载<code>.exe</code>安装文件</li>
<li>macOS：下载<code>.dmg</code>安装文件</li>
<li>Linux：下载<code>.AppImage</code>文件</li>
</ul>
</li>
<li>运行安装程序完成安装</li>
</ol>
<h4 id="第二步：配置图床"><a href="#第二步：配置图床" class="headerlink" title="第二步：配置图床"></a>第二步：配置图床</h4><ol>
<li>打开PicGo应用程序</li>
<li>在左侧菜单选择<strong>图床设置</strong></li>
<li>选择要配置的图床类型（如GitHub、七牛云等）</li>
<li>填写相关配置信息（密钥、存储空间等）</li>
<li>点击<strong>确定</strong>保存配置</li>
<li>点击<strong>设为默认图床</strong></li>
</ol>
<h4 id="第三步：测试上传功能"><a href="#第三步：测试上传功能" class="headerlink" title="第三步：测试上传功能"></a>第三步：测试上传功能</h4><ol>
<li>在<strong>上传区</strong>拖拽图片或点击上传</li>
<li>查看上传结果和生成的链接</li>
<li>确认图片可以正常访问</li>
</ol>
<h3 id="3-常用插件"><a href="#3-常用插件" class="headerlink" title="3. 常用插件"></a>3. 常用插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitHub Plus - 增强GitHub图床功能</span></span><br><span class="line">npm install picgo-plugin-github-plus</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩插件 - 自动压缩图片</span></span><br><span class="line">npm install picgo-plugin-compress</span><br><span class="line"></span><br><span class="line"><span class="comment"># 水印插件 - 添加水印</span></span><br><span class="line">npm install picgo-plugin-watermark</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名插件 - 自定义文件名</span></span><br><span class="line">npm install picgo-plugin-rename-file</span><br></pre></td></tr></table></figure>

<h2 id="（二）uPic-macOS图床工具"><a href="#（二）uPic-macOS图床工具" class="headerlink" title="（二）uPic - macOS图床工具"></a>（二）uPic - macOS图床工具</h2><h3 id="1-特色功能"><a href="#1-特色功能" class="headerlink" title="1. 特色功能"></a>1. 特色功能</h3><ul>
<li><strong>原生macOS应用</strong>：完美适配macOS</li>
<li><strong>多种上传方式</strong>：拖拽、快捷键、右键菜单</li>
<li><strong>自动压缩</strong>：智能图片压缩</li>
<li><strong>历史记录</strong>：完整的上传历史</li>
</ul>
<h3 id="2-支持的图床"><a href="#2-支持的图床" class="headerlink" title="2. 支持的图床"></a>2. 支持的图床</h3><ul>
<li>七牛云</li>
<li>阿里云OSS</li>
<li>腾讯云COS</li>
<li>GitHub</li>
<li>Gitee</li>
<li>SM.MS</li>
</ul>
<h2 id="（三）Typora集成"><a href="#（三）Typora集成" class="headerlink" title="（三）Typora集成"></a>（三）Typora集成</h2><h3 id="1-配置图片上传"><a href="#1-配置图片上传" class="headerlink" title="1. 配置图片上传"></a>1. 配置图片上传</h3><h4 id="在Typora中配置图片自动上传："><a href="#在Typora中配置图片自动上传：" class="headerlink" title="在Typora中配置图片自动上传："></a>在Typora中配置图片自动上传：</h4><ol>
<li>打开Typora编辑器</li>
<li>进入菜单：<strong>文件</strong> → <strong>偏好设置</strong> → <strong>图像</strong></li>
<li>在<strong>插入图片时</strong>选项中选择：<strong>上传图片</strong></li>
<li>在<strong>上传服务设定</strong>中选择：<strong>PicGo(app)</strong></li>
<li>点击<strong>PicGo路径</strong>后的文件夹图标，选择PicGo的安装路径</li>
<li>点击<strong>验证图片上传选项</strong>测试配置是否正确</li>
</ol>
<h3 id="2-使用体验"><a href="#2-使用体验" class="headerlink" title="2. 使用体验"></a>2. 使用体验</h3><ul>
<li><strong>无缝集成</strong>：粘贴图片自动上传</li>
<li><strong>实时预览</strong>：上传后立即显示</li>
<li><strong>格式转换</strong>：自动转换为Markdown格式</li>
</ul>
<h1 id="五、自建图床方案"><a href="#五、自建图床方案" class="headerlink" title="五、自建图床方案"></a>五、自建图床方案</h1><h2 id="（一）基于MinIO的自建图床"><a href="#（一）基于MinIO的自建图床" class="headerlink" title="（一）基于MinIO的自建图床"></a>（一）基于MinIO的自建图床</h2><h3 id="1-MinIO简介"><a href="#1-MinIO简介" class="headerlink" title="1. MinIO简介"></a>1. MinIO简介</h3><p>MinIO是一个高性能的对象存储服务，兼容Amazon S3 API，适合自建图床。</p>
<h3 id="2-部署步骤"><a href="#2-部署步骤" class="headerlink" title="2. 部署步骤"></a>2. 部署步骤</h3><h4 id="第一步：安装Docker"><a href="#第一步：安装Docker" class="headerlink" title="第一步：安装Docker"></a>第一步：安装Docker</h4><p>确保系统已安装Docker，如未安装请先安装Docker。</p>
<h4 id="第二步：部署MinIO容器"><a href="#第二步：部署MinIO容器" class="headerlink" title="第二步：部署MinIO容器"></a>第二步：部署MinIO容器</h4><p>使用以下Docker命令部署MinIO：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name minio \</span><br><span class="line">  -p 9000:9000 \</span><br><span class="line">  -p 9001:9001 \</span><br><span class="line">  -e <span class="string">&quot;MINIO_ROOT_USER=admin&quot;</span> \</span><br><span class="line">  -e <span class="string">&quot;MINIO_ROOT_PASSWORD=password123&quot;</span> \</span><br><span class="line">  -v /data/minio:/data \</span><br><span class="line">  minio/minio server /data --console-address <span class="string">&quot;:9001&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="第三步：访问管理界面"><a href="#第三步：访问管理界面" class="headerlink" title="第三步：访问管理界面"></a>第三步：访问管理界面</h4><ol>
<li>打开浏览器访问：<a href="http://localhost:9001/">http://localhost:9001</a></li>
<li>使用以下凭据登录：<ul>
<li><strong>用户名</strong>：admin</li>
<li><strong>密码</strong>：password123</li>
</ul>
</li>
</ol>
<h3 id="3-配置存储桶"><a href="#3-配置存储桶" class="headerlink" title="3. 配置存储桶"></a>3. 配置存储桶</h3><h4 id="创建存储桶步骤："><a href="#创建存储桶步骤：" class="headerlink" title="创建存储桶步骤："></a>创建存储桶步骤：</h4><ol>
<li>登录MinIO管理控制台</li>
<li>在主界面点击<strong>Create Bucket</strong>按钮</li>
<li>输入存储桶名称，例如：<code>images</code></li>
<li>点击<strong>Create Bucket</strong>创建存储桶</li>
<li>进入存储桶设置，将访问策略设置为<strong>Public</strong>（公开访问）</li>
</ol>
<h3 id="4-API使用示例"><a href="#4-API使用示例" class="headerlink" title="4. API使用示例"></a>4. API使用示例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用MinIO JavaScript SDK</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Minio</span> = <span class="built_in">require</span>(<span class="string">&#x27;minio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> minioClient = <span class="keyword">new</span> <span class="title class_">Minio</span>.<span class="title class_">Client</span>(&#123;</span><br><span class="line">  <span class="attr">endPoint</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="number">9000</span>,</span><br><span class="line">  <span class="attr">useSSL</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">accessKey</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">  <span class="attr">secretKey</span>: <span class="string">&#x27;password123&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传图片</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">uploadImage</span>(<span class="params">bucketName, objectName, filePath</span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> minioClient.<span class="title function_">fPutObject</span>(bucketName, objectName, filePath);</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`http://localhost:9000/<span class="subst">$&#123;bucketName&#125;</span>/<span class="subst">$&#123;objectName&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">return</span> url;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;上传失败:&#x27;</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）基于Nginx的静态文件服务"><a href="#（二）基于Nginx的静态文件服务" class="headerlink" title="（二）基于Nginx的静态文件服务"></a>（二）基于Nginx的静态文件服务</h2><h3 id="1-Nginx配置"><a href="#1-Nginx配置" class="headerlink" title="1. Nginx配置"></a>1. Nginx配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nginx/sites-available/image-hosting</span></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> your-domain.com;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 图片存储目录</span></span><br><span class="line">    <span class="attribute">root</span> /var/www/images;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 允许上传的最大文件大小</span></span><br><span class="line">    <span class="attribute">client_max_body_size</span> <span class="number">10M</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 静态文件服务</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ =<span class="number">404</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 设置缓存</span></span><br><span class="line">        <span class="attribute">expires</span> <span class="number">30d</span>;</span><br><span class="line">        <span class="attribute">add_header</span> Cache-Control <span class="string">&quot;public, immutable&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 允许跨域</span></span><br><span class="line">        <span class="attribute">add_header</span> Access-Control-Allow-Origin *;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 上传接口</span></span><br><span class="line">    <span class="section">location</span> /upload &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:3000;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-上传服务实现"><a href="#2-上传服务实现" class="headerlink" title="2. 上传服务实现"></a>2. 上传服务实现</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Node.js + Express 上传服务</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置文件存储</span></span><br><span class="line"><span class="keyword">const</span> storage = multer.<span class="title function_">diskStorage</span>(&#123;</span><br><span class="line">  <span class="attr">destination</span>: <span class="string">&#x27;/var/www/images/&#x27;</span>,</span><br><span class="line">  <span class="attr">filename</span>: <span class="function">(<span class="params">req, file, cb</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> uniqueName = <span class="title class_">Date</span>.<span class="title function_">now</span>() + <span class="string">&#x27;-&#x27;</span> + <span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1E9</span>);</span><br><span class="line">    <span class="keyword">const</span> ext = path.<span class="title function_">extname</span>(file.<span class="property">originalname</span>);</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, uniqueName + ext);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> upload = <span class="title function_">multer</span>(&#123; storage &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传接口</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/upload&#x27;</span>, upload.<span class="title function_">single</span>(<span class="string">&#x27;image&#x27;</span>), <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!req.<span class="property">file</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">400</span>).<span class="title function_">json</span>(&#123; <span class="attr">error</span>: <span class="string">&#x27;没有上传文件&#x27;</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> imageUrl = <span class="string">`http://your-domain.com/<span class="subst">$&#123;req.file.filename&#125;</span>`</span>;</span><br><span class="line">  res.<span class="title function_">json</span>(&#123; <span class="attr">url</span>: imageUrl &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;上传服务启动在端口3000&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="六、图床选择指南"><a href="#六、图床选择指南" class="headerlink" title="六、图床选择指南"></a>六、图床选择指南</h1><h2 id="（一）选择标准"><a href="#（一）选择标准" class="headerlink" title="（一）选择标准"></a>（一）选择标准</h2><h3 id="1-技术指标"><a href="#1-技术指标" class="headerlink" title="1. 技术指标"></a>1. 技术指标</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**存储容量**</span></span><br><span class="line"><span class="bullet">-</span> 个人博客：1-10GB足够</span><br><span class="line"><span class="bullet">-</span> 商业网站：根据实际需求选择</span><br><span class="line"><span class="bullet">-</span> 大型平台：TB级别存储</span><br><span class="line"></span><br><span class="line"><span class="strong">**访问速度**</span></span><br><span class="line"><span class="bullet">-</span> CDN覆盖范围</span><br><span class="line"><span class="bullet">-</span> 节点分布情况</span><br><span class="line"><span class="bullet">-</span> 国内外访问速度</span><br><span class="line"></span><br><span class="line"><span class="strong">**稳定性**</span></span><br><span class="line"><span class="bullet">-</span> 服务可用性（SLA）</span><br><span class="line"><span class="bullet">-</span> 数据备份机制</span><br><span class="line"><span class="bullet">-</span> 故障恢复能力</span><br><span class="line"></span><br><span class="line"><span class="strong">**安全性**</span></span><br><span class="line"><span class="bullet">-</span> 数据加密</span><br><span class="line"><span class="bullet">-</span> 访问控制</span><br><span class="line"><span class="bullet">-</span> 防盗链功能</span><br></pre></td></tr></table></figure>

<h3 id="2-成本考虑"><a href="#2-成本考虑" class="headerlink" title="2. 成本考虑"></a>2. 成本考虑</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**免费方案适用场景**</span></span><br><span class="line"><span class="bullet">-</span> 个人博客</span><br><span class="line"><span class="bullet">-</span> 学习项目</span><br><span class="line"><span class="bullet">-</span> 小流量网站</span><br><span class="line"></span><br><span class="line"><span class="strong">**付费方案适用场景**</span></span><br><span class="line"><span class="bullet">-</span> 商业网站</span><br><span class="line"><span class="bullet">-</span> 高流量应用</span><br><span class="line"><span class="bullet">-</span> 对稳定性要求高的项目</span><br><span class="line"></span><br><span class="line"><span class="strong">**自建方案适用场景**</span></span><br><span class="line"><span class="bullet">-</span> 对数据控制要求高</span><br><span class="line"><span class="bullet">-</span> 有技术团队维护</span><br><span class="line"><span class="bullet">-</span> 长期大量使用</span><br></pre></td></tr></table></figure>

<h2 id="（二）推荐方案"><a href="#（二）推荐方案" class="headerlink" title="（二）推荐方案"></a>（二）推荐方案</h2><h3 id="1-个人开发者"><a href="#1-个人开发者" class="headerlink" title="1. 个人开发者"></a>1. 个人开发者</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**入门推荐**</span>：GitHub + PicGo</span><br><span class="line"><span class="bullet">-</span> 完全免费</span><br><span class="line"><span class="bullet">-</span> 操作简单</span><br><span class="line"><span class="bullet">-</span> 社区支持好</span><br><span class="line"></span><br><span class="line"><span class="strong">**进阶推荐**</span>：七牛云</span><br><span class="line"><span class="bullet">-</span> 专业CDN服务</span><br><span class="line"><span class="bullet">-</span> 丰富的图片处理功能</span><br><span class="line"><span class="bullet">-</span> 价格合理</span><br></pre></td></tr></table></figure>

<h3 id="2-企业用户"><a href="#2-企业用户" class="headerlink" title="2. 企业用户"></a>2. 企业用户</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**小型企业**</span>：阿里云OSS</span><br><span class="line"><span class="bullet">-</span> 稳定可靠</span><br><span class="line"><span class="bullet">-</span> 技术支持完善</span><br><span class="line"><span class="bullet">-</span> 与其他阿里云服务集成好</span><br><span class="line"></span><br><span class="line"><span class="strong">**大型企业**</span>：多云架构</span><br><span class="line"><span class="bullet">-</span> 主备方案保证可用性</span><br><span class="line"><span class="bullet">-</span> 成本优化</span><br><span class="line"><span class="bullet">-</span> 风险分散</span><br></pre></td></tr></table></figure>

<h3 id="3-特殊需求"><a href="#3-特殊需求" class="headerlink" title="3. 特殊需求"></a>3. 特殊需求</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**高安全要求**</span>：自建MinIO</span><br><span class="line"><span class="bullet">-</span> 数据完全可控</span><br><span class="line"><span class="bullet">-</span> 可部署在内网</span><br><span class="line"><span class="bullet">-</span> 符合合规要求</span><br><span class="line"></span><br><span class="line"><span class="strong">**海外用户**</span>：AWS S3</span><br><span class="line"><span class="bullet">-</span> 全球覆盖最好</span><br><span class="line"><span class="bullet">-</span> 服务最成熟</span><br><span class="line"><span class="bullet">-</span> 生态最完善</span><br></pre></td></tr></table></figure>

<h1 id="七、图床使用最佳实践"><a href="#七、图床使用最佳实践" class="headerlink" title="七、图床使用最佳实践"></a>七、图床使用最佳实践</h1><h2 id="（一）图片优化"><a href="#（一）图片优化" class="headerlink" title="（一）图片优化"></a>（一）图片优化</h2><h3 id="1-格式选择"><a href="#1-格式选择" class="headerlink" title="1. 格式选择"></a>1. 格式选择</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**JPEG**</span></span><br><span class="line"><span class="bullet">-</span> 适用：照片、复杂图像</span><br><span class="line"><span class="bullet">-</span> 优势：压缩率高、兼容性好</span><br><span class="line"><span class="bullet">-</span> 劣势：有损压缩、不支持透明</span><br><span class="line"></span><br><span class="line"><span class="strong">**PNG**</span></span><br><span class="line"><span class="bullet">-</span> 适用：图标、简单图形</span><br><span class="line"><span class="bullet">-</span> 优势：无损压缩、支持透明</span><br><span class="line"><span class="bullet">-</span> 劣势：文件较大</span><br><span class="line"></span><br><span class="line"><span class="strong">**WebP**</span></span><br><span class="line"><span class="bullet">-</span> 适用：现代浏览器</span><br><span class="line"><span class="bullet">-</span> 优势：压缩率高、质量好</span><br><span class="line"><span class="bullet">-</span> 劣势：兼容性有限</span><br><span class="line"></span><br><span class="line"><span class="strong">**SVG**</span></span><br><span class="line"><span class="bullet">-</span> 适用：矢量图形、图标</span><br><span class="line"><span class="bullet">-</span> 优势：无限缩放、文件小</span><br><span class="line"><span class="bullet">-</span> 劣势：不适合复杂图像</span><br></pre></td></tr></table></figure>

<h3 id="2-尺寸优化"><a href="#2-尺寸优化" class="headerlink" title="2. 尺寸优化"></a>2. 尺寸优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用ImageMagick压缩图片</span></span><br><span class="line"><span class="comment"># 调整尺寸</span></span><br><span class="line">convert input.jpg -resize 800x600 output.jpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩质量</span></span><br><span class="line">convert input.jpg -quality 85 output.jpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量处理</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> *.jpg; <span class="keyword">do</span></span><br><span class="line">  convert <span class="string">&quot;<span class="variable">$file</span>&quot;</span> -resize 800x600 -quality 85 <span class="string">&quot;compressed_<span class="variable">$file</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="3-自动化处理"><a href="#3-自动化处理" class="headerlink" title="3. 自动化处理"></a>3. 自动化处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Sharp进行图片处理</span></span><br><span class="line"><span class="keyword">const</span> sharp = <span class="built_in">require</span>(<span class="string">&#x27;sharp&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">processImage</span>(<span class="params">inputPath, outputPath</span>) &#123;</span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">sharp</span>(inputPath)</span><br><span class="line">    .<span class="title function_">resize</span>(<span class="number">800</span>, <span class="number">600</span>, &#123;</span><br><span class="line">      <span class="attr">fit</span>: <span class="string">&#x27;inside&#x27;</span>,</span><br><span class="line">      <span class="attr">withoutEnlargement</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">jpeg</span>(&#123; <span class="attr">quality</span>: <span class="number">85</span> &#125;)</span><br><span class="line">    .<span class="title function_">toFile</span>(outputPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）安全防护"><a href="#（二）安全防护" class="headerlink" title="（二）安全防护"></a>（二）安全防护</h2><h3 id="1-防盗链设置"><a href="#1-防盗链设置" class="headerlink" title="1. 防盗链设置"></a>1. 防盗链设置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx防盗链配置</span></span><br><span class="line"><span class="section">location</span> <span class="regexp">~* \.(jpg|jpeg|png|gif|bmp|webp)$</span> &#123;</span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names</span><br><span class="line">                   <span class="regexp">*.yourdomain.com</span> yourdomain.com;</span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-访问控制"><a href="#2-访问控制" class="headerlink" title="2. 访问控制"></a>2. 访问控制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置图片访问权限</span></span><br><span class="line"><span class="comment"># 1. 私有读写：需要签名访问</span></span><br><span class="line"><span class="comment"># 2. 公有读私有写：可直接访问，但不能上传</span></span><br><span class="line"><span class="comment"># 3. 公有读写：完全开放（不推荐）</span></span><br></pre></td></tr></table></figure>

<h3 id="3-水印保护"><a href="#3-水印保护" class="headerlink" title="3. 水印保护"></a>3. 水印保护</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Canvas添加水印</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">addWatermark</span>(<span class="params">canvas, text</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> ctx = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line">  ctx.<span class="property">font</span> = <span class="string">&#x27;20px Arial&#x27;</span>;</span><br><span class="line">  ctx.<span class="property">fillStyle</span> = <span class="string">&#x27;rgba(255, 255, 255, 0.5)&#x27;</span>;</span><br><span class="line">  ctx.<span class="title function_">fillText</span>(text, canvas.<span class="property">width</span> - <span class="number">200</span>, canvas.<span class="property">height</span> - <span class="number">30</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）性能优化"><a href="#（三）性能优化" class="headerlink" title="（三）性能优化"></a>（三）性能优化</h2><h3 id="1-CDN配置"><a href="#1-CDN配置" class="headerlink" title="1. CDN配置"></a>1. CDN配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置缓存策略</span></span><br><span class="line"><span class="comment"># 图片文件：长期缓存（30天）</span></span><br><span class="line"><span class="comment"># 经常变动的图片：短期缓存（1天）</span></span><br><span class="line"><span class="comment"># 实时图片：不缓存</span></span><br></pre></td></tr></table></figure>

<h3 id="2-懒加载"><a href="#2-懒加载" class="headerlink" title="2. 懒加载"></a>2. 懒加载</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 原生懒加载 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;placeholder.jpg&quot;</span> <span class="attr">data-src</span>=<span class="string">&quot;actual-image.jpg&quot;</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片描述&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用Intersection Observer --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> images = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img[data-src]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> imageObserver = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">entries, observer</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  entries.<span class="title function_">forEach</span>(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (entry.<span class="property">isIntersecting</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> img = entry.<span class="property">target</span>;</span></span><br><span class="line"><span class="language-javascript">      img.<span class="property">src</span> = img.<span class="property">dataset</span>.<span class="property">src</span>;</span></span><br><span class="line"><span class="language-javascript">      img.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;lazy&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      imageObserver.<span class="title function_">unobserve</span>(img);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">images.<span class="title function_">forEach</span>(<span class="function"><span class="params">img</span> =&gt;</span> imageObserver.<span class="title function_">observe</span>(img));</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-响应式图片"><a href="#3-响应式图片" class="headerlink" title="3. 响应式图片"></a>3. 响应式图片</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用srcset提供多种尺寸 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;image-400.jpg&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">srcset</span>=<span class="string">&quot;image-400.jpg 400w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             image-800.jpg 800w,</span></span></span><br><span class="line"><span class="string"><span class="tag">             image-1200.jpg 1200w&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">sizes</span>=<span class="string">&quot;(max-width: 400px) 400px,</span></span></span><br><span class="line"><span class="string"><span class="tag">            (max-width: 800px) 800px,</span></span></span><br><span class="line"><span class="string"><span class="tag">            1200px&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">alt</span>=<span class="string">&quot;响应式图片&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="八、常见问题与解决方案"><a href="#八、常见问题与解决方案" class="headerlink" title="八、常见问题与解决方案"></a>八、常见问题与解决方案</h1><h2 id="（一）访问问题"><a href="#（一）访问问题" class="headerlink" title="（一）访问问题"></a>（一）访问问题</h2><h3 id="1-图片加载慢"><a href="#1-图片加载慢" class="headerlink" title="1. 图片加载慢"></a>1. 图片加载慢</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**可能原因**</span></span><br><span class="line"><span class="bullet">-</span> CDN节点覆盖不足</span><br><span class="line"><span class="bullet">-</span> 图片文件过大</span><br><span class="line"><span class="bullet">-</span> 网络环境问题</span><br><span class="line"></span><br><span class="line"><span class="strong">**解决方案**</span></span><br><span class="line"><span class="bullet">-</span> 更换CDN服务商</span><br><span class="line"><span class="bullet">-</span> 压缩图片文件</span><br><span class="line"><span class="bullet">-</span> 使用图片懒加载</span><br><span class="line"><span class="bullet">-</span> 添加loading占位符</span><br></pre></td></tr></table></figure>

<h3 id="2-图片无法显示"><a href="#2-图片无法显示" class="headerlink" title="2. 图片无法显示"></a>2. 图片无法显示</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**可能原因**</span></span><br><span class="line"><span class="bullet">-</span> 图床服务不稳定</span><br><span class="line"><span class="bullet">-</span> 防盗链限制</span><br><span class="line"><span class="bullet">-</span> 图片被删除</span><br><span class="line"></span><br><span class="line"><span class="strong">**解决方案**</span></span><br><span class="line"><span class="bullet">-</span> 检查图片URL是否正确</span><br><span class="line"><span class="bullet">-</span> 确认防盗链设置</span><br><span class="line"><span class="bullet">-</span> 使用多个图床备份</span><br><span class="line"><span class="bullet">-</span> 监控图片可用性</span><br></pre></td></tr></table></figure>

<h2 id="（二）安全问题"><a href="#（二）安全问题" class="headerlink" title="（二）安全问题"></a>（二）安全问题</h2><h3 id="1-图片被盗用"><a href="#1-图片被盗用" class="headerlink" title="1. 图片被盗用"></a>1. 图片被盗用</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**防护措施**</span></span><br><span class="line"><span class="bullet">-</span> 设置防盗链</span><br><span class="line"><span class="bullet">-</span> 添加水印</span><br><span class="line"><span class="bullet">-</span> 使用签名URL</span><br><span class="line"><span class="bullet">-</span> 监控流量异常</span><br></pre></td></tr></table></figure>

<h3 id="2-恶意上传"><a href="#2-恶意上传" class="headerlink" title="2. 恶意上传"></a>2. 恶意上传</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**防护措施**</span></span><br><span class="line"><span class="bullet">-</span> 文件类型检查</span><br><span class="line"><span class="bullet">-</span> 文件大小限制</span><br><span class="line"><span class="bullet">-</span> 内容安全检测</span><br><span class="line"><span class="bullet">-</span> 用户权限控制</span><br></pre></td></tr></table></figure>

<h2 id="（三）成本控制"><a href="#（三）成本控制" class="headerlink" title="（三）成本控制"></a>（三）成本控制</h2><h3 id="1-流量费用过高"><a href="#1-流量费用过高" class="headerlink" title="1. 流量费用过高"></a>1. 流量费用过高</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**优化策略**</span></span><br><span class="line"><span class="bullet">-</span> 图片压缩</span><br><span class="line"><span class="bullet">-</span> 缓存策略优化</span><br><span class="line"><span class="bullet">-</span> CDN配置优化</span><br><span class="line"><span class="bullet">-</span> 监控异常流量</span><br></pre></td></tr></table></figure>

<h3 id="2-存储费用增长"><a href="#2-存储费用增长" class="headerlink" title="2. 存储费用增长"></a>2. 存储费用增长</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**管理策略**</span></span><br><span class="line"><span class="bullet">-</span> 定期清理无用图片</span><br><span class="line"><span class="bullet">-</span> 设置生命周期规则</span><br><span class="line"><span class="bullet">-</span> 使用低频存储</span><br><span class="line"><span class="bullet">-</span> 压缩历史图片</span><br></pre></td></tr></table></figure>

<h1 id="九、总结"><a href="#九、总结" class="headerlink" title="九、总结"></a>九、总结</h1><p>图床作为现代内容创作的重要基础设施，为开发者和内容创作者提供了高效、稳定的图片存储和分发解决方案。通过本文的详细介绍，您应该能够：</p>
<h2 id="（一）核心收获"><a href="#（一）核心收获" class="headerlink" title="（一）核心收获"></a>（一）核心收获</h2><ol>
<li><strong>理解图床概念</strong>：掌握图床的基本原理和工作机制</li>
<li><strong>选择合适方案</strong>：根据需求选择最适合的图床服务</li>
<li><strong>掌握配置方法</strong>：熟练配置各种主流图床服务</li>
<li><strong>优化使用体验</strong>：通过最佳实践提升图床使用效果</li>
</ol>
<h2 id="（二）选择建议"><a href="#（二）选择建议" class="headerlink" title="（二）选择建议"></a>（二）选择建议</h2><h3 id="1-个人用户"><a href="#1-个人用户" class="headerlink" title="1. 个人用户"></a>1. 个人用户</h3><ul>
<li><strong>入门</strong>：GitHub + PicGo（免费、稳定）</li>
<li><strong>进阶</strong>：七牛云（专业、高效）</li>
</ul>
<h3 id="2-企业用户-1"><a href="#2-企业用户-1" class="headerlink" title="2. 企业用户"></a>2. 企业用户</h3><ul>
<li><strong>小型</strong>：阿里云OSS（可靠、完善）</li>
<li><strong>大型</strong>：多云架构（高可用、成本优化）</li>
</ul>
<h3 id="3-特殊需求-1"><a href="#3-特殊需求-1" class="headerlink" title="3. 特殊需求"></a>3. 特殊需求</h3><ul>
<li><strong>高安全</strong>：自建MinIO（可控、合规）</li>
<li><strong>高性能</strong>：专业CDN服务（快速、稳定）</li>
</ul>
<h2 id="（三）发展趋势"><a href="#（三）发展趋势" class="headerlink" title="（三）发展趋势"></a>（三）发展趋势</h2><p>随着云计算和CDN技术的不断发展，图床服务正朝着以下方向演进：</p>
<ol>
<li><strong>智能化</strong>：AI驱动的图片优化和处理</li>
<li><strong>边缘计算</strong>：更靠近用户的内容分发</li>
<li><strong>多媒体支持</strong>：从图片扩展到视频、音频等</li>
<li><strong>安全增强</strong>：更强的内容安全和隐私保护</li>
</ol>
<p>选择合适的图床方案，不仅能提升内容创作效率，更能为用户提供更好的访问体验。希望本文能帮助您找到最适合的图床解决方案！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://picgo.github.io/PicGo-Doc/">PicGo官方文档</a></li>
<li><a href="https://developer.qiniu.com/kodo">七牛云对象存储文档</a></li>
<li><a href="https://help.aliyun.com/product/31815.html">阿里云OSS文档</a></li>
<li><a href="https://docs.min.io/">MinIO官方文档</a></li>
<li><a href="https://docs.github.com/en/pages">GitHub Pages文档</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[全面介绍图床的概念、分类、选择标准和搭建方法，涵盖免费图床、付费图床、自建图床等多种解决方案，帮助开发者和内容创作者选择最适合的图片存储方案]]>
    
    </summary>
    
      <category term="工具" scheme="https://uwakeme.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="博客" scheme="https://uwakeme.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="CDN" scheme="https://uwakeme.top/tags/CDN/"/>
    
      <category term="图床" scheme="https://uwakeme.top/tags/%E5%9B%BE%E5%BA%8A/"/>
    
      <category term="云存储" scheme="https://uwakeme.top/tags/%E4%BA%91%E5%AD%98%E5%82%A8/"/>
    
      <category term="Markdown" scheme="https://uwakeme.top/tags/Markdown/"/>
    
      <category term="静态资源" scheme="https://uwakeme.top/tags/%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90/"/>
    
      <category term="工具" scheme="https://uwakeme.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【博客】Hexo博客AI助手功能实现指南（集成DeepSeek/智谱GLM-4）]]></title>
    <link href="https://uwakeme.top/2025/07/23/%E5%8D%9A%E5%AE%A2/%E3%80%90%E5%8D%9A%E5%AE%A2%E3%80%91Hexo%E5%8D%9A%E5%AE%A2AI%E5%8A%A9%E6%89%8B%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%E6%8C%87%E5%8D%97/"/>
    <id>https://uwakeme.top/2025/07/23/博客/【博客】Hexo博客AI助手功能实现指南/</id>
    <published>2025-07-23T10:30:03.204Z</published>
    <updated>2025-07-23T10:30:03.204Z</updated>
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>在AI技术快速发展的时代，为个人博客添加智能助手功能已成为提升用户体验的重要手段。本文详细介绍如何在Hexo博客中实现一个美观实用的AI助手，支持多种AI模型接入（智谱GLM-4、DeepSeek等），并提供完整的代码实现。</p>
<p>特别值得一提的是，智谱AI推出的GLM-4模型目前提供了免费版本（glm-4-flash），可以零成本为你的博客增添智能交互能力。</p>
<h1 id="二、功能特点"><a href="#二、功能特点" class="headerlink" title="二、功能特点"></a>二、功能特点</h1><p>实现后的AI助手功能将具备以下特点：</p>
<ul>
<li><strong>美观的浮动聊天窗口</strong>：支持深色&#x2F;浅色模式自动适配</li>
<li><strong>多种模型支持</strong>：可接入智谱GLM-4、DeepSeek等多种AI模型</li>
<li><strong>两种实现版本</strong>：完整版（API调用）和基础版（预设问答，无需API）</li>
<li><strong>流畅的用户体验</strong>：打字动画、加载提示、Markdown渲染支持</li>
<li><strong>响应式设计</strong>：完美适配移动端和桌面端</li>
<li><strong>本地记忆功能</strong>：保存聊天历史，提供连续对话体验</li>
</ul>
<h1 id="三、实现步骤"><a href="#三、实现步骤" class="headerlink" title="三、实现步骤"></a>三、实现步骤</h1><h2 id="（一）准备工作"><a href="#（一）准备工作" class="headerlink" title="（一）准备工作"></a>（一）准备工作</h2><h3 id="1-所需资源"><a href="#1-所需资源" class="headerlink" title="1. 所需资源"></a>1. 所需资源</h3><ul>
<li>已搭建的Hexo博客</li>
<li>智谱AI平台账号（使用GLM-4时需要）或DeepSeek账号</li>
<li>基本的JavaScript和CSS知识</li>
</ul>
<h3 id="2-注册智谱AI账号（可选）"><a href="#2-注册智谱AI账号（可选）" class="headerlink" title="2. 注册智谱AI账号（可选）"></a>2. 注册智谱AI账号（可选）</h3><p>如果选择使用智谱GLM-4模型：</p>
<ol>
<li>访问<a href="https://open.bigmodel.cn/">智谱AI官网</a></li>
<li>完成注册并登录</li>
<li>在个人中心创建API密钥并保存</li>
</ol>
<h2 id="（二）创建必要文件"><a href="#（二）创建必要文件" class="headerlink" title="（二）创建必要文件"></a>（二）创建必要文件</h2><ol>
<li><p>在博客的<code>source/js</code>目录下创建以下文件：</p>
<ul>
<li><code>ai-assistant.js</code>（API版本）</li>
<li><code>ai-assistant-basic.js</code>（基础版本，可选）</li>
</ul>
</li>
<li><p>在博客的<code>source/css</code>目录下创建：</p>
<ul>
<li><code>ai-assistant.css</code>（样式定义）</li>
</ul>
</li>
</ol>
<h2 id="（三）编写CSS样式"><a href="#（三）编写CSS样式" class="headerlink" title="（三）编写CSS样式"></a>（三）编写CSS样式</h2><p>创建美观的UI界面，以下是核心CSS代码：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 主容器 */</span></span><br><span class="line"><span class="selector-class">.ai-assistant-container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">10px</span> <span class="number">30px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.175</span>, <span class="number">0.885</span>, <span class="number">0.32</span>, <span class="number">1.275</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 深色模式适配 */</span></span><br><span class="line"><span class="selector-attr">[data-user-color-scheme=<span class="string">&#x27;dark&#x27;</span>]</span> <span class="selector-class">.ai-assistant-container</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2d2d2d</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#444</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬浮按钮 */</span></span><br><span class="line"><span class="selector-class">.ai-assistant-toggle</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="number">#6e8efb</span> <span class="number">0%</span>, <span class="number">#a777e3</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">15px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.25</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1000</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">    <span class="attribute">animation</span>: float <span class="number">3s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> float &#123;</span><br><span class="line">    <span class="number">0%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0px</span>); &#125;</span><br><span class="line">    <span class="number">50%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">6px</span>); &#125;</span><br><span class="line">    <span class="number">100%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0px</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 消息样式 */</span></span><br><span class="line"><span class="selector-class">.ai-assistant-message</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ai-assistant-message</span><span class="selector-class">.user-message</span> &#123;</span><br><span class="line">    <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.message-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user-message</span> <span class="selector-class">.message-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e9f5ff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#4a89dc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bot-message</span> <span class="selector-class">.message-avatar</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f5f0ff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#a777e3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.message-content</span> &#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">70%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user-message</span> <span class="selector-class">.message-content</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4a89dc</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bot-message</span> <span class="selector-class">.message-content</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-user-color-scheme=<span class="string">&#x27;dark&#x27;</span>]</span> <span class="selector-class">.bot-message</span> <span class="selector-class">.message-content</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3a3a3a</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#e0e0e0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 加载动画 */</span></span><br><span class="line"><span class="selector-class">.ai-assistant-loading</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ai-assistant-loading</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#888</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: bounce <span class="number">1.4s</span> infinite ease-in-out both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ai-assistant-loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">0.32s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ai-assistant-loading</span> <span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="attribute">animation-delay</span>: -<span class="number">0.16s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> bounce &#123;</span><br><span class="line">    <span class="number">0%</span>, <span class="number">80%</span>, <span class="number">100%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0</span>); &#125; </span><br><span class="line">    <span class="number">40%</span> &#123; <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>); &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）实现智谱GLM-4版本（完整版）"><a href="#（四）实现智谱GLM-4版本（完整版）" class="headerlink" title="（四）实现智谱GLM-4版本（完整版）"></a>（四）实现智谱GLM-4版本（完整版）</h2><p>以下是使用智谱GLM-4模型的JavaScript实现：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * AI助手模块 - 为博客添加智能对话功能</span></span><br><span class="line"><span class="comment"> * 基于智谱GLM-4-Flash模型，帮助访问者解答问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 配置参数</span></span><br><span class="line">    <span class="keyword">const</span> config = &#123;</span><br><span class="line">        <span class="attr">botName</span>: <span class="string">&#x27;博客智能助手&#x27;</span>,</span><br><span class="line">        <span class="attr">welcomeMessage</span>: <span class="string">&#x27;你好！我是博客助手，有什么可以帮到你的吗？&#x27;</span>,</span><br><span class="line">        <span class="attr">placeholder</span>: <span class="string">&#x27;输入你的问题...&#x27;</span>,</span><br><span class="line">        <span class="attr">apiKey</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 在实际使用时填入你的智谱API密钥</span></span><br><span class="line">        <span class="attr">apiEndpoint</span>: <span class="string">&#x27;https://open.bigmodel.cn/api/paas/v4/chat/completions&#x27;</span>, <span class="comment">// 智谱GLM-4 API的URL</span></span><br><span class="line">        <span class="attr">modelName</span>: <span class="string">&#x27;glm-4-flash-250414&#x27;</span>, <span class="comment">// 智谱GLM-4-Flash模型名称（免费版）</span></span><br><span class="line">        <span class="attr">maxTokens</span>: <span class="number">2000</span>,</span><br><span class="line">        <span class="attr">temperature</span>: <span class="number">0.7</span></span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// DOM元素引用</span></span><br><span class="line">    <span class="keyword">let</span> chatContainer, chatMessages, userInput, sendButton, toggleButton;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 创建UI</span></span><br><span class="line">        <span class="title function_">createChatUI</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 绑定事件</span></span><br><span class="line">        <span class="title function_">bindEvents</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加欢迎消息</span></span><br><span class="line">        <span class="title function_">addBotMessage</span>(config.<span class="property">welcomeMessage</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查本地存储中的历史记录</span></span><br><span class="line">        <span class="title function_">loadChatHistory</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 创建聊天界面</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">createChatUI</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 创建主容器</span></span><br><span class="line">        chatContainer = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        chatContainer.<span class="property">className</span> = <span class="string">&#x27;ai-assistant-container&#x27;</span>;</span><br><span class="line">        chatContainer.<span class="property">innerHTML</span> = <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ai-assistant-header&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ai-assistant-title&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;i class=&quot;fas fa-robot&quot;&gt;&lt;/i&gt; <span class="subst">$&#123;config.botName&#125;</span></span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div class=&quot;ai-assistant-actions&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;button class=&quot;ai-assistant-minimize&quot;&gt;—&lt;/button&gt;</span></span><br><span class="line"><span class="string">                    &lt;button class=&quot;ai-assistant-close&quot;&gt;×&lt;/button&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ai-assistant-messages&quot;&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ai-assistant-input-container&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;textarea class=&quot;ai-assistant-input&quot; placeholder=&quot;<span class="subst">$&#123;config.placeholder&#125;</span>&quot; rows=&quot;1&quot;&gt;&lt;/textarea&gt;</span></span><br><span class="line"><span class="string">                &lt;button class=&quot;ai-assistant-send&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;i class=&quot;fas fa-paper-plane&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">                &lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建悬浮按钮</span></span><br><span class="line">        toggleButton = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        toggleButton.<span class="property">className</span> = <span class="string">&#x27;ai-assistant-toggle&#x27;</span>;</span><br><span class="line">        toggleButton.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;i class=&quot;fas fa-robot&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">        toggleButton.<span class="property">title</span> = <span class="string">&#x27;打开AI助手&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加到页面</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(chatContainer);</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(toggleButton);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取DOM引用</span></span><br><span class="line">        chatMessages = chatContainer.<span class="title function_">querySelector</span>(<span class="string">&#x27;.ai-assistant-messages&#x27;</span>);</span><br><span class="line">        userInput = chatContainer.<span class="title function_">querySelector</span>(<span class="string">&#x27;.ai-assistant-input&#x27;</span>);</span><br><span class="line">        sendButton = chatContainer.<span class="title function_">querySelector</span>(<span class="string">&#x27;.ai-assistant-send&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 默认隐藏聊天窗口</span></span><br><span class="line">        chatContainer.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;collapsed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 请求AI回复的核心函数</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchAIResponse</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!config.<span class="property">apiKey</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;抱歉，AI助手尚未配置API密钥。请联系博客管理员设置API密钥。&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(config.<span class="property">apiEndpoint</span>, &#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;config.apiKey&#125;</span>`</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">                    <span class="attr">model</span>: config.<span class="property">modelName</span>,</span><br><span class="line">                    <span class="attr">messages</span>: [</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">role</span>: <span class="string">&#x27;system&#x27;</span>,</span><br><span class="line">                            <span class="attr">content</span>: <span class="string">&#x27;你是一个友好、专业的博客助手，负责回答访客的问题。你的回答应当简洁、专业、有帮助性。&#x27;</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">                            <span class="attr">content</span>: message</span><br><span class="line">                        &#125;</span><br><span class="line">                    ],</span><br><span class="line">                    <span class="attr">max_tokens</span>: config.<span class="property">maxTokens</span>,</span><br><span class="line">                    <span class="attr">temperature</span>: config.<span class="property">temperature</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(data.<span class="property">error</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;API错误:&#x27;</span>, data.<span class="property">error</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">`抱歉，AI服务出现问题：<span class="subst">$&#123;data.error.message || <span class="string">&#x27;未知错误&#x27;</span>&#125;</span>`</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">content</span>;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span>(error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;网络请求错误:&#x27;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;抱歉，连接AI服务时出现错误。请检查网络连接或稍后再试。&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 其他必要函数（发送消息、添加消息到界面等）略...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 页面加载完成后初始化</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="property">readyState</span> === <span class="string">&#x27;loading&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, init);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h2 id="（五）实现DeepSeek版本"><a href="#（五）实现DeepSeek版本" class="headerlink" title="（五）实现DeepSeek版本"></a>（五）实现DeepSeek版本</h2><p>如果你想使用DeepSeek API，只需修改配置部分：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置参数</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">    <span class="attr">botName</span>: <span class="string">&#x27;博客智能助手&#x27;</span>,</span><br><span class="line">    <span class="attr">welcomeMessage</span>: <span class="string">&#x27;你好！我是博客助手，有什么可以帮到你的吗？&#x27;</span>,</span><br><span class="line">    <span class="attr">placeholder</span>: <span class="string">&#x27;输入你的问题...&#x27;</span>,</span><br><span class="line">    <span class="attr">apiKey</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">// 在这里填入你的DeepSeek API密钥</span></span><br><span class="line">    <span class="attr">apiEndpoint</span>: <span class="string">&#x27;https://api.deepseek.com/v1/chat/completions&#x27;</span>, <span class="comment">// DeepSeek API URL</span></span><br><span class="line">    <span class="attr">modelName</span>: <span class="string">&#x27;deepseek-chat&#x27;</span>, <span class="comment">// DeepSeek模型</span></span><br><span class="line">    <span class="attr">maxTokens</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="attr">temperature</span>: <span class="number">0.7</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（六）基础版实现（无需API）"><a href="#（六）基础版实现（无需API）" class="headerlink" title="（六）基础版实现（无需API）"></a>（六）基础版实现（无需API）</h2><p>如果不想申请API密钥或担心API使用成本，可以使用基础版：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基础版AI助手模块 - 不需要API密钥，使用预设回答</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预设问答库</span></span><br><span class="line">    <span class="keyword">const</span> faqs = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">keywords</span>: [<span class="string">&#x27;博客&#x27;</span>, <span class="string">&#x27;内容&#x27;</span>, <span class="string">&#x27;文章&#x27;</span>, <span class="string">&#x27;写什么&#x27;</span>],</span><br><span class="line">            <span class="attr">answer</span>: <span class="string">&#x27;这个博客主要分享技术学习笔记、编程技巧和问题解决方案，涵盖后端开发、前端技术、数据库和Linux等领域的内容。&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">keywords</span>: [<span class="string">&#x27;联系&#x27;</span>, <span class="string">&#x27;作者&#x27;</span>, <span class="string">&#x27;博主&#x27;</span>, <span class="string">&#x27;交流&#x27;</span>],</span><br><span class="line">            <span class="attr">answer</span>: <span class="string">&#x27;你可以通过以下方式联系博主：\n1. 在文章下方留言评论\n2. 通过&quot;关于&quot;页面的社交媒体链接&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 可以添加更多预设问答...</span></span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成回复</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">generateResponse</span>(<span class="params">message</span>) &#123;</span><br><span class="line">        message = message.<span class="title function_">toLowerCase</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 检查是否匹配预设问答</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> faq <span class="keyword">of</span> faqs) &#123;</span><br><span class="line">            <span class="keyword">if</span> (faq.<span class="property">keywords</span>.<span class="title function_">some</span>(<span class="function"><span class="params">keyword</span> =&gt;</span> message.<span class="title function_">includes</span>(keyword.<span class="title function_">toLowerCase</span>()))) &#123;</span><br><span class="line">                <span class="keyword">return</span> faq.<span class="property">answer</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;抱歉，我目前无法回答这个问题。你可以尝试浏览博客分类或使用搜索功能查找相关内容。&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h2 id="（七）引入AI助手到博客中"><a href="#（七）引入AI助手到博客中" class="headerlink" title="（七）引入AI助手到博客中"></a>（七）引入AI助手到博客中</h2><p>在Hexo主题的配置文件中添加自定义JS和CSS：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">custom_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/js/ai-assistant.js</span> <span class="comment"># 或者使用 ai-assistant-basic.js</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">custom_css:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/css/ai-assistant.css</span></span><br></pre></td></tr></table></figure>

<h1 id="四、高级功能"><a href="#四、高级功能" class="headerlink" title="四、高级功能"></a>四、高级功能</h1><h2 id="（一）保护API密钥安全"><a href="#（一）保护API密钥安全" class="headerlink" title="（一）保护API密钥安全"></a>（一）保护API密钥安全</h2><p>为了避免API密钥在前端暴露，可以使用代理服务器：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Netlify function示例: /netlify/functions/ai-proxy.js</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">handler</span> = <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (event.<span class="property">httpMethod</span> !== <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">statusCode</span>: <span class="number">405</span>, <span class="attr">body</span>: <span class="string">&#x27;Method Not Allowed&#x27;</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> body = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(event.<span class="property">body</span>);</span><br><span class="line">    <span class="keyword">const</span> &#123; message &#125; = body;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://open.bigmodel.cn/api/paas/v4/chat/completions&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;process.env.ZHIPUAI_API_KEY&#125;</span>`</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">        <span class="attr">model</span>: <span class="string">&#x27;glm-4-flash-250414&#x27;</span>,</span><br><span class="line">        <span class="attr">messages</span>: [&#123; <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span>, <span class="attr">content</span>: message &#125;],</span><br><span class="line">        <span class="attr">max_tokens</span>: <span class="number">2000</span>,</span><br><span class="line">        <span class="attr">temperature</span>: <span class="number">0.7</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">statusCode</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">statusCode</span>: <span class="number">500</span>,</span><br><span class="line">      <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: error.<span class="property">message</span> &#125;)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="（二）实现多轮对话记忆"><a href="#（二）实现多轮对话记忆" class="headerlink" title="（二）实现多轮对话记忆"></a>（二）实现多轮对话记忆</h2><p>保存对话历史，实现上下文连续对话：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存对话历史</span></span><br><span class="line"><span class="keyword">let</span> conversationHistory = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendMessageWithContext</span>(<span class="params">message</span>) &#123;</span><br><span class="line">    <span class="comment">// 添加用户消息到历史</span></span><br><span class="line">    conversationHistory.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">role</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: message</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构建带上下文的请求</span></span><br><span class="line">    <span class="keyword">const</span> messagesWithContext = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">role</span>: <span class="string">&#x27;system&#x27;</span>,</span><br><span class="line">            <span class="attr">content</span>: <span class="string">&#x27;你是一个友好、专业的博客助手，负责回答访客的问题。&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ...conversationHistory</span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果历史过长，可以裁剪保留最近的几轮对话</span></span><br><span class="line">    <span class="keyword">if</span>(messagesWithContext.<span class="property">length</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        messagesWithContext = [</span><br><span class="line">            messagesWithContext[<span class="number">0</span>], <span class="comment">// 保留system消息</span></span><br><span class="line">            ...messagesWithContext.<span class="title function_">slice</span>(messagesWithContext.<span class="property">length</span> - <span class="number">9</span>) <span class="comment">// 保留最近的对话</span></span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送API请求</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将AI回复添加到历史</span></span><br><span class="line">    conversationHistory.<span class="title function_">push</span>(&#123;</span><br><span class="line">        <span class="attr">role</span>: <span class="string">&#x27;assistant&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: aiResponse</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> aiResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）添加语音输入功能"><a href="#（三）添加语音输入功能" class="headerlink" title="（三）添加语音输入功能"></a>（三）添加语音输入功能</h2><p>使用Web Speech API实现语音输入：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加语音输入按钮</span></span><br><span class="line"><span class="keyword">const</span> voiceButton = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">voiceButton.<span class="property">className</span> = <span class="string">&#x27;ai-assistant-voice&#x27;</span>;</span><br><span class="line">voiceButton.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;i class=&quot;fas fa-microphone&quot;&gt;&lt;/i&gt;&#x27;</span>;</span><br><span class="line">inputContainer.<span class="title function_">appendChild</span>(voiceButton);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 语音识别功能</span></span><br><span class="line">voiceButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;webkitSpeechRecognition&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> recognition = <span class="keyword">new</span> <span class="title function_">webkitSpeechRecognition</span>();</span><br><span class="line">        recognition.<span class="property">lang</span> = <span class="string">&#x27;zh-CN&#x27;</span>;</span><br><span class="line">        recognition.<span class="property">interimResults</span> = <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        recognition.<span class="property">onresult</span> = <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> transcript = event.<span class="property">results</span>[<span class="number">0</span>][<span class="number">0</span>].<span class="property">transcript</span>;</span><br><span class="line">            userInput.<span class="property">value</span> = transcript;</span><br><span class="line">            <span class="title function_">sendMessage</span>();</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        recognition.<span class="title function_">start</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;抱歉，您的浏览器不支持语音识别功能&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h1 id="五、常见问题解决"><a href="#五、常见问题解决" class="headerlink" title="五、常见问题解决"></a>五、常见问题解决</h1><h2 id="（一）API调用失败"><a href="#（一）API调用失败" class="headerlink" title="（一）API调用失败"></a>（一）API调用失败</h2><p>如果遇到API调用失败的问题：</p>
<ol>
<li><strong>API密钥错误</strong>：确认API密钥是否正确复制</li>
<li><strong>网络问题</strong>：检查网络连接是否正常</li>
<li><strong>请求格式错误</strong>：确保请求体格式符合API要求</li>
<li><strong>添加重试机制</strong>：</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchWithRetry</span>(<span class="params">url, options, retries = <span class="number">3</span></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">fetch</span>(url, options);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(error) &#123;</span><br><span class="line">        <span class="keyword">if</span>(retries &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`请求失败，剩余重试次数: <span class="subst">$&#123;retries-<span class="number">1</span>&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">fetchWithRetry</span>(url, options, retries - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）深色模式适配问题"><a href="#（二）深色模式适配问题" class="headerlink" title="（二）深色模式适配问题"></a>（二）深色模式适配问题</h2><p>如果深色模式显示不正确，可能需要修改CSS变量或添加更多适配规则：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 使用CSS变量适配主题 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--ai-primary-color</span>: <span class="number">#4a89dc</span>;</span><br><span class="line">    <span class="attr">--ai-text-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attr">--ai-bg-color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[data-user-color-scheme=<span class="string">&#x27;dark&#x27;</span>]</span> &#123;</span><br><span class="line">    <span class="attr">--ai-primary-color</span>: <span class="number">#5d9cff</span>;</span><br><span class="line">    <span class="attr">--ai-text-color</span>: <span class="number">#f0f0f0</span>;</span><br><span class="line">    <span class="attr">--ai-bg-color</span>: <span class="number">#2d2d2d</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ai-assistant-header</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--ai-primary-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h1><p>通过本文介绍的方法，我们可以为Hexo博客添加一个美观实用的AI助手功能。无论是选择接入智谱GLM-4的免费模型，还是使用DeepSeek等其他AI服务，或者仅实现基础版预设问答，都能为博客访客提供更好的交互体验。</p>
<p>特别值得一提的是，智谱AI提供的GLM-4-Flash模型目前完全免费使用，这使得个人博客站长也能零成本享受AI带来的便利。</p>
<p>希望这篇教程对你有所帮助，赶快为你的博客添加一个智能助手吧！</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://open.bigmodel.cn/dev/api">智谱AI官方文档</a></li>
<li><a href="https://hexo.io/docs/">Hexo官方文档</a></li>
<li><a href="https://api.deepseek.com/">DeepSeek API文档</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>在AI技术快速发展的时代，为个人博客添加智能助手功能已成为提升用户体验的重要手段。本文详细介绍如何在Hexo博客中实现一个美]]>
    </summary>
    
      <category term="AI" scheme="https://uwakeme.top/tags/AI/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="CSS" scheme="https://uwakeme.top/tags/CSS/"/>
    
      <category term="Hexo" scheme="https://uwakeme.top/tags/Hexo/"/>
    
      <category term="智谱AI" scheme="https://uwakeme.top/tags/%E6%99%BA%E8%B0%B1AI/"/>
    
      <category term="GLM-4" scheme="https://uwakeme.top/tags/GLM-4/"/>
    
      <category term="博客" scheme="https://uwakeme.top/categories/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【Java】MyBatis生态系统性能对比与优化策略详解]]></title>
    <link href="https://uwakeme.top/2025/07/23/Java/%E3%80%90Java%E3%80%91MyBatis%E7%94%9F%E6%80%81%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5%E8%AF%A6%E8%A7%A3/"/>
    <id>https://uwakeme.top/2025/07/23/Java/【Java】MyBatis生态系统性能对比与优化策略详解/</id>
    <published>2025-07-22T16:00:00.000Z</published>
    <updated>2025-07-23T01:45:15.909Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在Java后端开发中，MyBatis生态系统提供了多种数据访问解决方案：原生MyBatis、MyBatis Plus、MyBatis Plus Join，以及直接编写SQL语句。每种方案在开发效率、运行性能、维护成本等方面都有不同的特点。本文将深入分析这些方案的效率差异，并提供针对性的优化策略。</p>
<h1 id="一、框架概述与特点分析"><a href="#一、框架概述与特点分析" class="headerlink" title="一、框架概述与特点分析"></a>一、框架概述与特点分析</h1><h2 id="（一）MyBatis原生框架"><a href="#（一）MyBatis原生框架" class="headerlink" title="（一）MyBatis原生框架"></a>（一）MyBatis原生框架</h2><p>MyBatis是一款优秀的持久层框架，它支持自定义SQL、存储过程以及高级映射。</p>
<h3 id="特点分析"><a href="#特点分析" class="headerlink" title="特点分析"></a>特点分析</h3><ul>
<li><strong>灵活性高</strong>：完全控制SQL语句</li>
<li><strong>学习成本低</strong>：接近原生SQL开发</li>
<li><strong>性能可控</strong>：手动优化SQL性能</li>
<li><strong>代码量大</strong>：需要编写大量XML配置</li>
</ul>
<h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复杂查询场景</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;SELECT u.*, p.profile_name FROM users u &quot; +</span></span><br><span class="line"><span class="meta">            &quot;LEFT JOIN profiles p ON u.id = p.user_id &quot; +</span></span><br><span class="line"><span class="meta">            &quot;WHERE u.status = #&#123;status&#125; AND u.create_time &gt; #&#123;startTime&#125;&quot;)</span></span><br><span class="line">    List&lt;UserVO&gt; <span class="title function_">findUsersWithProfile</span><span class="params">(<span class="meta">@Param(&quot;status&quot;)</span> Integer status, </span></span><br><span class="line"><span class="params">                                     <span class="meta">@Param(&quot;startTime&quot;)</span> Date startTime)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）MyBatis-Plus框架"><a href="#（二）MyBatis-Plus框架" class="headerlink" title="（二）MyBatis Plus框架"></a>（二）MyBatis Plus框架</h2><p>MyBatis Plus是MyBatis的增强工具，在MyBatis的基础上只做增强不做改变。</p>
<h3 id="特点分析-1"><a href="#特点分析-1" class="headerlink" title="特点分析"></a>特点分析</h3><ul>
<li><strong>开发效率高</strong>：内置CRUD操作</li>
<li><strong>代码生成器</strong>：自动生成基础代码</li>
<li><strong>条件构造器</strong>：链式调用构建查询</li>
<li><strong>分页插件</strong>：内置分页功能</li>
</ul>
<h3 id="核心功能示例"><a href="#核心功能示例" class="headerlink" title="核心功能示例"></a>核心功能示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基础CRUD无需编写SQL</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findActiveUsers</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> lambdaQuery()</span><br><span class="line">                .eq(User::getStatus, <span class="number">1</span>)</span><br><span class="line">                .gt(User::getCreateTime, LocalDateTime.now().minusDays(<span class="number">30</span>))</span><br><span class="line">                .list();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）MyBatis-Plus-Join框架"><a href="#（三）MyBatis-Plus-Join框架" class="headerlink" title="（三）MyBatis Plus Join框架"></a>（三）MyBatis Plus Join框架</h2><p>MyBatis Plus Join是基于MyBatis Plus的连表查询增强框架。</p>
<h3 id="特点分析-2"><a href="#特点分析-2" class="headerlink" title="特点分析"></a>特点分析</h3><ul>
<li><strong>连表查询简化</strong>：类型安全的连表操作</li>
<li><strong>性能优化</strong>：智能SQL生成</li>
<li><strong>代码简洁</strong>：减少手写SQL</li>
<li><strong>学习成本</strong>：需要掌握新的API</li>
</ul>
<h3 id="连表查询示例"><a href="#连表查询示例" class="headerlink" title="连表查询示例"></a>连表查询示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类型安全的连表查询</span></span><br><span class="line"><span class="keyword">public</span> List&lt;UserVO&gt; <span class="title function_">findUsersWithOrders</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mpjLambdaWrapper()</span><br><span class="line">            .selectAll(User.class)</span><br><span class="line">            .select(Order::getOrderNo, Order::getAmount)</span><br><span class="line">            .leftJoin(Order.class, Order::getUserId, User::getId)</span><br><span class="line">            .eq(User::getStatus, <span class="number">1</span>)</span><br><span class="line">            .list(UserVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）原生SQL方案"><a href="#（四）原生SQL方案" class="headerlink" title="（四）原生SQL方案"></a>（四）原生SQL方案</h2><p>直接使用JDBC或JdbcTemplate编写SQL语句。</p>
<h3 id="特点分析-3"><a href="#特点分析-3" class="headerlink" title="特点分析"></a>特点分析</h3><ul>
<li><strong>性能最优</strong>：无ORM框架开销</li>
<li><strong>控制精确</strong>：完全控制SQL执行</li>
<li><strong>开发复杂</strong>：需要处理结果集映射</li>
<li><strong>维护困难</strong>：SQL分散在代码中</li>
</ul>
<h1 id="二、性能效率对比分析"><a href="#二、性能效率对比分析" class="headerlink" title="二、性能效率对比分析"></a>二、性能效率对比分析</h1><h2 id="（一）开发效率对比"><a href="#（一）开发效率对比" class="headerlink" title="（一）开发效率对比"></a>（一）开发效率对比</h2><table>
<thead>
<tr>
<th>框架</th>
<th>简单CRUD</th>
<th>复杂查询</th>
<th>连表查询</th>
<th>代码量</th>
<th>学习成本</th>
</tr>
</thead>
<tbody><tr>
<td>MyBatis原生</td>
<td>⭐⭐</td>
<td>⭐⭐⭐⭐⭐</td>
<td>⭐⭐⭐⭐</td>
<td>大</td>
<td>低</td>
</tr>
<tr>
<td>MyBatis Plus</td>
<td>⭐⭐⭐⭐⭐</td>
<td>⭐⭐⭐</td>
<td>⭐⭐</td>
<td>小</td>
<td>中</td>
</tr>
<tr>
<td>MP Join</td>
<td>⭐⭐⭐⭐⭐</td>
<td>⭐⭐⭐</td>
<td>⭐⭐⭐⭐⭐</td>
<td>小</td>
<td>中</td>
</tr>
<tr>
<td>原生SQL</td>
<td>⭐</td>
<td>⭐⭐⭐⭐⭐</td>
<td>⭐⭐⭐⭐</td>
<td>大</td>
<td>低</td>
</tr>
</tbody></table>
<h2 id="（二）运行性能对比"><a href="#（二）运行性能对比" class="headerlink" title="（二）运行性能对比"></a>（二）运行性能对比</h2><h3 id="1-SQL生成效率"><a href="#1-SQL生成效率" class="headerlink" title="1. SQL生成效率"></a>1. SQL生成效率</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 性能测试示例</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">performanceTest</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// MyBatis Plus条件构造器</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        wrapper.eq(<span class="string">&quot;status&quot;</span>, <span class="number">1</span>).gt(<span class="string">&quot;create_time&quot;</span>, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="comment">// SQL生成时间：约0.1ms/次</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 原生SQL</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;SELECT * FROM users WHERE status = ? AND create_time &gt; ?&quot;</span>;</span><br><span class="line">        <span class="comment">// SQL准备时间：约0.01ms/次</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">nativeTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-内存占用分析"><a href="#2-内存占用分析" class="headerlink" title="2. 内存占用分析"></a>2. 内存占用分析</h3><ul>
<li><strong>MyBatis原生</strong>：内存占用最小，约50-100MB</li>
<li><strong>MyBatis Plus</strong>：增加约20-30MB内存开销</li>
<li><strong>MP Join</strong>：额外增加约10-20MB内存开销</li>
<li><strong>原生SQL</strong>：内存占用最小，约30-50MB</li>
</ul>
<h3 id="3-执行效率对比"><a href="#3-执行效率对比" class="headerlink" title="3. 执行效率对比"></a>3. 执行效率对比</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量插入性能测试</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchInsertTest</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;User&gt; users = generateTestUsers(<span class="number">10000</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// MyBatis Plus批量插入</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    userService.saveBatch(users, <span class="number">1000</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - start; <span class="comment">// 约2000ms</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 原生SQL批量插入</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    jdbcTemplate.batchUpdate(sql, batchArgs);</span><br><span class="line">    <span class="type">long</span> <span class="variable">nativeTime</span> <span class="operator">=</span> System.currentTimeMillis() - start; <span class="comment">// 约800ms</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、使用场景分析"><a href="#三、使用场景分析" class="headerlink" title="三、使用场景分析"></a>三、使用场景分析</h1><h2 id="（一）MyBatis原生适用场景"><a href="#（一）MyBatis原生适用场景" class="headerlink" title="（一）MyBatis原生适用场景"></a>（一）MyBatis原生适用场景</h2><ol>
<li><strong>复杂业务查询</strong>：需要精确控制SQL的场景</li>
<li><strong>性能敏感应用</strong>：对性能要求极高的系统</li>
<li><strong>遗留系统改造</strong>：已有大量SQL的系统</li>
<li><strong>数据库特性依赖</strong>：需要使用特定数据库功能</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复杂统计查询示例</span></span><br><span class="line"><span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">    SELECT </span></span><br><span class="line"><span class="meta">        DATE_FORMAT(create_time, &#x27;%Y-%m&#x27;) as month,</span></span><br><span class="line"><span class="meta">        COUNT(*) as total_orders,</span></span><br><span class="line"><span class="meta">        SUM(amount) as total_amount,</span></span><br><span class="line"><span class="meta">        AVG(amount) as avg_amount</span></span><br><span class="line"><span class="meta">    FROM orders </span></span><br><span class="line"><span class="meta">    WHERE create_time &gt;= #&#123;startDate&#125; </span></span><br><span class="line"><span class="meta">        AND create_time &lt;= #&#123;endDate&#125;</span></span><br><span class="line"><span class="meta">        AND status IN </span></span><br><span class="line"><span class="meta">        &lt;foreach collection=&quot;statusList&quot; item=&quot;status&quot; open=&quot;(&quot; close=&quot;)&quot; separator=&quot;,&quot;&gt;</span></span><br><span class="line"><span class="meta">            #&#123;status&#125;</span></span><br><span class="line"><span class="meta">        &lt;/foreach&gt;</span></span><br><span class="line"><span class="meta">    GROUP BY DATE_FORMAT(create_time, &#x27;%Y-%m&#x27;)</span></span><br><span class="line"><span class="meta">    ORDER BY month DESC</span></span><br><span class="line"><span class="meta">&quot;&quot;&quot;)</span></span><br><span class="line">List&lt;OrderStatistics&gt; <span class="title function_">getOrderStatistics</span><span class="params">(<span class="meta">@Param(&quot;startDate&quot;)</span> Date startDate,</span></span><br><span class="line"><span class="params">                                        <span class="meta">@Param(&quot;endDate&quot;)</span> Date endDate,</span></span><br><span class="line"><span class="params">                                        <span class="meta">@Param(&quot;statusList&quot;)</span> List&lt;Integer&gt; statusList)</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（二）MyBatis-Plus适用场景"><a href="#（二）MyBatis-Plus适用场景" class="headerlink" title="（二）MyBatis Plus适用场景"></a>（二）MyBatis Plus适用场景</h2><ol>
<li><strong>快速开发</strong>：需要快速构建CRUD功能</li>
<li><strong>中小型项目</strong>：业务逻辑相对简单</li>
<li><strong>标准化操作</strong>：大部分操作都是标准CRUD</li>
<li><strong>团队协作</strong>：需要统一开发规范</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 标准业务操作示例</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;Product&gt; <span class="title function_">getProductPage</span><span class="params">(ProductQuery query)</span> &#123;</span><br><span class="line">        Page&lt;Product&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(query.getCurrent(), query.getSize());</span><br><span class="line">        LambdaQueryWrapper&lt;Product&gt; wrapper = <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        wrapper.like(StringUtils.isNotBlank(query.getName()), </span><br><span class="line">                    Product::getName, query.getName())</span><br><span class="line">               .eq(Objects.nonNull(query.getCategoryId()), </span><br><span class="line">                   Product::getCategoryId, query.getCategoryId())</span><br><span class="line">               .between(Objects.nonNull(query.getStartPrice()) &amp;&amp; Objects.nonNull(query.getEndPrice()),</span><br><span class="line">                       Product::getPrice, query.getStartPrice(), query.getEndPrice())</span><br><span class="line">               .orderByDesc(Product::getCreateTime);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> page(page, wrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）MyBatis-Plus-Join适用场景"><a href="#（三）MyBatis-Plus-Join适用场景" class="headerlink" title="（三）MyBatis Plus Join适用场景"></a>（三）MyBatis Plus Join适用场景</h2><ol>
<li><strong>多表关联查询</strong>：需要频繁进行连表操作</li>
<li><strong>类型安全要求</strong>：希望编译期检查字段名</li>
<li><strong>中等复杂度查询</strong>：比简单CRUD复杂，但不需要手写SQL</li>
<li><strong>快速原型开发</strong>：需要快速实现连表功能</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复杂连表查询示例</span></span><br><span class="line"><span class="keyword">public</span> List&lt;OrderDetailVO&gt; <span class="title function_">getOrderDetails</span><span class="params">(OrderQuery query)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mpjLambdaWrapper()</span><br><span class="line">            .selectAll(Order.class)</span><br><span class="line">            .select(User::getUsername, User::getEmail)</span><br><span class="line">            .select(Product::getName, Product::getPrice)</span><br><span class="line">            .leftJoin(User.class, User::getId, Order::getUserId)</span><br><span class="line">            .leftJoin(OrderItem.class, OrderItem::getOrderId, Order::getId)</span><br><span class="line">            .leftJoin(Product.class, Product::getId, OrderItem::getProductId)</span><br><span class="line">            .eq(StringUtils.isNotBlank(query.getOrderNo()), </span><br><span class="line">                Order::getOrderNo, query.getOrderNo())</span><br><span class="line">            .between(Objects.nonNull(query.getStartDate()) &amp;&amp; Objects.nonNull(query.getEndDate()),</span><br><span class="line">                    Order::getCreateTime, query.getStartDate(), query.getEndDate())</span><br><span class="line">            .orderByDesc(Order::getCreateTime)</span><br><span class="line">            .list(OrderDetailVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）原生SQL适用场景"><a href="#（四）原生SQL适用场景" class="headerlink" title="（四）原生SQL适用场景"></a>（四）原生SQL适用场景</h2><ol>
<li><strong>极致性能要求</strong>：对性能要求极高的核心业务</li>
<li><strong>复杂数据处理</strong>：需要使用数据库特有功能</li>
<li><strong>大数据量操作</strong>：批量数据处理和ETL操作</li>
<li><strong>底层框架开发</strong>：开发基础框架和工具</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 高性能批量操作示例</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HighPerformanceUserDao</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 批量插入优化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchInsertUsers</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users (username, email, status, create_time) VALUES (?, ?, ?, ?)&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        jdbcTemplate.batchUpdate(sql, <span class="keyword">new</span> <span class="title class_">BatchPreparedStatementSetter</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setValues</span><span class="params">(PreparedStatement ps, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> users.get(i);</span><br><span class="line">                ps.setString(<span class="number">1</span>, user.getUsername());</span><br><span class="line">                ps.setString(<span class="number">2</span>, user.getEmail());</span><br><span class="line">                ps.setInt(<span class="number">3</span>, user.getStatus());</span><br><span class="line">                ps.setTimestamp(<span class="number">4</span>, Timestamp.valueOf(user.getCreateTime()));</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getBatchSize</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> users.size();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、各框架优化策略详解"><a href="#四、各框架优化策略详解" class="headerlink" title="四、各框架优化策略详解"></a>四、各框架优化策略详解</h1><h2 id="（一）MyBatis原生优化策略"><a href="#（一）MyBatis原生优化策略" class="headerlink" title="（一）MyBatis原生优化策略"></a>（一）MyBatis原生优化策略</h2><h3 id="1-SQL优化"><a href="#1-SQL优化" class="headerlink" title="1. SQL优化"></a>1. SQL优化</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用ResultMap避免重复映射 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.example.entity.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;email&quot;</span> <span class="attr">property</span>=<span class="string">&quot;email&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;create_time&quot;</span> <span class="attr">property</span>=<span class="string">&quot;createTime&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 优化查询语句 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUsersByCondition&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserResultMap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 只查询必要的字段，避免使用SELECT * --&gt;</span></span><br><span class="line">    SELECT id, username, email, create_time</span><br><span class="line">    FROM users</span><br><span class="line">    <span class="comment">&lt;!-- 使用where标签动态构建条件，避免多余的AND --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用if标签进行动态SQL拼接，避免无效条件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;status != null&quot;</span>&gt;</span></span><br><span class="line">            AND status = #&#123;status&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用日期范围查询替代函数，提高索引利用率 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;startTime != null&quot;</span>&gt;</span></span><br><span class="line">            AND create_time &gt;= #&#123;startTime&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;endTime != null&quot;</span>&gt;</span></span><br><span class="line">            AND create_time &lt;= #&#123;endTime&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 添加排序和分页，优化大数据量查询 --&gt;</span></span><br><span class="line">    ORDER BY create_time DESC</span><br><span class="line">    LIMIT #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-缓存配置优化"><a href="#2-缓存配置优化" class="headerlink" title="2. 缓存配置优化"></a>2. 缓存配置优化</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启二级缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">eviction</span>=<span class="string">&quot;LRU&quot;</span> <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span> <span class="attr">size</span>=<span class="string">&quot;512&quot;</span> <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 针对特定查询的缓存配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findUserById&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserResultMap&quot;</span> <span class="attr">useCache</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    SELECT * FROM users WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-批量操作优化"><a href="#3-批量操作优化" class="headerlink" title="3. 批量操作优化"></a>3. 批量操作优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量插入优化</span></span><br><span class="line"><span class="meta">@Insert(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">    &lt;script&gt;</span></span><br><span class="line"><span class="meta">    INSERT INTO users (username, email, status, create_time) VALUES</span></span><br><span class="line"><span class="meta">    &lt;foreach collection=&quot;users&quot; item=&quot;user&quot; separator=&quot;,&quot;&gt;</span></span><br><span class="line"><span class="meta">        (#&#123;user.username&#125;, #&#123;user.email&#125;, #&#123;user.status&#125;, #&#123;user.createTime&#125;)</span></span><br><span class="line"><span class="meta">    &lt;/foreach&gt;</span></span><br><span class="line"><span class="meta">    &lt;/script&gt;</span></span><br><span class="line"><span class="meta">&quot;&quot;&quot;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">batchInsertUsers</span><span class="params">(<span class="meta">@Param(&quot;users&quot;)</span> List&lt;User&gt; users)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用时分批处理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveBatchUsers</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">batchSize</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; users.size(); i += batchSize) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">end</span> <span class="operator">=</span> Math.min(i + batchSize, users.size());</span><br><span class="line">        List&lt;User&gt; batch = users.subList(i, end);</span><br><span class="line">        userMapper.batchInsertUsers(batch);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-连接池优化"><a href="#4-连接池优化" class="headerlink" title="4. 连接池优化"></a>4. 连接池优化</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.yml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.zaxxer.hikari.HikariDataSource</span></span><br><span class="line">    <span class="attr">hikari:</span></span><br><span class="line">      <span class="comment"># 最小空闲连接数，保持一定数量的连接常驻内存，提高响应速度</span></span><br><span class="line">      <span class="attr">minimum-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="comment"># 最大连接池大小，根据系统并发量合理设置</span></span><br><span class="line">      <span class="attr">maximum-pool-size:</span> <span class="number">50</span></span><br><span class="line">      <span class="comment"># 连接空闲超时时间，避免空闲连接占用资源</span></span><br><span class="line">      <span class="attr">idle-timeout:</span> <span class="number">300000</span></span><br><span class="line">      <span class="comment"># 连接最大生命周期，防止连接过久导致的问题</span></span><br><span class="line">      <span class="attr">max-lifetime:</span> <span class="number">1800000</span></span><br><span class="line">      <span class="comment"># 连接超时时间，防止连接获取过久</span></span><br><span class="line">      <span class="attr">connection-timeout:</span> <span class="number">30000</span></span><br><span class="line">      <span class="comment"># 连接检测超时时间</span></span><br><span class="line">      <span class="attr">validation-timeout:</span> <span class="number">5000</span></span><br><span class="line">      <span class="comment"># 连接泄露检测阈值，帮助发现连接泄露问题</span></span><br><span class="line">      <span class="attr">leak-detection-threshold:</span> <span class="number">60000</span></span><br><span class="line">      <span class="comment"># 开启预编译语句缓存</span></span><br><span class="line">      <span class="attr">cachePrepStmts:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment"># 预编译语句缓存大小</span></span><br><span class="line">      <span class="attr">prepStmtCacheSize:</span> <span class="number">250</span></span><br><span class="line">      <span class="comment"># 预编译语句最大长度限制</span></span><br><span class="line">      <span class="attr">prepStmtCacheSqlLimit:</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）MyBatis-Plus优化策略"><a href="#（二）MyBatis-Plus优化策略" class="headerlink" title="（二）MyBatis Plus优化策略"></a>（二）MyBatis Plus优化策略</h2><h3 id="1-分页插件优化"><a href="#1-分页插件优化" class="headerlink" title="1. 分页插件优化"></a>1. 分页插件优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">interceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分页插件</span></span><br><span class="line">        <span class="type">PaginationInnerInterceptor</span> <span class="variable">paginationInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>();</span><br><span class="line">        paginationInterceptor.setMaxLimit(<span class="number">1000L</span>); <span class="comment">// 设置最大分页数</span></span><br><span class="line">        paginationInterceptor.setOverflow(<span class="literal">false</span>); <span class="comment">// 溢出总页数后是否进行处理</span></span><br><span class="line">        paginationInterceptor.setOptimizeJoin(<span class="literal">true</span>); <span class="comment">// 优化COUNT查询</span></span><br><span class="line"></span><br><span class="line">        interceptor.addInnerInterceptor(paginationInterceptor);</span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-条件构造器优化"><a href="#2-条件构造器优化" class="headerlink" title="2. 条件构造器优化"></a>2. 条件构造器优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OptimizedUserService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 避免频繁创建Wrapper对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ThreadLocal&lt;LambdaQueryWrapper&lt;User&gt;&gt; wrapperCache =</span><br><span class="line">        ThreadLocal.withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUsersByCondition</span><span class="params">(UserQuery query)</span> &#123;</span><br><span class="line">        LambdaQueryWrapper&lt;User&gt; wrapper = wrapperCache.get();</span><br><span class="line">        wrapper.clear(); <span class="comment">// 清除之前的条件</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用链式调用减少对象创建</span></span><br><span class="line">        <span class="keyword">return</span> list(wrapper</span><br><span class="line">                .eq(Objects.nonNull(query.getStatus()), User::getStatus, query.getStatus())</span><br><span class="line">                .like(StringUtils.isNotBlank(query.getUsername()), User::getUsername, query.getUsername())</span><br><span class="line">                .between(Objects.nonNull(query.getStartTime()) &amp;&amp; Objects.nonNull(query.getEndTime()),</span><br><span class="line">                        User::getCreateTime, query.getStartTime(), query.getEndTime())</span><br><span class="line">                .orderByDesc(User::getCreateTime));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-批量操作优化-1"><a href="#3-批量操作优化-1" class="headerlink" title="3. 批量操作优化"></a>3. 批量操作优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BatchOptimizedService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;UserMapper, User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 优化批量保存</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveBatchOptimized</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置合适的批次大小</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">batchSize</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">return</span> saveBatch(users, batchSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量更新优化</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">updateBatchOptimized</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (CollectionUtils.isEmpty(users)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用SQL批量更新而不是逐条更新</span></span><br><span class="line">        <span class="keyword">return</span> updateBatchById(users, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-字段策略优化"><a href="#4-字段策略优化" class="headerlink" title="4. 字段策略优化"></a>4. 字段策略优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableName(&quot;users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.ASSIGN_ID)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(value = &quot;username&quot;, strategy = FieldStrategy.NOT_EMPTY)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(value = &quot;email&quot;, strategy = FieldStrategy.NOT_NULL)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 忽略不需要的字段</span></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> String tempField;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自动填充字段</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）MyBatis-Plus-Join优化策略"><a href="#（三）MyBatis-Plus-Join优化策略" class="headerlink" title="（三）MyBatis Plus Join优化策略"></a>（三）MyBatis Plus Join优化策略</h2><h3 id="1-连表查询优化"><a href="#1-连表查询优化" class="headerlink" title="1. 连表查询优化"></a>1. 连表查询优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JoinOptimizedService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// N+1查询问题说明:</span></span><br><span class="line">    <span class="comment">// N+1问题是指在处理一对多关系时,先查询1次主表获取N条记录</span></span><br><span class="line">    <span class="comment">// 然后针对每条记录再查询1次关联表,最终产生N+1次查询的问题</span></span><br><span class="line">    <span class="comment">// 例如:查询用户订单时先查所有用户,再逐个查询每个用户的订单</span></span><br><span class="line">    <span class="comment">// 解决方案:使用连表查询一次性获取所有数据</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;UserOrderVO&gt; <span class="title function_">getUserOrdersOptimized</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mpjLambdaWrapper()</span><br><span class="line">                .selectAll(User.class)</span><br><span class="line">                .selectCollection(Order.class, UserOrderVO::getOrders)</span><br><span class="line">                .leftJoin(Order.class, Order::getUserId, User::getId)</span><br><span class="line">                .eq(User::getId, userId)</span><br><span class="line">                .list(UserOrderVO.class); <span class="comment">// 一次连表查询获取所有数据</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分页连表查询优化</span></span><br><span class="line">    <span class="comment">// 1. 使用selectAll和select方法选择性返回字段,避免返回所有字段</span></span><br><span class="line">    <span class="comment">// 2. 使用leftJoin进行关联查询,避免多次查询</span></span><br><span class="line">    <span class="comment">// 3. 使用Objects.nonNull进行空值判断,动态拼接查询条件</span></span><br><span class="line">    <span class="comment">// 4. 使用orderByDesc进行排序优化</span></span><br><span class="line">    <span class="comment">// 5. 使用page方法进行分页查询,避免全量查询</span></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;UserOrderVO&gt; <span class="title function_">getUserOrdersPage</span><span class="params">(Page&lt;UserOrderVO&gt; page, UserOrderQuery query)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mpjLambdaWrapper()</span><br><span class="line">                .selectAll(User.class) <span class="comment">// 返回User表所需字段</span></span><br><span class="line">                .select(Order::getOrderNo, Order::getAmount, Order::getStatus) <span class="comment">// 只返回Order表必要字段</span></span><br><span class="line">                .leftJoin(Order.class, Order::getUserId, User::getId) <span class="comment">// 一次关联查询</span></span><br><span class="line">                .eq(Objects.nonNull(query.getUserId()), User::getId, query.getUserId()) <span class="comment">// 动态条件</span></span><br><span class="line">                .eq(Objects.nonNull(query.getOrderStatus()), Order::getStatus, query.getOrderStatus()) <span class="comment">// 动态条件 </span></span><br><span class="line">                .orderByDesc(Order::getCreateTime) <span class="comment">// 排序优化</span></span><br><span class="line">                .page(page, UserOrderVO.class); <span class="comment">// 分页查询</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-查询字段优化"><a href="#2-查询字段优化" class="headerlink" title="2. 查询字段优化"></a>2. 查询字段优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只查询需要的字段，避免SELECT *</span></span><br><span class="line"><span class="keyword">public</span> List&lt;UserSimpleVO&gt; <span class="title function_">getUserSimpleList</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> mpjLambdaWrapper()</span><br><span class="line">            .select(User::getId, User::getUsername, User::getEmail)</span><br><span class="line">            .select(Profile::getAvatar, Profile::getNickname)</span><br><span class="line">            .leftJoin(Profile.class, Profile::getUserId, User::getId)</span><br><span class="line">            .eq(User::getStatus, <span class="number">1</span>)</span><br><span class="line">            .list(UserSimpleVO.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-缓存策略优化"><a href="#3-缓存策略优化" class="headerlink" title="3. 缓存策略优化"></a>3. 缓存策略优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@CacheConfig(cacheNames = &quot;userCache&quot;)</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CachedJoinService</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Redis缓存配置</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 本地缓存配置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Cache&lt;String, UserDetailVO&gt; localCache = Caffeine.newBuilder()</span><br><span class="line">            .maximumSize(<span class="number">1000</span>)</span><br><span class="line">            .expireAfterWrite(Duration.ofMinutes(<span class="number">5</span>))</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 多级缓存实现</span></span><br><span class="line">    <span class="meta">@Cacheable(key = &quot;#userId&quot;, unless = &quot;#result == null&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> UserDetailVO <span class="title function_">getUserDetail</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        <span class="comment">// 1. 查询本地缓存</span></span><br><span class="line">        <span class="type">UserDetailVO</span> <span class="variable">result</span> <span class="operator">=</span> localCache.getIfPresent(<span class="string">&quot;user:&quot;</span> + userId);</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 2. 查询Redis缓存</span></span><br><span class="line">        result = (UserDetailVO) redisTemplate.opsForValue().get(<span class="string">&quot;user:&quot;</span> + userId);</span><br><span class="line">        <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 回填本地缓存</span></span><br><span class="line">            localCache.put(<span class="string">&quot;user:&quot;</span> + userId, result);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 3. 查询数据库</span></span><br><span class="line">        result = mpjLambdaWrapper()</span><br><span class="line">                .selectAll(User.class)</span><br><span class="line">                .selectAll(Profile.class)</span><br><span class="line">                .selectCollection(Order.class, UserDetailVO::getRecentOrders,</span><br><span class="line">                    order -&gt; order.limit(<span class="number">5</span>))</span><br><span class="line">                .leftJoin(Profile.class, Profile::getUserId, User::getId)</span><br><span class="line">                .leftJoin(Order.class, Order::getUserId, User::getId)</span><br><span class="line">                .eq(User::getId, userId)</span><br><span class="line">                .orderByDesc(Order::getCreateTime)</span><br><span class="line">                .one(UserDetailVO.class);</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 更新缓存</span></span><br><span class="line">            localCache.put(<span class="string">&quot;user:&quot;</span> + userId, result);</span><br><span class="line">            redisTemplate.opsForValue().set(<span class="string">&quot;user:&quot;</span> + userId, result, <span class="number">30</span>, TimeUnit.MINUTES);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 缓存更新策略</span></span><br><span class="line">    <span class="meta">@CacheEvict(key = &quot;#userId&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateUserCache</span><span class="params">(Long userId)</span> &#123;</span><br><span class="line">        localCache.invalidate(<span class="string">&quot;user:&quot;</span> + userId);</span><br><span class="line">        redisTemplate.delete(<span class="string">&quot;user:&quot;</span> + userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）原生SQL优化策略"><a href="#（四）原生SQL优化策略" class="headerlink" title="（四）原生SQL优化策略"></a>（四）原生SQL优化策略</h2><h3 id="1-PreparedStatement优化"><a href="#1-PreparedStatement优化" class="headerlink" title="1. PreparedStatement优化"></a>1. PreparedStatement优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OptimizedNativeSqlDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用PreparedStatement避免SQL注入和提高性能</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUsersByCondition</span><span class="params">(UserQuery query)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;SELECT id, username, email, create_time FROM users WHERE 1=1&quot;</span>);</span><br><span class="line">        List&lt;Object&gt; params = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Objects.nonNull(query.getStatus())) &#123;</span><br><span class="line">            sql.append(<span class="string">&quot; AND status = ?&quot;</span>);</span><br><span class="line">            params.add(query.getStatus());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(query.getUsername())) &#123;</span><br><span class="line">            sql.append(<span class="string">&quot; AND username LIKE ?&quot;</span>);</span><br><span class="line">            params.add(<span class="string">&quot;%&quot;</span> + query.getUsername() + <span class="string">&quot;%&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sql.append(<span class="string">&quot; ORDER BY create_time DESC LIMIT ?, ?&quot;</span>);</span><br><span class="line">        params.add(query.getOffset());</span><br><span class="line">        params.add(query.getLimit());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.query(sql.toString(), params.toArray(), <span class="keyword">new</span> <span class="title class_">UserRowMapper</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-批量操作优化"><a href="#2-批量操作优化" class="headerlink" title="2. 批量操作优化"></a>2. 批量操作优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 高性能批量插入</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchInsertOptimized</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users (username, email, status, create_time) VALUES (?, ?, ?, ?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用批量操作</span></span><br><span class="line">    jdbcTemplate.batchUpdate(sql, users, <span class="number">1000</span>, (ps, user) -&gt; &#123;</span><br><span class="line">        ps.setString(<span class="number">1</span>, user.getUsername());</span><br><span class="line">        ps.setString(<span class="number">2</span>, user.getEmail());</span><br><span class="line">        ps.setInt(<span class="number">3</span>, user.getStatus());</span><br><span class="line">        ps.setTimestamp(<span class="number">4</span>, Timestamp.valueOf(user.getCreateTime()));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用NamedParameterJdbcTemplate优化</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> NamedParameterJdbcTemplate namedJdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchInsertWithNamedParams</span><span class="params">(List&lt;User&gt; users)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO users (username, email, status, create_time) &quot;</span> +</span><br><span class="line">                <span class="string">&quot;VALUES (:username, :email, :status, :createTime)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; batchValues = users.stream()</span><br><span class="line">            .map(user -&gt; &#123;</span><br><span class="line">                Map&lt;String, Object&gt; params = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">                params.put(<span class="string">&quot;username&quot;</span>, user.getUsername());</span><br><span class="line">                params.put(<span class="string">&quot;email&quot;</span>, user.getEmail());</span><br><span class="line">                params.put(<span class="string">&quot;status&quot;</span>, user.getStatus());</span><br><span class="line">                params.put(<span class="string">&quot;createTime&quot;</span>, user.getCreateTime());</span><br><span class="line">                <span class="keyword">return</span> params;</span><br><span class="line">            &#125;)</span><br><span class="line">            .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    namedJdbcTemplate.batchUpdate(sql, batchValues.toArray(<span class="keyword">new</span> <span class="title class_">Map</span>[<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-连接池和事务优化"><a href="#3-连接池和事务优化" class="headerlink" title="3. 连接池和事务优化"></a>3. 连接池和事务优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataSourceConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">primaryDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HikariConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HikariConfig</span>();</span><br><span class="line">        config.setJdbcUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>);</span><br><span class="line">        config.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        config.setPassword(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接池优化配置</span></span><br><span class="line">        config.setMinimumIdle(<span class="number">10</span>);        <span class="comment">// 优化：保持最小空闲连接数，减少连接创建开销</span></span><br><span class="line">        config.setMaximumPoolSize(<span class="number">50</span>);    <span class="comment">// 优化：限制最大连接数，防止资源耗尽</span></span><br><span class="line">        config.setIdleTimeout(<span class="number">300000</span>);    <span class="comment">// 优化：及时释放空闲连接，节省资源</span></span><br><span class="line">        config.setMaxLifetime(<span class="number">1800000</span>);   <span class="comment">// 优化：防止连接过期，定期更新连接</span></span><br><span class="line">        config.setConnectionTimeout(<span class="number">30000</span>);<span class="comment">// 优化：设置获取连接超时时间，避免线程阻塞</span></span><br><span class="line">        config.setValidationTimeout(<span class="number">5000</span>); <span class="comment">// 优化：设置连接有效性检查超时时间</span></span><br><span class="line">        config.setLeakDetectionThreshold(<span class="number">60000</span>); <span class="comment">// 优化：检测连接泄露</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 性能优化配置</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;cachePrepStmts&quot;</span>, <span class="string">&quot;true&quot;</span>);           <span class="comment">// 优化：开启预编译语句缓存</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;prepStmtCacheSize&quot;</span>, <span class="string">&quot;250&quot;</span>);         <span class="comment">// 优化：设置预编译语句缓存大小</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;prepStmtCacheSqlLimit&quot;</span>, <span class="string">&quot;2048&quot;</span>);    <span class="comment">// 优化：设置预编译语句最大长度</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;useServerPrepStmts&quot;</span>, <span class="string">&quot;true&quot;</span>);       <span class="comment">// 优化：使用服务器端预编译</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;useLocalSessionState&quot;</span>, <span class="string">&quot;true&quot;</span>);     <span class="comment">// 优化：使用本地会话状态</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;rewriteBatchedStatements&quot;</span>, <span class="string">&quot;true&quot;</span>); <span class="comment">// 优化：开启批处理优化</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;cacheResultSetMetadata&quot;</span>, <span class="string">&quot;true&quot;</span>);   <span class="comment">// 优化：缓存结果集元数据</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;cacheServerConfiguration&quot;</span>, <span class="string">&quot;true&quot;</span>);  <span class="comment">// 优化：缓存服务器配置</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;elideSetAutoCommits&quot;</span>, <span class="string">&quot;true&quot;</span>);      <span class="comment">// 优化：省略不必要的自动提交</span></span><br><span class="line">        config.addDataSourceProperty(<span class="string">&quot;maintainTimeStats&quot;</span>, <span class="string">&quot;false&quot;</span>);       <span class="comment">// 优化：关闭时间统计，减少开销</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">HikariDataSource</span>(config);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、性能测试与基准对比"><a href="#五、性能测试与基准对比" class="headerlink" title="五、性能测试与基准对比"></a>五、性能测试与基准对比</h1><h2 id="（一）测试环境配置"><a href="#（一）测试环境配置" class="headerlink" title="（一）测试环境配置"></a>（一）测试环境配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@TestMethodOrder(OrderAnnotation.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PerformanceComparisonTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JoinService joinService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TEST_DATA_SIZE</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">QUERY_ITERATIONS</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeAll</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 准备测试数据</span></span><br><span class="line">        generateTestData();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）CRUD操作性能对比"><a href="#（二）CRUD操作性能对比" class="headerlink" title="（二）CRUD操作性能对比"></a>（二）CRUD操作性能对比</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Order(1)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testInsertPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">    List&lt;User&gt; users = generateUsers(TEST_DATA_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis原生批量插入</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    userMapper.batchInsertUsers(users);</span><br><span class="line">    <span class="type">long</span> <span class="variable">mybatisTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis Plus批量插入</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    userService.saveBatch(users, <span class="number">1000</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 原生SQL批量插入</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    batchInsertWithJdbc(users);</span><br><span class="line">    <span class="type">long</span> <span class="variable">jdbcTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;插入&quot;</span> + TEST_DATA_SIZE + <span class="string">&quot;条记录耗时对比：&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis原生: &quot;</span> + mybatisTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis Plus: &quot;</span> + mpTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;原生JDBC: &quot;</span> + jdbcTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Order(2)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testQueryPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 查询性能测试</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; QUERY_ITERATIONS; i++) &#123;</span><br><span class="line">        userMapper.findUsersByStatus(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">mybatisTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; QUERY_ITERATIONS; i++) &#123;</span><br><span class="line">        userService.lambdaQuery().eq(User::getStatus, <span class="number">1</span>).list();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; QUERY_ITERATIONS; i++) &#123;</span><br><span class="line">        jdbcTemplate.query(<span class="string">&quot;SELECT * FROM users WHERE status = ?&quot;</span>,</span><br><span class="line">                          <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">1</span>&#125;, <span class="keyword">new</span> <span class="title class_">UserRowMapper</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">jdbcTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;执行&quot;</span> + QUERY_ITERATIONS + <span class="string">&quot;次查询耗时对比：&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis原生: &quot;</span> + mybatisTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis Plus: &quot;</span> + mpTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;原生JDBC: &quot;</span> + jdbcTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）连表查询性能对比"><a href="#（三）连表查询性能对比" class="headerlink" title="（三）连表查询性能对比"></a>（三）连表查询性能对比</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Order(3)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testJoinQueryPerformance</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">iterations</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis原生连表查询</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">        userMapper.findUsersWithProfile(<span class="number">1</span>, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">mybatisTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MyBatis Plus Join连表查询</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">        joinService.findUsersWithOrders();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpjTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 原生SQL连表查询</span></span><br><span class="line">    start = System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; iterations; i++) &#123;</span><br><span class="line">        jdbcTemplate.query(</span><br><span class="line">            <span class="string">&quot;SELECT u.*, p.profile_name FROM users u LEFT JOIN profiles p ON u.id = p.user_id WHERE u.status = ?&quot;</span>,</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">1</span>&#125;, <span class="keyword">new</span> <span class="title class_">UserProfileRowMapper</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">long</span> <span class="variable">jdbcTime</span> <span class="operator">=</span> System.currentTimeMillis() - start;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;执行&quot;</span> + iterations + <span class="string">&quot;次连表查询耗时对比：&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis原生: &quot;</span> + mybatisTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis Plus Join: &quot;</span> + mpjTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;原生JDBC: &quot;</span> + jdbcTime + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）内存使用情况分析"><a href="#（四）内存使用情况分析" class="headerlink" title="（四）内存使用情况分析"></a>（四）内存使用情况分析</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="meta">@Order(4)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testMemoryUsage</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Runtime</span> <span class="variable">runtime</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测试MyBatis Plus内存使用</span></span><br><span class="line">    runtime.gc();</span><br><span class="line">    <span class="type">long</span> <span class="variable">beforeMp</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; mpUsers = userService.list();</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">afterMp</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">    <span class="type">long</span> <span class="variable">mpMemory</span> <span class="operator">=</span> afterMp - beforeMp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测试原生JDBC内存使用</span></span><br><span class="line">    runtime.gc();</span><br><span class="line">    <span class="type">long</span> <span class="variable">beforeJdbc</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; jdbcUsers = jdbcTemplate.query(<span class="string">&quot;SELECT * FROM users&quot;</span>, <span class="keyword">new</span> <span class="title class_">UserRowMapper</span>());</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="variable">afterJdbc</span> <span class="operator">=</span> runtime.totalMemory() - runtime.freeMemory();</span><br><span class="line">    <span class="type">long</span> <span class="variable">jdbcMemory</span> <span class="operator">=</span> afterJdbc - beforeJdbc;</span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;内存使用对比：&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;MyBatis Plus: &quot;</span> + (mpMemory / <span class="number">1024</span> / <span class="number">1024</span>) + <span class="string">&quot;MB&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;原生JDBC: &quot;</span> + (jdbcMemory / <span class="number">1024</span> / <span class="number">1024</span>) + <span class="string">&quot;MB&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、框架选择建议"><a href="#六、框架选择建议" class="headerlink" title="六、框架选择建议"></a>六、框架选择建议</h1><h2 id="（一）选择决策矩阵"><a href="#（一）选择决策矩阵" class="headerlink" title="（一）选择决策矩阵"></a>（一）选择决策矩阵</h2><table>
<thead>
<tr>
<th>场景</th>
<th>推荐框架</th>
<th>理由</th>
</tr>
</thead>
<tbody><tr>
<td>快速原型开发</td>
<td>MyBatis Plus</td>
<td>开发效率最高，代码量最少</td>
</tr>
<tr>
<td>企业级应用</td>
<td>MyBatis原生</td>
<td>可控性强，性能可优化</td>
</tr>
<tr>
<td>复杂连表查询</td>
<td>MP Join</td>
<td>类型安全，代码简洁</td>
</tr>
<tr>
<td>高性能要求</td>
<td>原生SQL</td>
<td>性能最优，无框架开销</td>
</tr>
<tr>
<td>大数据量处理</td>
<td>原生SQL</td>
<td>批量操作效率最高</td>
</tr>
<tr>
<td>团队协作开发</td>
<td>MyBatis Plus</td>
<td>统一规范，降低学习成本</td>
</tr>
</tbody></table>
<h2 id="（二）性能优先级选择"><a href="#（二）性能优先级选择" class="headerlink" title="（二）性能优先级选择"></a>（二）性能优先级选择</h2><h3 id="1-极致性能场景（金融、支付系统）"><a href="#1-极致性能场景（金融、支付系统）" class="headerlink" title="1. 极致性能场景（金融、支付系统）"></a>1. 极致性能场景（金融、支付系统）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 推荐：原生SQL + 优化配置</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HighPerformancePaymentDao</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用批量操作和预编译语句</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchProcessPayments</span><span class="params">(List&lt;Payment&gt; payments)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;INSERT INTO payments (order_id, amount, status, create_time) VALUES (?, ?, ?, ?)&quot;</span>;</span><br><span class="line">        jdbcTemplate.batchUpdate(sql, payments, <span class="number">1000</span>, <span class="built_in">this</span>::setPaymentParams);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-开发效率优先场景（中小型项目）"><a href="#2-开发效率优先场景（中小型项目）" class="headerlink" title="2. 开发效率优先场景（中小型项目）"></a>2. 开发效率优先场景（中小型项目）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 推荐：MyBatis Plus</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductService</span> <span class="keyword">extends</span> <span class="title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> IPage&lt;Product&gt; <span class="title function_">getProductPage</span><span class="params">(ProductQuery query)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> lambdaQuery()</span><br><span class="line">                .like(StringUtils.isNotBlank(query.getName()), Product::getName, query.getName())</span><br><span class="line">                .eq(Objects.nonNull(query.getCategoryId()), Product::getCategoryId, query.getCategoryId())</span><br><span class="line">                .page(<span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(query.getCurrent(), query.getSize()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-复杂查询场景（报表系统）"><a href="#3-复杂查询场景（报表系统）" class="headerlink" title="3. 复杂查询场景（报表系统）"></a>3. 复杂查询场景（报表系统）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 推荐：MyBatis原生</span></span><br><span class="line"><span class="meta">@Select(&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">    SELECT</span></span><br><span class="line"><span class="meta">        p.category_id,</span></span><br><span class="line"><span class="meta">        c.category_name,</span></span><br><span class="line"><span class="meta">        COUNT(*) as product_count,</span></span><br><span class="line"><span class="meta">        AVG(p.price) as avg_price,</span></span><br><span class="line"><span class="meta">        SUM(CASE WHEN p.status = 1 THEN 1 ELSE 0 END) as active_count</span></span><br><span class="line"><span class="meta">    FROM products p</span></span><br><span class="line"><span class="meta">    LEFT JOIN categories c ON p.category_id = c.id</span></span><br><span class="line"><span class="meta">    WHERE p.create_time &gt;= #&#123;startDate&#125;</span></span><br><span class="line"><span class="meta">    GROUP BY p.category_id, c.category_name</span></span><br><span class="line"><span class="meta">    HAVING COUNT(*) &gt; #&#123;minCount&#125;</span></span><br><span class="line"><span class="meta">    ORDER BY product_count DESC</span></span><br><span class="line"><span class="meta">&quot;&quot;&quot;)</span></span><br><span class="line">List&lt;ProductStatistics&gt; <span class="title function_">getProductStatistics</span><span class="params">(<span class="meta">@Param(&quot;startDate&quot;)</span> Date startDate,</span></span><br><span class="line"><span class="params">                                           <span class="meta">@Param(&quot;minCount&quot;)</span> Integer minCount)</span>;</span><br></pre></td></tr></table></figure>

<h2 id="（三）混合使用策略"><a href="#（三）混合使用策略" class="headerlink" title="（三）混合使用策略"></a>（三）混合使用策略</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HybridUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper; <span class="comment">// MyBatis原生</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService; <span class="comment">// MyBatis Plus</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate; <span class="comment">// 原生SQL</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单CRUD使用MyBatis Plus</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getUserById</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userService.getById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 复杂查询使用MyBatis原生</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;UserStatistics&gt; <span class="title function_">getUserStatistics</span><span class="params">(Date startDate, Date endDate)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.getUserStatistics(startDate, endDate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 高性能批量操作使用原生SQL</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">batchUpdateUserStatus</span><span class="params">(List&lt;Long&gt; userIds, Integer status)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;UPDATE users SET status = ? WHERE id IN (&quot;</span> +</span><br><span class="line">                    String.join(<span class="string">&quot;,&quot;</span>, Collections.nCopies(userIds.size(), <span class="string">&quot;?&quot;</span>)) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">        List&lt;Object&gt; params = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        params.add(status);</span><br><span class="line">        params.addAll(userIds);</span><br><span class="line"></span><br><span class="line">        jdbcTemplate.update(sql, params.toArray());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="七、最佳实践总结"><a href="#七、最佳实践总结" class="headerlink" title="七、最佳实践总结"></a>七、最佳实践总结</h1><h2 id="（一）通用优化原则"><a href="#（一）通用优化原则" class="headerlink" title="（一）通用优化原则"></a>（一）通用优化原则</h2><h3 id="1-数据库层面优化"><a href="#1-数据库层面优化" class="headerlink" title="1. 数据库层面优化"></a>1. 数据库层面优化</h3><ul>
<li><strong>索引优化</strong>：为常用查询字段建立合适的索引</li>
<li><strong>SQL优化</strong>：避免SELECT *，使用LIMIT限制结果集</li>
<li><strong>连接池配置</strong>：合理配置连接池参数</li>
<li><strong>事务管理</strong>：避免长事务，合理使用事务传播机制</li>
</ul>
<h3 id="2-应用层面优化"><a href="#2-应用层面优化" class="headerlink" title="2. 应用层面优化"></a>2. 应用层面优化</h3><ul>
<li><strong>缓存策略</strong>：合理使用一级缓存和二级缓存</li>
<li><strong>批量操作</strong>：大量数据操作时使用批量处理</li>
<li><strong>分页查询</strong>：大结果集使用分页避免内存溢出</li>
<li><strong>懒加载</strong>：按需加载关联数据</li>
</ul>
<h3 id="3-代码层面优化"><a href="#3-代码层面优化" class="headerlink" title="3. 代码层面优化"></a>3. 代码层面优化</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 优化示例：避免N+1查询</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OptimizedOrderService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 错误做法：会产生N+1查询</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderVO&gt; <span class="title function_">getOrdersWithItems_Wrong</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Order&gt; orders = orderMapper.selectAll();</span><br><span class="line">        <span class="keyword">return</span> orders.stream().map(order -&gt; &#123;</span><br><span class="line">            List&lt;OrderItem&gt; items = orderItemMapper.selectByOrderId(order.getId()); <span class="comment">// N次查询</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderVO</span>(order, items);</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正确做法：使用连表查询或批量查询</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;OrderVO&gt; <span class="title function_">getOrdersWithItems_Right</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> orderMapper.selectOrdersWithItems(); <span class="comment">// 一次查询获取所有数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）性能监控与调优"><a href="#（二）性能监控与调优" class="headerlink" title="（二）性能监控与调优"></a>（二）性能监控与调优</h2><h3 id="1-SQL监控配置"><a href="#1-SQL监控配置" class="headerlink" title="1. SQL监控配置"></a>1. SQL监控配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># application.yml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?useSSL=false&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启SQL日志</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">com.example.mapper:</span> <span class="string">DEBUG</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MyBatis Plus配置</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-delete-field:</span> <span class="string">deleted</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="2-性能监控工具"><a href="#2-性能监控工具" class="headerlink" title="2. 性能监控工具"></a>2. 性能监控工具</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PerformanceMonitor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(PerformanceMonitor.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Around(&quot;@annotation(com.example.annotation.Monitor)&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">monitor</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Object</span> <span class="variable">result</span> <span class="operator">=</span> joinPoint.proceed();</span><br><span class="line">            <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">            logger.info(<span class="string">&quot;方法 &#123;&#125; 执行耗时: &#123;&#125;ms&quot;</span>,</span><br><span class="line">                       joinPoint.getSignature().getName(),</span><br><span class="line">                       endTime - startTime);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;方法 &#123;&#125; 执行异常&quot;</span>, joinPoint.getSignature().getName(), e);</span><br><span class="line">            <span class="keyword">throw</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）常见性能陷阱"><a href="#（三）常见性能陷阱" class="headerlink" title="（三）常见性能陷阱"></a>（三）常见性能陷阱</h2><h3 id="1-避免的反模式"><a href="#1-避免的反模式" class="headerlink" title="1. 避免的反模式"></a>1. 避免的反模式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 反模式1：频繁创建Wrapper对象</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUsers_Wrong</span><span class="params">(UserQuery query)</span> &#123;</span><br><span class="line">    <span class="comment">// 每次都创建新的Wrapper对象</span></span><br><span class="line">    <span class="keyword">return</span> list(<span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;User&gt;()</span><br><span class="line">            .eq(User::getStatus, query.getStatus())</span><br><span class="line">            .like(User::getUsername, query.getUsername()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确做法：复用Wrapper对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ThreadLocal&lt;LambdaQueryWrapper&lt;User&gt;&gt; wrapperCache =</span><br><span class="line">    ThreadLocal.withInitial(() -&gt; <span class="keyword">new</span> <span class="title class_">LambdaQueryWrapper</span>&lt;&gt;());</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findUsers_Right</span><span class="params">(UserQuery query)</span> &#123;</span><br><span class="line">    LambdaQueryWrapper&lt;User&gt; wrapper = wrapperCache.get();</span><br><span class="line">    wrapper.clear();</span><br><span class="line">    <span class="keyword">return</span> list(wrapper</span><br><span class="line">            .eq(User::getStatus, query.getStatus())</span><br><span class="line">            .like(User::getUsername, query.getUsername()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-内存泄漏预防"><a href="#2-内存泄漏预防" class="headerlink" title="2. 内存泄漏预防"></a>2. 内存泄漏预防</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MemoryOptimizedService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用WeakHashMap避免内存泄漏</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, List&lt;User&gt;&gt; cache = <span class="keyword">new</span> <span class="title class_">WeakHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 及时清理ThreadLocal</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ThreadLocal&lt;StringBuilder&gt; sqlBuilder = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">cleanupResources</span><span class="params">()</span> &#123;</span><br><span class="line">        sqlBuilder.remove(); <span class="comment">// 防止内存泄漏</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="八、总结与展望"><a href="#八、总结与展望" class="headerlink" title="八、总结与展望"></a>八、总结与展望</h1><h2 id="（一）框架特点总结"><a href="#（一）框架特点总结" class="headerlink" title="（一）框架特点总结"></a>（一）框架特点总结</h2><table>
<thead>
<tr>
<th>框架</th>
<th>开发效率</th>
<th>运行性能</th>
<th>学习成本</th>
<th>适用场景</th>
</tr>
</thead>
<tbody><tr>
<td><strong>MyBatis原生</strong></td>
<td>中等</td>
<td>高</td>
<td>低</td>
<td>复杂查询、性能敏感</td>
</tr>
<tr>
<td><strong>MyBatis Plus</strong></td>
<td>高</td>
<td>中等</td>
<td>中等</td>
<td>快速开发、标准CRUD</td>
</tr>
<tr>
<td><strong>MP Join</strong></td>
<td>高</td>
<td>中等</td>
<td>中等</td>
<td>连表查询、类型安全</td>
</tr>
<tr>
<td><strong>原生SQL</strong></td>
<td>低</td>
<td>最高</td>
<td>低</td>
<td>极致性能、大数据量</td>
</tr>
</tbody></table>
<h2 id="（二）选择建议"><a href="#（二）选择建议" class="headerlink" title="（二）选择建议"></a>（二）选择建议</h2><ol>
<li><strong>新项目推荐</strong>：MyBatis Plus + 原生SQL混合使用</li>
<li><strong>性能敏感项目</strong>：MyBatis原生 + 原生SQL</li>
<li><strong>快速开发项目</strong>：MyBatis Plus + MP Join</li>
<li><strong>大型企业项目</strong>：MyBatis原生为主，其他框架为辅</li>
</ol>
<h2 id="（三）未来发展趋势"><a href="#（三）未来发展趋势" class="headerlink" title="（三）未来发展趋势"></a>（三）未来发展趋势</h2><ol>
<li><strong>智能化SQL生成</strong>：AI辅助SQL优化和生成</li>
<li><strong>更好的类型安全</strong>：编译期SQL检查</li>
<li><strong>云原生支持</strong>：更好的分布式数据库支持</li>
<li><strong>性能监控集成</strong>：内置性能分析工具</li>
</ol>
<h2 id="（四）实践建议"><a href="#（四）实践建议" class="headerlink" title="（四）实践建议"></a>（四）实践建议</h2><ol>
<li><strong>根据项目特点选择合适的框架组合</strong></li>
<li><strong>建立性能基准测试，定期监控性能指标</strong></li>
<li><strong>制定团队开发规范，统一使用方式</strong></li>
<li><strong>持续学习新特性，及时升级框架版本</strong></li>
</ol>
<p>通过合理选择和优化MyBatis生态系统中的各种框架，可以在开发效率和运行性能之间找到最佳平衡点，构建出高质量的Java应用系统。</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><p><strong>官方文档</strong></p>
<ul>
<li>MyBatis官方文档</li>
<li>MyBatis Plus官方文档</li>
<li>MyBatis Plus Join官方文档</li>
</ul>
</li>
<li><p><strong>性能优化相关</strong></p>
<ul>
<li>《高性能MySQL》- 数据库优化</li>
<li>《Java性能调优实战》- JVM和应用优化</li>
<li>HikariCP连接池优化指南</li>
</ul>
</li>
<li><p><strong>技术文章</strong></p>
<ul>
<li>MyBatis源码分析系列</li>
<li>MyBatis Plus最佳实践</li>
<li>JDBC性能优化技巧</li>
</ul>
</li>
<li><p><strong>开源项目</strong></p>
<ul>
<li>MyBatis官方示例项目</li>
<li>MyBatis Plus代码生成器</li>
<li>企业级项目最佳实践案例</li>
</ul>
</li>
</ol>
<pre><code>
</code></pre>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在Java后端开发中，MyBatis生态系统提供了多种数据访问解决方案：原生MyBatis、MyBatis Plus、MyBatis Plu]]>
    </summary>
    
      <category term="数据库" scheme="https://uwakeme.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MyBatis" scheme="https://uwakeme.top/tags/MyBatis/"/>
    
      <category term="MyBatis Plus" scheme="https://uwakeme.top/tags/MyBatis-Plus/"/>
    
      <category term="ORM" scheme="https://uwakeme.top/tags/ORM/"/>
    
      <category term="性能优化" scheme="https://uwakeme.top/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="Java" scheme="https://uwakeme.top/categories/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【数据库】Redis从入门到精通]]></title>
    <link href="https://uwakeme.top/2025/07/21/%E6%95%B0%E6%8D%AE%E5%BA%93/%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E3%80%91Redis%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/"/>
    <id>https://uwakeme.top/2025/07/21/数据库/【数据库】Redis从入门到精通/</id>
    <published>2025-07-21T02:15:51.212Z</published>
    <updated>2025-07-21T02:15:51.212Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Redis (Remote Dictionary Server) 是一个开源的、使用C语言编写的、支持网络、可基于内存亦可持久化的日志型、Key-Value（键值对）存储数据库，并提供多种语言的API。它通常被称为<strong>数据结构服务器</strong>，因为值（value）可以是字符串(String)、哈希(Hash)、列表(List)、集合(Set)、有序集合(Sorted Set)等多种复杂的数据结构。凭借其超高的性能、丰富的数据类型以及灵活的应用场景，Redis已成为现代应用架构中不可或缺的组件，广泛应用于缓存、消息队列、排行榜、分布式锁等场景。本笔记旨在帮助读者系统地学习Redis的核心概念、主要特性和典型应用。</p>
<h1 id="一、Redis核心概念"><a href="#一、Redis核心概念" class="headerlink" title="一、Redis核心概念"></a>一、Redis核心概念</h1><h2 id="（一）键值存储-Key-Value-Store"><a href="#（一）键值存储-Key-Value-Store" class="headerlink" title="（一）键值存储 (Key-Value Store)"></a>（一）键值存储 (Key-Value Store)</h2><p>Redis的核心是一个键值存储系统。每个键都是一个字符串，而值可以是多种数据类型。这种简单的模型使得Redis非常易于理解和使用。</p>
<h2 id="（二）数据结构服务器"><a href="#（二）数据结构服务器" class="headerlink" title="（二）数据结构服务器"></a>（二）数据结构服务器</h2><p>与传统的关系型数据库不同，Redis的值不仅限于简单的字符串或数字，它可以是复杂的数据结构，如列表、集合、哈希表等。这使得开发者可以直接在数据库层面操作这些数据结构，而无需在应用层进行序列化和反序列化，从而大大简化了开发并提高了效率。</p>
<h2 id="（三）内存数据库-In-Memory-Database"><a href="#（三）内存数据库-In-Memory-Database" class="headerlink" title="（三）内存数据库 (In-Memory Database)"></a>（三）内存数据库 (In-Memory Database)</h2><p>Redis主要将数据存储在内存中，这使得其读写速度非常快，通常可以达到每秒数十万次的QPS（Queries Per Second）。当然，Redis也支持数据持久化，可以将内存中的数据异步写入磁盘，保证数据的可靠性。</p>
<h2 id="（四）单线程模型"><a href="#（四）单线程模型" class="headerlink" title="（四）单线程模型"></a>（四）单线程模型</h2><p>Redis的网络IO和键值对读写是由一个单线程来完成的，这也是Redis能够保持极高吞吐量的重要原因之一。单线程避免了多线程上下文切换和锁竞争带来的开销。需要注意的是，Redis的单线程主要指的是其处理客户端请求的线程是单线程的，而一些后台操作（如持久化、AOF重写、异步删除等）可能会由额外的线程执行。</p>
<h1 id="二、Redis数据类型与常用命令"><a href="#二、Redis数据类型与常用命令" class="headerlink" title="二、Redis数据类型与常用命令"></a>二、Redis数据类型与常用命令</h1><p>Redis支持多种数据类型，每种类型都有其特定的应用场景和操作命令。</p>
<h2 id="（一）字符串-String"><a href="#（一）字符串-String" class="headerlink" title="（一）字符串 (String)"></a>（一）字符串 (String)</h2><p>字符串是Redis中最基本的数据类型，可以存储任何形式的字符串，包括文本、序列化的对象、JSON、甚至是二进制数据。一个字符串类型的值最大可以存储512MB。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>SET key value [EX seconds] [PX milliseconds] [NX|XX]</code>：设置指定key的值。<ul>
<li><code>EX seconds</code>：设置key的过期时间，单位为秒。</li>
<li><code>PX milliseconds</code>：设置key的过期时间，单位为毫秒。</li>
<li><code>NX</code>：只在key不存在时，才对key进行设置操作。</li>
<li><code>XX</code>：只在key已经存在时，才对key进行设置操作。</li>
</ul>
</li>
<li><code>GET key</code>：获取指定key的值。</li>
<li><code>GETSET key value</code>：将给定key的值设为value，并返回key的旧值。</li>
<li><code>MSET key value [key value ...]</code>：同时设置一个或多个key-value对。</li>
<li><code>MGET key [key ...]</code>：获取所有给定key的值。</li>
<li><code>INCR key</code>：将key中储存的数字值增一。如果key不存在，则key的值会被初始化为0，然后再执行INCR操作。</li>
<li><code>DECR key</code>：将key中储存的数字值减一。</li>
<li><code>INCRBY key increment</code>：将key所储存的值加上给定的增量值（increment）。</li>
<li><code>DECRBY key decrement</code>：将key所储存的值减去给定的减量值（decrement）。</li>
<li><code>APPEND key value</code>：如果key已经存在并且是一个字符串，APPEND命令将指定的value追加到该key原来值的末尾。</li>
<li><code>STRLEN key</code>：返回key所储存的字符串值的长度。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>缓存：存储热点数据，如用户信息、配置信息等。</li>
<li>计数器：如网站访问量、文章阅读量等。</li>
<li>分布式锁：利用<code>SETNX</code> (SET if Not eXists) 实现。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置一个字符串键</span></span><br><span class="line">127.0.0.1:6379&gt; SET user:1 &#x27;&#123;&quot;name&quot;:&quot;Alice&quot;, &quot;age&quot;:30&#125;&#x27;</span><br><span class="line">OK</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取键的值</span></span><br><span class="line">127.0.0.1:6379&gt; GET user:1</span><br><span class="line">&quot;&#123;&quot;name&quot;:&quot;Alice&quot;, &quot;age&quot;:30&#125;&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">增加计数器</span></span><br><span class="line">127.0.0.1:6379&gt; INCR page_views:article:123</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>

<h2 id="（二）哈希-Hash"><a href="#（二）哈希-Hash" class="headerlink" title="（二）哈希 (Hash)"></a>（二）哈希 (Hash)</h2><p>哈希是一个键值对集合，可以看作是存储了一个对象的多个字段和对应的值。非常适合用于存储对象。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>HSET key field value [field value ...]</code>：将哈希表key中的字段field的值设为value。</li>
<li><code>HGET key field</code>：获取存储在哈希表中指定字段的值。</li>
<li><code>HMSET key field value [field value ...]</code>：同时将多个field-value对设置到哈希表key中。(Redis 4.0.0开始不推荐使用，可直接使用HSET)</li>
<li><code>HMGET key field [field ...]</code>：获取所有给定字段的值。</li>
<li><code>HGETALL key</code>：获取在哈希表中指定key的所有字段和值。</li>
<li><code>HDEL key field [field ...]</code>：删除一个或多个哈希表字段。</li>
<li><code>HLEN key</code>：获取哈希表中字段的数量。</li>
<li><code>HEXISTS key field</code>：查看哈希表key中，指定的字段是否存在。</li>
<li><code>HKEYS key</code>：获取哈希表中的所有字段。</li>
<li><code>HVALS key</code>：获取哈希表中的所有值。</li>
<li><code>HINCRBY key field increment</code>：为哈希表key中的指定字段的整数值加上增量increment。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>存储对象：比将对象序列化成JSON字符串存储在String类型中更节省空间，且方便对单个字段进行操作。</li>
<li>购物车：用户ID为key，商品ID为field，商品数量为value。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">存储用户信息</span></span><br><span class="line">127.0.0.1:6379&gt; HSET user:profile:1 name &quot;Bob&quot; age 25 city &quot;New York&quot;</span><br><span class="line">(integer) 3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取用户年龄</span></span><br><span class="line">127.0.0.1:6379&gt; HGET user:profile:1 age</span><br><span class="line">&quot;25&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取所有字段和值</span></span><br><span class="line">127.0.0.1:6379&gt; HGETALL user:profile:1</span><br><span class="line">1) &quot;name&quot;</span><br><span class="line">2) &quot;Bob&quot;</span><br><span class="line">3) &quot;age&quot;</span><br><span class="line">4) &quot;25&quot;</span><br><span class="line">5) &quot;city&quot;</span><br><span class="line">6) &quot;New York&quot;</span><br></pre></td></tr></table></figure>

<h2 id="（三）列表-List"><a href="#（三）列表-List" class="headerlink" title="（三）列表 (List)"></a>（三）列表 (List)</h2><p>列表是简单的字符串列表，按照插入顺序排序。可以添加一个元素到列表的头部（左边）或者尾部（右边）。列表的最大长度是 2^32 - 1 个元素 (4294967295, 每个列表超过40亿个元素)。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>LPUSH key element [element ...]</code>：将一个或多个值插入到列表头部。</li>
<li><code>RPUSH key element [element ...]</code>：将一个或多个值插入到列表尾部。</li>
<li><code>LPOP key [count]</code>：移除并获取列表的第一个元素（从左边）。</li>
<li><code>RPOP key [count]</code>：移除并获取列表的最后一个元素（从右边）。</li>
<li><code>LRANGE key start stop</code>：获取列表指定范围内的元素。start和stop都是从0开始的下标。</li>
<li><code>LLEN key</code>：获取列表的长度。</li>
<li><code>LINDEX key index</code>：通过索引获取列表中的元素。</li>
<li><code>LSET key index element</code>：通过索引设置列表元素的值。</li>
<li><code>LINSERT key BEFORE|AFTER pivot element</code>：在列表的元素pivot之前或之后插入element。</li>
<li><code>LTRIM key start stop</code>：对一个列表进行修剪(trim)，就是说，让列表只保留指定区间内的元素，不在指定区间之内的元素都将被删除。</li>
<li><code>BLPOP key [key ...] timeout</code>：移出并获取列表的第一个元素， 如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</li>
<li><code>BRPOP key [key ...] timeout</code>：移出并获取列表的最后一个元素，如果列表没有元素会阻塞列表直到等待超时或发现可弹出元素为止。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>消息队列：利用<code>LPUSH</code>生产消息，<code>RPOP</code>消费消息 (或反之)。<code>BRPOP</code>可实现阻塞式消费。</li>
<li>时间线&#x2F;最新动态：例如微博用户的关注动态列表。</li>
<li>任务队列。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">向任务队列添加任务</span></span><br><span class="line">127.0.0.1:6379&gt; LPUSH tasks &quot;process_video:1001&quot;</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; LPUSH tasks &quot;send_email:user_abc&quot;</span><br><span class="line">(integer) 2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看任务列表</span></span><br><span class="line">127.0.0.1:6379&gt; LRANGE tasks 0 -1</span><br><span class="line">1) &quot;send_email:user_abc&quot;</span><br><span class="line">2) &quot;process_video:1001&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">处理一个任务</span></span><br><span class="line">127.0.0.1:6379&gt; RPOP tasks</span><br><span class="line">&quot;process_video:1001&quot;</span><br></pre></td></tr></table></figure>

<h2 id="（四）集合-Set"><a href="#（四）集合-Set" class="headerlink" title="（四）集合 (Set)"></a>（四）集合 (Set)</h2><p>集合是字符串类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>SADD key member [member ...]</code>：向集合添加一个或多个成员。</li>
<li><code>SREM key member [member ...]</code>：移除集合中一个或多个成员。</li>
<li><code>SMEMBERS key</code>：返回集合中的所有成员。</li>
<li><code>SISMEMBER key member</code>：判断member元素是否是集合key的成员。</li>
<li><code>SCARD key</code>：获取集合的成员数。</li>
<li><code>SPOP key [count]</code>：移除并返回集合中的一个或多个随机元素。</li>
<li><code>SRANDMEMBER key [count]</code>：返回集合中一个或多个随机数。</li>
<li><code>SUNION key [key ...]</code>：返回所有给定集合的并集。</li>
<li><code>SINTER key [key ...]</code>：返回所有给定集合的交集。</li>
<li><code>SDIFF key [key ...]</code>：返回第一个集合与其他集合之间的差集。</li>
<li><code>SUNIONSTORE destination key [key ...]</code>：将给定集合的并集存储在指定的集合destination中。</li>
<li><code>SINTERSTORE destination key [key ...]</code>：将给定集合的交集存储在指定的集合destination中。</li>
<li><code>SDIFFSTORE destination key [key ...]</code>：将给定集合的差集存储在指定的集合destination中。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>标签系统：例如给用户打标签，给文章打标签。</li>
<li>共同好友&#x2F;共同关注：利用交集操作。</li>
<li>抽奖系统：利用<code>SRANDMEMBER</code>或<code>SPOP</code>随机抽取。</li>
<li>去重：利用集合成员的唯一性。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加标签到文章</span></span><br><span class="line">127.0.0.1:6379&gt; SADD article:100:tags &quot;redis&quot; &quot;database&quot; &quot;nosql&quot;</span><br><span class="line">(integer) 3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文章所有标签</span></span><br><span class="line">127.0.0.1:6379&gt; SMEMBERS article:100:tags</span><br><span class="line">1) &quot;nosql&quot;</span><br><span class="line">2) &quot;redis&quot;</span><br><span class="line">3) &quot;database&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断文章是否有某个标签</span></span><br><span class="line">127.0.0.1:6379&gt; SISMEMBER article:100:tags &quot;java&quot;</span><br><span class="line">(integer) 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户A和用户B的共同关注</span></span><br><span class="line">127.0.0.1:6379&gt; SADD user:A:following &quot;user:C&quot; &quot;user:D&quot; &quot;user:E&quot;</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SADD user:B:following &quot;user:D&quot; &quot;user:E&quot; &quot;user:F&quot;</span><br><span class="line">(integer) 3</span><br><span class="line">127.0.0.1:6379&gt; SINTER user:A:following user:B:following</span><br><span class="line">1) &quot;user:D&quot;</span><br><span class="line">2) &quot;user:E&quot;</span><br></pre></td></tr></table></figure>

<h2 id="（五）有序集合-Sorted-Set-ZSet"><a href="#（五）有序集合-Sorted-Set-ZSet" class="headerlink" title="（五）有序集合 (Sorted Set &#x2F; ZSet)"></a>（五）有序集合 (Sorted Set &#x2F; ZSet)</h2><p>有序集合和集合一样也是字符串类型元素的集合，且不允许重复的成员。不同的是每个元素都会关联一个double类型的分数（score）。Redis正是通过分数来为集合中的成员进行从小到大的排序。有序集合的成员是唯一的,但分数(score)却可以重复。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>ZADD key [NX|XX] [CH] [INCR] score member [score member ...]</code>：向有序集合添加一个或多个成员，或者更新已存在成员的分数。</li>
<li><code>ZREM key member [member ...]</code>：移除有序集合中的一个或多个成员。</li>
<li><code>ZRANGE key start stop [WITHSCORES]</code>：通过索引区间返回有序集合成指定区间内的成员（默认按分数从小到大）。</li>
<li><code>ZREVRANGE key start stop [WITHSCORES]</code>：返回有序集中指定区间内的成员，通过索引，分数从高到低。</li>
<li><code>ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]</code>：通过分数区间返回有序集合指定区间内的成员。</li>
<li><code>ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]</code>：返回有序集中指定分数区间内的成员，分数从高到低排序。</li>
<li><code>ZCARD key</code>：获取有序集合的成员数。</li>
<li><code>ZSCORE key member</code>：返回有序集合中，成员member的分数。</li>
<li><code>ZCOUNT key min max</code>：计算在有序集合中指定区间分数的成员数。</li>
<li><code>ZINCRBY key increment member</code>：有序集合中对指定成员的分数加上增量increment。</li>
<li><code>ZRANK key member</code>：返回有序集合中指定成员的排名（按分数从小到大）。</li>
<li><code>ZREVRANK key member</code>：返回有序集合中指定成员的排名（按分数从大到小）。</li>
<li><code>ZPOPMIN key [count]</code>：移除并返回有序集合中分数最低的count个成员。</li>
<li><code>ZPOPMAX key [count]</code>：移除并返回有序集合中分数最高的count个成员。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>排行榜：例如游戏积分榜、热门商品榜。</li>
<li>带权重的任务队列：分数可以作为优先级。</li>
<li>范围查找：例如查找某个分数段的用户。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加玩家得分</span></span><br><span class="line">127.0.0.1:6379&gt; ZADD leaderboard 1000 &quot;player1&quot; 1500 &quot;player2&quot; 800 &quot;player3&quot;</span><br><span class="line">(integer) 3</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取Top N玩家 (分数从高到低)</span></span><br><span class="line">127.0.0.1:6379&gt; ZREVRANGE leaderboard 0 1 WITHSCORES</span><br><span class="line">1) &quot;player2&quot;</span><br><span class="line">2) &quot;1500&quot;</span><br><span class="line">3) &quot;player1&quot;</span><br><span class="line">4) &quot;1000&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取玩家排名</span></span><br><span class="line">127.0.0.1:6379&gt; ZREVRANK leaderboard &quot;player3&quot;</span><br><span class="line">(integer) 2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">增加玩家分数</span></span><br><span class="line">127.0.0.1:6379&gt; ZINCRBY leaderboard 300 &quot;player3&quot;</span><br><span class="line">&quot;1100&quot;</span><br></pre></td></tr></table></figure>

<h2 id="（六）流-Stream"><a href="#（六）流-Stream" class="headerlink" title="（六）流 (Stream)"></a>（六）流 (Stream)</h2><p>Stream是Redis 5.0版本引入的新的强大的支持多播的可持久化的消息队列。它借鉴了 Kafka 的设计思想，弥补了之前基于List或Pub&#x2F;Sub实现消息队列的不足。</p>
<p><strong>核心概念:</strong></p>
<ul>
<li>**Consumer Groups (消费组)**：允许多个消费者消费同一个Stream中的消息，并且每个消息只会被同一消费组内的一个消费者处理。</li>
<li>**Message Persistence (消息持久化)**：Stream中的消息是持久化的。</li>
<li>**Message ID (消息ID)**：每个消息都有一个唯一的ID，通常由时间戳和序列号组成，保证了消息的有序性。</li>
<li>**Pending Entries List (PEL, 待处理条目列表)**：记录了被客户端读取但尚未确认(ACK)的消息。</li>
</ul>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>XADD key [NOMKSTREAM] [MAXLEN|MINID [=|~] threshold [LIMIT count]] *|id field value [field value ...]</code>：添加消息到Stream末尾。</li>
<li><code>XREAD [COUNT count] [BLOCK milliseconds] STREAMS key [key ...] id [id ...]</code>：从一个或多个Stream中读取消息。</li>
<li><code>XGROUP CREATE key groupname id [MKSTREAM]</code>：创建消费者组。</li>
<li><code>XREADGROUP GROUP group consumer [COUNT count] [BLOCK milliseconds] [NOACK] STREAMS key [key ...] id [id ...]</code>：从消费者组读取消息。</li>
<li><code>XACK key group id [id ...]</code>：向消费者组确认消息已处理。</li>
<li><code>XPENDING key group [start end count] [consumer]</code>：查看待处理的消息列表。</li>
<li><code>XCLAIM key group consumer min-idle-time id [id ...]</code>：转移待处理消息的所有权。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>功能完善的消息队列：替代 RabbitMQ、Kafka 等，用于日志收集、事件通知等。</li>
<li>实时数据流处理。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">向 stream:orders 添加消息</span></span><br><span class="line">127.0.0.1:6379&gt; XADD stream:orders * product_id 1001 quantity 2 customer_id 555</span><br><span class="line">&quot;1700000000000-0&quot; # 返回消息ID (时间戳-序列号)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建消费者组</span></span><br><span class="line">127.0.0.1:6379&gt; XGROUP CREATE stream:orders group1 0 MKSTREAM</span><br><span class="line">OK</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">消费者c1从组group1读取消息</span></span><br><span class="line">127.0.0.1:6379&gt; XREADGROUP GROUP group1 c1 COUNT 1 BLOCK 2000 STREAMS stream:orders &gt;</span><br><span class="line">1) 1) &quot;stream:orders&quot;</span><br><span class="line">   2) 1) 1) &quot;1700000000000-0&quot;</span><br><span class="line">         2) 1) &quot;product_id&quot;</span><br><span class="line">            2) &quot;1001&quot;</span><br><span class="line">            3) &quot;quantity&quot;</span><br><span class="line">            4) &quot;2&quot;</span><br><span class="line">            5) &quot;customer_id&quot;</span><br><span class="line">            6) &quot;555&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">消费者c1确认消息</span></span><br><span class="line">127.0.0.1:6379&gt; XACK stream:orders group1 &quot;1700000000000-0&quot;</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>

<h2 id="（七）HyperLogLog"><a href="#（七）HyperLogLog" class="headerlink" title="（七）HyperLogLog"></a>（七）HyperLogLog</h2><p>HyperLogLog是一种概率数据结构，用于对唯一事物进行计数（技术上称为估算集合的基数）。通常情况下，对唯一项进行计数需要使用与要计数的项数成比例的内存量，因为需要记住过去已经看过的元素，以避免多次计数它们。然而，一系列算法以内存换取精度：它们返回带有标准错误的估计度量，在Redis实现中，标准错误小于1%。这种算法的奇妙之处在于，不再需要使用与计数项目数量成比例的内存量，而是可以使用恒定的内存量！在最坏的情况下为12k字节，如果HyperLogLog（从现在开始简称为HLL）看到的元素很少，则内存要少得多。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>PFADD key element [element ...]</code>：添加指定元素到 HyperLogLog 中。</li>
<li><code>PFCOUNT key [key ...]</code>：返回给定 HyperLogLog 的基数估算值。</li>
<li><code>PFMERGE destkey sourcekey [sourcekey ...]</code>：将多个 HyperLogLog 合并为一个 HyperLogLog。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>统计网站独立访客数 (UV)。</li>
<li>统计用户搜索的独立词条数。</li>
<li>大数据去重计数。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记录访问页面的用户ID</span></span><br><span class="line">127.0.0.1:6379&gt; PFADD page:home:uv user1 user2 user3 user1</span><br><span class="line">(integer) 1 # 返回1表示至少有一个元素的内部表示被修改</span><br><span class="line">127.0.0.1:6379&gt; PFADD page:home:uv user4 user5</span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取首页UV估算值</span></span><br><span class="line">127.0.0.1:6379&gt; PFCOUNT page:home:uv</span><br><span class="line">(integer) 5</span><br></pre></td></tr></table></figure>

<h2 id="（八）位图-Bitmap"><a href="#（八）位图-Bitmap" class="headerlink" title="（八）位图 (Bitmap)"></a>（八）位图 (Bitmap)</h2><p>位图不是实际的数据类型，而是在字符串类型上定义的一组面向位的操作。由于字符串是二进制安全的blob，并且它们的最大长度是512 MB，所以它们适合设置多达2^32个不同的位。位操作分为两组：常量时间单个位操作，如将位设置为1或0，或获取其值；以及对位组的操作，例如计算给定范围位中设置位（人口计数）的数量。位图的最大优点之一是它们在存储信息时通常非常节省空间。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>SETBIT key offset value</code>：对key所储存的字符串值，设置或清除指定偏移量上的位(bit)。</li>
<li><code>GETBIT key offset</code>：对key所储存的字符串值，获取指定偏移量上的位(bit)。</li>
<li><code>BITCOUNT key [start end]</code>：计算给定字符串中，被设置为1的比特位的数量。</li>
<li><code>BITPOS key bit [start end]</code>：返回字符串里面第一个被设置为1或者0的bit位。</li>
<li><code>BITOP operation destkey key [key ...]</code>：对一个或多个保存二进制位的字符串key进行位元操作，并将结果保存到destkey上。支持AND, OR, XOR, NOT。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>用户签到统计：一个月最多31天，用一个很小的字符串就能表示。</li>
<li>用户在线状态。</li>
<li>统计活跃用户。</li>
<li>实现布隆过滤器。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">记录用户ID为100在2024年3月15日的签到 (假设每月第一天offset为0)</span></span><br><span class="line">127.0.0.1:6379&gt; SETBIT user:sign:100:202403 14 1  # 15号对应offset 14</span><br><span class="line">(integer) 0 # 返回该位原来的值</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查用户是否在3月15日签到</span></span><br><span class="line">127.0.0.1:6379&gt; GETBIT user:sign:100:202403 14</span><br><span class="line">(integer) 1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">统计用户3月份签到次数</span></span><br><span class="line">127.0.0.1:6379&gt; BITCOUNT user:sign:100:202403</span><br><span class="line">(integer) 1</span><br></pre></td></tr></table></figure>

<h2 id="（九）地理空间索引-Geospatial"><a href="#（九）地理空间索引-Geospatial" class="headerlink" title="（九）地理空间索引 (Geospatial)"></a>（九）地理空间索引 (Geospatial)</h2><p>Redis Geospatial索引允许存储坐标并将它们组织成可以查询半径或边界框的索引。这个功能对于查找给定地理区域内的点非常有用。Redis使用一个有序集合来存储地理空间数据，其中元素是地理位置的成员名，分数是其地理哈希编码。</p>
<p><strong>常用命令:</strong></p>
<ul>
<li><code>GEOADD key [NX|XX] [CH] longitude latitude member [longitude latitude member ...]</code>：将指定的地理空间位置（纬度、经度、名称）添加到指定的key中。</li>
<li><code>GEOPOS key member [member ...]</code>：从key里返回所有给定位置元素的位置（经度和纬度）。</li>
<li><code>GEODIST key member1 member2 [unit]</code>：返回两个给定位置之间的距离。单位可以是m（米）、km（千米）、mi（英里）、ft（英尺）。</li>
<li><code>GEORADIUS key longitude latitude radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</code>：以给定的经纬度为中心， 返回键包含的位置元素当中， 与中心的距离不超过给定最大距离的所有位置元素。（Redis 6.2后推荐使用GEOSEARCH）</li>
<li><code>GEORADIUSBYMEMBER key member radius m|km|ft|mi [WITHCOORD] [WITHDIST] [WITHHASH] [COUNT count] [ASC|DESC] [STORE key] [STOREDIST key]</code>：这个命令和 GEORADIUS 命令一样， 都可以找出位于指定范围内的元素， 但是 GEORADIUSBYMEMBER 的中心点是由给定的位置元素决定的， 而不是使用输入的经度和纬度来决定中心点。（Redis 6.2后推荐使用GEOSEARCH）</li>
<li><code>GEOSEARCH key [FROMMEMBER member | FROMLONLAT longitude latitude] [BYRADIUS radius m|km|ft|mi | BYBOX width height m|km|ft|mi] [ASC|DESC] [COUNT count [ANY]] [WITHCOORD] [WITHDIST] [WITHHASH]</code>：在指定的地理空间索引中搜索成员。</li>
<li><code>GEOSEARCHSTORE destination source [FROMMEMBER member | FROMLONLAT longitude latitude] [BYRADIUS radius m|km|ft|mi | BYBOX width height m|km|ft|mi] [ASC|DESC] [COUNT count [ANY]] [STOREDIST]</code>：与GEOSEARCH类似，但会将结果存储到destination键。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>查找附近的人&#x2F;地点。</li>
<li>基于位置的服务 (LBS)。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加城市坐标</span></span><br><span class="line">127.0.0.1:6379&gt; GEOADD cities 116.40 39.90 &quot;Beijing&quot; 121.47 31.23 &quot;Shanghai&quot;</span><br><span class="line">(integer) 2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取北京的坐标</span></span><br><span class="line">127.0.0.1:6379&gt; GEOPOS cities &quot;Beijing&quot;</span><br><span class="line">1) 1) &quot;116.4000016450881958&quot;  # 经度</span><br><span class="line">   2) &quot;39.90000009167015552&quot;  # 纬度</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">计算北京到上海的距离 (单位：千米)</span></span><br><span class="line">127.0.0.1:6379&gt; GEODIST cities &quot;Beijing&quot; &quot;Shanghai&quot; km</span><br><span class="line">&quot;1067.5500&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找上海附近200公里内的城市 (使用GEOSEARCH)</span></span><br><span class="line">127.0.0.1:6379&gt; GEOSEARCH cities FROMLONLAT 121.47 31.23 BYRADIUS 200 km WITHDIST</span><br><span class="line">1) 1) &quot;Shanghai&quot;</span><br><span class="line">   2) &quot;0.0000&quot;</span><br></pre></td></tr></table></figure>

<h1 id="三、Redis特性"><a href="#三、Redis特性" class="headerlink" title="三、Redis特性"></a>三、Redis特性</h1><h2 id="（一）持久化-Persistence"><a href="#（一）持久化-Persistence" class="headerlink" title="（一）持久化 (Persistence)"></a>（一）持久化 (Persistence)</h2><p>Redis提供了两种主要的持久化机制，可以将内存中的数据保存到磁盘，防止数据丢失。</p>
<h3 id="1-RDB-Redis-Database"><a href="#1-RDB-Redis-Database" class="headerlink" title="1. RDB (Redis Database)"></a>1. RDB (Redis Database)</h3><p>RDB持久化是在指定的时间间隔内生成数据集的时间点快照（point-in-time snapshot）。</p>
<p><strong>工作原理：</strong></p>
<p>当满足触发条件时（例如，<code>save 900 1</code>表示900秒内至少有1个key被修改），Redis会单独创建一个子进程（fork），子进程负责将当前内存中的数据写入到一个临时的RDB文件中。当子进程完成写入后，会用这个临时文件替换掉上一次持久化生成的RDB文件。</p>
<p><strong>优点：</strong></p>
<ul>
<li>RDB是一个非常紧凑的文件，它保存了某个时间点的数据集，非常适用于备份。</li>
<li>对于灾难恢复而言，RDB是一个理想的选择。因为你可以轻松地将不同版本的数据集恢复到不同的服务器上。</li>
<li>性能最大化。对于Redis的服务进程而言，在开始持久化时，它唯一需要做的只是fork出一个子进程，之后再由子进程完成这些持久化的工作，这样主进程就不会进行任何IO操作。</li>
<li>相比于AOF，在恢复大数据集的时候，RDB方式会更快一些。</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>如果你需要尽量避免在服务器故障时丢失数据，那么RDB不适合你。在最后一次RDB快照之后到服务器宕机前的数据可能会丢失。</li>
<li>RDB需要经常fork子进程来保存数据集到硬盘上，当数据集比较大的时候，fork的过程可能会非常耗时，造成服务器在一段时间内停止处理客户端的请求（毫秒级到秒级）。</li>
</ul>
<p><strong>配置:</strong></p>
<p>在<code>redis.conf</code>文件中配置<code>save</code>指令：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">save 900 1   # 900秒内至少有1个key被修改则进行快照</span><br><span class="line">save 300 10  # 300秒内至少有10个key被修改则进行快照</span><br><span class="line">save 60 10000 # 60秒内至少有10000个key被修改则进行快照</span><br><span class="line"></span><br><span class="line">dbfilename dump.rdb # RDB文件名</span><br><span class="line">dir ./             # RDB文件保存目录</span><br></pre></td></tr></table></figure>

<p>可以使用<code>SAVE</code>（阻塞）或<code>BGSAVE</code>（非阻塞，后台执行）命令手动触发RDB快照。</p>
<h3 id="2-AOF-Append-Only-File"><a href="#2-AOF-Append-Only-File" class="headerlink" title="2. AOF (Append Only File)"></a>2. AOF (Append Only File)</h3><p>AOF持久化记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。AOF文件中的命令全部以Redis协议的格式来保存，新命令会被追加到文件的末尾。Redis还可以在后台对AOF文件进行重写（rewrite），使得AOF文件的体积不会超出保存数据集状态所需的实际大小。</p>
<p><strong>工作原理：</strong></p>
<p>每当Redis执行一个改变数据集的命令时，这个命令就会被追加到AOF文件的末尾。当AOF文件体积过大时，Redis会fork一个子进程在后台对AOF进行重写，生成一个新的、更小的AOF文件。重写过程是安全的，Redis会继续将新的写命令追加到旧的AOF文件的一个内存缓冲区中，当子进程完成重写后，会将这个缓冲区的内容追加到新的AOF文件末尾，然后用新的AOF文件替换旧的。</p>
<p><strong>优点：</strong></p>
<ul>
<li>数据更不容易丢失。你可以配置不同的<code>appendfsync</code>策略，例如每秒同步一次（默认），这样最多只会丢失1秒的数据。</li>
<li>AOF文件是一个只进行追加操作的日志文件，因此对AOF文件的写入不需要进行seek，即使由于某些原因（例如磁盘空间已满）未执行完整的写入命令，也很容易使用<code>redis-check-aof</code>工具来修复。</li>
<li>当AOF文件体积变得过大时，Redis能够在后台自动重写AOF文件。重写后的新AOF文件包含了恢复当前数据集所需的最小命令集合。</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>对于相同的数据集来说，AOF文件的体积通常要大于RDB文件的体积。</li>
<li>根据所使用的<code>fsync</code>策略，AOF的速度可能会慢于RDB。在一般情况下，每秒<code>fsync</code>的性能依然非常高，而关闭<code>fsync</code>可以让AOF的速度和RDB一样快，即使在高负荷之下也是如此。不过，和RDB持久化一样，写入AOF也需要fork子进程，在大数据量下可能会有阻塞风险。</li>
<li>AOF在过去曾经出现过一些bug（例如在重写期间由于某些命令的特殊性导致数据不一致）。</li>
</ul>
<p><strong>配置:</strong></p>
<p>在<code>redis.conf</code>文件中配置：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">appendonly yes # 开启AOF</span><br><span class="line"></span><br><span class="line">appendfilename &quot;appendonly.aof&quot; # AOF文件名</span><br><span class="line"></span><br><span class="line"># appendfsync</span><br><span class="line"># no: 不进行fsync，由操作系统决定何时同步。速度最快，但最不安全。</span><br><span class="line"># always: 每个写命令都立即fsync。速度最慢，但最安全。</span><br><span class="line"># everysec: 每秒fsync一次。默认配置，兼顾性能和安全。</span><br><span class="line">appendfsync everysec</span><br><span class="line"></span><br><span class="line"># AOF重写配置</span><br><span class="line">auto-aof-rewrite-percentage 100 # 当前AOF文件大小超过上次重写后AOF文件大小的百分之多少时触发重写。</span><br><span class="line">auto-aof-rewrite-min-size 64mb  # 触发重写的AOF文件最小体积。</span><br></pre></td></tr></table></figure>

<h3 id="3-RDB与AOF的选择与混合持久化"><a href="#3-RDB与AOF的选择与混合持久化" class="headerlink" title="3. RDB与AOF的选择与混合持久化"></a>3. RDB与AOF的选择与混合持久化</h3><ul>
<li><strong>如果只追求性能，且可以容忍少量数据丢失</strong>，可以选择RDB。</li>
<li><strong>如果追求数据的完整性，不希望丢失数据</strong>，AOF是更好的选择。</li>
<li><strong>官方推荐同时使用两种持久化功能</strong>。这样当Redis重启时，会优先使用AOF文件来恢复数据集，因为它通常包含更新的数据。</li>
</ul>
<p>Redis 4.0开始支持<strong>RDB-AOF混合持久化</strong>。这种模式下，AOF重写时，不再是简单地将内存中的数据转换为RESP命令写入AOF文件，而是将RDB快照内容和增量的AOF修改命令存在一起，写入到新的AOF文件。这样，在加载数据时，可以先加载RDB部分，然后再加载增量AOF部分，结合了RDB的快速加载和AOF的数据完整性优势。</p>
<p>配置混合持久化：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aof-use-rdb-preamble yes</span><br></pre></td></tr></table></figure>

<h2 id="（二）复制-Replication"><a href="#（二）复制-Replication" class="headerlink" title="（二）复制 (Replication)"></a>（二）复制 (Replication)</h2><p>Redis复制功能允许从服务器（slave&#x2F;replica）成为主服务器（master&#x2F;primary）的精确副本。</p>
<p><strong>工作原理：</strong></p>
<ol>
<li>从服务器连接到主服务器，发送<code>PSYNC</code>命令。</li>
<li>如果是初次连接，主服务器会启动一个后台进程生成RDB快照，并将快照发送给从服务器。从服务器接收并载入这个RDB文件。</li>
<li>在RDB发送期间，主服务器会将所有新的写命令缓存在内存中。当RDB发送完毕后，主服务器会将这些缓存的命令发送给从服务器。</li>
<li>之后，主服务器每执行一个写命令，都会异步地发送给所有从服务器。</li>
<li>如果连接断开重连，会尝试进行部分重同步（增量复制），如果不行则进行全量重同步。</li>
</ol>
<p><strong>优点：</strong></p>
<ul>
<li><strong>读写分离</strong>：主服务器负责写操作，从服务器负责读操作，分担主服务器的压力，提高整体性能。</li>
<li><strong>数据冗余&#x2F;高可用</strong>：当主服务器宕机时，可以将一个从服务器提升为新的主服务器，继续提供服务。</li>
</ul>
<p><strong>配置：</strong></p>
<p>在从服务器的<code>redis.conf</code>中配置：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line"># 或者 slaveof &lt;masterip&gt; &lt;masterport&gt; (旧版命令)</span><br><span class="line"></span><br><span class="line">masterauth &lt;master-password&gt; # 如果主服务器设置了密码</span><br></pre></td></tr></table></figure>
<p>也可以在<code>redis-cli</code>中使用<code>REPLICAOF</code>命令。</p>
<h2 id="（三）哨兵-Sentinel"><a href="#（三）哨兵-Sentinel" class="headerlink" title="（三）哨兵 (Sentinel)"></a>（三）哨兵 (Sentinel)</h2><p>Redis Sentinel是一个分布式系统，用于对Redis主从复制集群进行监控、通知和自动故障转移。</p>
<p><strong>主要功能：</strong></p>
<ol>
<li>**监控 (Monitoring)**：Sentinel会不断地检查主服务器和从服务器是否运作正常。</li>
<li>**通知 (Notification)**：当被监控的某个Redis服务器出现问题时，Sentinel可以通过API向管理员或者其他应用程序发送通知。</li>
<li>**自动故障转移 (Automatic Failover)**：当一个主服务器不能正常工作时，Sentinel会开始一次自动故障转移操作，它会将失效主服务器的其中一个从服务器升级为新的主服务器，并让失效主服务器的其他从服务器改为复制新的主服务器；当客户端试图连接失效的主服务器时，集群也会向客户端返回新主服务器的地址。</li>
<li>**配置提供者 (Configuration Provider)**：客户端可以连接Sentinel询问当前Redis集群的主服务器地址。</li>
</ol>
<p><strong>工作原理：</strong></p>
<ul>
<li>Sentinel以集群模式运行，多个Sentinel进程协同工作，通过Gossip协议相互通信。</li>
<li>每个Sentinel进程都会独立地监控Redis实例。</li>
<li>当一个Sentinel认为主服务器下线（主观下线 SDown），它会向其他Sentinel发送消息，如果足够数量的Sentinel（达到配置的quorum）都认为主服务器下线，则该主服务器被标记为客观下线（ODown）。</li>
<li>之后，Sentinel集群会选举出一个领头的Sentinel来执行故障转移操作。</li>
</ul>
<p><strong>配置：</strong></p>
<p>启动Sentinel需要一个配置文件，例如<code>sentinel.conf</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># sentinel monitor &lt;master-name&gt; &lt;ip&gt; &lt;port&gt; &lt;quorum&gt;</span><br><span class="line"># &lt;master-name&gt;: 主服务器的名称，自定义</span><br><span class="line"># &lt;ip&gt; &lt;port&gt;: 主服务器的IP和端口</span><br><span class="line"># &lt;quorum&gt;: 判断主服务器客观下线所需的Sentinel数量</span><br><span class="line">sentinel monitor mymaster 127.0.0.1 6379 2</span><br><span class="line"></span><br><span class="line"># sentinel down-after-milliseconds &lt;master-name&gt; &lt;milliseconds&gt;</span><br><span class="line"># 主服务器被判定为主观下线的时间阈值 (毫秒)</span><br><span class="line">sentinel down-after-milliseconds mymaster 30000</span><br><span class="line"></span><br><span class="line"># sentinel parallel-syncs &lt;master-name&gt; &lt;numslaves&gt;</span><br><span class="line"># 在故障转移后，同时向新的主服务器发起同步的从服务器数量</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line"></span><br><span class="line"># sentinel failover-timeout &lt;master-name&gt; &lt;milliseconds&gt;</span><br><span class="line"># 故障转移的超时时间</span><br><span class="line">sentinel failover-timeout mymaster 180000</span><br></pre></td></tr></table></figure>
<p>启动Sentinel: <code>redis-sentinel /path/to/sentinel.conf</code></p>
<h2 id="（四）集群-Cluster"><a href="#（四）集群-Cluster" class="headerlink" title="（四）集群 (Cluster)"></a>（四）集群 (Cluster)</h2><p>Redis Cluster提供了在多个Redis节点之间进行数据分片（sharding）的功能，从而实现了高可用性和可扩展性。</p>
<p><strong>核心概念：</strong></p>
<ul>
<li>**数据分片 (Sharding)**：Redis Cluster将整个数据集划分为16384个哈希槽（hash slots）。每个主节点负责处理一部分哈希槽。当一个键被存储或请求时，Redis会根据键名计算出它属于哪个哈希槽，然后将命令转发到负责该哈希槽的节点。</li>
<li>**节点 (Node)**：一个Redis Cluster通常由多个节点组成。每个节点可以是主节点（master）或从节点（replica）。</li>
<li>**主从复制 (Master-Replica)**：每个主节点可以有零个或多个从节点。如果某个主节点发生故障，其一个从节点会被选举为新的主节点，保证集群的可用性。</li>
<li><strong>Gossip协议</strong>：节点之间通过Gossip协议交换信息，如节点状态、哈希槽分配等。</li>
<li>**无需中心节点 (Decentralized)**：Redis Cluster的设计是去中心化的，客户端可以连接到集群中的任意节点，节点会自动处理命令的转发。</li>
</ul>
<p><strong>优点：</strong></p>
<ul>
<li><strong>水平扩展</strong>：可以通过增加节点来扩展集群的存储能力和吞吐量。</li>
<li><strong>高可用性</strong>：通过主从复制和自动故障转移，保证了集群在部分节点故障时仍能继续服务。</li>
</ul>
<p><strong>配置与搭建：</strong><br>搭建Redis Cluster相对复杂，通常需要准备多个Redis实例（至少3主3从以保证高可用），并使用<code>redis-cli --cluster create</code>命令来创建集群。</p>
<p><strong>客户端路由：</strong><br>客户端连接到集群时，如果访问的键不属于当前连接的节点，节点会返回一个<code>MOVED</code>或<code>ASK</code>重定向错误，告知客户端正确的节点地址。智能客户端库能够缓存哈希槽与节点的映射关系，并直接将命令发送到正确的节点。</p>
<h2 id="（五）事务-Transactions"><a href="#（五）事务-Transactions" class="headerlink" title="（五）事务 (Transactions)"></a>（五）事务 (Transactions)</h2><p>Redis通过<code>MULTI</code>, <code>EXEC</code>, <code>DISCARD</code>和<code>WATCH</code>命令来实现事务功能。</p>
<p><strong>工作原理：</strong></p>
<ol>
<li>**<code>MULTI</code>**：标记一个事务块的开始。之后客户端发送的命令会被放入一个队列中，而不会立即执行。</li>
<li>**<code>EXEC</code>**：原子性地执行队列中的所有命令。如果在<code>MULTI</code>之前有命令被<code>WATCH</code>监视，并且在<code>EXEC</code>执行前这些键被修改，则事务失败（返回nil），队列中的命令不会被执行。</li>
<li>**<code>DISCARD</code>**：取消事务，清空命令队列。</li>
<li>**<code>WATCH key [key ...]</code>**：监视一个或多个key，如果在事务执行之前这些key被其他命令所改动，那么事务将被打断。<code>WATCH</code>命令可以用于实现乐观锁。</li>
</ol>
<p><strong>ACID特性讨论：</strong></p>
<ul>
<li>**原子性 (Atomicity)**：Redis事务保证队列中的命令要么全部执行，要么全部不执行。如果某个命令在入队时出错（例如语法错误），则整个事务在<code>EXEC</code>时会被拒绝执行。如果在<code>EXEC</code>执行期间某个命令出错（例如对一个String类型执行List操作），则其他命令仍然会执行，Redis不会进行回滚。</li>
<li>**一致性 (Consistency)**：由开发者保证。如果事务中的命令逻辑正确，数据最终会达到一致状态。</li>
<li>**隔离性 (Isolation)**：Redis是单线程处理命令的，因此在事务执行期间，不会有其他客户端的命令插入到事务命令序列中。</li>
<li>**持久性 (Durability)**：取决于Redis的持久化配置。如果开启了持久化，事务执行成功后对数据的修改会被保存到磁盘。</li>
</ul>
<p><strong>示例：</strong></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; MULTI</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; INCR counter</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; SET another_key &quot;hello&quot;</span><br><span class="line">QUEUED</span><br><span class="line">127.0.0.1:6379&gt; EXEC</span><br><span class="line">1) (integer) 1  # INCR counter 的结果</span><br><span class="line">2) OK           # SET another_key 的结果</span><br></pre></td></tr></table></figure>

<p><strong>使用<code>WATCH</code>实现乐观锁：</strong></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET balance 100</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; WATCH balance # 监视balance</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; MULTI</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; DECRBY balance 10 # 尝试扣减余额</span><br><span class="line">QUEUED</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">假设此时另一个客户端执行了 SET balance 50</span></span><br><span class="line">127.0.0.1:6379&gt; EXEC</span><br><span class="line">(nil) # 事务失败，因为balance被修改了</span><br></pre></td></tr></table></figure>

<h2 id="（六）发布-订阅-Pub-Sub"><a href="#（六）发布-订阅-Pub-Sub" class="headerlink" title="（六）发布&#x2F;订阅 (Pub&#x2F;Sub)"></a>（六）发布&#x2F;订阅 (Pub&#x2F;Sub)</h2><p>Redis的发布&#x2F;订阅功能允许客户端订阅特定的频道（channel），并接收发送到这些频道的消息。</p>
<p><strong>工作原理：</strong></p>
<ul>
<li>**<code>SUBSCRIBE channel [channel ...]</code>**：客户端订阅一个或多个频道。</li>
<li>**<code>UNSUBSCRIBE [channel [channel ...]]</code>**：客户端退订指定的频道，如果没有指定频道则退订所有频道。</li>
<li>**<code>PUBLISH channel message</code>**：客户端向指定的频道发布一条消息。所有订阅该频道的客户端都会收到这条消息。</li>
<li>**<code>PSUBSCRIBE pattern [pattern ...]</code>**：客户端订阅一个或多个模式匹配的频道。例如 <code>PSUBSCRIBE news.*</code> 会订阅所有以 <code>news.</code> 开头的频道。</li>
<li>**<code>PUNSUBSCRIBE [pattern [pattern ...]]</code>**：退订模式。</li>
</ul>
<p><strong>特点：</strong></p>
<ul>
<li><strong>解耦</strong>：生产者（发布者）和消费者（订阅者）之间没有直接的联系。</li>
<li><strong>多对多</strong>：一个消息可以被多个订阅者接收，一个订阅者也可以订阅多个频道。</li>
<li><strong>非持久化</strong>：如果订阅者不在线，它将错过发布的消息。对于需要消息持久化的场景，应使用Stream或其他消息队列。</li>
</ul>
<p><strong>应用场景:</strong></p>
<ul>
<li>实时消息系统，如聊天室。</li>
<li>事件通知。</li>
<li>构建实时数据看板。</li>
</ul>
<h2 id="（七）Lua脚本"><a href="#（七）Lua脚本" class="headerlink" title="（七）Lua脚本"></a>（七）Lua脚本</h2><p>Redis允许用户通过Lua脚本在服务器端执行复杂的原子性操作。</p>
<p><strong>优点：</strong></p>
<ul>
<li><strong>原子性</strong>：整个脚本作为一个原子操作执行，不会被其他命令中断。</li>
<li><strong>减少网络开销</strong>：将多个命令组合在一个脚本中，一次性发送给服务器执行，减少了网络往返次数。</li>
<li><strong>复用性</strong>：脚本可以被缓存和复用。</li>
</ul>
<p><strong>执行脚本命令:</strong></p>
<ul>
<li>**<code>EVAL script numkeys key [key ...] arg [arg ...]</code>**：执行Lua脚本。<ul>
<li><code>script</code>：Lua脚本字符串。</li>
<li><code>numkeys</code>：指定后续参数中有多少个是键名(key)。</li>
<li><code>key [key ...]</code>：脚本中用<code>KEYS[i]</code>访问的键名参数。</li>
<li><code>arg [arg ...]</code>：脚本中用<code>ARGV[i]</code>访问的附加参数。</li>
</ul>
</li>
<li>**<code>SCRIPT LOAD script</code>**：将脚本上传到服务器并返回脚本的SHA1校验和，但不立即执行。</li>
<li>**<code>EVALSHA sha1 numkeys key [key ...] arg [arg ...]</code>**：通过脚本的SHA1校验和来执行已缓存的脚本。</li>
<li>**<code>SCRIPT EXISTS sha1 [sha1 ...]</code>**：检查指定的脚本是否存在于脚本缓存中。</li>
<li>**<code>SCRIPT FLUSH [ASYNC|SYNC]</code>**：清空服务器的Lua脚本缓存。</li>
<li>**<code>SCRIPT KILL</code>**：杀死当前正在运行的 Lua 脚本（如果该脚本没有执行过任何写操作）。</li>
</ul>
<p><strong>示例：实现一个原子性的读取并重置计数器的操作</strong></p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Lua脚本: get_and_reset_counter.lua</span></span><br><span class="line"><span class="keyword">local</span> currentValue = redis.call(<span class="string">&#x27;GET&#x27;</span>, KEYS[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> currentValue == <span class="literal">false</span> <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  redis.call(<span class="string">&#x27;SET&#x27;</span>, KEYS[<span class="number">1</span>], <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">tonumber</span>(currentValue)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>在<code>redis-cli</code>中执行：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; SET mycounter 10</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; EVAL &quot;local currentValue = redis.call(&#x27;GET&#x27;, KEYS[1]) if currentValue == false then return 0 else redis.call(&#x27;SET&#x27;, KEYS[1], 0) return tonumber(currentValue) end&quot; 1 mycounter</span><br><span class="line">(integer) 10</span><br><span class="line">127.0.0.1:6379&gt; GET mycounter</span><br><span class="line">&quot;0&quot;</span><br></pre></td></tr></table></figure>

<h1 id="四、Redis应用场景"><a href="#四、Redis应用场景" class="headerlink" title="四、Redis应用场景"></a>四、Redis应用场景</h1><p>凭借其丰富的数据类型和高性能，Redis在各种应用场景中都发挥着重要作用。</p>
<ol>
<li><p>**缓存 (Caching)**：</p>
<ul>
<li><strong>页面缓存</strong>：缓存动态生成的HTML页面。</li>
<li><strong>对象缓存</strong>：缓存数据库查询结果、用户信息、配置信息等。</li>
<li><strong>热点数据缓存</strong>：缓存频繁访问的数据，减轻数据库压力。</li>
<li>利用过期策略（如LRU, LFU）和数据淘汰机制。</li>
</ul>
</li>
<li><p>**会话存储 (Session Store)**：</p>
<ul>
<li>存储Web应用的会话信息，实现分布式会话共享。</li>
</ul>
</li>
<li><p>**消息队列 (Message Queue)**：</p>
<ul>
<li><strong>List</strong>：简单的消息队列，支持阻塞式读取。</li>
<li><strong>Pub&#x2F;Sub</strong>：发布&#x2F;订阅模式，用于实时消息广播。</li>
<li><strong>Stream</strong>：功能完善的消息队列，支持消费组、持久化、消息确认等。</li>
</ul>
</li>
<li><p>**排行榜 (Leaderboards)**：</p>
<ul>
<li>利用<strong>Sorted Set</strong>存储用户积分和排名。</li>
</ul>
</li>
<li><p>**计数器 (Counters)**：</p>
<ul>
<li>利用<strong>String</strong>的<code>INCR</code>、<code>DECR</code>命令实现各种计数，如网站PV&#x2F;UV、点赞数、分享数。</li>
<li><strong>HyperLogLog</strong>用于基数估算，如统计独立访客数。</li>
</ul>
</li>
<li><p>**分布式锁 (Distributed Locks)**：</p>
<ul>
<li>利用<strong>String</strong>的<code>SETNX</code>命令或更完善的Redlock算法实现。</li>
</ul>
</li>
<li><p>**实时数据分析 (Real-time Analytics)**：</p>
<ul>
<li><strong>Bitmap</strong>：用户签到、在线状态、活跃用户统计。</li>
<li><strong>Stream</strong>：收集和处理实时事件流。</li>
</ul>
</li>
<li><p>**地理空间服务 (Geospatial Services)**：</p>
<ul>
<li>利用<strong>Geospatial</strong>索引实现查找附近的人、地点等LBS功能。</li>
</ul>
</li>
<li><p>**限流 (Rate Limiting)**：</p>
<ul>
<li>利用<strong>String</strong>的<code>INCR</code>和过期时间，或<strong>Sorted Set</strong>实现滑动窗口限流。</li>
</ul>
</li>
<li><p>**最新列表&#x2F;动态 (Latest Items&#x2F;Feeds)**：</p>
<ul>
<li>利用<strong>List</strong>存储用户动态、新闻Feed等，<code>LPUSH</code>添加新条目，<code>LTRIM</code>保持列表长度。</li>
</ul>
</li>
</ol>
<h1 id="五、Redis安装与配置"><a href="#五、Redis安装与配置" class="headerlink" title="五、Redis安装与配置"></a>五、Redis安装与配置</h1><h2 id="（一）安装"><a href="#（一）安装" class="headerlink" title="（一）安装"></a>（一）安装</h2><p>Redis的安装方式有多种，这里以Linux系统下从源码编译安装为例。</p>
<ol>
<li><p><strong>下载源码并解压</strong>：<br>从Redis官网 (<a href="https://redis.io/download/">https://redis.io/download/</a>) 下载最新的稳定版源码包。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-stable.tar.gz</span><br><span class="line">tar xzf redis-stable.tar.gz</span><br><span class="line">cd redis-stable</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>编译和安装</strong>：<br>确保系统中已安装<code>gcc</code>和<code>make</code>。</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">(可选) 运行测试</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make <span class="built_in">test</span></span></span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<p>默认情况下，Redis的可执行文件会被安装到<code>/usr/local/bin</code>目录下，包括：</p>
<ul>
<li><code>redis-server</code>：Redis服务器</li>
<li><code>redis-cli</code>：Redis命令行客户端</li>
<li><code>redis-benchmark</code>：Redis性能测试工具</li>
<li><code>redis-check-aof</code>：AOF文件检查和修复工具</li>
<li><code>redis-check-rdb</code>：RDB文件检查工具</li>
<li><code>redis-sentinel</code>：Redis Sentinel服务器</li>
</ul>
</li>
<li><p><strong>（推荐）创建配置文件目录和数据目录</strong>：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /etc/redis</span><br><span class="line">sudo mkdir /var/lib/redis</span><br><span class="line">sudo cp redis.conf /etc/redis/ # 将源码包中的redis.conf复制过去</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>修改配置文件</strong> (<code>/etc/redis/redis.conf</code>)：<br>根据需求修改配置，常见的配置项包括：</p>
<ul>
<li><code>bind 127.0.0.1</code>：绑定IP地址，默认只允许本地访问。若需远程访问，可改为<code>bind 0.0.0.0</code>（注意安全）或特定IP。</li>
<li><code>port 6379</code>：监听端口。</li>
<li><code>daemonize yes</code>：以守护进程方式运行。</li>
<li><code>pidfile /var/run/redis_6379.pid</code>：PID文件路径。</li>
<li><code>logfile /var/log/redis_6379.log</code>：日志文件路径。</li>
<li><code>dir /var/lib/redis</code>：RDB和AOF文件的工作目录。</li>
<li><code>requirepass yourpassword</code>：设置访问密码。</li>
</ul>
</li>
<li><p><strong>启动Redis服务</strong>：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>连接测试</strong>：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">127.0.0.1:6379&gt; PING</span><br><span class="line">PONG</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果设置了密码</span></span><br><span class="line">127.0.0.1:6379&gt; AUTH yourpassword</span><br><span class="line">OK</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="（二）重要配置项"><a href="#（二）重要配置项" class="headerlink" title="（二）重要配置项"></a>（二）重要配置项</h2><p><code>redis.conf</code> 文件中包含了大量配置项，以下是一些常用的和重要的配置：</p>
<ul>
<li><p><strong>网络相关</strong></p>
<ul>
<li><code>bind &lt;ip_address&gt;</code>: 绑定的IP地址。</li>
<li><code>port &lt;port_number&gt;</code>: 监听的端口号。</li>
<li><code>tcp-keepalive &lt;seconds&gt;</code>: TCP keepalive 设置，用于检测死连接。</li>
<li><code>timeout &lt;seconds&gt;</code>: 客户端闲置多少秒后关闭连接，0表示禁用。</li>
</ul>
</li>
<li><p><strong>通用</strong></p>
<ul>
<li><code>daemonize yes|no</code>: 是否以守护进程模式运行。</li>
<li><code>pidfile /path/to/redis.pid</code>: PID 文件路径。</li>
<li><code>loglevel notice|verbose|debug|warning</code>: 日志级别。</li>
<li><code>logfile /path/to/redis.log</code>: 日志文件路径。</li>
<li><code>databases 16</code>: 数据库数量，默认为16个（0-15）。</li>
</ul>
</li>
<li><p><strong>安全</strong></p>
<ul>
<li><code>requirepass &lt;password&gt;</code>: 设置客户端连接密码。</li>
<li><code>rename-command CONFIG &quot;&quot;</code> : 重命名或禁用危险命令，如<code>CONFIG</code>、<code>FLUSHALL</code>。</li>
</ul>
</li>
<li><p><strong>持久化 (RDB &amp; AOF)</strong>: (前面已详细介绍)</p>
<ul>
<li><code>save &lt;seconds&gt; &lt;changes&gt;</code></li>
<li><code>dbfilename dump.rdb</code></li>
<li><code>dir /path/to/data</code></li>
<li><code>appendonly yes|no</code></li>
<li><code>appendfilename &quot;appendonly.aof&quot;</code></li>
<li><code>appendfsync everysec|always|no</code></li>
<li><code>auto-aof-rewrite-percentage 100</code></li>
<li><code>auto-aof-rewrite-min-size 64mb</code></li>
<li><code>aof-use-rdb-preamble yes</code></li>
</ul>
</li>
<li><p><strong>内存管理</strong></p>
<ul>
<li><code>maxmemory &lt;bytes&gt;</code>: 设置Redis最大使用内存。</li>
<li><code>maxmemory-policy &lt;policy&gt;</code>: 内存达到上限时的淘汰策略，常见的有：<ul>
<li><code>noeviction</code>: 不淘汰，新写入操作会报错。</li>
<li><code>allkeys-lru</code>: 从所有key中使用LRU算法淘汰。</li>
<li><code>volatile-lru</code>: 从设置了过期时间的key中使用LRU算法淘汰。</li>
<li><code>allkeys-random</code>: 从所有key中随机淘汰。</li>
<li><code>volatile-random</code>: 从设置了过期时间的key中随机淘汰。</li>
<li><code>volatile-ttl</code>: 从设置了过期时间的key中，选择剩余时间最短的淘汰。</li>
<li><code>allkeys-lfu</code>: (Redis 4.0+) 从所有key中使用LFU算法淘汰。</li>
<li><code>volatile-lfu</code>: (Redis 4.0+) 从设置了过期时间的key中使用LFU算法淘汰。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>复制</strong></p>
<ul>
<li><code>replicaof &lt;masterip&gt; &lt;masterport&gt;</code></li>
<li><code>masterauth &lt;master-password&gt;</code></li>
<li><code>repl-diskless-sync no|yes</code>: 是否使用无盘复制。</li>
</ul>
</li>
<li><p><strong>客户端</strong></p>
<ul>
<li><code>maxclients &lt;number&gt;</code>: 最大客户端连接数。</li>
</ul>
</li>
</ul>
<h1 id="六、基本管理命令"><a href="#六、基本管理命令" class="headerlink" title="六、基本管理命令"></a>六、基本管理命令</h1><ul>
<li><code>PING</code>: 测试服务器是否仍在运行。</li>
<li><code>ECHO &quot;message&quot;</code>: 返回输入的字符串。</li>
<li><code>SELECT &lt;index&gt;</code>: 切换到指定的数据库，数据库索引号index用数字值指定，以0作为起始索引值。</li>
<li><code>DBSIZE</code>: 返回当前数据库的key的数量。</li>
<li><code>FLUSHDB</code>: 清空当前数据库中的所有key。</li>
<li><code>FLUSHALL</code>: 清空所有数据库中的所有key。</li>
<li><code>INFO [section]</code>: 返回关于 Redis 服务器的各种信息和统计数值。</li>
<li><code>MONITOR</code>: 实时打印出 Redis 服务器接收到的命令，调试用。</li>
<li><code>CONFIG GET parameter</code>: 获取服务器配置参数的值。</li>
<li><code>CONFIG SET parameter value</code>: 修改服务器配置参数的值（部分参数支持运行时修改）。</li>
<li><code>CONFIG REWRITE</code>: 将通过<code>CONFIG SET</code>修改的配置持久化到<code>redis.conf</code>文件。</li>
<li><code>SHUTDOWN [NOSAVE|SAVE]</code>: 关闭服务器。<code>NOSAVE</code>表示不进行持久化，<code>SAVE</code>表示在关闭前执行一次RDB快照。</li>
<li><code>TIME</code>: 返回当前服务器时间，一个包含两个字符串的列表： 第一个字符串是当前时间(以 UNIX 时间戳格式表示)，而第二个字符串是当前这一秒钟已经逝去的微秒数。</li>
</ul>
<h1 id="七、总结"><a href="#七、总结" class="headerlink" title="七、总结"></a>七、总结</h1><p>Redis以其卓越的性能、丰富的数据类型和灵活的功能，成为了现代应用架构中的关键组件。它不仅仅是一个缓存，更是一个强大的数据结构服务器，能够高效地解决各种复杂问题。深入理解Redis的各种数据类型、特性（如持久化、复制、哨兵、集群、事务）以及其适用场景，对于构建高性能、高可用的分布式系统至关重要。希望本笔记能够为您的Redis学习之路提供有益的帮助。</p>
<h1 id="八、参考链接"><a href="#八、参考链接" class="headerlink" title="八、参考链接"></a>八、参考链接</h1><ul>
<li><strong>Redis官方网站</strong>: <a href="https://redis.io/">https://redis.io/</a></li>
<li><strong>Redis官方文档</strong>: <a href="https://redis.io/documentation">https://redis.io/documentation</a></li>
<li><strong>Redis中文文档 (非官方, 但较新)</strong>: <a href="http://www.redis.cn/documentation.html">http://www.redis.cn/documentation.html</a></li>
<li><strong>《Redis设计与实现》</strong>: <a href="http://redisbook.com/">http://redisbook.com/</a> (黄健宏著，深入理解Redis内部原理的好书)</li>
<li><strong>菜鸟教程 - Redis教程</strong>: <a href="https://www.runoob.com/redis/redis-tutorial.html">https://www.runoob.com/redis/redis-tutorial.html</a></li>
<li><strong>Java 全栈知识体系 - Redis详解</strong>: <a href="https://pdai.tech/md/db/nosql-redis/db-redis-overview.html">https://pdai.tech/md/db/nosql-redis/db-redis-overview.html</a></li>
</ul>
<h1 id="十一、参考资料"><a href="#十一、参考资料" class="headerlink" title="十一、参考资料"></a>十一、参考资料</h1><ul>
<li>Redis官方网站: <a href="https://redis.io/">https://redis.io/</a></li>
<li>Redis官方文档: <a href="https://redis.io/documentation">https://redis.io/documentation</a></li>
<li>Redis Github仓库: <a href="https://github.com/redis/redis">https://github.com/redis/redis</a></li>
<li>Redis中文网: <a href="http://www.redis.cn/">http://www.redis.cn/</a></li>
<li>《Redis设计与实现》黄健宏</li>
<li><strong>相关安装教程</strong>: <a href="./%E3%80%90LINUX%E3%80%91%E5%9C%A8%E4%B8%80%E5%8F%B0%E7%A9%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2%E7%BD%91%E9%A1%B5%E7%B3%BB%E7%BB%9F.md">【LINUX】在一台空服务器上部署网页系统</a></li>
</ul>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Redis (Remote Dictionary Server) 是一个开源的、使用C语言编写的、支持网络、可基于内存亦可持久化的日志型、K]]>
    </summary>
    
      <category term="数据库" scheme="https://uwakeme.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="消息队列" scheme="https://uwakeme.top/tags/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/"/>
    
      <category term="NoSQL" scheme="https://uwakeme.top/tags/NoSQL/"/>
    
      <category term="Redis" scheme="https://uwakeme.top/tags/Redis/"/>
    
      <category term="缓存" scheme="https://uwakeme.top/tags/%E7%BC%93%E5%AD%98/"/>
    
      <category term="分布式锁" scheme="https://uwakeme.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
    
      <category term="数据库" scheme="https://uwakeme.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【微信小程序】微信小程序开发指南：从零开始的完整实践]]></title>
    <link href="https://uwakeme.top/2025/07/21/%E5%85%B6%E4%BB%96/%E3%80%90%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E3%80%91%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%AE%8C%E6%95%B4%E5%AE%9E%E8%B7%B5/"/>
    <id>https://uwakeme.top/2025/07/21/其他/【微信小程序】微信小程序开发指南：从零开始的完整实践/</id>
    <published>2025-07-21T02:15:51.211Z</published>
    <updated>2025-07-21T02:15:51.212Z</updated>
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>微信小程序作为腾讯推出的轻量级应用平台，自2017年正式发布以来，已经成为移动互联网生态中不可或缺的一部分。小程序具有”用完即走”的特点，无需下载安装，通过微信即可使用，为用户提供了便捷的服务体验，也为开发者提供了新的应用分发渠道。</p>
<p>本文将从零开始，详细介绍微信小程序的开发流程，包括环境搭建、基础语法、核心功能实现、发布上线等各个环节，帮助初学者快速掌握小程序开发技能。</p>
<h1 id="一、微信小程序概述"><a href="#一、微信小程序概述" class="headerlink" title="一、微信小程序概述"></a>一、微信小程序概述</h1><h2 id="（一）什么是微信小程序"><a href="#（一）什么是微信小程序" class="headerlink" title="（一）什么是微信小程序"></a>（一）什么是微信小程序</h2><p>微信小程序是一种不需要下载安装即可使用的应用，它实现了应用”触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。小程序具有以下特点：</p>
<ol>
<li><strong>无需安装</strong>：通过微信直接使用，不占用手机存储空间</li>
<li><strong>即用即走</strong>：用完即可关闭，不会在后台持续运行</li>
<li><strong>功能丰富</strong>：支持多种API，可实现复杂的业务逻辑</li>
<li><strong>跨平台</strong>：一次开发，同时支持iOS和Android</li>
<li><strong>生态完善</strong>：与微信生态深度融合，支持分享、支付等功能</li>
</ol>
<h2 id="（二）小程序的技术架构"><a href="#（二）小程序的技术架构" class="headerlink" title="（二）小程序的技术架构"></a>（二）小程序的技术架构</h2><p>微信小程序采用双线程架构：</p>
<ul>
<li><strong>逻辑层（App Service）</strong>：运行JavaScript代码，处理业务逻辑</li>
<li><strong>视图层（View）</strong>：由WXML和WXSS组成，负责页面渲染</li>
</ul>
<p>两个线程通过微信客户端（Native）进行通信，确保了界面渲染的流畅性和逻辑处理的独立性。</p>
<h2 id="（三）开发语言和文件类型"><a href="#（三）开发语言和文件类型" class="headerlink" title="（三）开发语言和文件类型"></a>（三）开发语言和文件类型</h2><p>小程序主要使用以下四种文件类型：</p>
<ol>
<li><strong>WXML</strong>：类似HTML的标记语言，用于描述页面结构</li>
<li><strong>WXSS</strong>：类似CSS的样式语言，用于描述页面样式</li>
<li><strong>JavaScript</strong>：用于处理页面逻辑</li>
<li><strong>JSON</strong>：用于配置文件</li>
</ol>
<h1 id="二、开发环境搭建"><a href="#二、开发环境搭建" class="headerlink" title="二、开发环境搭建"></a>二、开发环境搭建</h1><h2 id="（一）注册微信小程序账号"><a href="#（一）注册微信小程序账号" class="headerlink" title="（一）注册微信小程序账号"></a>（一）注册微信小程序账号</h2><h3 id="1-访问微信公众平台"><a href="#1-访问微信公众平台" class="headerlink" title="1. 访问微信公众平台"></a>1. 访问微信公众平台</h3><p>打开浏览器，访问 <a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com/</a></p>
<h3 id="2-注册小程序账号"><a href="#2-注册小程序账号" class="headerlink" title="2. 注册小程序账号"></a>2. 注册小程序账号</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 点击&quot;立即注册&quot;</span><br><span class="line">2. 选择&quot;小程序&quot;</span><br><span class="line">3. 填写邮箱和密码</span><br><span class="line">4. 邮箱验证</span><br><span class="line">5. 信息登记（个人或企业）</span><br><span class="line">6. 微信认证（可选）</span><br></pre></td></tr></table></figure>

<h3 id="3-获取AppID"><a href="#3-获取AppID" class="headerlink" title="3. 获取AppID"></a>3. 获取AppID</h3><p>注册完成后，在小程序管理后台的”开发” -&gt; “开发管理” -&gt; “开发设置”中可以找到AppID，这是小程序的唯一标识。</p>
<h2 id="（二）下载开发工具"><a href="#（二）下载开发工具" class="headerlink" title="（二）下载开发工具"></a>（二）下载开发工具</h2><h3 id="1-微信开发者工具下载"><a href="#1-微信开发者工具下载" class="headerlink" title="1. 微信开发者工具下载"></a>1. 微信开发者工具下载</h3><p>访问 <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p>
<p>根据操作系统选择对应版本：</p>
<ul>
<li>Windows 64位</li>
<li>Windows 32位</li>
<li>macOS</li>
<li>Linux</li>
</ul>
<h3 id="2-安装开发工具"><a href="#2-安装开发工具" class="headerlink" title="2. 安装开发工具"></a>2. 安装开发工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Windows</span></span><br><span class="line">双击下载的.exe文件，按照提示安装</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">macOS</span></span><br><span class="line">双击下载的.dmg文件，拖拽到Applications文件夹</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Linux</span></span><br><span class="line">sudo dpkg -i wechat_devtools_xxx_linux_x64.deb</span><br></pre></td></tr></table></figure>

<h3 id="3-登录开发工具"><a href="#3-登录开发工具" class="headerlink" title="3. 登录开发工具"></a>3. 登录开发工具</h3><p>使用微信扫码登录开发者工具，确保登录的微信号已经绑定到小程序账号。</p>
<h2 id="（三）创建第一个小程序项目"><a href="#（三）创建第一个小程序项目" class="headerlink" title="（三）创建第一个小程序项目"></a>（三）创建第一个小程序项目</h2><h3 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1. 新建项目"></a>1. 新建项目</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 打开微信开发者工具</span><br><span class="line">2. 点击&quot;新建项目&quot;</span><br><span class="line">3. 填写项目信息：</span><br><span class="line">   - 项目名称：如&quot;我的第一个小程序&quot;</span><br><span class="line">   - 目录：选择项目存放路径</span><br><span class="line">   - AppID：填入之前获取的AppID</span><br><span class="line">   - 开发模式：选择&quot;小程序&quot;</span><br><span class="line">   - 后端服务：选择&quot;不使用云服务&quot;</span><br><span class="line">4. 点击&quot;新建&quot;</span><br></pre></td></tr></table></figure>

<h3 id="2-项目结构说明"><a href="#2-项目结构说明" class="headerlink" title="2. 项目结构说明"></a>2. 项目结构说明</h3><p>创建完成后，项目目录结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">my-miniprogram/</span><br><span class="line">├── pages/              # 页面文件夹</span><br><span class="line">│   ├── index/         # 首页</span><br><span class="line">│   │   ├── index.js   # 页面逻辑</span><br><span class="line">│   │   ├── index.json # 页面配置</span><br><span class="line">│   │   ├── index.wxml # 页面结构</span><br><span class="line">│   │   └── index.wxss # 页面样式</span><br><span class="line">│   └── logs/          # 日志页面</span><br><span class="line">│       ├── logs.js</span><br><span class="line">│       ├── logs.json</span><br><span class="line">│       ├── logs.wxml</span><br><span class="line">│       └── logs.wxss</span><br><span class="line">├── utils/             # 工具函数</span><br><span class="line">│   └── util.js</span><br><span class="line">├── app.js             # 小程序逻辑</span><br><span class="line">├── app.json           # 小程序配置</span><br><span class="line">├── app.wxss           # 小程序样式</span><br><span class="line">├── project.config.json # 项目配置</span><br><span class="line">└── sitemap.json       # 站点地图</span><br></pre></td></tr></table></figure>

<h1 id="三、小程序基础语法"><a href="#三、小程序基础语法" class="headerlink" title="三、小程序基础语法"></a>三、小程序基础语法</h1><h2 id="（一）WXML语法"><a href="#（一）WXML语法" class="headerlink" title="（一）WXML语法"></a>（一）WXML语法</h2><p>WXML（WeiXin Markup Language）是小程序的标记语言，类似于HTML但有所不同。</p>
<h3 id="1-基本标签"><a href="#1-基本标签" class="headerlink" title="1. 基本标签"></a>1. 基本标签</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 视图容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 文本 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 图片 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/logo.png&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 按钮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleClick&quot;</span>&gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 输入框 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入内容&quot;</span> <span class="attr">bindinput</span>=<span class="string">&quot;handleInput&quot;</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 滚动视图 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">scroll-y</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 200px;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>滚动内容1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>滚动内容2<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span>&gt;</span>滚动内容3<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-数据绑定"><a href="#2-数据绑定" class="headerlink" title="2. 数据绑定"></a>2. 数据绑定</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文本绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 属性绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;imageSrc&#125;&#125;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: &#123;&#123;imageWidth&#125;&#125;px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 条件渲染 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;isShow&#125;&#125;&quot;</span>&gt;</span>显示的内容<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">&quot;&#123;&#123;isHide&#125;&#125;&quot;</span>&gt;</span>隐藏的内容<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span>默认内容<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 列表渲染 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;items&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;index&#125;&#125;: &#123;&#123;item.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-事件绑定"><a href="#3-事件绑定" class="headerlink" title="3. 事件绑定"></a>3. 事件绑定</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 点击事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleTap&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 长按事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">bindlongpress</span>=<span class="string">&quot;handleLongPress&quot;</span>&gt;</span>长按我<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 输入事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">bindinput</span>=<span class="string">&quot;handleInput&quot;</span> <span class="attr">bindblur</span>=<span class="string">&quot;handleBlur&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事件传参 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleTap&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;&#123;&#123;item.id&#125;&#125;&quot;</span> <span class="attr">data-name</span>=<span class="string">&quot;&#123;&#123;item.name&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;item.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="（二）WXSS样式"><a href="#（二）WXSS样式" class="headerlink" title="（二）WXSS样式"></a>（二）WXSS样式</h2><p>WXSS（WeiXin Style Sheets）是小程序的样式语言，在CSS基础上扩展了尺寸单位和样式导入功能。</p>
<h3 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局样式 */</span></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文本样式 */</span></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 按钮样式 */</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 响应式设计 */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width</span>: <span class="number">600</span>rpx) &#123;</span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10</span>rpx;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-尺寸单位"><a href="#2-尺寸单位" class="headerlink" title="2. 尺寸单位"></a>2. 尺寸单位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* rpx：响应式像素，根据屏幕宽度自适应 */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;  <span class="comment">/* 在iPhone6上等于375px */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* px：物理像素 */</span></span><br><span class="line"><span class="selector-class">.border</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* %：百分比 */</span></span><br><span class="line"><span class="selector-class">.full-width</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-样式导入"><a href="#3-样式导入" class="headerlink" title="3. 样式导入"></a>3. 样式导入</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 导入外部样式 */</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;common.wxss&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用变量 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--main-color</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attr">--text-color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">var</span>(--text-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）JavaScript逻辑"><a href="#（三）JavaScript逻辑" class="headerlink" title="（三）JavaScript逻辑"></a>（三）JavaScript逻辑</h2><h3 id="1-页面生命周期"><a href="#1-页面生命周期" class="headerlink" title="1. 页面生命周期"></a>1. 页面生命周期</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/index/index.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">message</span>: <span class="string">&#x27;Hello World&#x27;</span>,</span><br><span class="line">    <span class="attr">userInfo</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">hasUserInfo</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面加载&#x27;</span>, options)</span><br><span class="line">    <span class="comment">// 页面加载时执行</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initData</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面显示</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onShow</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面显示&#x27;</span>)</span><br><span class="line">    <span class="comment">// 页面显示时执行</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面隐藏</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onHide</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面隐藏&#x27;</span>)</span><br><span class="line">    <span class="comment">// 页面隐藏时执行</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;页面卸载&#x27;</span>)</span><br><span class="line">    <span class="comment">// 页面卸载时执行</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面相关事件处理函数--监听用户下拉动作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;下拉刷新&#x27;</span>)</span><br><span class="line">    <span class="comment">// 下拉刷新时执行</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">refreshData</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;上拉触底&#x27;</span>)</span><br><span class="line">    <span class="comment">// 上拉触底时执行</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadMoreData</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 自定义方法</span></span><br><span class="line">  <span class="attr">initData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 初始化数据</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">refreshData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 刷新数据</span></span><br><span class="line">    wx.<span class="title function_">stopPullDownRefresh</span>() <span class="comment">// 停止下拉刷新</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">loadMoreData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 加载更多数据</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-数据绑定和更新"><a href="#2-数据绑定和更新" class="headerlink" title="2. 数据绑定和更新"></a>2. 数据绑定和更新</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">list</span>: [],</span><br><span class="line">    <span class="attr">userInfo</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">25</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新数据</span></span><br><span class="line">  <span class="attr">updateData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 更新简单数据</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span> + <span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新数组</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">list</span>: [...<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">list</span>, &#123; <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(), <span class="attr">name</span>: <span class="string">&#x27;新项目&#x27;</span> &#125;]</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新对象属性</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="string">&#x27;userInfo.name&#x27;</span>: <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;userInfo.age&#x27;</span>: <span class="number">30</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 事件处理</span></span><br><span class="line">  <span class="attr">handleTap</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击事件&#x27;</span>, e)</span><br><span class="line">    <span class="keyword">const</span> &#123; id, name &#125; = e.<span class="property">currentTarget</span>.<span class="property">dataset</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;传递的数据&#x27;</span>, id, name)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">handleInput</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> value = e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">inputValue</span>: value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-小程序API调用"><a href="#3-小程序API调用" class="headerlink" title="3. 小程序API调用"></a>3. 小程序API调用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="comment">// 网络请求</span></span><br><span class="line">  <span class="attr">fetchData</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;https://api.example.com/data&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">limit</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求成功&#x27;</span>, res.<span class="property">data</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">list</span>: res.<span class="property">data</span>.<span class="property">list</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求失败&#x27;</span>, err)</span><br><span class="line">        wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&#x27;网络错误&#x27;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示提示</span></span><br><span class="line">  <span class="attr">showToast</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;操作成功&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示模态框</span></span><br><span class="line">  <span class="attr">showModal</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;确定要删除吗？&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击确定&#x27;</span>)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">deleteItem</span>()</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户点击取消&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 页面跳转</span></span><br><span class="line">  <span class="attr">navigateToDetail</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/detail/detail?id=123&amp;name=test&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取用户信息</span></span><br><span class="line">  <span class="attr">getUserInfo</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">getUserProfile</span>(&#123;</span><br><span class="line">      <span class="attr">desc</span>: <span class="string">&#x27;用于完善会员资料&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取用户信息成功&#x27;</span>, res.<span class="property">userInfo</span>)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">userInfo</span>: res.<span class="property">userInfo</span>,</span><br><span class="line">          <span class="attr">hasUserInfo</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取用户信息失败&#x27;</span>, err)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 选择图片</span></span><br><span class="line">  <span class="attr">chooseImage</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">chooseMedia</span>(&#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">mediaType</span>: [<span class="string">&#x27;image&#x27;</span>],</span><br><span class="line">      <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> tempFilePath = res.<span class="property">tempFiles</span>[<span class="number">0</span>].<span class="property">tempFilePath</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">imageSrc</span>: tempFilePath</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="四、核心功能开发"><a href="#四、核心功能开发" class="headerlink" title="四、核心功能开发"></a>四、核心功能开发</h1><h2 id="（一）页面导航和路由"><a href="#（一）页面导航和路由" class="headerlink" title="（一）页面导航和路由"></a>（一）页面导航和路由</h2><h3 id="1-配置页面路由"><a href="#1-配置页面路由" class="headerlink" title="1. 配置页面路由"></a>1. 配置页面路由</h3><p>在 <code>app.json</code> 中配置页面路径：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;pages/detail/detail&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;pages/user/user&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;pages/search/search&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;light&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#fff&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我的小程序&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;black&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#7A7E83&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectedColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#3cc51f&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;borderStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;black&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#ffffff&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/icon_home.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/icon_home_selected.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首页&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/user/user&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/icon_user.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;images/icon_user_selected.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;我的&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-页面跳转方法"><a href="#2-页面跳转方法" class="headerlink" title="2. 页面跳转方法"></a>2. 页面跳转方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保留当前页面，跳转到应用内的某个页面</span></span><br><span class="line">wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/detail/detail?id=123&amp;name=test&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭当前页面，跳转到应用内的某个页面</span></span><br><span class="line">wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/detail/detail&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面</span></span><br><span class="line">wx.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/index/index&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭所有页面，打开到应用内的某个页面</span></span><br><span class="line">wx.<span class="title function_">reLaunch</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/index/index&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭当前页面，返回上一页面或多级页面</span></span><br><span class="line">wx.<span class="title function_">navigateBack</span>(&#123;</span><br><span class="line">  <span class="attr">delta</span>: <span class="number">1</span> <span class="comment">// 返回的页面数，如果 delta 大于现有页面数，则返回到首页</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-页面参数传递"><a href="#3-页面参数传递" class="headerlink" title="3. 页面参数传递"></a>3. 页面参数传递</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发送页面</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">goToDetail</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> data = &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="number">123</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">      <span class="attr">price</span>: <span class="number">99.9</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/pages/detail/detail?data=<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收页面</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span>(<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;接收到的参数&#x27;</span>, options)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">data</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(options.<span class="property">data</span>)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">productInfo</span>: data</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="（二）数据存储"><a href="#（二）数据存储" class="headerlink" title="（二）数据存储"></a>（二）数据存储</h2><h3 id="1-本地存储"><a href="#1-本地存储" class="headerlink" title="1. 本地存储"></a>1. 本地存储</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 同步存储</span></span><br><span class="line">wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;userInfo&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">25</span>,</span><br><span class="line">  <span class="attr">avatar</span>: <span class="string">&#x27;https://example.com/avatar.jpg&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步读取</span></span><br><span class="line"><span class="keyword">const</span> userInfo = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;userInfo&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;用户信息&#x27;</span>, userInfo)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步存储</span></span><br><span class="line">wx.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>: <span class="string">&#x27;abc123def456&#x27;</span>,</span><br><span class="line">  <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;存储成功&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步读取</span></span><br><span class="line">wx.<span class="title function_">getStorage</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: <span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">  <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Token&#x27;</span>, res.<span class="property">data</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">fail</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;读取失败&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除存储</span></span><br><span class="line">wx.<span class="title function_">removeStorageSync</span>(<span class="string">&#x27;userInfo&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空所有存储</span></span><br><span class="line">wx.<span class="title function_">clearStorageSync</span>()</span><br></pre></td></tr></table></figure>

<h3 id="2-数据管理工具类"><a href="#2-数据管理工具类" class="headerlink" title="2. 数据管理工具类"></a>2. 数据管理工具类</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/storage.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Storage</span> &#123;</span><br><span class="line">  <span class="comment">// 设置数据</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">set</span>(<span class="params">key, value</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      wx.<span class="title function_">setStorageSync</span>(key, value)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;存储失败&#x27;</span>, error)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取数据</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">get</span>(<span class="params">key, defaultValue = <span class="literal">null</span></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> value = wx.<span class="title function_">getStorageSync</span>(key)</span><br><span class="line">      <span class="keyword">return</span> value !== <span class="string">&#x27;&#x27;</span> ? value : defaultValue</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;读取失败&#x27;</span>, error)</span><br><span class="line">      <span class="keyword">return</span> defaultValue</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除数据</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">remove</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      wx.<span class="title function_">removeStorageSync</span>(key)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;删除失败&#x27;</span>, error)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 清空所有数据</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      wx.<span class="title function_">clearStorageSync</span>()</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;清空失败&#x27;</span>, error)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 检查是否存在</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">has</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> value = wx.<span class="title function_">getStorageSync</span>(key)</span><br><span class="line">      <span class="keyword">return</span> value !== <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Storage</span></span><br></pre></td></tr></table></figure>

<h2 id="（三）网络请求"><a href="#（三）网络请求" class="headerlink" title="（三）网络请求"></a>（三）网络请求</h2><h3 id="1-基础网络请求"><a href="#1-基础网络请求" class="headerlink" title="1. 基础网络请求"></a>1. 基础网络请求</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发起网络请求</span></span><br><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;https://api.example.com/users&#x27;</span>,</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">limit</span>: <span class="number">10</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">header</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&#x27;Bearer &#x27;</span> + wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求成功&#x27;</span>, res)</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="comment">// 处理成功响应</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据&#x27;</span>, res.<span class="property">data</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 处理错误响应</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;服务器错误&#x27;</span>, res.<span class="property">statusCode</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">fail</span>: <span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求失败&#x27;</span>, err)</span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;网络错误&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">complete</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求完成&#x27;</span>)</span><br><span class="line">    <span class="comment">// 隐藏加载提示</span></span><br><span class="line">    wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-封装网络请求工具"><a href="#2-封装网络请求工具" class="headerlink" title="2. 封装网络请求工具"></a>2. 封装网络请求工具</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/request.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Request</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">baseURL</span> = <span class="string">&#x27;https://api.example.com&#x27;</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timeout</span> = <span class="number">10000</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 请求拦截器</span></span><br><span class="line">  <span class="title function_">interceptRequest</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 显示加载提示</span></span><br><span class="line">    wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;加载中...&#x27;</span>,</span><br><span class="line">      <span class="attr">mask</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加token</span></span><br><span class="line">    <span class="keyword">const</span> token = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      config.<span class="property">header</span> = &#123;</span><br><span class="line">        ...config.<span class="property">header</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 响应拦截器</span></span><br><span class="line">  <span class="title function_">interceptResponse</span>(<span class="params">response</span>) &#123;</span><br><span class="line">    wx.<span class="title function_">hideLoading</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (response.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; code, data, message &#125; = response.<span class="property">data</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (code === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(data)</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code === <span class="number">401</span>) &#123;</span><br><span class="line">        <span class="comment">// token过期，跳转到登录页</span></span><br><span class="line">        wx.<span class="title function_">removeStorageSync</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        wx.<span class="title function_">redirectTo</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>: <span class="string">&#x27;/pages/login/login&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;登录已过期&#x27;</span>))</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: message || <span class="string">&#x27;请求失败&#x27;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;网络错误&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;网络错误&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通用请求方法</span></span><br><span class="line">  <span class="title function_">request</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 请求拦截</span></span><br><span class="line">      config = <span class="variable language_">this</span>.<span class="title function_">interceptRequest</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">baseURL</span> + config.<span class="property">url</span>,</span><br><span class="line">        <span class="attr">method</span>: config.<span class="property">method</span> || <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>: config.<span class="property">data</span> || &#123;&#125;,</span><br><span class="line">        <span class="attr">header</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">          ...config.<span class="property">header</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="variable language_">this</span>.<span class="property">timeout</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        ...config,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">interceptResponse</span>(response)</span><br><span class="line">            .<span class="title function_">then</span>(resolve)</span><br><span class="line">            .<span class="title function_">catch</span>(reject)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">          wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">          wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;网络连接失败&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="title function_">reject</span>(error)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// GET请求</span></span><br><span class="line">  <span class="title function_">get</span>(<span class="params">url, data = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">      url,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// POST请求</span></span><br><span class="line">  <span class="title function_">post</span>(<span class="params">url, data = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">      url,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// PUT请求</span></span><br><span class="line">  <span class="title function_">put</span>(<span class="params">url, data = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">      url,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// DELETE请求</span></span><br><span class="line">  <span class="title function_">delete</span>(<span class="params">url, data = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">      url,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line">      data</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建实例</span></span><br><span class="line"><span class="keyword">const</span> request = <span class="keyword">new</span> <span class="title class_">Request</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = request</span><br></pre></td></tr></table></figure>

<h3 id="3-API接口管理"><a href="#3-API接口管理" class="headerlink" title="3. API接口管理"></a>3. API接口管理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// api/index.js</span></span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">&#x27;../utils/request&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户相关接口</span></span><br><span class="line"><span class="keyword">const</span> userAPI = &#123;</span><br><span class="line">  <span class="comment">// 用户登录</span></span><br><span class="line">  <span class="title function_">login</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">post</span>(<span class="string">&#x27;/auth/login&#x27;</span>, data)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取用户信息</span></span><br><span class="line">  <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/user/info&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新用户信息</span></span><br><span class="line">  <span class="title function_">updateUserInfo</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">put</span>(<span class="string">&#x27;/user/info&#x27;</span>, data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 商品相关接口</span></span><br><span class="line"><span class="keyword">const</span> productAPI = &#123;</span><br><span class="line">  <span class="comment">// 获取商品列表</span></span><br><span class="line">  <span class="title function_">getProductList</span>(<span class="params">params</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/products&#x27;</span>, params)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取商品详情</span></span><br><span class="line">  <span class="title function_">getProductDetail</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">`/products/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 搜索商品</span></span><br><span class="line">  <span class="title function_">searchProducts</span>(<span class="params">keyword</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> request.<span class="title function_">get</span>(<span class="string">&#x27;/products/search&#x27;</span>, &#123; keyword &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  userAPI,</span><br><span class="line">  productAPI</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（四）组件开发"><a href="#（四）组件开发" class="headerlink" title="（四）组件开发"></a>（四）组件开发</h2><h3 id="1-自定义组件"><a href="#1-自定义组件" class="headerlink" title="1. 自定义组件"></a>1. 自定义组件</h3><p>创建组件文件夹 <code>components/custom-button/</code>：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/custom-button/custom-button.js</span></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的属性列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="string">&#x27;按钮&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">type</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="string">&#x27;default&#x27;</span> <span class="comment">// default, primary, warn</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">size</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="string">&#x27;normal&#x27;</span> <span class="comment">// mini, normal, large</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">disabled</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">loading</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的方法列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">handleTap</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">disabled</span> || <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">loading</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 触发父组件事件</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;tap&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">text</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">text</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- components/custom-button/custom-button.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;custom-btn custom-btn-&#123;&#123;type&#125;&#125; custom-btn-&#123;&#123;size&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">  <span class="attr">disabled</span>=<span class="string">&quot;&#123;&#123;disabled || loading&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">bindtap</span>=<span class="string">&quot;handleTap&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;loading&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;loading&quot;</span>&gt;</span>加载中...<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:else</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* components/custom-button/custom-button.wxss */</span></span><br><span class="line"><span class="selector-class">.custom-btn</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-default</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-primary</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-warn</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff3b30</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-mini</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10</span>rpx <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-normal</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-btn-large</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30</span>rpx <span class="number">60</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">32</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.loading</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;component&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-使用自定义组件"><a href="#2-使用自定义组件" class="headerlink" title="2. 使用自定义组件"></a>2. 使用自定义组件</h3><p>在页面中使用组件：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/index/index.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;custom-button&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/custom-button/custom-button&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pages/index/index.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">custom-button</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">text</span>=<span class="string">&quot;普通按钮&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;default&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">size</span>=<span class="string">&quot;normal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">bind:tap</span>=<span class="string">&quot;handleButtonTap&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">custom-button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">custom-button</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">text</span>=<span class="string">&quot;主要按钮&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">bind:tap</span>=<span class="string">&quot;handleButtonTap&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">custom-button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">custom-button</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">text</span>=<span class="string">&quot;加载按钮&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">loading</span>=<span class="string">&quot;&#123;&#123;isLoading&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">bind:tap</span>=<span class="string">&quot;handleLoadingTap&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span><span class="tag">&lt;/<span class="name">custom-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/index/index.js</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">isLoading</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">handleButtonTap</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;按钮被点击&#x27;</span>, e.<span class="property">detail</span>)</span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">`点击了<span class="subst">$&#123;e.detail.text&#125;</span>`</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">handleLoadingTap</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">isLoading</span>: <span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">isLoading</span>: <span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="五、实战项目：待办事项小程序"><a href="#五、实战项目：待办事项小程序" class="headerlink" title="五、实战项目：待办事项小程序"></a>五、实战项目：待办事项小程序</h1><h2 id="（一）项目需求分析"><a href="#（一）项目需求分析" class="headerlink" title="（一）项目需求分析"></a>（一）项目需求分析</h2><p>我们将开发一个简单的待办事项管理小程序，包含以下功能：</p>
<ol>
<li><strong>任务列表</strong>：显示所有待办任务</li>
<li><strong>添加任务</strong>：创建新的待办任务</li>
<li><strong>编辑任务</strong>：修改任务内容</li>
<li><strong>完成任务</strong>：标记任务为已完成</li>
<li><strong>删除任务</strong>：删除不需要的任务</li>
<li><strong>任务筛选</strong>：按状态筛选任务</li>
</ol>
<h2 id="（二）项目结构设计"><a href="#（二）项目结构设计" class="headerlink" title="（二）项目结构设计"></a>（二）项目结构设计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">todo-miniprogram/</span><br><span class="line">├── pages/</span><br><span class="line">│   ├── index/              # 首页-任务列表</span><br><span class="line">│   ├── add-task/           # 添加任务页面</span><br><span class="line">│   └── edit-task/          # 编辑任务页面</span><br><span class="line">├── components/</span><br><span class="line">│   ├── task-item/          # 任务项组件</span><br><span class="line">│   └── task-filter/        # 任务筛选组件</span><br><span class="line">├── utils/</span><br><span class="line">│   ├── storage.js          # 存储工具</span><br><span class="line">│   └── util.js             # 通用工具</span><br><span class="line">├── images/                 # 图片资源</span><br><span class="line">├── app.js</span><br><span class="line">├── app.json</span><br><span class="line">└── app.wxss</span><br></pre></td></tr></table></figure>

<h2 id="（三）核心功能实现"><a href="#（三）核心功能实现" class="headerlink" title="（三）核心功能实现"></a>（三）核心功能实现</h2><h3 id="1-数据模型设计"><a href="#1-数据模型设计" class="headerlink" title="1. 数据模型设计"></a>1. 数据模型设计</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/task-manager.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TaskManager</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storageKey</span> = <span class="string">&#x27;todo_tasks&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取所有任务</span></span><br><span class="line">  <span class="title function_">getAllTasks</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = wx.<span class="title function_">getStorageSync</span>(<span class="variable language_">this</span>.<span class="property">storageKey</span>) || []</span><br><span class="line">    <span class="keyword">return</span> tasks.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> <span class="keyword">new</span> <span class="title class_">Date</span>(b.<span class="property">createTime</span>) - <span class="keyword">new</span> <span class="title class_">Date</span>(a.<span class="property">createTime</span>))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加任务</span></span><br><span class="line">  <span class="title function_">addTask</span>(<span class="params">title, description = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">const</span> newTask = &#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(),</span><br><span class="line">      <span class="attr">title</span>: title.<span class="title function_">trim</span>(),</span><br><span class="line">      <span class="attr">description</span>: description.<span class="title function_">trim</span>(),</span><br><span class="line">      <span class="attr">completed</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">createTime</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>(),</span><br><span class="line">      <span class="attr">updateTime</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    tasks.<span class="title function_">unshift</span>(newTask)</span><br><span class="line">    wx.<span class="title function_">setStorageSync</span>(<span class="variable language_">this</span>.<span class="property">storageKey</span>, tasks)</span><br><span class="line">    <span class="keyword">return</span> newTask</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新任务</span></span><br><span class="line">  <span class="title function_">updateTask</span>(<span class="params">id, updates</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">const</span> index = tasks.<span class="title function_">findIndex</span>(<span class="function"><span class="params">task</span> =&gt;</span> task.<span class="property">id</span> === id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">      tasks[index] = &#123;</span><br><span class="line">        ...tasks[index],</span><br><span class="line">        ...updates,</span><br><span class="line">        <span class="attr">updateTime</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      wx.<span class="title function_">setStorageSync</span>(<span class="variable language_">this</span>.<span class="property">storageKey</span>, tasks)</span><br><span class="line">      <span class="keyword">return</span> tasks[index]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除任务</span></span><br><span class="line">  <span class="title function_">deleteTask</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">const</span> filteredTasks = tasks.<span class="title function_">filter</span>(<span class="function"><span class="params">task</span> =&gt;</span> task.<span class="property">id</span> !== id)</span><br><span class="line">    wx.<span class="title function_">setStorageSync</span>(<span class="variable language_">this</span>.<span class="property">storageKey</span>, filteredTasks)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 切换任务完成状态</span></span><br><span class="line">  <span class="title function_">toggleTaskComplete</span>(<span class="params">id</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">const</span> task = tasks.<span class="title function_">find</span>(<span class="function"><span class="params">task</span> =&gt;</span> task.<span class="property">id</span> === id)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (task) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">updateTask</span>(id, &#123; <span class="attr">completed</span>: !task.<span class="property">completed</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取任务统计</span></span><br><span class="line">  <span class="title function_">getTaskStats</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">total</span>: tasks.<span class="property">length</span>,</span><br><span class="line">      <span class="attr">completed</span>: tasks.<span class="title function_">filter</span>(<span class="function"><span class="params">task</span> =&gt;</span> task.<span class="property">completed</span>).<span class="property">length</span>,</span><br><span class="line">      <span class="attr">pending</span>: tasks.<span class="title function_">filter</span>(<span class="function"><span class="params">task</span> =&gt;</span> !task.<span class="property">completed</span>).<span class="property">length</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 按状态筛选任务</span></span><br><span class="line">  <span class="title function_">getTasksByStatus</span>(<span class="params">status</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="variable language_">this</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;completed&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> tasks.<span class="title function_">filter</span>(<span class="function"><span class="params">task</span> =&gt;</span> task.<span class="property">completed</span>)</span><br><span class="line">      <span class="keyword">case</span> <span class="string">&#x27;pending&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> tasks.<span class="title function_">filter</span>(<span class="function"><span class="params">task</span> =&gt;</span> !task.<span class="property">completed</span>)</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        <span class="keyword">return</span> tasks</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">new</span> <span class="title class_">TaskManager</span>()</span><br></pre></td></tr></table></figure>

<h3 id="2-任务列表页面"><a href="#2-任务列表页面" class="headerlink" title="2. 任务列表页面"></a>2. 任务列表页面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pages/index/index.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 头部统计 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;stats&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;stat-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-number&quot;</span>&gt;</span>&#123;&#123;stats.total&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-label&quot;</span>&gt;</span>总计<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;stat-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-number&quot;</span>&gt;</span>&#123;&#123;stats.pending&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-label&quot;</span>&gt;</span>待完成<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;stat-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-number&quot;</span>&gt;</span>&#123;&#123;stats.completed&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;stat-label&quot;</span>&gt;</span>已完成<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 筛选器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-bar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-item &#123;&#123;currentFilter === &#x27;all&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">bindtap</span>=<span class="string">&quot;setFilter&quot;</span> <span class="attr">data-filter</span>=<span class="string">&quot;all&quot;</span>&gt;</span></span><br><span class="line">      全部</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-item &#123;&#123;currentFilter === &#x27;pending&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">bindtap</span>=<span class="string">&quot;setFilter&quot;</span> <span class="attr">data-filter</span>=<span class="string">&quot;pending&quot;</span>&gt;</span></span><br><span class="line">      待完成</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;filter-item &#123;&#123;currentFilter === &#x27;completed&#x27; ? &#x27;active&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">          <span class="attr">bindtap</span>=<span class="string">&quot;setFilter&quot;</span> <span class="attr">data-filter</span>=<span class="string">&quot;completed&quot;</span>&gt;</span></span><br><span class="line">      已完成</span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 任务列表 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;task-list&quot;</span> <span class="attr">scroll-y</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;filteredTasks.length === 0&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;empty-state&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/empty.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;empty-image&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;empty-text&quot;</span>&gt;</span>暂无任务<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">task-item</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;filteredTasks&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">wx:key</span>=<span class="string">&quot;id&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">task</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">bind:toggle</span>=<span class="string">&quot;handleToggleTask&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">bind:edit</span>=<span class="string">&quot;handleEditTask&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">bind:delete</span>=<span class="string">&quot;handleDeleteTask&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">task-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 添加按钮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;add-button&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;goToAddTask&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;add-icon&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/index/index.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TaskManager</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/task-manager&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">tasks</span>: [],</span><br><span class="line">    <span class="attr">filteredTasks</span>: [],</span><br><span class="line">    <span class="attr">currentFilter</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">    <span class="attr">stats</span>: &#123;</span><br><span class="line">      <span class="attr">total</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">pending</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">completed</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadTasks</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">onShow</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadTasks</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载任务数据</span></span><br><span class="line">  <span class="attr">loadTasks</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> tasks = <span class="title class_">TaskManager</span>.<span class="title function_">getAllTasks</span>()</span><br><span class="line">    <span class="keyword">const</span> stats = <span class="title class_">TaskManager</span>.<span class="title function_">getTaskStats</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      tasks,</span><br><span class="line">      stats</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">filterTasks</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 筛选任务</span></span><br><span class="line">  <span class="attr">filterTasks</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; currentFilter &#125; = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">    <span class="keyword">const</span> filteredTasks = <span class="title class_">TaskManager</span>.<span class="title function_">getTasksByStatus</span>(</span><br><span class="line">      currentFilter === <span class="string">&#x27;all&#x27;</span> ? <span class="literal">null</span> : currentFilter</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      filteredTasks</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置筛选条件</span></span><br><span class="line">  <span class="attr">setFilter</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> filter = e.<span class="property">currentTarget</span>.<span class="property">dataset</span>.<span class="property">filter</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">currentFilter</span>: filter</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">filterTasks</span>()</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 切换任务完成状态</span></span><br><span class="line">  <span class="attr">handleToggleTask</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; taskId &#125; = e.<span class="property">detail</span></span><br><span class="line">    <span class="title class_">TaskManager</span>.<span class="title function_">toggleTaskComplete</span>(taskId)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">loadTasks</span>()</span><br><span class="line">    </span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;状态已更新&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">1000</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 编辑任务</span></span><br><span class="line">  <span class="attr">handleEditTask</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; taskId &#125; = e.<span class="property">detail</span></span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">`/pages/edit-task/edit-task?id=<span class="subst">$&#123;taskId&#125;</span>`</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除任务</span></span><br><span class="line">  <span class="attr">handleDeleteTask</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; taskId &#125; = e.<span class="property">detail</span></span><br><span class="line">    </span><br><span class="line">    wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;确认删除&#x27;</span>,</span><br><span class="line">      <span class="attr">content</span>: <span class="string">&#x27;确定要删除这个任务吗？&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">          <span class="title class_">TaskManager</span>.<span class="title function_">deleteTask</span>(taskId)</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">loadTasks</span>()</span><br><span class="line">          </span><br><span class="line">          wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;删除成功&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 跳转到添加任务页面</span></span><br><span class="line">  <span class="attr">goToAddTask</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;/pages/add-task/add-task&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-任务项组件"><a href="#3-任务项组件" class="headerlink" title="3. 任务项组件"></a>3. 任务项组件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- components/task-item/task-item.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;task-item &#123;&#123;task.completed ? &#x27;completed&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;task-content&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleToggle&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;checkbox &#123;&#123;task.completed ? &#x27;checked&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;task.completed&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check-icon&quot;</span>&gt;</span>✓<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;task-info&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;task-title&quot;</span>&gt;</span>&#123;&#123;task.title&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;task.description&#125;&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;task-description&quot;</span>&gt;</span>&#123;&#123;task.description&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;task-time&quot;</span>&gt;</span>&#123;&#123;formatTime(task.createTime)&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;task-actions&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;action-btn edit-btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleEdit&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;action-btn delete-btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleDelete&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/task-item/task-item.js</span></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="attr">task</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">      <span class="attr">value</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 切换完成状态</span></span><br><span class="line">    <span class="attr">handleToggle</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;toggle&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">taskId</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">task</span>.<span class="property">id</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 编辑任务</span></span><br><span class="line">    <span class="attr">handleEdit</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;edit&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">taskId</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">task</span>.<span class="property">id</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除任务</span></span><br><span class="line">    <span class="attr">handleDelete</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;delete&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">taskId</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">task</span>.<span class="property">id</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 格式化时间</span></span><br><span class="line">    <span class="attr">formatTime</span>: <span class="keyword">function</span>(<span class="params">timeString</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(timeString)</span><br><span class="line">      <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">      <span class="keyword">const</span> diff = now - date</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span> (diff &lt; <span class="number">60000</span>) &#123; <span class="comment">// 1分钟内</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;刚刚&#x27;</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diff &lt; <span class="number">3600000</span>) &#123; <span class="comment">// 1小时内</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">Math</span>.floor(diff / <span class="number">60000</span>)&#125;</span>分钟前`</span></span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (diff &lt; <span class="number">86400000</span>) &#123; <span class="comment">// 1天内</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="built_in">Math</span>.floor(diff / <span class="number">3600000</span>)&#125;</span>小时前`</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> date.<span class="title function_">toLocaleDateString</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="4-添加任务页面"><a href="#4-添加任务页面" class="headerlink" title="4. 添加任务页面"></a>4. 添加任务页面</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- pages/add-task/add-task.wxml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;form-item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>任务标题 *<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">&quot;请输入任务标题&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;title&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">bindinput</span>=<span class="string">&quot;handleTitleInput&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxlength</span>=<span class="string">&quot;50&quot;</span></span></span><br><span class="line"><span class="tag">      /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;form-item&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>任务描述<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">textarea</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;textarea&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">&quot;请输入任务描述（可选）&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;description&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">bindinput</span>=<span class="string">&quot;handleDescriptionInput&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">maxlength</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">auto-height</span></span></span><br><span class="line"><span class="tag">      &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn cancel-btn&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;handleCancel&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;btn save-btn &#123;&#123;!title.trim() ? &#x27;disabled&#x27; : &#x27;&#x27;&#125;&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">bindtap</span>=<span class="string">&quot;handleSave&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">disabled</span>=<span class="string">&quot;&#123;&#123;!title.trim()&#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      保存</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/add-task/add-task.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TaskManager</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/task-manager&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">description</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 输入标题</span></span><br><span class="line">  <span class="attr">handleTitleInput</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 输入描述</span></span><br><span class="line">  <span class="attr">handleDescriptionInput</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">description</span>: e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 保存任务</span></span><br><span class="line">  <span class="attr">handleSave</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; title, description &#125; = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!title.<span class="title function_">trim</span>()) &#123;</span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;请输入任务标题&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="title class_">TaskManager</span>.<span class="title function_">addTask</span>(title, description)</span><br><span class="line">      </span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;添加成功&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        wx.<span class="title function_">navigateBack</span>()</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;添加失败&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 取消</span></span><br><span class="line">  <span class="attr">handleCancel</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">title</span>.<span class="title function_">trim</span>() || <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">description</span>.<span class="title function_">trim</span>()) &#123;</span><br><span class="line">      wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;确认取消&#x27;</span>,</span><br><span class="line">        <span class="attr">content</span>: <span class="string">&#x27;当前有未保存的内容，确定要取消吗？&#x27;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">            wx.<span class="title function_">navigateBack</span>()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      wx.<span class="title function_">navigateBack</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h2 id="（四）样式设计"><a href="#（四）样式设计" class="headerlink" title="（四）样式设计"></a>（四）样式设计</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* app.wxss - 全局样式 */</span></span><br><span class="line"><span class="attribute">page</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: -apple-system, BlinkMacSystemFont, <span class="string">&#x27;Segoe UI&#x27;</span>, Roboto, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 通用按钮样式 */</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span><span class="selector-class">.disabled</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 表单样式 */</span></span><br><span class="line"><span class="selector-class">.form</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">16</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2</span>rpx <span class="number">16</span>rpx <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-item</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">40</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.form-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.label</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">16</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">500</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input</span>, <span class="selector-class">.textarea</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2</span>rpx solid <span class="number">#e0e0e0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fafafa</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.input</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.textarea</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* pages/index/index.wxss */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">135deg</span>, <span class="number">#667eea</span> <span class="number">0%</span>, <span class="number">#764ba2</span> <span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">16</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stats</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stat-item</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stat-number</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">48</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">8</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.stat-label</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">24</span>rpx;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.filter-bar</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">12</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">8</span>rpx;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2</span>rpx <span class="number">16</span>rpx <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.filter-item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">16</span>rpx;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#666</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.filter-item</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.task-list</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100vh</span> - <span class="number">400</span>rpx);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.empty-state</span> &#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">100</span>rpx <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.empty-image</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200</span>rpx;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.empty-text</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-button</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">120</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">120</span>rpx;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#007aff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8</span>rpx <span class="number">24</span>rpx <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">122</span>, <span class="number">255</span>, <span class="number">0.3</span>);</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-icon</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">48</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="六、小程序发布上线"><a href="#六、小程序发布上线" class="headerlink" title="六、小程序发布上线"></a>六、小程序发布上线</h1><h2 id="（一）代码审查和测试"><a href="#（一）代码审查和测试" class="headerlink" title="（一）代码审查和测试"></a>（一）代码审查和测试</h2><h3 id="1-代码质量检查"><a href="#1-代码质量检查" class="headerlink" title="1. 代码质量检查"></a>1. 代码质量检查</h3><p>在发布前，需要进行全面的代码审查：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查清单</span></span><br><span class="line"><span class="keyword">const</span> codeReviewChecklist = &#123;</span><br><span class="line">  <span class="comment">// 功能完整性</span></span><br><span class="line">  <span class="attr">functionality</span>: [</span><br><span class="line">    <span class="string">&#x27;所有功能按需求正常工作&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;异常情况处理完善&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户体验流畅&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 性能优化</span></span><br><span class="line">  <span class="attr">performance</span>: [</span><br><span class="line">    <span class="string">&#x27;图片资源已压缩&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;代码已压缩混淆&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;网络请求已优化&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;内存使用合理&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 兼容性</span></span><br><span class="line">  <span class="attr">compatibility</span>: [</span><br><span class="line">    <span class="string">&#x27;不同机型测试通过&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;不同版本微信测试通过&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;iOS和Android测试通过&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 安全性</span></span><br><span class="line">  <span class="attr">security</span>: [</span><br><span class="line">    <span class="string">&#x27;敏感信息已加密&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户数据保护完善&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;网络传输安全&#x27;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-真机测试"><a href="#2-真机测试" class="headerlink" title="2. 真机测试"></a>2. 真机测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试步骤</span></span><br><span class="line">1. 在开发者工具中点击&quot;预览&quot;</span><br><span class="line">2. 使用手机微信扫描二维码</span><br><span class="line">3. 在真机上测试所有功能</span><br><span class="line">4. 测试不同网络环境（WiFi、4G、弱网）</span><br><span class="line">5. 测试不同屏幕尺寸适配</span><br></pre></td></tr></table></figure>

<h2 id="（二）版本管理"><a href="#（二）版本管理" class="headerlink" title="（二）版本管理"></a>（二）版本管理</h2><h3 id="1-版本号规范"><a href="#1-版本号规范" class="headerlink" title="1. 版本号规范"></a>1. 版本号规范</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// project.config.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;projectname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;todo-miniprogram&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;your-app-id&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;urlCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;es6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;enhance&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;preloadBackgroundData&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minified&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;newFeature&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;coverView&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;nodeModules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;autoAudits&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;showShadowRootInWxmlPanel&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scopeDataCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uglifyFileName&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkInvalidKey&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;checkSiteMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uploadWithSourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;compileHotReLoad&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lazyloadPlaceholderEnable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;useMultiFrameRuntime&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;useApiHook&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;useApiHostProcess&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babelSetting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;ignore&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disablePlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;outputPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;enableEngineNative&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;useIsolateContext&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;userConfirmedBundleSwitch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;packNpmManually&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;packNpmRelationList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minifyWXSS&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;disableUseStrict&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minifyWXML&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;showES6CompileOption&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;useCompilerPlugins&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;compileType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;miniprogram&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;libVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.19.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;packOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ignore&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editorSetting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;tabIndent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;insertSpaces&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-提交代码"><a href="#2-提交代码" class="headerlink" title="2. 提交代码"></a>2. 提交代码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用Git管理代码版本</span></span><br><span class="line">git init</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;feat: 初始版本 - 待办事项小程序&quot;</span><br><span class="line">git tag v1.0.0</span><br></pre></td></tr></table></figure>

<h2 id="（三）上传代码"><a href="#（三）上传代码" class="headerlink" title="（三）上传代码"></a>（三）上传代码</h2><h3 id="1-开发版本上传"><a href="#1-开发版本上传" class="headerlink" title="1. 开发版本上传"></a>1. 开发版本上传</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 在微信开发者工具中点击&quot;上传&quot;</span><br><span class="line">2. 填写版本号和项目备注</span><br><span class="line">   - 版本号：1.0.0</span><br><span class="line">   - 项目备注：初始版本，包含基础的待办事项管理功能</span><br><span class="line">3. 点击&quot;上传&quot;</span><br></pre></td></tr></table></figure>

<h3 id="2-体验版本设置"><a href="#2-体验版本设置" class="headerlink" title="2. 体验版本设置"></a>2. 体验版本设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 登录微信公众平台</span><br><span class="line">2. 进入&quot;开发&quot; -&gt; &quot;开发版本&quot;</span><br><span class="line">3. 找到刚上传的版本</span><br><span class="line">4. 点击&quot;选为体验版&quot;</span><br><span class="line">5. 设置体验者微信号</span><br></pre></td></tr></table></figure>

<h2 id="（四）提交审核"><a href="#（四）提交审核" class="headerlink" title="（四）提交审核"></a>（四）提交审核</h2><h3 id="1-审核前准备"><a href="#1-审核前准备" class="headerlink" title="1. 审核前准备"></a>1. 审核前准备</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 审核准备清单</span></span><br><span class="line"><span class="keyword">const</span> auditPreparation = &#123;</span><br><span class="line">  <span class="comment">// 基本信息</span></span><br><span class="line">  <span class="attr">basicInfo</span>: [</span><br><span class="line">    <span class="string">&#x27;小程序名称符合规范&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;小程序简介准确描述功能&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;小程序头像清晰合规&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;服务类目选择正确&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 功能完整性</span></span><br><span class="line">  <span class="attr">functionality</span>: [</span><br><span class="line">    <span class="string">&#x27;核心功能完整可用&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;页面跳转正常&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;数据加载正常&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;异常处理完善&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 用户体验</span></span><br><span class="line">  <span class="attr">userExperience</span>: [</span><br><span class="line">    <span class="string">&#x27;界面美观易用&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;操作流程顺畅&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;加载速度合理&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;错误提示友好&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 合规性</span></span><br><span class="line">  <span class="attr">compliance</span>: [</span><br><span class="line">    <span class="string">&#x27;内容健康合规&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;无违规功能&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;隐私政策完善&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户协议清晰&#x27;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-提交审核流程"><a href="#2-提交审核流程" class="headerlink" title="2. 提交审核流程"></a>2. 提交审核流程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 在微信公众平台进入&quot;开发&quot; -&gt; &quot;开发版本&quot;</span><br><span class="line">2. 点击&quot;提交审核&quot;</span><br><span class="line">3. 填写审核信息：</span><br><span class="line">   - 功能页面：选择需要审核的页面</span><br><span class="line">   - 测试帐号：提供测试用的微信号（如需要）</span><br><span class="line">   - 补充说明：详细说明小程序功能和使用方法</span><br><span class="line">4. 确认提交</span><br></pre></td></tr></table></figure>

<h3 id="3-审核注意事项"><a href="#3-审核注意事项" class="headerlink" title="3. 审核注意事项"></a>3. 审核注意事项</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 常见审核问题及解决方案</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 功能问题</span></span><br><span class="line"><span class="bullet">-</span> <span class="strong">**问题**</span>：页面空白或加载失败</span><br><span class="line"><span class="bullet">-</span> <span class="strong">**解决**</span>：检查网络请求、数据绑定、页面路径</span><br><span class="line"></span><br><span class="line"><span class="section">### 内容问题</span></span><br><span class="line"><span class="bullet">-</span> <span class="strong">**问题**</span>：内容不符合规范</span><br><span class="line"><span class="bullet">-</span> <span class="strong">**解决**</span>：确保内容健康、无违规信息</span><br><span class="line"></span><br><span class="line"><span class="section">### 体验问题</span></span><br><span class="line"><span class="bullet">-</span> <span class="strong">**问题**</span>：操作不流畅、界面混乱</span><br><span class="line"><span class="bullet">-</span> <span class="strong">**解决**</span>：优化交互设计、统一视觉风格</span><br><span class="line"></span><br><span class="line"><span class="section">### 信息问题</span></span><br><span class="line"><span class="bullet">-</span> <span class="strong">**问题**</span>：小程序信息不准确</span><br><span class="line"><span class="bullet">-</span> <span class="strong">**解决**</span>：完善小程序描述、选择正确类目</span><br></pre></td></tr></table></figure>

<h2 id="（五）发布上线"><a href="#（五）发布上线" class="headerlink" title="（五）发布上线"></a>（五）发布上线</h2><h3 id="1-审核通过后发布"><a href="#1-审核通过后发布" class="headerlink" title="1. 审核通过后发布"></a>1. 审核通过后发布</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 审核通过后，在&quot;开发版本&quot;页面会显示&quot;审核通过&quot;</span><br><span class="line">2. 点击&quot;发布&quot;按钮</span><br><span class="line">3. 确认发布信息</span><br><span class="line">4. 点击&quot;确定&quot;完成发布</span><br></pre></td></tr></table></figure>

<h3 id="2-版本管理"><a href="#2-版本管理" class="headerlink" title="2. 版本管理"></a>2. 版本管理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 版本发布记录</span></span><br><span class="line"><span class="keyword">const</span> versionHistory = &#123;</span><br><span class="line">  <span class="string">&#x27;v1.0.0&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">releaseDate</span>: <span class="string">&#x27;2024-01-15&#x27;</span>,</span><br><span class="line">    <span class="attr">features</span>: [</span><br><span class="line">      <span class="string">&#x27;基础的待办事项管理功能&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;任务的增删改查&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;任务状态筛选&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;数据本地存储&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">bugFixes</span>: [],</span><br><span class="line">    <span class="attr">notes</span>: <span class="string">&#x27;初始版本发布&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="string">&#x27;v1.1.0&#x27;</span>: &#123;</span><br><span class="line">    <span class="attr">releaseDate</span>: <span class="string">&#x27;2024-02-01&#x27;</span>,</span><br><span class="line">    <span class="attr">features</span>: [</span><br><span class="line">      <span class="string">&#x27;添加任务提醒功能&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;支持任务分类&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;优化界面设计&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">bugFixes</span>: [</span><br><span class="line">      <span class="string">&#x27;修复任务删除后数据不同步问题&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;修复长文本显示异常&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">notes</span>: <span class="string">&#x27;功能增强版本&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="七、性能优化与最佳实践"><a href="#七、性能优化与最佳实践" class="headerlink" title="七、性能优化与最佳实践"></a>七、性能优化与最佳实践</h1><h2 id="（一）性能优化策略"><a href="#（一）性能优化策略" class="headerlink" title="（一）性能优化策略"></a>（一）性能优化策略</h2><h3 id="1-代码优化"><a href="#1-代码优化" class="headerlink" title="1. 代码优化"></a>1. 代码优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 避免频繁的setData调用</span></span><br><span class="line"><span class="comment">// 不好的做法</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    [<span class="string">`list[<span class="subst">$&#123;i&#125;</span>]`</span>]: newValue</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 好的做法</span></span><br><span class="line"><span class="keyword">const</span> updates = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">  updates[<span class="string">`list[<span class="subst">$&#123;i&#125;</span>]`</span>] = newValue</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(updates)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 减少数据传输量</span></span><br><span class="line"><span class="comment">// 不好的做法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">  <span class="attr">largeObject</span>: &#123;</span><br><span class="line">    ...<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">largeObject</span>,</span><br><span class="line">    <span class="attr">newProperty</span>: value</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 好的做法</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">  <span class="string">&#x27;largeObject.newProperty&#x27;</span>: value</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 使用节流和防抖</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">throttle</span> = (<span class="params">func, delay</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!timer) &#123;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">        timer = <span class="literal">null</span></span><br><span class="line">      &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">debounce</span> = (<span class="params">func, delay</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">searchKeyword</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 搜索输入防抖</span></span><br><span class="line">  <span class="attr">onSearchInput</span>: <span class="title function_">debounce</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> keyword = e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">searchKeyword</span>: keyword</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">searchData</span>(keyword)</span><br><span class="line">  &#125;, <span class="number">300</span>),</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 滚动事件节流</span></span><br><span class="line">  <span class="attr">onScroll</span>: <span class="title function_">throttle</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> scrollTop = e.<span class="property">detail</span>.<span class="property">scrollTop</span></span><br><span class="line">    <span class="comment">// 处理滚动逻辑</span></span><br><span class="line">  &#125;, <span class="number">100</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="2-图片优化"><a href="#2-图片优化" class="headerlink" title="2. 图片优化"></a>2. 图片优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 图片优化工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImageOptimizer</span> &#123;</span><br><span class="line">  <span class="comment">// 压缩图片</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">compressImage</span>(<span class="params">filePath, quality = <span class="number">0.8</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.<span class="title function_">compressImage</span>(&#123;</span><br><span class="line">        <span class="attr">src</span>: filePath,</span><br><span class="line">        <span class="attr">quality</span>: quality,</span><br><span class="line">        <span class="attr">success</span>: resolve,</span><br><span class="line">        <span class="attr">fail</span>: reject</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取图片信息</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">getImageInfo</span>(<span class="params">src</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.<span class="title function_">getImageInfo</span>(&#123;</span><br><span class="line">        <span class="attr">src</span>: src,</span><br><span class="line">        <span class="attr">success</span>: resolve,</span><br><span class="line">        <span class="attr">fail</span>: reject</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 选择并压缩图片</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">chooseAndCompressImage</span>(<span class="params">options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> chooseResult = <span class="keyword">await</span> wx.<span class="title function_">chooseMedia</span>(&#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">mediaType</span>: [<span class="string">&#x27;image&#x27;</span>],</span><br><span class="line">        <span class="attr">sourceType</span>: [<span class="string">&#x27;album&#x27;</span>, <span class="string">&#x27;camera&#x27;</span>],</span><br><span class="line">        ...options</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> tempFilePath = chooseResult.<span class="property">tempFiles</span>[<span class="number">0</span>].<span class="property">tempFilePath</span></span><br><span class="line">      <span class="keyword">const</span> compressResult = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">compressImage</span>(tempFilePath)</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">return</span> compressResult.<span class="property">tempFilePath</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;图片处理失败&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">chooseAvatar</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      wx.<span class="title function_">showLoading</span>(&#123; <span class="attr">title</span>: <span class="string">&#x27;处理中...&#x27;</span> &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> compressedPath = <span class="keyword">await</span> <span class="title class_">ImageOptimizer</span>.<span class="title function_">chooseAndCompressImage</span>(&#123;</span><br><span class="line">        <span class="attr">quality</span>: <span class="number">0.7</span></span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">avatarUrl</span>: compressedPath</span><br><span class="line">      &#125;)</span><br><span class="line">      </span><br><span class="line">      wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;图片处理失败&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-网络请求优化"><a href="#3-网络请求优化" class="headerlink" title="3. 网络请求优化"></a>3. 网络请求优化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求缓存管理</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RequestCache</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">maxCacheSize</span> = <span class="number">50</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">defaultExpireTime</span> = <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span> <span class="comment">// 5分钟</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 生成缓存key</span></span><br><span class="line">  <span class="title function_">generateKey</span>(<span class="params">url, data</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;url&#125;</span>_<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data || &#123;&#125;)&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置缓存</span></span><br><span class="line">  <span class="title function_">set</span>(<span class="params">key, data, expireTime = <span class="variable language_">this</span>.defaultExpireTime</span>) &#123;</span><br><span class="line">    <span class="comment">// 清理过期缓存</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">clearExpired</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 限制缓存大小</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">cache</span>.<span class="property">size</span> &gt;= <span class="variable language_">this</span>.<span class="property">maxCacheSize</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> firstKey = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">keys</span>().<span class="title function_">next</span>().<span class="property">value</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(firstKey)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(key, &#123;</span><br><span class="line">      data,</span><br><span class="line">      <span class="attr">expireTime</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() + expireTime</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取缓存</span></span><br><span class="line">  <span class="title function_">get</span>(<span class="params">key</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> cached = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!cached) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Date</span>.<span class="title function_">now</span>() &gt; cached.<span class="property">expireTime</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(key)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cached.<span class="property">data</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 清理过期缓存</span></span><br><span class="line">  <span class="title function_">clearExpired</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [key, value] <span class="keyword">of</span> <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">entries</span>()) &#123;</span><br><span class="line">      <span class="keyword">if</span> (now &gt; value.<span class="property">expireTime</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">delete</span>(key)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 清空所有缓存</span></span><br><span class="line">  <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">clear</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增强的请求工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EnhancedRequest</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span> = <span class="keyword">new</span> <span class="title class_">RequestCache</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pendingRequests</span> = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">request</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; url, data, useCache = <span class="literal">true</span>, cacheTime &#125; = config</span><br><span class="line">    <span class="keyword">const</span> cacheKey = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">generateKey</span>(url, data)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 检查缓存</span></span><br><span class="line">    <span class="keyword">if</span> (useCache) &#123;</span><br><span class="line">      <span class="keyword">const</span> cachedData = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(cacheKey)</span><br><span class="line">      <span class="keyword">if</span> (cachedData) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(cachedData)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 防止重复请求</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">pendingRequests</span>.<span class="title function_">has</span>(cacheKey)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">pendingRequests</span>.<span class="title function_">get</span>(cacheKey)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发起请求</span></span><br><span class="line">    <span class="keyword">const</span> requestPromise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        ...config,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">pendingRequests</span>.<span class="title function_">delete</span>(cacheKey)</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">// 缓存响应数据</span></span><br><span class="line">            <span class="keyword">if</span> (useCache) &#123;</span><br><span class="line">              <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(cacheKey, res.<span class="property">data</span>, cacheTime)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">resolve</span>(res.<span class="property">data</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`请求失败: <span class="subst">$&#123;res.statusCode&#125;</span>`</span>))</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">pendingRequests</span>.<span class="title function_">delete</span>(cacheKey)</span><br><span class="line">          <span class="title function_">reject</span>(error)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pendingRequests</span>.<span class="title function_">set</span>(cacheKey, requestPromise)</span><br><span class="line">    <span class="keyword">return</span> requestPromise</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> enhancedRequest = <span class="keyword">new</span> <span class="title class_">EnhancedRequest</span>()</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = enhancedRequest</span><br></pre></td></tr></table></figure>

<h2 id="（二）最佳实践"><a href="#（二）最佳实践" class="headerlink" title="（二）最佳实践"></a>（二）最佳实践</h2><h3 id="1-代码组织"><a href="#1-代码组织" class="headerlink" title="1. 代码组织"></a>1. 代码组织</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 使用模块化开发</span></span><br><span class="line"><span class="comment">// utils/constants.js - 常量管理</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">API_BASE_URL</span>: <span class="string">&#x27;https://api.example.com&#x27;</span>,</span><br><span class="line">  <span class="attr">STORAGE_KEYS</span>: &#123;</span><br><span class="line">    <span class="attr">USER_INFO</span>: <span class="string">&#x27;userInfo&#x27;</span>,</span><br><span class="line">    <span class="attr">TOKEN</span>: <span class="string">&#x27;token&#x27;</span>,</span><br><span class="line">    <span class="attr">SETTINGS</span>: <span class="string">&#x27;settings&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">STATUS_CODES</span>: &#123;</span><br><span class="line">    <span class="attr">SUCCESS</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">ERROR</span>: -<span class="number">1</span>,</span><br><span class="line">    <span class="attr">UNAUTHORIZED</span>: <span class="number">401</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// utils/validators.js - 验证工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Validators</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">isEmail</span>(<span class="params">email</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> emailRegex = <span class="regexp">/^[^\s@]+@[^\s@]+\.[^\s@]+$/</span></span><br><span class="line">    <span class="keyword">return</span> emailRegex.<span class="title function_">test</span>(email)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">isPhone</span>(<span class="params">phone</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> phoneRegex = <span class="regexp">/^1[3-9]\d&#123;9&#125;$/</span></span><br><span class="line">    <span class="keyword">return</span> phoneRegex.<span class="title function_">test</span>(phone)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">isRequired</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value !== <span class="literal">null</span> &amp;&amp; value !== <span class="literal">undefined</span> &amp;&amp; value.<span class="title function_">toString</span>().<span class="title function_">trim</span>() !== <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">minLength</span>(<span class="params">value, min</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value &amp;&amp; value.<span class="property">length</span> &gt;= min</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">maxLength</span>(<span class="params">value, max</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value &amp;&amp; value.<span class="property">length</span> &lt;= max</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Validators</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// utils/formatters.js - 格式化工具</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Formatters</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">formatDate</span>(<span class="params">date, format = <span class="string">&#x27;YYYY-MM-DD&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(date)</span><br><span class="line">    <span class="keyword">const</span> year = d.<span class="title function_">getFullYear</span>()</span><br><span class="line">    <span class="keyword">const</span> month = <span class="title class_">String</span>(d.<span class="title function_">getMonth</span>() + <span class="number">1</span>).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> day = <span class="title class_">String</span>(d.<span class="title function_">getDate</span>()).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> hour = <span class="title class_">String</span>(d.<span class="title function_">getHours</span>()).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> minute = <span class="title class_">String</span>(d.<span class="title function_">getMinutes</span>()).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> second = <span class="title class_">String</span>(d.<span class="title function_">getSeconds</span>()).<span class="title function_">padStart</span>(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> format</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;YYYY&#x27;</span>, year)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;MM&#x27;</span>, month)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;DD&#x27;</span>, day)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;HH&#x27;</span>, hour)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;mm&#x27;</span>, minute)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="string">&#x27;ss&#x27;</span>, second)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">formatNumber</span>(<span class="params">num, decimals = <span class="number">2</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Number</span>(num).<span class="title function_">toFixed</span>(decimals)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">formatFileSize</span>(<span class="params">bytes</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (bytes === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&#x27;0 B&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> k = <span class="number">1024</span></span><br><span class="line">    <span class="keyword">const</span> sizes = [<span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;KB&#x27;</span>, <span class="string">&#x27;MB&#x27;</span>, <span class="string">&#x27;GB&#x27;</span>]</span><br><span class="line">    <span class="keyword">const</span> i = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">log</span>(bytes) / <span class="title class_">Math</span>.<span class="title function_">log</span>(k))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>((bytes / <span class="title class_">Math</span>.<span class="title function_">pow</span>(k, i)).<span class="title function_">toFixed</span>(<span class="number">2</span>)) + <span class="string">&#x27; &#x27;</span> + sizes[i]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Formatters</span></span><br></pre></td></tr></table></figure>

<h3 id="2-错误处理"><a href="#2-错误处理" class="headerlink" title="2. 错误处理"></a>2. 错误处理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/error-handler.js</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ErrorHandler</span> &#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">handle</span>(<span class="params">error, context = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`[<span class="subst">$&#123;context&#125;</span>] 错误:`</span>, error)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> message = <span class="string">&#x27;操作失败，请稍后重试&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">message</span>) &#123;</span><br><span class="line">      message = error.<span class="property">message</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> error === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">      message = error</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: message,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 上报错误（可选）</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">reportError</span>(error, context)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">reportError</span>(<span class="params">error, context</span>) &#123;</span><br><span class="line">    <span class="comment">// 错误上报逻辑</span></span><br><span class="line">    <span class="keyword">const</span> errorInfo = &#123;</span><br><span class="line">      <span class="attr">message</span>: error.<span class="property">message</span> || error,</span><br><span class="line">      <span class="attr">stack</span>: error.<span class="property">stack</span>,</span><br><span class="line">      context,</span><br><span class="line">      <span class="attr">timestamp</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toISOString</span>(),</span><br><span class="line">      <span class="attr">userAgent</span>: wx.<span class="title function_">getSystemInfoSync</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送到错误监控服务</span></span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;https://api.example.com/errors&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>: errorInfo,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 静默失败，不影响用户体验</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">async</span> <span class="title function_">withErrorHandling</span>(<span class="params">asyncFn, context = <span class="string">&#x27;&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">asyncFn</span>()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">handle</span>(error, context)</span><br><span class="line">      <span class="keyword">throw</span> error</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">ErrorHandler</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ErrorHandler</span> = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/error-handler&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">loadData</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title class_">ErrorHandler</span>.<span class="title function_">withErrorHandling</span>(<span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> data = <span class="keyword">await</span> api.<span class="title function_">getData</span>()</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123; data &#125;)</span><br><span class="line">    &#125;, <span class="string">&#x27;loadData&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">handleSubmit</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// 业务逻辑</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">submitForm</span>()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="title class_">ErrorHandler</span>.<span class="title function_">handle</span>(error, <span class="string">&#x27;handleSubmit&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3-状态管理"><a href="#3-状态管理" class="headerlink" title="3. 状态管理"></a>3. 状态管理</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// utils/store.js - 简单的状态管理</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Store</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;&#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listeners</span> = []</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置状态</span></span><br><span class="line">  <span class="title function_">setState</span>(<span class="params">newState</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;</span><br><span class="line">      ...<span class="variable language_">this</span>.<span class="property">state</span>,</span><br><span class="line">      ...newState</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 通知所有监听者</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listeners</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">listener</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">listener</span>(<span class="variable language_">this</span>.<span class="property">state</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 获取状态</span></span><br><span class="line">  <span class="title function_">getState</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">state</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 订阅状态变化</span></span><br><span class="line">  <span class="title function_">subscribe</span>(<span class="params">listener</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listeners</span>.<span class="title function_">push</span>(listener)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回取消订阅函数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> index = <span class="variable language_">this</span>.<span class="property">listeners</span>.<span class="title function_">indexOf</span>(listener)</span><br><span class="line">      <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">listeners</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 清空状态</span></span><br><span class="line">  <span class="title function_">clear</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">state</span> = &#123;&#125;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">listeners</span> = []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建全局store实例</span></span><br><span class="line"><span class="keyword">const</span> globalStore = <span class="keyword">new</span> <span class="title class_">Store</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化用户状态</span></span><br><span class="line">globalStore.<span class="title function_">setState</span>(&#123;</span><br><span class="line">  <span class="attr">user</span>: &#123;</span><br><span class="line">    <span class="attr">isLogin</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">userInfo</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="attr">token</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">app</span>: &#123;</span><br><span class="line">    <span class="attr">loading</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">networkStatus</span>: <span class="string">&#x27;online&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = globalStore</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在页面中使用</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="built_in">require</span>(<span class="string">&#x27;../../utils/store&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">userInfo</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 订阅状态变化</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">unsubscribe</span> = store.<span class="title function_">subscribe</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">userInfo</span>: state.<span class="property">user</span>.<span class="property">userInfo</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取初始状态</span></span><br><span class="line">    <span class="keyword">const</span> state = store.<span class="title function_">getState</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">userInfo</span>: state.<span class="property">user</span>.<span class="property">userInfo</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 取消订阅</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">unsubscribe</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">unsubscribe</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  </span><br><span class="line">  <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 更新全局状态</span></span><br><span class="line">    store.<span class="title function_">setState</span>(&#123;</span><br><span class="line">      <span class="attr">user</span>: &#123;</span><br><span class="line">        <span class="attr">isLogin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">userInfo</span>: &#123; <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>, <span class="attr">avatar</span>: <span class="string">&#x27;xxx&#x27;</span> &#125;,</span><br><span class="line">        <span class="attr">token</span>: <span class="string">&#x27;abc123&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h1 id="八、学习建议与进阶方向"><a href="#八、学习建议与进阶方向" class="headerlink" title="八、学习建议与进阶方向"></a>八、学习建议与进阶方向</h1><h2 id="（一）学习路径规划"><a href="#（一）学习路径规划" class="headerlink" title="（一）学习路径规划"></a>（一）学习路径规划</h2><h3 id="1-基础阶段（1-2个月）"><a href="#1-基础阶段（1-2个月）" class="headerlink" title="1. 基础阶段（1-2个月）"></a>1. 基础阶段（1-2个月）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 第一阶段：环境搭建和基础语法</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 第1周：环境准备</span></span><br><span class="line"><span class="bullet">-</span> [ ] 注册小程序账号</span><br><span class="line"><span class="bullet">-</span> [ ] 下载开发工具</span><br><span class="line"><span class="bullet">-</span> [ ] 创建第一个项目</span><br><span class="line"><span class="bullet">-</span> [ ] 熟悉开发工具界面</span><br><span class="line"></span><br><span class="line"><span class="section">### 第2周：WXML和WXSS</span></span><br><span class="line"><span class="bullet">-</span> [ ] 学习WXML基础语法</span><br><span class="line"><span class="bullet">-</span> [ ] 掌握数据绑定</span><br><span class="line"><span class="bullet">-</span> [ ] 学习WXSS样式编写</span><br><span class="line"><span class="bullet">-</span> [ ] 了解rpx单位使用</span><br><span class="line"></span><br><span class="line"><span class="section">### 第3周：JavaScript逻辑</span></span><br><span class="line"><span class="bullet">-</span> [ ] 页面生命周期</span><br><span class="line"><span class="bullet">-</span> [ ] 事件处理</span><br><span class="line"><span class="bullet">-</span> [ ] 数据更新机制</span><br><span class="line"><span class="bullet">-</span> [ ] 基础API使用</span><br><span class="line"></span><br><span class="line"><span class="section">### 第4周：综合练习</span></span><br><span class="line"><span class="bullet">-</span> [ ] 完成一个简单的计算器</span><br><span class="line"><span class="bullet">-</span> [ ] 实现一个图片查看器</span><br><span class="line"><span class="bullet">-</span> [ ] 制作一个简单的表单</span><br></pre></td></tr></table></figure>

<h3 id="2-进阶阶段（2-3个月）"><a href="#2-进阶阶段（2-3个月）" class="headerlink" title="2. 进阶阶段（2-3个月）"></a>2. 进阶阶段（2-3个月）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 第二阶段：核心功能开发</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 第5-6周：组件开发</span></span><br><span class="line"><span class="bullet">-</span> [ ] 自定义组件创建</span><br><span class="line"><span class="bullet">-</span> [ ] 组件通信机制</span><br><span class="line"><span class="bullet">-</span> [ ] 组件生命周期</span><br><span class="line"><span class="bullet">-</span> [ ] 组件库使用</span><br><span class="line"></span><br><span class="line"><span class="section">### 第7-8周：网络和存储</span></span><br><span class="line"><span class="bullet">-</span> [ ] 网络请求处理</span><br><span class="line"><span class="bullet">-</span> [ ] 数据缓存策略</span><br><span class="line"><span class="bullet">-</span> [ ] 本地存储使用</span><br><span class="line"><span class="bullet">-</span> [ ] 文件上传下载</span><br><span class="line"></span><br><span class="line"><span class="section">### 第9-10周：高级功能</span></span><br><span class="line"><span class="bullet">-</span> [ ] 微信登录授权</span><br><span class="line"><span class="bullet">-</span> [ ] 支付功能集成</span><br><span class="line"><span class="bullet">-</span> [ ] 分享功能实现</span><br><span class="line"><span class="bullet">-</span> [ ] 地图定位服务</span><br><span class="line"></span><br><span class="line"><span class="section">### 第11-12周：项目实战</span></span><br><span class="line"><span class="bullet">-</span> [ ] 完成一个完整项目</span><br><span class="line"><span class="bullet">-</span> [ ] 代码优化重构</span><br><span class="line"><span class="bullet">-</span> [ ] 性能测试优化</span><br><span class="line"><span class="bullet">-</span> [ ] 发布上线流程</span><br></pre></td></tr></table></figure>

<h3 id="3-高级阶段（3-6个月）"><a href="#3-高级阶段（3-6个月）" class="headerlink" title="3. 高级阶段（3-6个月）"></a>3. 高级阶段（3-6个月）</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 第三阶段：深入优化和扩展</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 架构设计</span></span><br><span class="line"><span class="bullet">-</span> [ ] 模块化开发</span><br><span class="line"><span class="bullet">-</span> [ ] 状态管理</span><br><span class="line"><span class="bullet">-</span> [ ] 路由管理</span><br><span class="line"><span class="bullet">-</span> [ ] 错误处理机制</span><br><span class="line"></span><br><span class="line"><span class="section">### 性能优化</span></span><br><span class="line"><span class="bullet">-</span> [ ] 代码分包</span><br><span class="line"><span class="bullet">-</span> [ ] 懒加载实现</span><br><span class="line"><span class="bullet">-</span> [ ] 图片优化</span><br><span class="line"><span class="bullet">-</span> [ ] 网络优化</span><br><span class="line"></span><br><span class="line"><span class="section">### 工程化</span></span><br><span class="line"><span class="bullet">-</span> [ ] 自动化构建</span><br><span class="line"><span class="bullet">-</span> [ ] 代码规范</span><br><span class="line"><span class="bullet">-</span> [ ] 单元测试</span><br><span class="line"><span class="bullet">-</span> [ ] 持续集成</span><br><span class="line"></span><br><span class="line"><span class="section">### 生态扩展</span></span><br><span class="line"><span class="bullet">-</span> [ ] 云开发使用</span><br><span class="line"><span class="bullet">-</span> [ ] 插件开发</span><br><span class="line"><span class="bullet">-</span> [ ] 第三方库集成</span><br><span class="line"><span class="bullet">-</span> [ ] 跨平台方案</span><br></pre></td></tr></table></figure>

<h2 id="（二）实践项目推荐"><a href="#（二）实践项目推荐" class="headerlink" title="（二）实践项目推荐"></a>（二）实践项目推荐</h2><h3 id="1-入门项目"><a href="#1-入门项目" class="headerlink" title="1. 入门项目"></a>1. 入门项目</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 项目1：个人名片小程序</span></span><br><span class="line"><span class="keyword">const</span> businessCardProject = &#123;</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;制作个人或企业名片展示&#x27;</span>,</span><br><span class="line">  <span class="attr">features</span>: [</span><br><span class="line">    <span class="string">&#x27;个人信息展示&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;联系方式展示&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;二维码生成&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;一键保存联系人&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">techStack</span>: [<span class="string">&#x27;基础组件&#x27;</span>, <span class="string">&#x27;数据绑定&#x27;</span>, <span class="string">&#x27;API调用&#x27;</span>],</span><br><span class="line">  <span class="attr">difficulty</span>: <span class="string">&#x27;⭐&#x27;</span>,</span><br><span class="line">  <span class="attr">timeEstimate</span>: <span class="string">&#x27;1-2周&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目2：天气查询小程序</span></span><br><span class="line"><span class="keyword">const</span> weatherProject = &#123;</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;实时天气信息查询&#x27;</span>,</span><br><span class="line">  <span class="attr">features</span>: [</span><br><span class="line">    <span class="string">&#x27;当前天气显示&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;未来天气预报&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;城市搜索&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;定位获取天气&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">techStack</span>: [<span class="string">&#x27;网络请求&#x27;</span>, <span class="string">&#x27;地理定位&#x27;</span>, <span class="string">&#x27;数据处理&#x27;</span>],</span><br><span class="line">  <span class="attr">difficulty</span>: <span class="string">&#x27;⭐⭐&#x27;</span>,</span><br><span class="line">  <span class="attr">timeEstimate</span>: <span class="string">&#x27;2-3周&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-进阶项目"><a href="#2-进阶项目" class="headerlink" title="2. 进阶项目"></a>2. 进阶项目</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 项目3：在线商城小程序</span></span><br><span class="line"><span class="keyword">const</span> ecommerceProject = &#123;</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;完整的电商购物平台&#x27;</span>,</span><br><span class="line">  <span class="attr">features</span>: [</span><br><span class="line">    <span class="string">&#x27;商品展示和搜索&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;购物车管理&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;订单处理&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户中心&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;支付集成&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">techStack</span>: [</span><br><span class="line">    <span class="string">&#x27;组件化开发&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;状态管理&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;支付API&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户授权&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">difficulty</span>: <span class="string">&#x27;⭐⭐⭐⭐&#x27;</span>,</span><br><span class="line">  <span class="attr">timeEstimate</span>: <span class="string">&#x27;2-3个月&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 项目4：社交分享小程序</span></span><br><span class="line"><span class="keyword">const</span> socialProject = &#123;</span><br><span class="line">  <span class="attr">description</span>: <span class="string">&#x27;图片分享和社交互动平台&#x27;</span>,</span><br><span class="line">  <span class="attr">features</span>: [</span><br><span class="line">    <span class="string">&#x27;图片上传和编辑&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;动态发布&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;点赞评论&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;用户关注&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;消息通知&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">techStack</span>: [</span><br><span class="line">    <span class="string">&#x27;文件上传&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;实时通信&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;云开发&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;图片处理&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">difficulty</span>: <span class="string">&#x27;⭐⭐⭐⭐⭐&#x27;</span>,</span><br><span class="line">  <span class="attr">timeEstimate</span>: <span class="string">&#x27;3-4个月&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）学习资源推荐"><a href="#（三）学习资源推荐" class="headerlink" title="（三）学习资源推荐"></a>（三）学习资源推荐</h2><h3 id="1-官方资源"><a href="#1-官方资源" class="headerlink" title="1. 官方资源"></a>1. 官方资源</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 官方文档和工具</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 核心文档</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">微信小程序官方文档</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/dev/framework/</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">小程序API参考</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/dev/api/</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">组件库文档</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/dev/component/</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 开发工具</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">微信开发者工具</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">小程序助手</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/dev/devtools/mydev.html</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">代码片段工具</span>](<span class="link">https://developers.weixin.qq.com/s/</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 设计资源</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">微信设计指南</span>](<span class="link">https://developers.weixin.qq.com/miniprogram/design/</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">WeUI组件库</span>](<span class="link">https://github.com/Tencent/weui-wxss</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">官方DEMO</span>](<span class="link">https://github.com/wechat-miniprogram/miniprogram-demo</span>)</span><br></pre></td></tr></table></figure>

<h3 id="2-社区资源"><a href="#2-社区资源" class="headerlink" title="2. 社区资源"></a>2. 社区资源</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 开源项目和社区</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 优秀开源项目</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">Vant Weapp</span>](<span class="link">https://github.com/youzan/vant-weapp</span>) - 轻量、可靠的小程序UI组件库</span><br><span class="line"><span class="bullet">-</span> [<span class="string">ColorUI</span>](<span class="link">https://github.com/weilanwl/ColorUI</span>) - 鲜亮的高饱和色彩UI框架</span><br><span class="line"><span class="bullet">-</span> [<span class="string">MinUI</span>](<span class="link">https://github.com/meili/minui</span>) - 基于微信小程序自定义组件特性开发而成的一套简洁、易用、高效的组件库</span><br><span class="line"></span><br><span class="line"><span class="section">### 学习平台</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">微信小程序联盟</span>](<span class="link">https://www.wxapp-union.com/</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">小程序社区</span>](<span class="link">https://developers.weixin.qq.com/community/minihome</span>)</span><br><span class="line"><span class="bullet">-</span> [<span class="string">掘金小程序专栏</span>](<span class="link">https://juejin.cn/tag/%E5%B0%8F%E7%A8%8B%E5%BA%8F</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 技术博客</span></span><br><span class="line"><span class="bullet">-</span> 关注微信官方技术团队博客</span><br><span class="line"><span class="bullet">-</span> 阅读优秀开发者的实践分享</span><br><span class="line"><span class="bullet">-</span> 参与技术讨论和问答</span><br></pre></td></tr></table></figure>

<h3 id="3-进阶学习"><a href="#3-进阶学习" class="headerlink" title="3. 进阶学习"></a>3. 进阶学习</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 技术栈扩展建议</span></span><br><span class="line"><span class="keyword">const</span> advancedLearning = &#123;</span><br><span class="line">  <span class="comment">// 前端技术栈</span></span><br><span class="line">  <span class="attr">frontend</span>: [</span><br><span class="line">    <span class="string">&#x27;TypeScript - 类型安全的JavaScript&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Sass/Less - CSS预处理器&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Webpack - 模块打包工具&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ESLint - 代码质量检查&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 后端技术栈</span></span><br><span class="line">  <span class="attr">backend</span>: [</span><br><span class="line">    <span class="string">&#x27;Node.js - 服务端JavaScript&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Express/Koa - Web框架&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;MongoDB/MySQL - 数据库&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Redis - 缓存数据库&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 云服务</span></span><br><span class="line">  <span class="attr">cloud</span>: [</span><br><span class="line">    <span class="string">&#x27;微信云开发 - 一站式后端服务&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;腾讯云 - 云计算服务&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;阿里云 - 云计算服务&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;AWS - 亚马逊云服务&#x27;</span></span><br><span class="line">  ],</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 工程化工具</span></span><br><span class="line">  <span class="attr">engineering</span>: [</span><br><span class="line">    <span class="string">&#x27;Git - 版本控制&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CI/CD - 持续集成部署&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Docker - 容器化&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Nginx - Web服务器&#x27;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>微信小程序作为移动互联网时代的重要应用形态，为开发者提供了便捷的开发平台和丰富的功能接口。通过本文的详细介绍，我们从零开始学习了小程序开发的完整流程：</p>
<h2 id="核心要点回顾"><a href="#核心要点回顾" class="headerlink" title="核心要点回顾"></a>核心要点回顾</h2><ol>
<li><strong>基础知识</strong>：掌握WXML、WXSS、JavaScript和JSON四种文件类型的使用</li>
<li><strong>开发环境</strong>：熟练使用微信开发者工具进行项目创建、调试和发布</li>
<li><strong>核心功能</strong>：实现页面导航、数据存储、网络请求、组件开发等关键功能</li>
<li><strong>实战项目</strong>：通过待办事项小程序的完整开发，理解项目架构和开发流程</li>
<li><strong>性能优化</strong>：学习代码优化、图片处理、网络缓存等性能提升技巧</li>
<li><strong>发布上线</strong>：了解审核规范、版本管理、发布流程等运营知识</li>
</ol>
<h2 id="持续学习建议"><a href="#持续学习建议" class="headerlink" title="持续学习建议"></a>持续学习建议</h2><p>小程序开发是一个不断发展的技术领域，建议开发者：</p>
<ul>
<li><strong>保持学习</strong>：关注官方文档更新，学习新特性和最佳实践</li>
<li><strong>多做项目</strong>：通过实际项目积累经验，提升解决问题的能力</li>
<li><strong>参与社区</strong>：加入开发者社区，与同行交流经验和技术</li>
<li><strong>关注生态</strong>：了解相关技术栈，如云开发、跨平台框架等</li>
</ul>
<p>希望本文能够帮助你快速入门微信小程序开发，在移动应用开发的道路上取得成功！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>微信小程序作为腾讯推出的轻量级应用平台，自2017年正式发布以来，已经成为移动互联网生态中不可或缺的一部分。小程序具有”用完即走”的特点，无]]>
    </summary>
    
      <category term="微信小程序" scheme="https://uwakeme.top/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="前端开发" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="移动开发" scheme="https://uwakeme.top/tags/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="微信小程序" scheme="https://uwakeme.top/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【编程语言】C、C++、C#深度对比：三种语言的演进历程与应用场景]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%85%B6%E4%BB%96/%E3%80%90%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E3%80%91C%E3%80%81C++%E3%80%81C#%E6%B7%B1%E5%BA%A6%E5%AF%B9%E6%AF%94%EF%BC%9A%E4%B8%89%E7%A7%8D%E8%AF%AD%E8%A8%80%E7%9A%84%E6%BC%94%E8%BF%9B%E5%8E%86%E7%A8%8B%E4%B8%8E%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>https://uwakeme.top/2025/07/19/其他/【编程语言】C、C++、C#深度对比：三种语言的演进历程与应用场景/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.213Z</updated>
    <content type="html"><![CDATA[<h1 id="一、语言概述与历史背景"><a href="#一、语言概述与历史背景" class="headerlink" title="一、语言概述与历史背景"></a>一、语言概述与历史背景</h1><h2 id="（一）C语言：系统编程的基石"><a href="#（一）C语言：系统编程的基石" class="headerlink" title="（一）C语言：系统编程的基石"></a>（一）C语言：系统编程的基石</h2><ul>
<li><p><strong>诞生背景</strong></p>
<ul>
<li>1972年由Dennis Ritchie在贝尔实验室开发</li>
<li>为了重写UNIX操作系统而创造</li>
<li>从B语言演化而来，增加了数据类型</li>
<li>设计目标：简洁、高效、可移植</li>
</ul>
</li>
<li><p><strong>设计哲学</strong></p>
<ul>
<li>“相信程序员”：给予程序员最大的控制权</li>
<li>最小化语言特性：保持语言核心简洁</li>
<li>接近硬件：直接操作内存和硬件</li>
<li>高效执行：编译后代码性能优异</li>
</ul>
</li>
</ul>
<h2 id="（二）C-：面向对象的扩展"><a href="#（二）C-：面向对象的扩展" class="headerlink" title="（二）C++：面向对象的扩展"></a>（二）C++：面向对象的扩展</h2><ul>
<li><p><strong>诞生背景</strong></p>
<ul>
<li>1983年由Bjarne Stroustrup在贝尔实验室开发</li>
<li>最初名为”C with Classes”</li>
<li>在C语言基础上添加面向对象特性</li>
<li>目标：结合C的效率和Simula的面向对象特性</li>
</ul>
</li>
<li><p><strong>设计哲学</strong></p>
<ul>
<li>“零开销抽象”：高级特性不影响性能</li>
<li>“你不使用的功能不会影响你”</li>
<li>多范式编程：支持过程式、面向对象、泛型编程</li>
<li>向后兼容：几乎完全兼容C语言</li>
</ul>
</li>
</ul>
<h2 id="（三）C-：现代化的企业级语言"><a href="#（三）C-：现代化的企业级语言" class="headerlink" title="（三）C#：现代化的企业级语言"></a>（三）C#：现代化的企业级语言</h2><ul>
<li><p><strong>诞生背景</strong></p>
<ul>
<li>2000年由微软开发，Anders Hejlsberg主导</li>
<li>.NET框架的核心语言</li>
<li>受Java影响，但有自己的创新</li>
<li>目标：简化企业级应用开发</li>
</ul>
</li>
<li><p><strong>设计哲学</strong></p>
<ul>
<li>类型安全：编译时和运行时类型检查</li>
<li>内存管理：自动垃圾回收</li>
<li>组件导向：强调组件化开发</li>
<li>平台集成：与Windows和.NET生态深度集成</li>
</ul>
</li>
</ul>
<h1 id="二、语法特性对比"><a href="#二、语法特性对比" class="headerlink" title="二、语法特性对比"></a>二、语法特性对比</h1><h2 id="（一）基础语法差异"><a href="#（一）基础语法差异" class="headerlink" title="（一）基础语法差异"></a>（一）基础语法差异</h2><h3 id="C语言特点"><a href="#C语言特点" class="headerlink" title="C语言特点"></a>C语言特点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 结构化编程，面向过程</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构体定义</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数定义</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Point</span> <span class="title">p</span> =</span> &#123;<span class="number">10</span>, <span class="number">20</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Point: (%d, %d)\n&quot;</span>, p.x, p.y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C-语言特点"><a href="#C-语言特点" class="headerlink" title="C++语言特点"></a>C++语言特点</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 面向对象编程，多范式</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Point</span>(<span class="type">int</span> x, <span class="type">int</span> y) : <span class="built_in">x</span>(x), <span class="built_in">y</span>(y) &#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运算符重载</span></span><br><span class="line">    Point <span class="keyword">operator</span>+(<span class="type">const</span> Point&amp; other) <span class="type">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Point</span>(x + other.x, y + other.y);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Point: (&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; y &lt;&lt; <span class="string">&quot;)&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模板函数</span></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">add</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">Point <span class="title">p1</span><span class="params">(<span class="number">10</span>, <span class="number">20</span>)</span></span>;</span><br><span class="line">    <span class="function">Point <span class="title">p2</span><span class="params">(<span class="number">5</span>, <span class="number">15</span>)</span></span>;</span><br><span class="line">    Point p3 = p1 + p2;  <span class="comment">// 运算符重载</span></span><br><span class="line">    p<span class="number">3.</span><span class="built_in">print</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 泛型编程</span></span><br><span class="line">    <span class="keyword">auto</span> result = <span class="built_in">add</span>&lt;<span class="type">int</span>&gt;(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C-语言特点-1"><a href="#C-语言特点-1" class="headerlink" title="C#语言特点"></a>C#语言特点</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 纯面向对象，托管代码</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Point</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> X &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;  <span class="comment">// 属性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Y &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Point</span>(<span class="params"><span class="built_in">int</span> x, <span class="built_in">int</span> y</span>)</span> &#123;</span><br><span class="line">        X = x;</span><br><span class="line">        Y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 运算符重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Point <span class="keyword">operator</span> +(Point p1, Point p2) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Point(p1.X + p2.X, p1.Y + p2.Y);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;Point: (<span class="subst">&#123;X&#125;</span>, <span class="subst">&#123;Y&#125;</span>)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p1 = <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="keyword">var</span> p2 = <span class="keyword">new</span> Point(<span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">        <span class="keyword">var</span> p3 = p1 + p2;</span><br><span class="line">        </span><br><span class="line">        Console.WriteLine(p3.ToString());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// LINQ和Lambda表达式</span></span><br><span class="line">        <span class="keyword">var</span> numbers = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt; &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        <span class="keyword">var</span> evenNumbers = numbers.Where(n =&gt; n % <span class="number">2</span> == <span class="number">0</span>).ToList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（二）内存管理差异"><a href="#（二）内存管理差异" class="headerlink" title="（二）内存管理差异"></a>（二）内存管理差异</h2><h3 id="C语言：手动内存管理"><a href="#C语言：手动内存管理" class="headerlink" title="C语言：手动内存管理"></a>C语言：手动内存管理</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* <span class="title function_">createArray</span><span class="params">(<span class="type">int</span> size)</span> &#123;</span><br><span class="line">    <span class="comment">// 手动分配内存</span></span><br><span class="line">    <span class="type">int</span>* arr = (<span class="type">int</span>*)<span class="built_in">malloc</span>(size * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="keyword">if</span> (arr == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;  <span class="comment">// 分配失败</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">useArray</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span>* arr = createArray(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">if</span> (arr != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="comment">// 使用数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">            arr[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 手动释放内存</span></span><br><span class="line">        <span class="built_in">free</span>(arr);</span><br><span class="line">        arr = <span class="literal">NULL</span>;  <span class="comment">// 避免悬空指针</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C-语言：RAII和智能指针"><a href="#C-语言：RAII和智能指针" class="headerlink" title="C++语言：RAII和智能指针"></a>C++语言：RAII和智能指针</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Resource</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Resource</span>() &#123; <span class="comment">/* 获取资源 */</span> &#125;</span><br><span class="line">    ~<span class="built_in">Resource</span>() &#123; <span class="comment">/* 释放资源 */</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modernCppMemory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// RAII：资源获取即初始化</span></span><br><span class="line">    &#123;</span><br><span class="line">        Resource res;  <span class="comment">// 自动构造</span></span><br><span class="line">    &#125;  <span class="comment">// 自动析构</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 智能指针：自动内存管理</span></span><br><span class="line">    <span class="keyword">auto</span> ptr = std::<span class="built_in">make_unique</span>&lt;Resource&gt;();</span><br><span class="line">    <span class="keyword">auto</span> shared = std::<span class="built_in">make_shared</span>&lt;Resource&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 容器：自动管理内存</span></span><br><span class="line">    <span class="function">std::vector&lt;<span class="type">int</span>&gt; <span class="title">vec</span><span class="params">(<span class="number">100</span>)</span></span>;  <span class="comment">// 自动分配和释放</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="C-语言：垃圾回收"><a href="#C-语言：垃圾回收" class="headerlink" title="C#语言：垃圾回收"></a>C#语言：垃圾回收</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Resource</span> : <span class="title">IDisposable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> disposed = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Dispose</span>()</span> &#123;</span><br><span class="line">        Dispose(<span class="literal">true</span>);</span><br><span class="line">        GC.SuppressFinalize(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!disposed) &#123;</span><br><span class="line">            <span class="keyword">if</span> (disposing) &#123;</span><br><span class="line">                <span class="comment">// 释放托管资源</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 释放非托管资源</span></span><br><span class="line">            disposed = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ~Resource() &#123;</span><br><span class="line">        Dispose(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ManagedMemory</span>()</span> &#123;</span><br><span class="line">    <span class="comment">// 自动垃圾回收</span></span><br><span class="line">    <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line">    <span class="comment">// 不需要手动释放，GC会自动处理</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 使用using语句确保资源释放</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> resource = <span class="keyword">new</span> Resource()) &#123;</span><br><span class="line">        <span class="comment">// 使用资源</span></span><br><span class="line">    &#125;  <span class="comment">// 自动调用Dispose</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三、编程范式对比"><a href="#三、编程范式对比" class="headerlink" title="三、编程范式对比"></a>三、编程范式对比</h1><h2 id="（一）编程范式支持"><a href="#（一）编程范式支持" class="headerlink" title="（一）编程范式支持"></a>（一）编程范式支持</h2><table>
<thead>
<tr>
<th>特性</th>
<th>C语言</th>
<th>C++</th>
<th>C#</th>
</tr>
</thead>
<tbody><tr>
<td>过程式编程</td>
<td>✅ 主要范式</td>
<td>✅ 支持</td>
<td>✅ 支持</td>
</tr>
<tr>
<td>面向对象编程</td>
<td>❌ 不支持</td>
<td>✅ 主要范式</td>
<td>✅ 主要范式</td>
</tr>
<tr>
<td>泛型编程</td>
<td>❌ 不支持</td>
<td>✅ 模板系统</td>
<td>✅ 泛型系统</td>
</tr>
<tr>
<td>函数式编程</td>
<td>❌ 有限支持</td>
<td>✅ 部分支持</td>
<td>✅ 强力支持</td>
</tr>
<tr>
<td>元编程</td>
<td>❌ 宏系统</td>
<td>✅ 模板元编程</td>
<td>✅ 反射+特性</td>
</tr>
</tbody></table>
<h2 id="（二）面向对象特性对比"><a href="#（二）面向对象特性对比" class="headerlink" title="（二）面向对象特性对比"></a>（二）面向对象特性对比</h2><h3 id="继承机制"><a href="#继承机制" class="headerlink" title="继承机制"></a>继承机制</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++：多重继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">method1</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">method2</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base1, <span class="keyword">public</span> Base2 &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">method1</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123; <span class="comment">/* 实现 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">method2</span><span class="params">()</span> <span class="keyword">override</span> </span>&#123; <span class="comment">/* 实现 */</span> &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C#：单继承+接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IInterface1</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method1</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IInterface2</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method2</span>()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BaseClass</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">BaseMethod</span>()</span> &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Derived</span> : <span class="title">BaseClass</span>, <span class="title">IInterface1</span>, <span class="title">IInterface2</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method1</span>()</span> &#123; <span class="comment">/* 实现 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method2</span>()</span> &#123; <span class="comment">/* 实现 */</span> &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">BaseMethod</span>()</span> &#123; <span class="comment">/* 重写 */</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="（三）泛型编程对比"><a href="#（三）泛型编程对比" class="headerlink" title="（三）泛型编程对比"></a>（三）泛型编程对比</h2><h3 id="C-模板系统"><a href="#C-模板系统" class="headerlink" title="C++模板系统"></a>C++模板系统</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数模板</span></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">max</span><span class="params">(T a, T b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a &gt; b) ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类模板</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="type">int</span> Size&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Array</span> &#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    T data[Size];</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    T&amp; <span class="keyword">operator</span>[](<span class="type">int</span> index) &#123; <span class="keyword">return</span> data[index]; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">constexpr</span> <span class="type">int</span> <span class="title">size</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> Size; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模板特化</span></span><br><span class="line"><span class="keyword">template</span>&lt;&gt;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Array</span>&lt;<span class="type">bool</span>, <span class="number">8</span>&gt; &#123;</span><br><span class="line">    <span class="comment">// 针对bool类型的特化实现</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="C-泛型系统"><a href="#C-泛型系统" class="headerlink" title="C#泛型系统"></a>C#泛型系统</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 泛型方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> T <span class="title">Max</span>&lt;<span class="title">T</span>&gt;(<span class="params">T a, T b</span>) <span class="keyword">where</span> T : IComparable&lt;T&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a.CompareTo(b) &gt; <span class="number">0</span> ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">List</span>&lt;<span class="title">T</span>&gt; <span class="keyword">where</span> <span class="title">T</span> : <span class="keyword">class</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> T[] items;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> T <span class="keyword">this</span>[<span class="built_in">int</span> index] &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123; <span class="keyword">return</span> items[index]; &#125;</span><br><span class="line">        <span class="keyword">set</span> &#123; items[index] = <span class="keyword">value</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 泛型约束</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Repository</span>&lt;<span class="title">T</span>&gt; <span class="keyword">where</span> <span class="title">T</span> : <span class="keyword">class</span>, <span class="title">IEntity</span>, <span class="title">new</span>() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">Create</span>()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> T();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、性能与运行环境对比"><a href="#四、性能与运行环境对比" class="headerlink" title="四、性能与运行环境对比"></a>四、性能与运行环境对比</h1><h2 id="（一）编译与执行模型"><a href="#（一）编译与执行模型" class="headerlink" title="（一）编译与执行模型"></a>（一）编译与执行模型</h2><h3 id="C语言：直接编译"><a href="#C语言：直接编译" class="headerlink" title="C语言：直接编译"></a>C语言：直接编译</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">源代码(.c) → 预处理器 → 编译器 → 汇编器 → 链接器 → 可执行文件</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>优点</strong>：执行效率最高，直接机器码</li>
<li><strong>缺点</strong>：平台相关，需要重新编译</li>
</ul>
<h3 id="C-语言：直接编译（增强版）"><a href="#C-语言：直接编译（增强版）" class="headerlink" title="C++语言：直接编译（增强版）"></a>C++语言：直接编译（增强版）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">源代码(.cpp) → 预处理器 → 编译器(模板实例化) → 优化器 → 链接器 → 可执行文件</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>优点</strong>：零开销抽象，性能接近C</li>
<li><strong>缺点</strong>：编译时间长，模板错误信息复杂</li>
</ul>
<h3 id="C-语言：中间语言编译"><a href="#C-语言：中间语言编译" class="headerlink" title="C#语言：中间语言编译"></a>C#语言：中间语言编译</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">源代码(.cs) → C#编译器 → IL中间语言(.dll/.exe) → JIT编译器 → 机器码</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>优点</strong>：跨平台，运行时优化</li>
<li><strong>缺点</strong>：启动开销，内存占用较大</li>
</ul>
<h2 id="（二）性能对比"><a href="#（二）性能对比" class="headerlink" title="（二）性能对比"></a>（二）性能对比</h2><table>
<thead>
<tr>
<th>性能指标</th>
<th>C语言</th>
<th>C++</th>
<th>C#</th>
</tr>
</thead>
<tbody><tr>
<td>执行速度</td>
<td>🔥🔥🔥🔥🔥</td>
<td>🔥🔥🔥🔥🔥</td>
<td>🔥🔥🔥🔥</td>
</tr>
<tr>
<td>内存占用</td>
<td>🔥🔥🔥🔥🔥</td>
<td>🔥🔥🔥🔥</td>
<td>🔥🔥🔥</td>
</tr>
<tr>
<td>启动时间</td>
<td>🔥🔥🔥🔥🔥</td>
<td>🔥🔥🔥🔥🔥</td>
<td>🔥🔥🔥</td>
</tr>
<tr>
<td>开发效率</td>
<td>🔥🔥</td>
<td>🔥🔥🔥</td>
<td>🔥🔥🔥🔥🔥</td>
</tr>
<tr>
<td>调试便利性</td>
<td>🔥🔥</td>
<td>🔥🔥🔥</td>
<td>🔥🔥🔥🔥🔥</td>
</tr>
</tbody></table>
<h2 id="（三）内存管理对比"><a href="#（三）内存管理对比" class="headerlink" title="（三）内存管理对比"></a>（三）内存管理对比</h2><h3 id="内存安全性"><a href="#内存安全性" class="headerlink" title="内存安全性"></a>内存安全性</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C语言：容易出现内存错误</span></span><br><span class="line"><span class="type">char</span>* <span class="title function_">getString</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> buffer[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(buffer, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> buffer;  <span class="comment">// 返回栈上地址，危险！</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* arr = <span class="built_in">malloc</span>(<span class="number">10</span> * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">arr[<span class="number">15</span>] = <span class="number">42</span>;  <span class="comment">// 数组越界，未定义行为</span></span><br><span class="line"><span class="built_in">free</span>(arr);</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">10</span>;   <span class="comment">// 使用已释放内存，危险！</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C++：RAII提供更好的安全性</span></span><br><span class="line"><span class="function">std::string <span class="title">getString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::string str = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> str;  <span class="comment">// 安全的值返回</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">std::vector&lt;<span class="type">int</span>&gt; <span class="title">arr</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">// arr[15] = 42;  // 使用at()可以检查边界</span></span><br><span class="line">arr.<span class="built_in">at</span>(<span class="number">15</span>) = <span class="number">42</span>;  <span class="comment">// 抛出异常而不是未定义行为</span></span><br></pre></td></tr></table></figure>

<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// C#：最高的内存安全性</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetString</span>()</span> &#123;</span><br><span class="line">    <span class="built_in">string</span> str = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> str;  <span class="comment">// 完全安全</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span>[] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">// arr[15] = 42;  // 运行时抛出IndexOutOfRangeException</span></span><br></pre></td></tr></table></figure>

<h1 id="五、应用场景与生态系统"><a href="#五、应用场景与生态系统" class="headerlink" title="五、应用场景与生态系统"></a>五、应用场景与生态系统</h1><h2 id="（一）主要应用领域"><a href="#（一）主要应用领域" class="headerlink" title="（一）主要应用领域"></a>（一）主要应用领域</h2><h3 id="C语言应用场景"><a href="#C语言应用场景" class="headerlink" title="C语言应用场景"></a>C语言应用场景</h3><ul>
<li><p><strong>系统编程</strong></p>
<ul>
<li>操作系统内核（Linux、Windows内核）</li>
<li>设备驱动程序</li>
<li>嵌入式系统（单片机、IoT设备）</li>
<li>实时系统（航空航天、工业控制）</li>
</ul>
</li>
<li><p><strong>基础软件</strong></p>
<ul>
<li>编译器和解释器</li>
<li>数据库系统（SQLite、PostgreSQL）</li>
<li>网络协议栈</li>
<li>加密库和安全工具</li>
</ul>
</li>
</ul>
<h3 id="C-应用场景"><a href="#C-应用场景" class="headerlink" title="C++应用场景"></a>C++应用场景</h3><ul>
<li><p><strong>高性能应用</strong></p>
<ul>
<li>游戏引擎（Unreal Engine、Unity底层）</li>
<li>图形渲染（OpenGL、DirectX应用）</li>
<li>科学计算（数值分析、仿真）</li>
<li>高频交易系统</li>
</ul>
</li>
<li><p><strong>系统软件</strong></p>
<ul>
<li>浏览器引擎（Chrome V8、Firefox）</li>
<li>数据库系统（MySQL、MongoDB）</li>
<li>操作系统组件</li>
<li>虚拟机和容器</li>
</ul>
</li>
</ul>
<h3 id="C-应用场景-1"><a href="#C-应用场景-1" class="headerlink" title="C#应用场景"></a>C#应用场景</h3><ul>
<li><p><strong>企业级应用</strong></p>
<ul>
<li>Web应用（ASP.NET Core）</li>
<li>桌面应用（WPF、WinUI）</li>
<li>企业服务（微服务、API）</li>
<li>业务系统（ERP、CRM）</li>
</ul>
</li>
<li><p><strong>现代应用</strong></p>
<ul>
<li>云原生应用（Azure、AWS）</li>
<li>移动应用（Xamarin、.NET MAUI）</li>
<li>游戏开发（Unity引擎）</li>
<li>机器学习（ML.NET）</li>
</ul>
</li>
</ul>
<h2 id="（二）生态系统对比"><a href="#（二）生态系统对比" class="headerlink" title="（二）生态系统对比"></a>（二）生态系统对比</h2><h3 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h3><table>
<thead>
<tr>
<th>工具类型</th>
<th>C语言</th>
<th>C++</th>
<th>C#</th>
</tr>
</thead>
<tbody><tr>
<td>IDE</td>
<td>GCC, Clang, MSVC</td>
<td>Visual Studio, CLion</td>
<td>Visual Studio, Rider</td>
</tr>
<tr>
<td>包管理</td>
<td>无标准</td>
<td>vcpkg, Conan</td>
<td>NuGet</td>
</tr>
<tr>
<td>构建工具</td>
<td>Make, CMake</td>
<td>CMake, Bazel</td>
<td>MSBuild, dotnet CLI</td>
</tr>
<tr>
<td>测试框架</td>
<td>CUnit, Unity</td>
<td>Google Test, Catch2</td>
<td>NUnit, xUnit</td>
</tr>
<tr>
<td>静态分析</td>
<td>Clang Static Analyzer</td>
<td>PVS-Studio, Clang-Tidy</td>
<td>SonarQube, Roslyn</td>
</tr>
</tbody></table>
<h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">C语言：</span><br><span class="line">- 《C程序设计语言》(K&amp;R)</span><br><span class="line">- 《C和指针》</span><br><span class="line">- 《C陷阱与缺陷》</span><br><span class="line"></span><br><span class="line">C++：</span><br><span class="line">- 《C++ Primer》</span><br><span class="line">- 《Effective C++》</span><br><span class="line">- 《现代C++设计》</span><br><span class="line"></span><br><span class="line">C#：</span><br><span class="line">- 《C#本质论》</span><br><span class="line">- 《CLR via C#》</span><br><span class="line">- 《C# in Depth》</span><br></pre></td></tr></table></figure>

<h1 id="六、选择建议与学习路径"><a href="#六、选择建议与学习路径" class="headerlink" title="六、选择建议与学习路径"></a>六、选择建议与学习路径</h1><h2 id="（一）语言选择建议"><a href="#（一）语言选择建议" class="headerlink" title="（一）语言选择建议"></a>（一）语言选择建议</h2><h3 id="选择C语言的情况"><a href="#选择C语言的情况" class="headerlink" title="选择C语言的情况"></a>选择C语言的情况</h3><ul>
<li><strong>系统级编程</strong>：操作系统、驱动开发</li>
<li><strong>嵌入式开发</strong>：资源受限环境</li>
<li><strong>性能要求极高</strong>：实时系统、高频交易</li>
<li><strong>学习计算机原理</strong>：理解底层机制</li>
<li><strong>维护遗留系统</strong>：大量C代码库</li>
</ul>
<h3 id="选择C-的情况"><a href="#选择C-的情况" class="headerlink" title="选择C++的情况"></a>选择C++的情况</h3><ul>
<li><strong>高性能应用</strong>：游戏、图形、科学计算</li>
<li><strong>系统软件</strong>：浏览器、数据库、编译器</li>
<li><strong>需要面向对象</strong>：复杂系统设计</li>
<li><strong>性能和抽象并重</strong>：既要效率又要可维护性</li>
<li><strong>大型项目</strong>：需要模块化和泛型编程</li>
</ul>
<h3 id="选择C-的情况-1"><a href="#选择C-的情况-1" class="headerlink" title="选择C#的情况"></a>选择C#的情况</h3><ul>
<li><strong>企业级应用</strong>：Web服务、业务系统</li>
<li><strong>快速开发</strong>：原型开发、MVP产品</li>
<li><strong>Windows生态</strong>：桌面应用、企业集成</li>
<li><strong>团队协作</strong>：大型团队、敏捷开发</li>
<li><strong>云原生应用</strong>：微服务、容器化部署</li>
</ul>
<h2 id="（二）学习路径建议"><a href="#（二）学习路径建议" class="headerlink" title="（二）学习路径建议"></a>（二）学习路径建议</h2><h3 id="初学者路径"><a href="#初学者路径" class="headerlink" title="初学者路径"></a>初学者路径</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. C语言基础 → 理解编程基本概念</span><br><span class="line">2. C++面向对象 → 学习OOP思想</span><br><span class="line">3. C#现代特性 → 掌握现代编程技术</span><br></pre></td></tr></table></figure>

<h3 id="系统程序员路径"><a href="#系统程序员路径" class="headerlink" title="系统程序员路径"></a>系统程序员路径</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. C语言精通 → 系统编程基础</span><br><span class="line">2. C++高级特性 → 性能优化技术</span><br><span class="line">3. 汇编语言 → 底层优化</span><br></pre></td></tr></table></figure>

<h3 id="应用开发者路径"><a href="#应用开发者路径" class="headerlink" title="应用开发者路径"></a>应用开发者路径</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. C#基础 → 快速上手</span><br><span class="line">2. .NET生态 → 企业级开发</span><br><span class="line">3. 云原生技术 → 现代部署</span><br></pre></td></tr></table></figure>

<h2 id="（三）未来发展趋势"><a href="#（三）未来发展趋势" class="headerlink" title="（三）未来发展趋势"></a>（三）未来发展趋势</h2><h3 id="C语言：稳定发展"><a href="#C语言：稳定发展" class="headerlink" title="C语言：稳定发展"></a>C语言：稳定发展</h3><ul>
<li><strong>C23标准</strong>：新增特性，保持简洁</li>
<li><strong>安全增强</strong>：内存安全工具</li>
<li><strong>嵌入式增长</strong>：IoT、边缘计算</li>
<li><strong>教育价值</strong>：计算机科学基础</li>
</ul>
<h3 id="C-：现代化进程"><a href="#C-：现代化进程" class="headerlink" title="C++：现代化进程"></a>C++：现代化进程</h3><ul>
<li><strong>C++23&#x2F;26</strong>：模块、协程、概念</li>
<li><strong>工具改进</strong>：包管理、构建系统</li>
<li><strong>性能优化</strong>：编译器技术进步</li>
<li><strong>应用扩展</strong>：机器学习、区块链</li>
</ul>
<h3 id="C-：跨平台发展"><a href="#C-：跨平台发展" class="headerlink" title="C#：跨平台发展"></a>C#：跨平台发展</h3><ul>
<li><strong>.NET统一</strong>：跨平台、云原生</li>
<li><strong>性能提升</strong>：AOT编译、优化</li>
<li><strong>语言创新</strong>：模式匹配、记录类型</li>
<li><strong>生态扩展</strong>：移动、游戏、AI</li>
</ul>
<hr>
<p><strong>总结</strong>：C、C++、C#虽然名称相似，但实际上是三种截然不同的编程语言，各自有着独特的设计哲学、应用场景和发展轨迹。C语言以其简洁高效成为系统编程的基石；C++在保持高性能的同时引入了面向对象和泛型编程，成为复杂系统开发的利器；C#则专注于提高开发效率和代码安全性，成为企业级应用开发的首选。</p>
<p>选择哪种语言取决于具体的应用场景、性能要求、开发效率需求和团队技术栈。对于追求极致性能和底层控制的场景，C语言是不二选择；对于需要平衡性能和开发效率的复杂系统，C++更为合适；对于快速开发企业级应用和现代Web服务，C#则提供了最佳的开发体验。</p>
<p>无论选择哪种语言，理解它们之间的差异和各自的优势，都有助于在不同项目中做出正确的技术决策，并为职业发展规划提供清晰的方向。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、语言概述与历史背景"><a href="#一、语言概述与历史背景" class="headerlink" title="一、语言概述与历史背景"></a>一、语言概述与历史背景</h1><h2 id="（一）C语言：系统编程的基石"><a href="#（一）]]>
    </summary>
    
      <category term="C语言" scheme="https://uwakeme.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="C++" scheme="https://uwakeme.top/tags/C/"/>
    
      <category term="C#" scheme="https://uwakeme.top/tags/C/"/>
    
      <category term="编程语言对比" scheme="https://uwakeme.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%AF%B9%E6%AF%94/"/>
    
      <category term="语言特性" scheme="https://uwakeme.top/tags/%E8%AF%AD%E8%A8%80%E7%89%B9%E6%80%A7/"/>
    
      <category term="应用场景" scheme="https://uwakeme.top/tags/%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    
      <category term="编程语言" scheme="https://uwakeme.top/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】AI开发工程师成长指南：从机器学习基础到大模型应用]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91AI%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%88%90%E9%95%BF%E6%8C%87%E5%8D%97%EF%BC%9A%E4%BB%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E5%88%B0%E5%A4%A7%E6%A8%A1%E5%9E%8B%E5%BA%94%E7%94%A8/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】AI开发工程师成长指南：从机器学习基础到大模型应用/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-28T10:28:05.800Z</updated>
    <content type="html"><![CDATA[<h1 id="一、AI开发基础准备（2-3个月）"><a href="#一、AI开发基础准备（2-3个月）" class="headerlink" title="一、AI开发基础准备（2-3个月）"></a>一、AI开发基础准备（2-3个月）</h1><h2 id="（一）数学基础强化"><a href="#（一）数学基础强化" class="headerlink" title="（一）数学基础强化"></a>（一）数学基础强化</h2><ul>
<li><p><strong>线性代数</strong></p>
<ul>
<li>向量与矩阵：向量运算、矩阵乘法、特征值分解</li>
<li>线性变换：旋转、缩放、投影变换</li>
<li>主成分分析：PCA降维、协方差矩阵</li>
<li>奇异值分解：SVD、矩阵分解应用</li>
<li>实际应用：神经网络权重、图像处理、推荐系统</li>
</ul>
</li>
<li><p><strong>概率统计</strong></p>
<ul>
<li>概率论基础：条件概率、贝叶斯定理、概率分布</li>
<li>统计推断：假设检验、置信区间、参数估计</li>
<li>随机变量：期望、方差、协方差、相关性</li>
<li>常见分布：正态分布、伯努利分布、泊松分布</li>
<li>贝叶斯统计：先验概率、后验概率、贝叶斯网络</li>
</ul>
</li>
<li><p><strong>微积分与优化</strong></p>
<ul>
<li>导数与梯度：偏导数、梯度向量、方向导数</li>
<li>多元函数优化：梯度下降、牛顿法、拟牛顿法</li>
<li>约束优化：拉格朗日乘数法、KKT条件</li>
<li>凸优化：凸函数、凸集、全局最优解</li>
<li>数值优化：Adam、RMSprop、AdaGrad优化器</li>
</ul>
</li>
</ul>
<h2 id="（二）编程基础与工具"><a href="#（二）编程基础与工具" class="headerlink" title="（二）编程基础与工具"></a>（二）编程基础与工具</h2><ul>
<li><p><strong>Python编程精通</strong></p>
<ul>
<li>核心语法：数据结构、函数、类、模块</li>
<li>科学计算：NumPy数组操作、广播机制</li>
<li>数据处理：Pandas数据分析、数据清洗</li>
<li>可视化：Matplotlib、Seaborn、Plotly绘图</li>
<li>异步编程：async&#x2F;await、并发处理</li>
</ul>
</li>
<li><p><strong>开发环境配置</strong></p>
<ul>
<li>Jupyter Notebook：交互式开发环境</li>
<li>Anaconda：科学计算环境管理</li>
<li>GPU环境：CUDA、cuDNN配置</li>
<li>云平台：Google Colab、Kaggle Kernels</li>
<li>版本控制：Git、DVC数据版本控制</li>
</ul>
</li>
<li><p><strong>数据库与大数据</strong></p>
<ul>
<li>SQL基础：查询、聚合、连接操作</li>
<li>NoSQL数据库：MongoDB、Redis</li>
<li>大数据工具：Spark、Hadoop基础</li>
<li>数据仓库：数据建模、ETL流程</li>
<li>流式数据：Kafka、实时数据处理</li>
</ul>
</li>
</ul>
<h2 id="（三）统计学习理论"><a href="#（三）统计学习理论" class="headerlink" title="（三）统计学习理论"></a>（三）统计学习理论</h2><ul>
<li><p><strong>学习理论基础</strong></p>
<ul>
<li>监督学习：分类、回归问题定义</li>
<li>无监督学习：聚类、降维、密度估计</li>
<li>强化学习：马尔可夫决策过程、奖励函数</li>
<li>半监督学习：标签传播、自训练</li>
<li>迁移学习：域适应、知识蒸馏</li>
</ul>
</li>
<li><p><strong>模型评估与选择</strong></p>
<ul>
<li>交叉验证：k折交叉验证、留一法</li>
<li>评估指标：准确率、精确率、召回率、F1分数</li>
<li>ROC曲线：AUC、TPR、FPR分析</li>
<li>偏差方差权衡：欠拟合、过拟合</li>
<li>模型选择：信息准则、正则化</li>
</ul>
</li>
</ul>
<h1 id="二、机器学习算法掌握（3-4个月）"><a href="#二、机器学习算法掌握（3-4个月）" class="headerlink" title="二、机器学习算法掌握（3-4个月）"></a>二、机器学习算法掌握（3-4个月）</h1><h2 id="（一）经典机器学习算法"><a href="#（一）经典机器学习算法" class="headerlink" title="（一）经典机器学习算法"></a>（一）经典机器学习算法</h2><ul>
<li><p><strong>线性模型</strong></p>
<ul>
<li>线性回归：最小二乘法、岭回归、Lasso回归</li>
<li>逻辑回归：sigmoid函数、最大似然估计</li>
<li>支持向量机：核技巧、软间隔、SMO算法</li>
<li>感知机：线性分类器、感知机学习算法</li>
<li>线性判别分析：LDA、QDA、降维应用</li>
</ul>
</li>
<li><p><strong>树模型与集成学习</strong></p>
<ul>
<li>决策树：ID3、C4.5、CART算法</li>
<li>随机森林：Bagging、特征随机选择</li>
<li>梯度提升：GBDT、XGBoost、LightGBM、CatBoost</li>
<li>AdaBoost：自适应提升、弱学习器组合</li>
<li>集成策略：投票、平均、Stacking</li>
</ul>
</li>
<li><p><strong>聚类与降维</strong></p>
<ul>
<li>K-means聚类：质心更新、肘部法则</li>
<li>层次聚类：凝聚聚类、分裂聚类</li>
<li>DBSCAN：密度聚类、噪声检测</li>
<li>主成分分析：PCA、核PCA</li>
<li>t-SNE：非线性降维、可视化</li>
</ul>
</li>
</ul>
<h2 id="（二）算法实现与优化"><a href="#（二）算法实现与优化" class="headerlink" title="（二）算法实现与优化"></a>（二）算法实现与优化</h2><ul>
<li><p><strong>从零实现算法</strong></p>
<ul>
<li>手写线性回归：梯度下降实现</li>
<li>手写神经网络：前向传播、反向传播</li>
<li>手写决策树：信息增益、剪枝策略</li>
<li>手写K-means：质心初始化、收敛判断</li>
<li>性能优化：向量化、并行计算</li>
</ul>
</li>
<li><p><strong>Scikit-learn精通</strong></p>
<ul>
<li>数据预处理：标准化、编码、特征选择</li>
<li>模型训练：fit、predict、score方法</li>
<li>管道构建：Pipeline、ColumnTransformer</li>
<li>超参数调优：GridSearchCV、RandomizedSearchCV</li>
<li>模型持久化：joblib、pickle序列化</li>
</ul>
</li>
</ul>
<h2 id="（三）特征工程"><a href="#（三）特征工程" class="headerlink" title="（三）特征工程"></a>（三）特征工程</h2><ul>
<li><p><strong>特征提取与构造</strong></p>
<ul>
<li>数值特征：标准化、归一化、分箱</li>
<li>类别特征：独热编码、标签编码、目标编码</li>
<li>文本特征：TF-IDF、词袋模型、N-gram</li>
<li>时间特征：时间戳、周期性特征</li>
<li>交互特征：特征组合、多项式特征</li>
</ul>
</li>
<li><p><strong>特征选择与降维</strong></p>
<ul>
<li>过滤法：相关系数、卡方检验、互信息</li>
<li>包装法：前向选择、后向消除、递归特征消除</li>
<li>嵌入法：L1正则化、树模型特征重要性</li>
<li>降维技术：PCA、LDA、ICA、因子分析</li>
<li>特征重要性：排序、可视化、解释性</li>
</ul>
</li>
</ul>
<h1 id="三、深度学习框架与应用（4-5个月）"><a href="#三、深度学习框架与应用（4-5个月）" class="headerlink" title="三、深度学习框架与应用（4-5个月）"></a>三、深度学习框架与应用（4-5个月）</h1><h2 id="（一）深度学习基础"><a href="#（一）深度学习基础" class="headerlink" title="（一）深度学习基础"></a>（一）深度学习基础</h2><ul>
<li><p><strong>神经网络原理</strong></p>
<ul>
<li>感知机：线性分类器、激活函数</li>
<li>多层感知机：隐藏层、非线性映射</li>
<li>反向传播：链式法则、梯度计算</li>
<li>激活函数：ReLU、Sigmoid、Tanh、Swish</li>
<li>损失函数：交叉熵、均方误差、Hinge损失</li>
</ul>
</li>
<li><p><strong>深度学习框架</strong></p>
<ul>
<li>TensorFlow&#x2F;Keras：高级API、模型构建</li>
<li>PyTorch：动态图、自动微分</li>
<li>JAX：函数式编程、JIT编译</li>
<li>框架对比：易用性、性能、生态系统</li>
<li>模型部署：TensorFlow Serving、TorchScript</li>
</ul>
</li>
</ul>
<h2 id="（二）卷积神经网络（CNN）"><a href="#（二）卷积神经网络（CNN）" class="headerlink" title="（二）卷积神经网络（CNN）"></a>（二）卷积神经网络（CNN）</h2><ul>
<li><p><strong>CNN架构设计</strong></p>
<ul>
<li>卷积层：卷积核、步长、填充</li>
<li>池化层：最大池化、平均池化、全局池化</li>
<li>全连接层：特征映射、分类输出</li>
<li>批归一化：BN、Layer Norm、Group Norm</li>
<li>残差连接：ResNet、DenseNet、EfficientNet</li>
</ul>
</li>
<li><p><strong>计算机视觉应用</strong></p>
<ul>
<li>图像分类：ImageNet、CIFAR数据集</li>
<li>目标检测：YOLO、R-CNN、SSD</li>
<li>语义分割：U-Net、DeepLab、Mask R-CNN</li>
<li>人脸识别：FaceNet、ArcFace、人脸验证</li>
<li>图像生成：GAN、VAE、扩散模型</li>
</ul>
</li>
</ul>
<h2 id="（三）循环神经网络（RNN）"><a href="#（三）循环神经网络（RNN）" class="headerlink" title="（三）循环神经网络（RNN）"></a>（三）循环神经网络（RNN）</h2><ul>
<li><p><strong>RNN架构演进</strong></p>
<ul>
<li>基础RNN：隐藏状态、时间展开</li>
<li>LSTM：长短期记忆、门控机制</li>
<li>GRU：门控循环单元、简化结构</li>
<li>双向RNN：前向后向信息融合</li>
<li>注意力机制：Attention、Self-Attention</li>
</ul>
</li>
<li><p><strong>自然语言处理应用</strong></p>
<ul>
<li>文本分类：情感分析、主题分类</li>
<li>序列标注：命名实体识别、词性标注</li>
<li>机器翻译：Seq2Seq、Transformer</li>
<li>文本生成：语言模型、文本摘要</li>
<li>问答系统：阅读理解、知识问答</li>
</ul>
</li>
</ul>
<h2 id="（四）Transformer架构"><a href="#（四）Transformer架构" class="headerlink" title="（四）Transformer架构"></a>（四）Transformer架构</h2><ul>
<li><p><strong>Transformer原理</strong></p>
<ul>
<li>自注意力机制：Query、Key、Value</li>
<li>多头注意力：并行注意力、信息融合</li>
<li>位置编码：绝对位置、相对位置</li>
<li>前馈网络：点式前馈、残差连接</li>
<li>层归一化：Pre-Norm、Post-Norm</li>
</ul>
</li>
<li><p><strong>预训练模型</strong></p>
<ul>
<li>BERT：双向编码器、掩码语言模型</li>
<li>GPT：生成式预训练、自回归模型</li>
<li>T5：文本到文本、统一框架</li>
<li>RoBERTa：优化训练策略</li>
<li>模型微调：Fine-tuning、LoRA、Adapter</li>
</ul>
</li>
</ul>
<h1 id="四、大模型开发与应用（4-6个月）"><a href="#四、大模型开发与应用（4-6个月）" class="headerlink" title="四、大模型开发与应用（4-6个月）"></a>四、大模型开发与应用（4-6个月）</h1><h2 id="（一）大语言模型（LLM）"><a href="#（一）大语言模型（LLM）" class="headerlink" title="（一）大语言模型（LLM）"></a>（一）大语言模型（LLM）</h2><ul>
<li><p><strong>模型架构理解</strong></p>
<ul>
<li>GPT系列：GPT-1&#x2F;2&#x2F;3&#x2F;4架构演进</li>
<li>LLaMA：Meta开源大模型</li>
<li>ChatGLM：清华智谱大模型</li>
<li>模型规模：参数量、计算复杂度</li>
<li>涌现能力：规模效应、能力突现</li>
</ul>
</li>
<li><p><strong>预训练技术</strong></p>
<ul>
<li>数据准备：语料收集、清洗、去重</li>
<li>分词技术：BPE、SentencePiece、WordPiece</li>
<li>训练策略：学习率调度、梯度裁剪</li>
<li>分布式训练：数据并行、模型并行</li>
<li>混合精度：FP16、BF16训练优化</li>
</ul>
</li>
</ul>
<h2 id="（二）模型微调与对齐"><a href="#（二）模型微调与对齐" class="headerlink" title="（二）模型微调与对齐"></a>（二）模型微调与对齐</h2><ul>
<li><p><strong>微调技术</strong></p>
<ul>
<li>全参数微调：端到端训练</li>
<li>参数高效微调：LoRA、Adapter、Prefix-tuning</li>
<li>指令微调：Instruction Tuning、任务格式化</li>
<li>上下文学习：In-Context Learning、Few-shot</li>
<li>思维链：Chain-of-Thought、推理能力</li>
</ul>
</li>
<li><p><strong>人类反馈强化学习</strong></p>
<ul>
<li>RLHF：人类反馈强化学习</li>
<li>奖励模型：偏好建模、奖励函数</li>
<li>PPO算法：策略优化、价值函数</li>
<li>对齐技术：Constitutional AI、RLAIF</li>
<li>安全性：有害内容过滤、偏见缓解</li>
</ul>
</li>
</ul>
<h2 id="（三）多模态大模型"><a href="#（三）多模态大模型" class="headerlink" title="（三）多模态大模型"></a>（三）多模态大模型</h2><ul>
<li><p><strong>视觉语言模型</strong></p>
<ul>
<li>CLIP：对比学习、图文匹配</li>
<li>DALL-E：文本生成图像</li>
<li>GPT-4V：视觉理解能力</li>
<li>LLaVA：大语言视觉助手</li>
<li>多模态融合：特征对齐、跨模态注意力</li>
</ul>
</li>
<li><p><strong>多模态应用</strong></p>
<ul>
<li>图像描述：Image Captioning</li>
<li>视觉问答：VQA、图像理解</li>
<li>文档理解：OCR、版面分析</li>
<li>视频理解：动作识别、视频摘要</li>
<li>具身智能：机器人、环境交互</li>
</ul>
</li>
</ul>
<h2 id="（四）模型部署与优化"><a href="#（四）模型部署与优化" class="headerlink" title="（四）模型部署与优化"></a>（四）模型部署与优化</h2><ul>
<li><p><strong>模型压缩</strong></p>
<ul>
<li>量化技术：INT8、INT4量化</li>
<li>剪枝技术：结构化剪枝、非结构化剪枝</li>
<li>知识蒸馏：教师学生模型、特征蒸馏</li>
<li>模型并行：张量并行、流水线并行</li>
<li>动态推理：早期退出、自适应计算</li>
</ul>
</li>
<li><p><strong>推理优化</strong></p>
<ul>
<li>推理引擎：TensorRT、ONNX Runtime</li>
<li>内存优化：KV Cache、PagedAttention</li>
<li>批处理：动态批处理、连续批处理</li>
<li>硬件加速：GPU、TPU、专用芯片</li>
<li>边缘部署：移动端、嵌入式设备</li>
</ul>
</li>
</ul>
<h1 id="五、AI工程化与MLOps（3-4个月）"><a href="#五、AI工程化与MLOps（3-4个月）" class="headerlink" title="五、AI工程化与MLOps（3-4个月）"></a>五、AI工程化与MLOps（3-4个月）</h1><h2 id="（一）机器学习工程"><a href="#（一）机器学习工程" class="headerlink" title="（一）机器学习工程"></a>（一）机器学习工程</h2><ul>
<li><p><strong>实验管理</strong></p>
<ul>
<li>实验跟踪：MLflow、Weights &amp; Biases、TensorBoard</li>
<li>超参数优化：Optuna、Hyperopt、Ray Tune</li>
<li>模型版本控制：DVC、Git LFS</li>
<li>配置管理：Hydra、OmegaConf</li>
<li>可重现性：随机种子、环境固定</li>
</ul>
</li>
<li><p><strong>数据管道</strong></p>
<ul>
<li>数据版本控制：DVC、Pachyderm</li>
<li>数据验证：Great Expectations、Evidently</li>
<li>特征存储：Feast、Tecton</li>
<li>数据血缘：Apache Atlas、DataHub</li>
<li>实时数据：Kafka、Pulsar、流处理</li>
</ul>
</li>
</ul>
<h2 id="（二）模型部署与服务"><a href="#（二）模型部署与服务" class="headerlink" title="（二）模型部署与服务"></a>（二）模型部署与服务</h2><ul>
<li><p><strong>模型服务化</strong></p>
<ul>
<li>REST API：Flask、FastAPI、Django</li>
<li>gRPC服务：高性能RPC、Protocol Buffers</li>
<li>模型服务器：TensorFlow Serving、TorchServe</li>
<li>容器化：Docker、Kubernetes部署</li>
<li>无服务器：AWS Lambda、Azure Functions</li>
</ul>
</li>
<li><p><strong>生产环境部署</strong></p>
<ul>
<li>负载均衡：模型副本、流量分发</li>
<li>自动扩缩容：HPA、VPA、集群自动扩展</li>
<li>A&#x2F;B测试：模型对比、渐进式发布</li>
<li>蓝绿部署：零停机更新</li>
<li>金丝雀发布：风险控制、逐步推广</li>
</ul>
</li>
</ul>
<h2 id="（三）监控与运维"><a href="#（三）监控与运维" class="headerlink" title="（三）监控与运维"></a>（三）监控与运维</h2><ul>
<li><p><strong>模型监控</strong></p>
<ul>
<li>性能监控：延迟、吞吐量、错误率</li>
<li>数据漂移：分布变化、特征漂移</li>
<li>模型漂移：性能下降、概念漂移</li>
<li>业务指标：转化率、用户满意度</li>
<li>告警系统：异常检测、自动通知</li>
</ul>
</li>
<li><p><strong>模型治理</strong></p>
<ul>
<li>模型注册：模型仓库、元数据管理</li>
<li>审计日志：操作记录、合规性</li>
<li>访问控制：权限管理、安全策略</li>
<li>模型解释：SHAP、LIME、可解释AI</li>
<li>公平性：偏见检测、公平性指标</li>
</ul>
</li>
</ul>
<h1 id="六、AI应用领域专精（选择1-2个方向深入）"><a href="#六、AI应用领域专精（选择1-2个方向深入）" class="headerlink" title="六、AI应用领域专精（选择1-2个方向深入）"></a>六、AI应用领域专精（选择1-2个方向深入）</h1><h2 id="（一）计算机视觉"><a href="#（一）计算机视觉" class="headerlink" title="（一）计算机视觉"></a>（一）计算机视觉</h2><ul>
<li><p><strong>图像处理与分析</strong></p>
<ul>
<li>图像增强：去噪、超分辨率、HDR</li>
<li>目标检测：实时检测、小目标检测</li>
<li>图像分割：实例分割、全景分割</li>
<li>人体姿态估计：关键点检测、动作识别</li>
<li>医学影像：病灶检测、影像分析</li>
</ul>
</li>
<li><p><strong>生成式AI</strong></p>
<ul>
<li>图像生成：GAN、VAE、扩散模型</li>
<li>风格迁移：神经风格迁移、AdaIN</li>
<li>图像编辑：修复、替换、风格化</li>
<li>3D生成：NeRF、3D GAN、点云生成</li>
<li>视频生成：视频合成、动画生成</li>
</ul>
</li>
</ul>
<h2 id="（二）自然语言处理"><a href="#（二）自然语言处理" class="headerlink" title="（二）自然语言处理"></a>（二）自然语言处理</h2><ul>
<li><p><strong>文本理解与生成</strong></p>
<ul>
<li>文本分类：情感分析、意图识别</li>
<li>信息抽取：实体识别、关系抽取</li>
<li>文本摘要：抽取式、生成式摘要</li>
<li>机器翻译：神经机器翻译、多语言</li>
<li>对话系统：任务型、开放域对话</li>
</ul>
</li>
<li><p><strong>知识图谱与推理</strong></p>
<ul>
<li>知识抽取：实体链接、关系抽取</li>
<li>知识表示：图嵌入、知识图谱嵌入</li>
<li>知识推理：逻辑推理、常识推理</li>
<li>问答系统：知识问答、阅读理解</li>
<li>搜索增强：RAG、检索增强生成</li>
</ul>
</li>
</ul>
<h2 id="（三）推荐系统"><a href="#（三）推荐系统" class="headerlink" title="（三）推荐系统"></a>（三）推荐系统</h2><ul>
<li><p><strong>推荐算法</strong></p>
<ul>
<li>协同过滤：用户协同、物品协同</li>
<li>内容推荐：基于内容的推荐</li>
<li>深度推荐：深度学习推荐模型</li>
<li>多任务学习：CTR、CVR联合优化</li>
<li>序列推荐：会话推荐、时序建模</li>
</ul>
</li>
<li><p><strong>推荐系统工程</strong></p>
<ul>
<li>特征工程：用户画像、物品特征</li>
<li>实时推荐：在线学习、流式计算</li>
<li>冷启动：新用户、新物品推荐</li>
<li>多样性：推荐多样性、探索利用</li>
<li>评估指标：准确性、多样性、新颖性</li>
</ul>
</li>
</ul>
<h2 id="（四）强化学习"><a href="#（四）强化学习" class="headerlink" title="（四）强化学习"></a>（四）强化学习</h2><ul>
<li><p><strong>强化学习算法</strong></p>
<ul>
<li>价值函数：Q-learning、SARSA、TD学习</li>
<li>策略梯度：REINFORCE、Actor-Critic</li>
<li>深度强化学习：DQN、A3C、PPO、SAC</li>
<li>多智能体：MARL、合作竞争</li>
<li>模型学习：MCTS、AlphaZero</li>
</ul>
</li>
<li><p><strong>强化学习应用</strong></p>
<ul>
<li>游戏AI：棋类游戏、电子游戏</li>
<li>机器人控制：运动控制、路径规划</li>
<li>自动驾驶：决策规划、行为预测</li>
<li>金融交易：算法交易、风险管理</li>
<li>资源调度：云计算、网络优化</li>
</ul>
</li>
</ul>
<h1 id="七、前沿技术与研究（持续学习）"><a href="#七、前沿技术与研究（持续学习）" class="headerlink" title="七、前沿技术与研究（持续学习）"></a>七、前沿技术与研究（持续学习）</h1><h2 id="（一）新兴AI技术"><a href="#（一）新兴AI技术" class="headerlink" title="（一）新兴AI技术"></a>（一）新兴AI技术</h2><ul>
<li><p><strong>神经符号AI</strong></p>
<ul>
<li>神经符号结合：连接主义与符号主义</li>
<li>可微分编程：可微分神经计算机</li>
<li>程序合成：神经程序合成</li>
<li>因果推理：因果发现、因果推断</li>
<li>元学习：学会学习、快速适应</li>
</ul>
</li>
<li><p><strong>量子机器学习</strong></p>
<ul>
<li>量子计算基础：量子比特、量子门</li>
<li>量子算法：量子傅里叶变换、Grover算法</li>
<li>量子机器学习：量子神经网络、量子SVM</li>
<li>量子优势：量子加速、量子霸权</li>
<li>量子软件：Qiskit、Cirq、PennyLane</li>
</ul>
</li>
</ul>
<h2 id="（二）AI安全与伦理"><a href="#（二）AI安全与伦理" class="headerlink" title="（二）AI安全与伦理"></a>（二）AI安全与伦理</h2><ul>
<li><p><strong>AI安全</strong></p>
<ul>
<li>对抗样本：对抗攻击、防御方法</li>
<li>模型安全：后门攻击、模型窃取</li>
<li>隐私保护：差分隐私、联邦学习</li>
<li>鲁棒性：分布外泛化、域适应</li>
<li>可验证AI：形式化验证、安全保证</li>
</ul>
</li>
<li><p><strong>AI伦理</strong></p>
<ul>
<li>算法公平：偏见检测、公平性度量</li>
<li>可解释性：模型解释、决策透明</li>
<li>责任归属：算法问责、法律责任</li>
<li>隐私权：数据保护、用户同意</li>
<li>社会影响：就业影响、社会公平</li>
</ul>
</li>
</ul>
<h1 id="八、学习资源与职业发展"><a href="#八、学习资源与职业发展" class="headerlink" title="八、学习资源与职业发展"></a>八、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>在线课程</strong></p>
<ul>
<li>Andrew Ng机器学习课程：Coursera经典课程</li>
<li>CS231n：斯坦福计算机视觉课程</li>
<li>CS224n：斯坦福自然语言处理课程</li>
<li>Deep Learning Specialization：深度学习专项课程</li>
<li>Fast.ai：实用深度学习课程</li>
</ul>
</li>
<li><p><strong>经典教材</strong></p>
<ul>
<li>《机器学习》周志华：西瓜书</li>
<li>《统计学习方法》李航：统计学习理论</li>
<li>《深度学习》Ian Goodfellow：深度学习圣经</li>
<li>《模式识别与机器学习》Bishop：PRML</li>
<li>《强化学习导论》Sutton：强化学习经典</li>
</ul>
</li>
<li><p><strong>实践平台</strong></p>
<ul>
<li>Kaggle：数据科学竞赛平台</li>
<li>Papers With Code：论文代码复现</li>
<li>Hugging Face：预训练模型平台</li>
<li>Google Colab：免费GPU环境</li>
<li>GitHub：开源项目学习</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>学术会议</strong></p>
<ul>
<li>NeurIPS：神经信息处理系统</li>
<li>ICML：国际机器学习会议</li>
<li>ICLR：国际学习表征会议</li>
<li>AAAI：人工智能协会会议</li>
<li>ACL：计算语言学协会</li>
</ul>
</li>
<li><p><strong>技术社区</strong></p>
<ul>
<li>Reddit：r&#x2F;MachineLearning、r&#x2F;deeplearning</li>
<li>Stack Overflow：技术问答</li>
<li>Towards Data Science：Medium技术博客</li>
<li>AI研习社：中文AI社区</li>
<li>机器之心：AI资讯平台</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>技术路线</strong></p>
<ul>
<li>机器学习工程师：算法实现、模型优化</li>
<li>深度学习工程师：神经网络、深度模型</li>
<li>AI研究员：前沿研究、论文发表</li>
<li>数据科学家：数据分析、业务洞察</li>
<li>MLOps工程师：模型部署、生产运维</li>
</ul>
</li>
<li><p><strong>应用方向</strong></p>
<ul>
<li>计算机视觉工程师：图像处理、视觉AI</li>
<li>NLP工程师：文本处理、语言模型</li>
<li>推荐系统工程师：个性化推荐</li>
<li>自动驾驶工程师：感知、决策、控制</li>
<li>量化分析师：金融AI、算法交易</li>
</ul>
</li>
<li><p><strong>管理路线</strong></p>
<ul>
<li>AI产品经理：产品规划、需求分析</li>
<li>AI技术总监：技术架构、团队管理</li>
<li>首席科学家：技术战略、研究方向</li>
<li>AI创业者：技术创新、商业化</li>
<li>AI顾问：技术咨询、解决方案</li>
</ul>
</li>
</ul>
<h2 id="（四）持续学习建议"><a href="#（四）持续学习建议" class="headerlink" title="（四）持续学习建议"></a>（四）持续学习建议</h2><ul>
<li><p><strong>跟踪前沿</strong></p>
<ul>
<li>论文阅读：arXiv、顶会论文</li>
<li>技术博客：研究机构、技术大牛</li>
<li>开源项目：GitHub trending、新框架</li>
<li>技术会议：线上线下技术分享</li>
<li>行业报告：AI发展趋势、应用案例</li>
</ul>
</li>
<li><p><strong>实践项目</strong></p>
<ul>
<li>复现经典论文：理解算法原理</li>
<li>参与开源项目：贡献代码、学习协作</li>
<li>个人项目：端到端项目经验</li>
<li>竞赛参与：Kaggle、天池、DataCastle</li>
<li>技术分享：博客写作、演讲分享</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：AI开发是一个快速发展的领域，需要扎实的数学基础、编程能力和持续学习的态度。从机器学习基础到深度学习框架，从大模型开发到工程化部署，每个阶段都有其重点和挑战。建议根据个人兴趣和职业规划选择专精方向，同时保持对前沿技术的敏感度。</p>
<p>AI开发不仅是技术工作，更需要理解业务场景、解决实际问题。在学习过程中要注重理论与实践结合，多做项目、多参与竞赛、多与同行交流。随着AI技术的不断发展，掌握AI开发技能将为您在人工智能时代提供强大的竞争优势和广阔的发展空间。记住，AI的核心是用技术创造价值，让世界变得更美好。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、AI开发基础准备（2-3个月）"><a href="#一、AI开发基础准备（2-3个月）" class="headerlink" title="一、AI开发基础准备（2-3个月）"></a>一、AI开发基础准备（2-3个月）</h1><h2 id="（一）数学]]>
    </summary>
    
      <category term="人工智能" scheme="https://uwakeme.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
      <category term="机器学习" scheme="https://uwakeme.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="深度学习" scheme="https://uwakeme.top/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据科学" scheme="https://uwakeme.top/tags/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6/"/>
    
      <category term="AI开发" scheme="https://uwakeme.top/tags/AI%E5%BC%80%E5%8F%91/"/>
    
      <category term="大模型" scheme="https://uwakeme.top/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】C++现代编程之旅：从基础语法到高性能应用开发]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91C++%E7%8E%B0%E4%BB%A3%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%97%85%EF%BC%9A%E4%BB%8E%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%88%B0%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】C++现代编程之旅：从基础语法到高性能应用开发/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.195Z</updated>
    <content type="html"><![CDATA[<h1 id="一、C-基础入门（2-3个月）"><a href="#一、C-基础入门（2-3个月）" class="headerlink" title="一、C++基础入门（2-3个月）"></a>一、C++基础入门（2-3个月）</h1><h2 id="（一）环境搭建与工具链"><a href="#（一）环境搭建与工具链" class="headerlink" title="（一）环境搭建与工具链"></a>（一）环境搭建与工具链</h2><ul>
<li><p><strong>编译器选择</strong></p>
<ul>
<li>GCC：GNU编译器集合，跨平台支持</li>
<li>Clang：LLVM项目编译器，现代化设计</li>
<li>MSVC：Microsoft Visual C++，Windows平台</li>
<li>Intel C++：高性能优化编译器</li>
</ul>
</li>
<li><p><strong>开发环境</strong></p>
<ul>
<li>Visual Studio：Windows平台首选IDE</li>
<li>CLion：JetBrains专业C++ IDE</li>
<li>Qt Creator：跨平台C++ IDE</li>
<li>VS Code：轻量级编辑器，插件丰富</li>
<li>Dev-C++：适合初学者的简单IDE</li>
</ul>
</li>
<li><p><strong>构建工具</strong></p>
<ul>
<li>CMake：跨平台构建系统</li>
<li>Make：传统构建工具</li>
<li>Ninja：高速构建系统</li>
<li>vcpkg：C++包管理器</li>
<li>Conan：现代C++包管理器</li>
</ul>
</li>
</ul>
<h2 id="（二）C-基础语法"><a href="#（二）C-基础语法" class="headerlink" title="（二）C++基础语法"></a>（二）C++基础语法</h2><ul>
<li><p><strong>从C到C++的过渡</strong></p>
<ul>
<li>C++对C的扩展：命名空间、引用、函数重载</li>
<li>输入输出流：iostream库的使用</li>
<li>内存管理：new&#x2F;delete操作符</li>
<li>类型安全：强类型检查</li>
<li>编译时计算：const、constexpr</li>
</ul>
</li>
<li><p><strong>基本语法特性</strong></p>
<ul>
<li>变量声明：auto关键字、类型推导</li>
<li>引用类型：左值引用、右值引用（C++11）</li>
<li>函数重载：同名函数的不同参数</li>
<li>默认参数：函数参数的默认值</li>
<li>内联函数：inline关键字的使用</li>
</ul>
</li>
<li><p><strong>命名空间</strong></p>
<ul>
<li>namespace定义：避免命名冲突</li>
<li>using声明：简化命名空间使用</li>
<li>匿名命名空间：文件内部链接</li>
<li>命名空间别名：简化长命名空间名</li>
</ul>
</li>
</ul>
<h2 id="（三）面向对象编程基础"><a href="#（三）面向对象编程基础" class="headerlink" title="（三）面向对象编程基础"></a>（三）面向对象编程基础</h2><ul>
<li><p><strong>类与对象</strong></p>
<ul>
<li>类的定义：成员变量、成员函数</li>
<li>对象的创建：栈对象、堆对象</li>
<li>访问控制：public、private、protected</li>
<li>构造函数：默认构造、参数构造、拷贝构造</li>
<li>析构函数：资源清理、RAII原则</li>
</ul>
</li>
<li><p><strong>封装特性</strong></p>
<ul>
<li>数据隐藏：私有成员的保护</li>
<li>接口设计：公有接口的设计原则</li>
<li>getter&#x2F;setter：属性访问方法</li>
<li>友元：friend关键字的使用</li>
<li>静态成员：类级别的数据和方法</li>
</ul>
</li>
<li><p><strong>继承机制</strong></p>
<ul>
<li>单继承：基类和派生类</li>
<li>多继承：多个基类的继承</li>
<li>继承方式：public、protected、private继承</li>
<li>虚继承：解决菱形继承问题</li>
<li>构造和析构顺序：继承链中的调用顺序</li>
</ul>
</li>
<li><p><strong>多态性</strong></p>
<ul>
<li>函数重载：编译时多态</li>
<li>虚函数：运行时多态</li>
<li>纯虚函数：抽象基类</li>
<li>虚析构函数：正确的多态析构</li>
<li>动态绑定：虚函数表机制</li>
</ul>
</li>
</ul>
<h1 id="二、C-核心特性（3-4个月）"><a href="#二、C-核心特性（3-4个月）" class="headerlink" title="二、C++核心特性（3-4个月）"></a>二、C++核心特性（3-4个月）</h1><h2 id="（一）内存管理与RAII"><a href="#（一）内存管理与RAII" class="headerlink" title="（一）内存管理与RAII"></a>（一）内存管理与RAII</h2><ul>
<li><p><strong>动态内存管理</strong></p>
<ul>
<li>new&#x2F;delete：单个对象的分配释放</li>
<li>new[]&#x2F;delete[]：数组的分配释放</li>
<li>内存泄漏：常见问题和检测工具</li>
<li>悬空指针：野指针的避免</li>
<li>内存对齐：数据结构的内存布局</li>
</ul>
</li>
<li><p><strong>RAII原则</strong></p>
<ul>
<li>资源获取即初始化：构造函数获取资源</li>
<li>自动资源管理：析构函数释放资源</li>
<li>异常安全：异常情况下的资源管理</li>
<li>智能指针：自动内存管理</li>
<li>作用域管理：栈对象的自动清理</li>
</ul>
</li>
<li><p><strong>智能指针（C++11）</strong></p>
<ul>
<li>unique_ptr：独占所有权指针</li>
<li>shared_ptr：共享所有权指针</li>
<li>weak_ptr：弱引用指针，解决循环引用</li>
<li>自定义删除器：特殊资源的清理</li>
<li>make_unique&#x2F;make_shared：安全的对象创建</li>
</ul>
</li>
</ul>
<h2 id="（二）运算符重载"><a href="#（二）运算符重载" class="headerlink" title="（二）运算符重载"></a>（二）运算符重载</h2><ul>
<li><p><strong>运算符重载基础</strong></p>
<ul>
<li>可重载运算符：算术、比较、逻辑运算符</li>
<li>重载形式：成员函数、友元函数、全局函数</li>
<li>返回类型：引用返回、值返回的选择</li>
<li>参数传递：const引用的使用</li>
<li>重载原则：保持运算符的语义</li>
</ul>
</li>
<li><p><strong>特殊运算符重载</strong></p>
<ul>
<li>赋值运算符：operator&#x3D;的实现</li>
<li>下标运算符：operator[]的重载</li>
<li>函数调用运算符：operator()的使用</li>
<li>类型转换运算符：隐式和显式转换</li>
<li>流运算符：operator&lt;&lt;和operator&gt;&gt;</li>
</ul>
</li>
</ul>
<h2 id="（三）模板编程基础"><a href="#（三）模板编程基础" class="headerlink" title="（三）模板编程基础"></a>（三）模板编程基础</h2><ul>
<li><p><strong>函数模板</strong></p>
<ul>
<li>模板定义：template关键字</li>
<li>类型参数：typename和class关键字</li>
<li>模板实例化：显式和隐式实例化</li>
<li>模板特化：全特化和偏特化</li>
<li>模板参数推导：auto和decltype</li>
</ul>
</li>
<li><p><strong>类模板</strong></p>
<ul>
<li>类模板定义：模板类的声明和实现</li>
<li>模板成员函数：类外定义的语法</li>
<li>模板继承：模板类的继承关系</li>
<li>模板友元：友元函数和友元类</li>
<li>模板别名：using和typedef</li>
</ul>
</li>
<li><p><strong>模板元编程入门</strong></p>
<ul>
<li>编译时计算：constexpr和模板递归</li>
<li>类型萃取：type_traits库的使用</li>
<li>SFINAE：替换失败不是错误</li>
<li>模板约束：概念和约束（C++20）</li>
</ul>
</li>
</ul>
<h2 id="（四）异常处理"><a href="#（四）异常处理" class="headerlink" title="（四）异常处理"></a>（四）异常处理</h2><ul>
<li><p><strong>异常机制</strong></p>
<ul>
<li>try-catch-throw：异常的抛出和捕获</li>
<li>异常类型：标准异常类层次</li>
<li>异常规范：noexcept关键字（C++11）</li>
<li>异常安全：基本保证、强保证、无抛出保证</li>
<li>栈展开：异常传播过程中的对象析构</li>
</ul>
</li>
<li><p><strong>异常处理最佳实践</strong></p>
<ul>
<li>RAII与异常：资源管理的异常安全</li>
<li>异常中立：库代码的异常处理</li>
<li>异常性能：异常的性能影响</li>
<li>错误码vs异常：错误处理策略选择</li>
</ul>
</li>
</ul>
<h1 id="三、STL标准模板库（2-3个月）"><a href="#三、STL标准模板库（2-3个月）" class="headerlink" title="三、STL标准模板库（2-3个月）"></a>三、STL标准模板库（2-3个月）</h1><h2 id="（一）容器类"><a href="#（一）容器类" class="headerlink" title="（一）容器类"></a>（一）容器类</h2><ul>
<li><p><strong>序列容器</strong></p>
<ul>
<li>vector：动态数组，连续内存存储</li>
<li>deque：双端队列，分段连续存储</li>
<li>list：双向链表，非连续存储</li>
<li>forward_list：单向链表（C++11）</li>
<li>array：固定大小数组（C++11）</li>
</ul>
</li>
<li><p><strong>关联容器</strong></p>
<ul>
<li>set&#x2F;multiset：有序集合，基于红黑树</li>
<li>map&#x2F;multimap：有序映射，键值对存储</li>
<li>unordered_set&#x2F;unordered_multiset：哈希集合（C++11）</li>
<li>unordered_map&#x2F;unordered_multimap：哈希映射（C++11）</li>
</ul>
</li>
<li><p><strong>容器适配器</strong></p>
<ul>
<li>stack：栈适配器，LIFO结构</li>
<li>queue：队列适配器，FIFO结构</li>
<li>priority_queue：优先队列，堆结构</li>
</ul>
</li>
</ul>
<h2 id="（二）迭代器"><a href="#（二）迭代器" class="headerlink" title="（二）迭代器"></a>（二）迭代器</h2><ul>
<li><p><strong>迭代器类型</strong></p>
<ul>
<li>输入迭代器：只读，单向遍历</li>
<li>输出迭代器：只写，单向遍历</li>
<li>前向迭代器：读写，单向遍历</li>
<li>双向迭代器：读写，双向遍历</li>
<li>随机访问迭代器：读写，随机访问</li>
</ul>
</li>
<li><p><strong>迭代器使用</strong></p>
<ul>
<li>begin&#x2F;end：容器的迭代器范围</li>
<li>迭代器运算：递增、递减、距离计算</li>
<li>迭代器失效：容器操作对迭代器的影响</li>
<li>反向迭代器：rbegin&#x2F;rend</li>
<li>常量迭代器：const_iterator</li>
</ul>
</li>
</ul>
<h2 id="（三）算法库"><a href="#（三）算法库" class="headerlink" title="（三）算法库"></a>（三）算法库</h2><ul>
<li><p><strong>非修改算法</strong></p>
<ul>
<li>find&#x2F;find_if：查找元素</li>
<li>count&#x2F;count_if：计数元素</li>
<li>for_each：遍历执行操作</li>
<li>all_of&#x2F;any_of&#x2F;none_of：条件判断（C++11）</li>
</ul>
</li>
<li><p><strong>修改算法</strong></p>
<ul>
<li>copy&#x2F;copy_if：复制元素</li>
<li>transform：变换元素</li>
<li>replace&#x2F;replace_if：替换元素</li>
<li>remove&#x2F;remove_if：移除元素</li>
<li>unique：去除重复元素</li>
</ul>
</li>
<li><p><strong>排序算法</strong></p>
<ul>
<li>sort：快速排序</li>
<li>stable_sort：稳定排序</li>
<li>partial_sort：部分排序</li>
<li>nth_element：第n个元素</li>
<li>binary_search：二分查找</li>
</ul>
</li>
</ul>
<h2 id="（四）函数对象与Lambda"><a href="#（四）函数对象与Lambda" class="headerlink" title="（四）函数对象与Lambda"></a>（四）函数对象与Lambda</h2><ul>
<li><p><strong>函数对象</strong></p>
<ul>
<li>函数指针：传统的函数传递方式</li>
<li>函数对象类：重载operator()的类</li>
<li>标准函数对象：less、greater、plus等</li>
<li>函数适配器：bind1st、bind2nd（已废弃）</li>
</ul>
</li>
<li><p><strong>Lambda表达式（C++11）</strong></p>
<ul>
<li>Lambda语法：<a href="parameters">capture</a> -&gt; return_type { body }</li>
<li>捕获方式：值捕获、引用捕获、混合捕获</li>
<li>泛型Lambda：auto参数（C++14）</li>
<li>初始化捕获：广义捕获（C++14）</li>
</ul>
</li>
</ul>
<h1 id="四、现代C-特性（3-4个月）"><a href="#四、现代C-特性（3-4个月）" class="headerlink" title="四、现代C++特性（3-4个月）"></a>四、现代C++特性（3-4个月）</h1><h2 id="（一）C-11核心特性"><a href="#（一）C-11核心特性" class="headerlink" title="（一）C++11核心特性"></a>（一）C++11核心特性</h2><ul>
<li><p><strong>类型推导</strong></p>
<ul>
<li>auto关键字：自动类型推导</li>
<li>decltype：表达式类型推导</li>
<li>尾置返回类型：函数返回类型推导</li>
<li>类型别名：using声明</li>
</ul>
</li>
<li><p><strong>移动语义</strong></p>
<ul>
<li>右值引用：&amp;&amp;语法</li>
<li>移动构造函数：高效的对象转移</li>
<li>移动赋值运算符：避免不必要的拷贝</li>
<li>std::move：强制移动语义</li>
<li>完美转发：std::forward</li>
</ul>
</li>
<li><p><strong>统一初始化</strong></p>
<ul>
<li>列表初始化：{}语法</li>
<li>初始化列表：std::initializer_list</li>
<li>聚合初始化：结构体和数组</li>
<li>直接初始化vs拷贝初始化</li>
</ul>
</li>
</ul>
<h2 id="（二）C-14-17-20新特性"><a href="#（二）C-14-17-20新特性" class="headerlink" title="（二）C++14&#x2F;17&#x2F;20新特性"></a>（二）C++14&#x2F;17&#x2F;20新特性</h2><ul>
<li><p><strong>C++14特性</strong></p>
<ul>
<li>泛型Lambda：auto参数</li>
<li>变量模板：template变量</li>
<li>二进制字面量：0b前缀</li>
<li>数字分隔符：单引号分隔</li>
</ul>
</li>
<li><p><strong>C++17特性</strong></p>
<ul>
<li>结构化绑定：auto [a, b] &#x3D; tuple</li>
<li>if constexpr：编译时条件判断</li>
<li>折叠表达式：可变参数模板简化</li>
<li>std::optional：可选值类型</li>
<li>std::variant：类型安全的联合体</li>
</ul>
</li>
<li><p><strong>C++20特性</strong></p>
<ul>
<li>概念（Concepts）：模板约束</li>
<li>协程（Coroutines）：异步编程</li>
<li>模块（Modules）：替代头文件</li>
<li>范围（Ranges）：算法库增强</li>
</ul>
</li>
</ul>
<h2 id="（三）并发编程"><a href="#（三）并发编程" class="headerlink" title="（三）并发编程"></a>（三）并发编程</h2><ul>
<li><p><strong>线程库（C++11）</strong></p>
<ul>
<li>std::thread：线程创建和管理</li>
<li>std::mutex：互斥锁</li>
<li>std::lock_guard：自动锁管理</li>
<li>std::unique_lock：灵活的锁管理</li>
<li>std::condition_variable：条件变量</li>
</ul>
</li>
<li><p><strong>原子操作</strong></p>
<ul>
<li>std::atomic：原子类型</li>
<li>内存序：memory_order枚举</li>
<li>无锁编程：lock-free数据结构</li>
<li>内存模型：happens-before关系</li>
</ul>
</li>
<li><p><strong>异步编程</strong></p>
<ul>
<li>std::async：异步任务执行</li>
<li>std::future&#x2F;std::promise：异步结果获取</li>
<li>std::packaged_task：任务包装</li>
<li>线程池：自定义线程池实现</li>
</ul>
</li>
</ul>
<h1 id="五、高级C-编程（4-5个月）"><a href="#五、高级C-编程（4-5个月）" class="headerlink" title="五、高级C++编程（4-5个月）"></a>五、高级C++编程（4-5个月）</h1><h2 id="（一）模板元编程"><a href="#（一）模板元编程" class="headerlink" title="（一）模板元编程"></a>（一）模板元编程</h2><ul>
<li><p><strong>模板特化</strong></p>
<ul>
<li>全特化：完全指定模板参数</li>
<li>偏特化：部分指定模板参数</li>
<li>函数模板特化：特定类型的优化</li>
<li>类模板特化：特定类型的实现</li>
</ul>
</li>
<li><p><strong>SFINAE技术</strong></p>
<ul>
<li>替换失败不是错误：模板重载决议</li>
<li>enable_if：条件启用模板</li>
<li>类型检测：has_member等技术</li>
<li>概念模拟：C++20之前的约束</li>
</ul>
</li>
<li><p><strong>模板元编程技巧</strong></p>
<ul>
<li>递归模板：编译时计算</li>
<li>类型列表：typelist技术</li>
<li>策略模式：policy-based design</li>
<li>表达式模板：延迟计算</li>
</ul>
</li>
</ul>
<h2 id="（二）设计模式"><a href="#（二）设计模式" class="headerlink" title="（二）设计模式"></a>（二）设计模式</h2><ul>
<li><p><strong>创建型模式</strong></p>
<ul>
<li>单例模式：线程安全的实现</li>
<li>工厂模式：对象创建的抽象</li>
<li>建造者模式：复杂对象的构建</li>
<li>原型模式：对象的克隆</li>
</ul>
</li>
<li><p><strong>结构型模式</strong></p>
<ul>
<li>适配器模式：接口适配</li>
<li>装饰器模式：功能扩展</li>
<li>外观模式：接口简化</li>
<li>代理模式：访问控制</li>
</ul>
</li>
<li><p><strong>行为型模式</strong></p>
<ul>
<li>观察者模式：事件通知</li>
<li>策略模式：算法封装</li>
<li>命令模式：操作封装</li>
<li>状态模式：状态管理</li>
</ul>
</li>
</ul>
<h2 id="（三）性能优化"><a href="#（三）性能优化" class="headerlink" title="（三）性能优化"></a>（三）性能优化</h2><ul>
<li><p><strong>编译器优化</strong></p>
<ul>
<li>内联函数：减少函数调用开销</li>
<li>模板实例化：减少代码膨胀</li>
<li>链接时优化：LTO技术</li>
<li>编译器指令：likely&#x2F;unlikely（C++20）</li>
</ul>
</li>
<li><p><strong>运行时优化</strong></p>
<ul>
<li>内存局部性：缓存友好的数据结构</li>
<li>分支预测：减少分支误预测</li>
<li>向量化：SIMD指令的使用</li>
<li>内存池：减少内存分配开销</li>
</ul>
</li>
<li><p><strong>性能分析</strong></p>
<ul>
<li>性能分析工具：gprof、Valgrind、Intel VTune</li>
<li>基准测试：Google Benchmark</li>
<li>内存分析：内存泄漏检测</li>
<li>热点分析：CPU使用率分析</li>
</ul>
</li>
</ul>
<h1 id="六、实际应用开发（持续进行）"><a href="#六、实际应用开发（持续进行）" class="headerlink" title="六、实际应用开发（持续进行）"></a>六、实际应用开发（持续进行）</h1><h2 id="（一）图形界面开发"><a href="#（一）图形界面开发" class="headerlink" title="（一）图形界面开发"></a>（一）图形界面开发</h2><ul>
<li><p><strong>Qt框架</strong></p>
<ul>
<li>Qt Core：核心功能模块</li>
<li>Qt GUI：图形用户界面</li>
<li>Qt Widgets：传统桌面控件</li>
<li>Qt Quick：现代UI框架</li>
<li>信号槽机制：事件处理</li>
</ul>
</li>
<li><p><strong>其他GUI框架</strong></p>
<ul>
<li>GTK+：跨平台GUI工具包</li>
<li>wxWidgets：原生外观的GUI</li>
<li>FLTK：轻量级GUI库</li>
<li>Dear ImGui：即时模式GUI</li>
</ul>
</li>
</ul>
<h2 id="（二）游戏开发"><a href="#（二）游戏开发" class="headerlink" title="（二）游戏开发"></a>（二）游戏开发</h2><ul>
<li><p><strong>游戏引擎</strong></p>
<ul>
<li>Unreal Engine：虚幻引擎C++开发</li>
<li>自定义引擎：游戏引擎架构</li>
<li>图形渲染：OpenGL、DirectX、Vulkan</li>
<li>物理引擎：Bullet、Box2D</li>
</ul>
</li>
<li><p><strong>游戏编程技术</strong></p>
<ul>
<li>实体组件系统：ECS架构</li>
<li>游戏循环：渲染循环和逻辑更新</li>
<li>资源管理：纹理、模型、音频</li>
<li>网络编程：多人游戏同步</li>
</ul>
</li>
</ul>
<h2 id="（三）系统编程"><a href="#（三）系统编程" class="headerlink" title="（三）系统编程"></a>（三）系统编程</h2><ul>
<li><p><strong>操作系统接口</strong></p>
<ul>
<li>POSIX API：跨平台系统调用</li>
<li>Windows API：Windows系统编程</li>
<li>文件系统：文件操作和目录遍历</li>
<li>进程间通信：管道、共享内存、消息队列</li>
</ul>
</li>
<li><p><strong>网络编程</strong></p>
<ul>
<li>Socket编程：TCP&#x2F;UDP通信</li>
<li>异步I&#x2F;O：epoll、IOCP</li>
<li>网络库：Boost.Asio、libuv</li>
<li>HTTP服务器：Web服务开发</li>
</ul>
</li>
</ul>
<h2 id="（四）科学计算"><a href="#（四）科学计算" class="headerlink" title="（四）科学计算"></a>（四）科学计算</h2><ul>
<li><p><strong>数值计算库</strong></p>
<ul>
<li>Eigen：线性代数库</li>
<li>BLAS&#x2F;LAPACK：基础线性代数</li>
<li>GSL：GNU科学计算库</li>
<li>Intel MKL：高性能数学库</li>
</ul>
</li>
<li><p><strong>并行计算</strong></p>
<ul>
<li>OpenMP：共享内存并行</li>
<li>MPI：分布式内存并行</li>
<li>CUDA：GPU并行计算</li>
<li>OpenCL：异构并行计算</li>
</ul>
</li>
</ul>
<h1 id="七、工程化与最佳实践（2个月）"><a href="#七、工程化与最佳实践（2个月）" class="headerlink" title="七、工程化与最佳实践（2个月）"></a>七、工程化与最佳实践（2个月）</h1><h2 id="（一）代码质量管理"><a href="#（一）代码质量管理" class="headerlink" title="（一）代码质量管理"></a>（一）代码质量管理</h2><ul>
<li><p><strong>编码规范</strong></p>
<ul>
<li>Google C++ Style Guide：谷歌编码规范</li>
<li>命名约定：变量、函数、类的命名</li>
<li>代码格式：缩进、空格、换行</li>
<li>注释规范：文档注释、行内注释</li>
</ul>
</li>
<li><p><strong>静态分析</strong></p>
<ul>
<li>Clang Static Analyzer：静态代码分析</li>
<li>PVS-Studio：商业静态分析工具</li>
<li>Cppcheck：开源静态分析</li>
<li>编译器警告：-Wall、-Wextra等选项</li>
</ul>
</li>
</ul>
<h2 id="（二）测试与调试"><a href="#（二）测试与调试" class="headerlink" title="（二）测试与调试"></a>（二）测试与调试</h2><ul>
<li><p><strong>单元测试</strong></p>
<ul>
<li>Google Test：C++测试框架</li>
<li>Catch2：现代C++测试框架</li>
<li>测试驱动开发：TDD方法论</li>
<li>模拟对象：Google Mock</li>
</ul>
</li>
<li><p><strong>调试技术</strong></p>
<ul>
<li>GDB：GNU调试器</li>
<li>Visual Studio调试器：Windows平台调试</li>
<li>Valgrind：内存错误检测</li>
<li>AddressSanitizer：地址消毒器</li>
</ul>
</li>
</ul>
<h2 id="（三）构建与部署"><a href="#（三）构建与部署" class="headerlink" title="（三）构建与部署"></a>（三）构建与部署</h2><ul>
<li><p><strong>构建系统</strong></p>
<ul>
<li>CMake：跨平台构建配置</li>
<li>Makefile：传统构建脚本</li>
<li>Ninja：高速构建执行器</li>
<li>包管理：vcpkg、Conan</li>
</ul>
</li>
<li><p><strong>持续集成</strong></p>
<ul>
<li>GitHub Actions：自动化构建测试</li>
<li>Jenkins：企业级CI&#x2F;CD</li>
<li>Docker：容器化部署</li>
<li>跨平台编译：多目标平台支持</li>
</ul>
</li>
</ul>
<h1 id="八、学习资源与职业发展"><a href="#八、学习资源与职业发展" class="headerlink" title="八、学习资源与职业发展"></a>八、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《C++ Primer》：C++入门经典</li>
<li>《Effective C++》：C++最佳实践</li>
<li>《More Effective C++》：进阶技巧</li>
<li>《Effective Modern C++》：现代C++特性</li>
<li>《C++模板元编程》：模板高级技术</li>
</ul>
</li>
<li><p><strong>在线资源</strong></p>
<ul>
<li>cppreference.com：C++标准库参考</li>
<li>ISO C++标准：官方语言标准</li>
<li>CppCon：C++年度大会视频</li>
<li>Compiler Explorer：在线编译器</li>
<li>C++ Core Guidelines：核心指导原则</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>国外社区</strong></p>
<ul>
<li>Stack Overflow：技术问答</li>
<li>Reddit：r&#x2F;cpp社区</li>
<li>GitHub：开源项目</li>
<li>Hacker News：技术新闻</li>
</ul>
</li>
<li><p><strong>国内社区</strong></p>
<ul>
<li>CSDN：技术博客</li>
<li>知乎：技术讨论</li>
<li>掘金：前沿技术</li>
<li>博客园：技术分享</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>应用开发方向</strong></p>
<ul>
<li>桌面应用开发：企业软件、工具软件</li>
<li>游戏开发：游戏引擎、游戏逻辑</li>
<li>移动应用：跨平台移动开发</li>
<li>Web后端：高性能服务器开发</li>
</ul>
</li>
<li><p><strong>系统开发方向</strong></p>
<ul>
<li>操作系统：内核开发、驱动程序</li>
<li>数据库：存储引擎、查询优化</li>
<li>编译器：语言实现、代码优化</li>
<li>嵌入式：物联网、实时系统</li>
</ul>
</li>
<li><p><strong>技术专家路线</strong></p>
<ul>
<li>性能优化专家：高性能计算</li>
<li>架构师：系统架构设计</li>
<li>技术管理：团队技术领导</li>
<li>研发专家：前沿技术研究</li>
</ul>
</li>
</ul>
<h2 id="（四）持续学习建议"><a href="#（四）持续学习建议" class="headerlink" title="（四）持续学习建议"></a>（四）持续学习建议</h2><ul>
<li><p><strong>技术深度</strong></p>
<ul>
<li>计算机体系结构：CPU、内存、缓存</li>
<li>操作系统原理：进程、内存、文件系统</li>
<li>编译原理：词法分析、语法分析、代码生成</li>
<li>算法与数据结构：高级算法、复杂度分析</li>
</ul>
</li>
<li><p><strong>相关技术</strong></p>
<ul>
<li>Rust：系统编程新语言</li>
<li>Go：并发编程语言</li>
<li>Python：脚本和数据分析</li>
<li>JavaScript：Web开发</li>
</ul>
</li>
<li><p><strong>软技能培养</strong></p>
<ul>
<li>问题解决：分析问题、设计方案</li>
<li>学习能力：快速掌握新技术</li>
<li>沟通能力：技术交流、文档编写</li>
<li>团队协作：代码协作、知识分享</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：C++学习是一个长期的过程，从基础语法到现代特性，从面向对象到模板元编程，每个阶段都有其独特的挑战和收获。C++作为一门强大而复杂的语言，不仅要掌握语法特性，更要理解其设计哲学和最佳实践。建议在学习过程中多实践、多思考，通过实际项目来巩固理论知识。记住，C++的精髓在于”零开销抽象”和”你不使用的功能不会影响性能”，掌握了C++，将为您在系统编程、游戏开发、高性能计算等领域打开广阔的发展空间。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、C-基础入门（2-3个月）"><a href="#一、C-基础入门（2-3个月）" class="headerlink" title="一、C++基础入门（2-3个月）"></a>一、C++基础入门（2-3个月）</h1><h2 id="（一）环境搭建与工具链]]>
    </summary>
    
      <category term="面向对象" scheme="https://uwakeme.top/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
      <category term="编程语言" scheme="https://uwakeme.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="C++" scheme="https://uwakeme.top/tags/C/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="系统编程" scheme="https://uwakeme.top/tags/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    
      <category term="高性能计算" scheme="https://uwakeme.top/tags/%E9%AB%98%E6%80%A7%E8%83%BD%E8%AE%A1%E7%AE%97/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】C#企业级开发之路：从基础语法到云原生应用]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91C#%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BC%80%E5%8F%91%E4%B9%8B%E8%B7%AF%EF%BC%9A%E4%BB%8E%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%88%B0%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】C#企业级开发之路：从基础语法到云原生应用/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.194Z</updated>
    <content type="html"><![CDATA[<h1 id="一、C-基础入门（1-2个月）"><a href="#一、C-基础入门（1-2个月）" class="headerlink" title="一、C#基础入门（1-2个月）"></a>一、C#基础入门（1-2个月）</h1><h2 id="（一）开发环境搭建"><a href="#（一）开发环境搭建" class="headerlink" title="（一）开发环境搭建"></a>（一）开发环境搭建</h2><ul>
<li><p><strong>Visual Studio安装配置</strong></p>
<ul>
<li>Visual Studio Community：免费版本，功能完整</li>
<li>Visual Studio Code：轻量级，跨平台支持</li>
<li>JetBrains Rider：专业IDE，强大功能</li>
<li>.NET SDK：运行时和开发工具包</li>
<li>NuGet包管理器：第三方库管理</li>
</ul>
</li>
<li><p><strong>.NET生态系统了解</strong></p>
<ul>
<li>.NET Framework：Windows平台传统框架</li>
<li>.NET Core&#x2F;.NET 5+：跨平台现代框架</li>
<li>.NET Standard：API标准规范</li>
<li>运行时：CLR、CoreCLR执行环境</li>
<li>编译过程：C# → IL → JIT → 机器码</li>
</ul>
</li>
<li><p><strong>项目结构与配置</strong></p>
<ul>
<li>解决方案(.sln)：多项目管理</li>
<li>项目文件(.csproj)：项目配置</li>
<li>程序集(.dll&#x2F;.exe)：编译输出</li>
<li>配置文件：appsettings.json、web.config</li>
<li>包引用：PackageReference、项目引用</li>
</ul>
</li>
</ul>
<h2 id="（二）C-语言基础"><a href="#（二）C-语言基础" class="headerlink" title="（二）C#语言基础"></a>（二）C#语言基础</h2><ul>
<li><p><strong>基本语法</strong></p>
<ul>
<li>命名空间：namespace组织代码</li>
<li>类和对象：class定义、对象实例化</li>
<li>变量和常量：var、const、readonly</li>
<li>数据类型：值类型、引用类型、可空类型</li>
<li>运算符：算术、逻辑、比较、赋值运算符</li>
</ul>
</li>
<li><p><strong>控制结构</strong></p>
<ul>
<li>条件语句：if-else、switch表达式</li>
<li>循环语句：for、foreach、while、do-while</li>
<li>跳转语句：break、continue、return、goto</li>
<li>异常处理：try-catch-finally、throw</li>
<li>using语句：资源自动释放</li>
</ul>
</li>
<li><p><strong>方法与参数</strong></p>
<ul>
<li>方法定义：访问修饰符、返回类型、参数</li>
<li>参数传递：值传递、引用传递(ref、out)</li>
<li>可选参数：默认值、命名参数</li>
<li>方法重载：同名不同参数</li>
<li>扩展方法：为现有类型添加方法</li>
</ul>
</li>
</ul>
<h2 id="（三）面向对象编程基础"><a href="#（三）面向对象编程基础" class="headerlink" title="（三）面向对象编程基础"></a>（三）面向对象编程基础</h2><ul>
<li><p><strong>类与对象</strong></p>
<ul>
<li>类的定义：字段、属性、方法、构造函数</li>
<li>访问修饰符：public、private、protected、internal</li>
<li>静态成员：static字段、方法、构造函数</li>
<li>嵌套类：类内部定义的类</li>
<li>分部类：partial关键字、代码分离</li>
</ul>
</li>
<li><p><strong>继承与多态</strong></p>
<ul>
<li>继承：base关键字、单继承限制</li>
<li>方法重写：virtual、override关键字</li>
<li>抽象类：abstract类和方法</li>
<li>密封类：sealed关键字、防止继承</li>
<li>多态性：基类引用、虚方法调用</li>
</ul>
</li>
<li><p><strong>接口与实现</strong></p>
<ul>
<li>接口定义：interface关键字、契约规范</li>
<li>接口实现：隐式实现、显式实现</li>
<li>多接口实现：解决命名冲突</li>
<li>接口继承：接口间的继承关系</li>
<li>默认接口方法：C# 8.0新特性</li>
</ul>
</li>
</ul>
<h1 id="二、C-核心特性（2-3个月）"><a href="#二、C-核心特性（2-3个月）" class="headerlink" title="二、C#核心特性（2-3个月）"></a>二、C#核心特性（2-3个月）</h1><h2 id="（一）泛型编程"><a href="#（一）泛型编程" class="headerlink" title="（一）泛型编程"></a>（一）泛型编程</h2><ul>
<li><p><strong>泛型基础</strong></p>
<ul>
<li>泛型类：List<T>、Dictionary&lt;TKey, TValue&gt;</T></li>
<li>泛型方法：类型参数、类型推断</li>
<li>泛型接口：IEnumerable<T>、IComparer<T></T></T></li>
<li>泛型委托：Action<T>、Func&lt;T, TResult&gt;</T></li>
<li>协变和逆变：in、out关键字</li>
</ul>
</li>
<li><p><strong>泛型约束</strong></p>
<ul>
<li>where子句：类型约束条件</li>
<li>类约束：class、struct约束</li>
<li>接口约束：实现特定接口</li>
<li>构造函数约束：new()约束</li>
<li>多重约束：组合多个约束条件</li>
</ul>
</li>
</ul>
<h2 id="（二）委托与事件"><a href="#（二）委托与事件" class="headerlink" title="（二）委托与事件"></a>（二）委托与事件</h2><ul>
<li><p><strong>委托机制</strong></p>
<ul>
<li>委托定义：delegate关键字</li>
<li>委托实例化：方法组转换</li>
<li>多播委托：+、-操作符</li>
<li>匿名方法：delegate表达式</li>
<li>Lambda表达式：&#x3D;&gt; 语法</li>
</ul>
</li>
<li><p><strong>事件系统</strong></p>
<ul>
<li>事件定义：event关键字</li>
<li>事件发布：触发事件</li>
<li>事件订阅：+&#x3D;、-&#x3D;操作符</li>
<li>事件访问器：add、remove</li>
<li>自定义事件参数：EventArgs派生类</li>
</ul>
</li>
</ul>
<h2 id="（三）LINQ与函数式编程"><a href="#（三）LINQ与函数式编程" class="headerlink" title="（三）LINQ与函数式编程"></a>（三）LINQ与函数式编程</h2><ul>
<li><p><strong>LINQ基础</strong></p>
<ul>
<li>查询语法：from、where、select</li>
<li>方法语法：Where()、Select()、OrderBy()</li>
<li>延迟执行：IEnumerable<T>惰性求值</T></li>
<li>立即执行：ToList()、ToArray()、Count()</li>
<li>LINQ提供程序：LINQ to Objects、LINQ to SQL</li>
</ul>
</li>
<li><p><strong>函数式编程特性</strong></p>
<ul>
<li>Lambda表达式：(x) &#x3D;&gt; x * 2</li>
<li>表达式树：Expression&lt;Func&lt;T, bool&gt;&gt;</li>
<li>高阶函数：接受函数作为参数</li>
<li>不可变性：readonly、record类型</li>
<li>模式匹配：switch表达式、is模式</li>
</ul>
</li>
</ul>
<h2 id="（四）异步编程"><a href="#（四）异步编程" class="headerlink" title="（四）异步编程"></a>（四）异步编程</h2><ul>
<li><p><strong>async&#x2F;await模式</strong></p>
<ul>
<li>异步方法：async关键字</li>
<li>等待操作：await关键字</li>
<li>Task和Task<T>：异步操作表示</T></li>
<li>异步返回类型：Task、ValueTask</li>
<li>异步流：IAsyncEnumerable<T></T></li>
</ul>
</li>
<li><p><strong>并发编程</strong></p>
<ul>
<li>线程安全：lock语句、Monitor类</li>
<li>并发集合：ConcurrentDictionary、ConcurrentQueue</li>
<li>任务并行：Parallel.For、Parallel.ForEach</li>
<li>取消令牌：CancellationToken</li>
<li>配置等待：ConfigureAwait(false)</li>
</ul>
</li>
</ul>
<h1 id="三、-NET框架深入（3-4个月）"><a href="#三、-NET框架深入（3-4个月）" class="headerlink" title="三、.NET框架深入（3-4个月）"></a>三、.NET框架深入（3-4个月）</h1><h2 id="（一）集合与数据结构"><a href="#（一）集合与数据结构" class="headerlink" title="（一）集合与数据结构"></a>（一）集合与数据结构</h2><ul>
<li><p><strong>基础集合</strong></p>
<ul>
<li>数组：Array、多维数组、锯齿数组</li>
<li>列表：List<T>、ArrayList</T></li>
<li>字典：Dictionary&lt;TKey, TValue&gt;、Hashtable</li>
<li>集合：HashSet<T>、SortedSet<T></T></T></li>
<li>队列和栈：Queue<T>、Stack<T></T></T></li>
</ul>
</li>
<li><p><strong>高级集合</strong></p>
<ul>
<li>只读集合：ReadOnlyCollection<T></T></li>
<li>不可变集合：ImmutableList<T>、ImmutableDictionary</T></li>
<li>并发集合：线程安全的集合类型</li>
<li>自定义集合：实现IEnumerable<T></T></li>
<li>集合性能：时间复杂度、空间复杂度</li>
</ul>
</li>
</ul>
<h2 id="（二）反射与元数据"><a href="#（二）反射与元数据" class="headerlink" title="（二）反射与元数据"></a>（二）反射与元数据</h2><ul>
<li><p><strong>反射基础</strong></p>
<ul>
<li>Type类：类型信息获取</li>
<li>Assembly类：程序集加载和检查</li>
<li>成员信息：MethodInfo、PropertyInfo、FieldInfo</li>
<li>动态调用：Invoke方法、属性访问</li>
<li>泛型反射：开放类型、封闭类型</li>
</ul>
</li>
<li><p><strong>特性编程</strong></p>
<ul>
<li>特性定义：Attribute基类</li>
<li>特性应用：[AttributeName]语法</li>
<li>特性检索：GetCustomAttributes方法</li>
<li>内置特性：Obsolete、Serializable、Conditional</li>
<li>自定义特性：业务逻辑标记</li>
</ul>
</li>
</ul>
<h2 id="（三）序列化与I-O"><a href="#（三）序列化与I-O" class="headerlink" title="（三）序列化与I&#x2F;O"></a>（三）序列化与I&#x2F;O</h2><ul>
<li><p><strong>序列化技术</strong></p>
<ul>
<li>JSON序列化：System.Text.Json、Newtonsoft.Json</li>
<li>XML序列化：XmlSerializer、DataContractSerializer</li>
<li>二进制序列化：BinaryFormatter（已废弃）</li>
<li>自定义序列化：ISerializable接口</li>
<li>序列化配置：特性控制、命名策略</li>
</ul>
</li>
<li><p><strong>文件与流操作</strong></p>
<ul>
<li>文件操作：File、FileInfo类</li>
<li>目录操作：Directory、DirectoryInfo类</li>
<li>流操作：Stream、FileStream、MemoryStream</li>
<li>文本读写：StreamReader、StreamWriter</li>
<li>异步I&#x2F;O：异步文件操作</li>
</ul>
</li>
</ul>
<h2 id="（四）内存管理与性能"><a href="#（四）内存管理与性能" class="headerlink" title="（四）内存管理与性能"></a>（四）内存管理与性能</h2><ul>
<li><p><strong>垃圾回收机制</strong></p>
<ul>
<li>GC工作原理：标记-清除算法</li>
<li>代际回收：Gen0、Gen1、Gen2</li>
<li>大对象堆：LOH、POH</li>
<li>GC调优：GC.Collect()、GC压力</li>
<li>内存泄漏：事件订阅、静态引用</li>
</ul>
</li>
<li><p><strong>性能优化</strong></p>
<ul>
<li>值类型vs引用类型：装箱拆箱</li>
<li>字符串优化：StringBuilder、string.Intern</li>
<li>集合选择：性能特征对比</li>
<li>异步优化：避免阻塞、配置等待</li>
<li>内存分析：诊断工具、性能计数器</li>
</ul>
</li>
</ul>
<h1 id="四、Web开发与API（3-4个月）"><a href="#四、Web开发与API（3-4个月）" class="headerlink" title="四、Web开发与API（3-4个月）"></a>四、Web开发与API（3-4个月）</h1><h2 id="（一）ASP-NET-Core基础"><a href="#（一）ASP-NET-Core基础" class="headerlink" title="（一）ASP.NET Core基础"></a>（一）ASP.NET Core基础</h2><ul>
<li><p><strong>Web应用架构</strong></p>
<ul>
<li>MVC模式：Model-View-Controller</li>
<li>依赖注入：内置DI容器、服务注册</li>
<li>中间件管道：请求处理流水线</li>
<li>配置系统：appsettings.json、环境变量</li>
<li>日志系统：ILogger、日志提供程序</li>
</ul>
</li>
<li><p><strong>控制器与路由</strong></p>
<ul>
<li>控制器定义：Controller基类</li>
<li>动作方法：HTTP方法映射</li>
<li>路由配置：约定路由、特性路由</li>
<li>模型绑定：请求数据绑定到模型</li>
<li>模型验证：数据注解、自定义验证</li>
</ul>
</li>
</ul>
<h2 id="（二）Web-API开发"><a href="#（二）Web-API开发" class="headerlink" title="（二）Web API开发"></a>（二）Web API开发</h2><ul>
<li><p><strong>RESTful API设计</strong></p>
<ul>
<li>HTTP方法：GET、POST、PUT、DELETE</li>
<li>状态码：200、201、400、404、500</li>
<li>内容协商：JSON、XML格式</li>
<li>API版本控制：URL版本、Header版本</li>
<li>API文档：Swagger&#x2F;OpenAPI</li>
</ul>
</li>
<li><p><strong>数据传输与验证</strong></p>
<ul>
<li>DTO模式：数据传输对象</li>
<li>模型验证：ValidationAttribute</li>
<li>错误处理：异常过滤器、问题详细信息</li>
<li>响应格式：统一响应格式</li>
<li>分页查询：PagedList、分页参数</li>
</ul>
</li>
</ul>
<h2 id="（三）身份认证与授权"><a href="#（三）身份认证与授权" class="headerlink" title="（三）身份认证与授权"></a>（三）身份认证与授权</h2><ul>
<li><p><strong>认证机制</strong></p>
<ul>
<li>Cookie认证：传统Web应用</li>
<li>JWT认证：无状态令牌</li>
<li>OAuth 2.0：第三方认证</li>
<li>Identity框架：用户管理、角色管理</li>
<li>多因素认证：2FA、TOTP</li>
</ul>
</li>
<li><p><strong>授权策略</strong></p>
<ul>
<li>基于角色：Role-based授权</li>
<li>基于声明：Claim-based授权</li>
<li>基于策略：Policy-based授权</li>
<li>资源授权：基于资源的授权</li>
<li>授权过滤器：自定义授权逻辑</li>
</ul>
</li>
</ul>
<h2 id="（四）数据访问层"><a href="#（四）数据访问层" class="headerlink" title="（四）数据访问层"></a>（四）数据访问层</h2><ul>
<li><p><strong>Entity Framework Core</strong></p>
<ul>
<li>Code First：代码优先开发</li>
<li>Database First：数据库优先开发</li>
<li>DbContext：数据库上下文</li>
<li>实体配置：Fluent API、数据注解</li>
<li>查询优化：Include、AsNoTracking</li>
</ul>
</li>
<li><p><strong>数据库操作</strong></p>
<ul>
<li>CRUD操作：增删改查</li>
<li>事务处理：数据库事务</li>
<li>并发控制：乐观并发、悲观并发</li>
<li>迁移管理：数据库版本控制</li>
<li>性能优化：查询性能、连接池</li>
</ul>
</li>
</ul>
<h1 id="五、企业级开发实践（4-5个月）"><a href="#五、企业级开发实践（4-5个月）" class="headerlink" title="五、企业级开发实践（4-5个月）"></a>五、企业级开发实践（4-5个月）</h1><h2 id="（一）微服务架构"><a href="#（一）微服务架构" class="headerlink" title="（一）微服务架构"></a>（一）微服务架构</h2><ul>
<li><p><strong>微服务设计</strong></p>
<ul>
<li>服务拆分：领域驱动设计</li>
<li>服务通信：HTTP、gRPC、消息队列</li>
<li>服务发现：Consul、Eureka</li>
<li>配置管理：配置中心、环境配置</li>
<li>服务网关：API Gateway、路由规则</li>
</ul>
</li>
<li><p><strong>分布式系统</strong></p>
<ul>
<li>分布式事务：Saga模式、两阶段提交</li>
<li>分布式锁：Redis锁、数据库锁</li>
<li>分布式缓存：Redis、MemoryCache</li>
<li>消息队列：RabbitMQ、Azure Service Bus</li>
<li>事件驱动：事件溯源、CQRS模式</li>
</ul>
</li>
</ul>
<h2 id="（二）云原生开发"><a href="#（二）云原生开发" class="headerlink" title="（二）云原生开发"></a>（二）云原生开发</h2><ul>
<li><p><strong>容器化部署</strong></p>
<ul>
<li>Docker：容器化应用</li>
<li>Dockerfile：镜像构建</li>
<li>Docker Compose：多容器编排</li>
<li>Kubernetes：容器编排平台</li>
<li>Helm：Kubernetes包管理</li>
</ul>
</li>
<li><p><strong>云平台集成</strong></p>
<ul>
<li>Azure：微软云平台</li>
<li>AWS：亚马逊云服务</li>
<li>云服务：存储、数据库、消息队列</li>
<li>无服务器：Azure Functions、AWS Lambda</li>
<li>DevOps：CI&#x2F;CD流水线</li>
</ul>
</li>
</ul>
<h2 id="（三）测试与质量保证"><a href="#（三）测试与质量保证" class="headerlink" title="（三）测试与质量保证"></a>（三）测试与质量保证</h2><ul>
<li><p><strong>单元测试</strong></p>
<ul>
<li>xUnit：测试框架</li>
<li>Moq：模拟框架</li>
<li>FluentAssertions：断言库</li>
<li>测试覆盖率：代码覆盖率分析</li>
<li>TDD：测试驱动开发</li>
</ul>
</li>
<li><p><strong>集成测试</strong></p>
<ul>
<li>WebApplicationFactory：Web应用测试</li>
<li>TestServer：测试服务器</li>
<li>数据库测试：内存数据库、测试数据</li>
<li>API测试：HTTP客户端测试</li>
<li>端到端测试：Selenium、Playwright</li>
</ul>
</li>
</ul>
<h2 id="（四）监控与运维"><a href="#（四）监控与运维" class="headerlink" title="（四）监控与运维"></a>（四）监控与运维</h2><ul>
<li><p><strong>应用监控</strong></p>
<ul>
<li>日志记录：结构化日志、日志聚合</li>
<li>性能监控：APM工具、性能计数器</li>
<li>健康检查：Health Check、存活探针</li>
<li>指标收集：Prometheus、Grafana</li>
<li>分布式追踪：OpenTelemetry、Jaeger</li>
</ul>
</li>
<li><p><strong>错误处理</strong></p>
<ul>
<li>异常管理：全局异常处理</li>
<li>错误日志：错误追踪、错误分析</li>
<li>故障恢复：重试机制、熔断器</li>
<li>监控告警：实时告警、通知机制</li>
<li>故障排查：诊断工具、调试技巧</li>
</ul>
</li>
</ul>
<h1 id="六、高级特性与新技术（2-3个月）"><a href="#六、高级特性与新技术（2-3个月）" class="headerlink" title="六、高级特性与新技术（2-3个月）"></a>六、高级特性与新技术（2-3个月）</h1><h2 id="（一）C-新特性"><a href="#（一）C-新特性" class="headerlink" title="（一）C#新特性"></a>（一）C#新特性</h2><ul>
<li><p><strong>C# 8.0特性</strong></p>
<ul>
<li>可空引用类型：null安全</li>
<li>模式匹配：switch表达式</li>
<li>异步流：IAsyncEnumerable</li>
<li>默认接口方法：接口实现</li>
<li>using声明：简化资源管理</li>
</ul>
</li>
<li><p><strong>C# 9.0+特性</strong></p>
<ul>
<li>记录类型：record关键字</li>
<li>初始化器：init访问器</li>
<li>顶级程序：简化Main方法</li>
<li>模式匹配增强：关系模式、逻辑模式</li>
<li>目标类型new：类型推断</li>
</ul>
</li>
</ul>
<h2 id="（二）性能优化技术"><a href="#（二）性能优化技术" class="headerlink" title="（二）性能优化技术"></a>（二）性能优化技术</h2><ul>
<li><p><strong>内存优化</strong></p>
<ul>
<li>Span<T>：栈上内存操作</T></li>
<li>Memory<T>：内存抽象</T></li>
<li>ArrayPool：数组池</li>
<li>对象池：ObjectPool模式</li>
<li>零分配：避免GC压力</li>
</ul>
</li>
<li><p><strong>并发优化</strong></p>
<ul>
<li>Channel：生产者消费者</li>
<li>ValueTask：减少分配</li>
<li>并行LINQ：PLINQ</li>
<li>无锁编程：Interlocked操作</li>
<li>异步优化：避免同步阻塞</li>
</ul>
</li>
</ul>
<h2 id="（三）跨平台开发"><a href="#（三）跨平台开发" class="headerlink" title="（三）跨平台开发"></a>（三）跨平台开发</h2><ul>
<li><p><strong>.NET MAUI</strong></p>
<ul>
<li>跨平台UI：Windows、macOS、iOS、Android</li>
<li>MVVM模式：数据绑定、命令</li>
<li>平台特定代码：条件编译</li>
<li>原生API访问：平台集成</li>
<li>应用发布：应用商店发布</li>
</ul>
</li>
<li><p><strong>Blazor开发</strong></p>
<ul>
<li>Blazor Server：服务器端渲染</li>
<li>Blazor WebAssembly：客户端运行</li>
<li>组件模型：可重用UI组件</li>
<li>JavaScript互操作：JS调用</li>
<li>PWA支持：渐进式Web应用</li>
</ul>
</li>
</ul>
<h1 id="七、项目实战与工程化（持续进行）"><a href="#七、项目实战与工程化（持续进行）" class="headerlink" title="七、项目实战与工程化（持续进行）"></a>七、项目实战与工程化（持续进行）</h1><h2 id="（一）项目实战案例"><a href="#（一）项目实战案例" class="headerlink" title="（一）项目实战案例"></a>（一）项目实战案例</h2><ul>
<li><p><strong>企业级Web应用</strong></p>
<ul>
<li>电商平台：商品管理、订单处理、支付集成</li>
<li>内容管理系统：文章发布、用户管理、权限控制</li>
<li>企业资源规划：ERP系统、业务流程管理</li>
<li>客户关系管理：CRM系统、销售管理</li>
<li>人力资源系统：HR管理、考勤系统</li>
</ul>
</li>
<li><p><strong>微服务项目</strong></p>
<ul>
<li>用户服务：用户注册、登录、个人信息</li>
<li>订单服务：订单创建、状态管理、支付处理</li>
<li>库存服务：商品库存、库存预留、库存同步</li>
<li>通知服务：邮件通知、短信通知、推送通知</li>
<li>网关服务：API网关、路由、认证授权</li>
</ul>
</li>
</ul>
<h2 id="（二）代码质量管理"><a href="#（二）代码质量管理" class="headerlink" title="（二）代码质量管理"></a>（二）代码质量管理</h2><ul>
<li><p><strong>代码规范</strong></p>
<ul>
<li>编码标准：命名约定、代码风格</li>
<li>代码审查：Pull Request、代码评审</li>
<li>静态分析：SonarQube、Roslyn分析器</li>
<li>代码度量：复杂度、可维护性</li>
<li>重构技巧：代码优化、设计模式</li>
</ul>
</li>
<li><p><strong>版本控制</strong></p>
<ul>
<li>Git工作流：分支策略、合并策略</li>
<li>语义化版本：版本号管理</li>
<li>变更日志：CHANGELOG维护</li>
<li>发布管理：版本发布、回滚策略</li>
<li>代码保护：分支保护、权限管理</li>
</ul>
</li>
</ul>
<h2 id="（三）DevOps实践"><a href="#（三）DevOps实践" class="headerlink" title="（三）DevOps实践"></a>（三）DevOps实践</h2><ul>
<li><p><strong>持续集成</strong></p>
<ul>
<li>Azure DevOps：微软DevOps平台</li>
<li>GitHub Actions：自动化工作流</li>
<li>构建管道：自动化构建、测试</li>
<li>代码质量门禁：质量检查、测试覆盖率</li>
<li>制品管理：NuGet包、Docker镜像</li>
</ul>
</li>
<li><p><strong>持续部署</strong></p>
<ul>
<li>部署策略：蓝绿部署、滚动部署</li>
<li>环境管理：开发、测试、生产环境</li>
<li>配置管理：环境配置、密钥管理</li>
<li>监控部署：部署监控、回滚机制</li>
<li>基础设施即代码：ARM模板、Terraform</li>
</ul>
</li>
</ul>
<h1 id="八、学习资源与职业发展"><a href="#八、学习资源与职业发展" class="headerlink" title="八、学习资源与职业发展"></a>八、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>官方资源</strong></p>
<ul>
<li>Microsoft Learn：官方学习平台</li>
<li>.NET文档：完整的技术文档</li>
<li>C#语言规范：语言标准文档</li>
<li>.NET API浏览器：API参考文档</li>
<li>Channel 9：微软技术视频</li>
</ul>
</li>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《C#本质论》：语言深入理解</li>
<li>《CLR via C#》：运行时机制</li>
<li>《C# in Depth》：语言高级特性</li>
<li>《Effective C#》：最佳实践</li>
<li>《.NET微服务架构》：微服务设计</li>
</ul>
</li>
<li><p><strong>在线资源</strong></p>
<ul>
<li>Pluralsight：专业技术课程</li>
<li>Microsoft Virtual Academy：免费在线课程</li>
<li>.NET Foundation：开源社区</li>
<li>NuGet Gallery：包管理仓库</li>
<li>Stack Overflow：技术问答社区</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>国外社区</strong></p>
<ul>
<li>.NET Foundation：官方基金会</li>
<li>Reddit：r&#x2F;dotnet、r&#x2F;csharp</li>
<li>Discord：.NET Community</li>
<li>GitHub：开源项目、代码协作</li>
<li>.NET Conf：年度技术大会</li>
</ul>
</li>
<li><p><strong>国内社区</strong></p>
<ul>
<li>.NET中文社区：中文技术交流</li>
<li>博客园：.NET技术博客</li>
<li>CSDN：技术文章、教程</li>
<li>掘金：前沿技术分享</li>
<li>微信群：技术交流群组</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>Web开发工程师</strong></p>
<ul>
<li>前端开发：Blazor、React、Vue集成</li>
<li>后端开发：API开发、微服务架构</li>
<li>全栈开发：前后端技术栈</li>
<li>DevOps工程师：自动化部署、运维</li>
<li>技术架构师：系统设计、技术选型</li>
</ul>
</li>
<li><p><strong>企业级开发专家</strong></p>
<ul>
<li>.NET架构师：企业级系统架构</li>
<li>微服务专家：分布式系统设计</li>
<li>云原生专家：云平台、容器化</li>
<li>性能优化专家：系统调优、性能分析</li>
<li>技术管理：团队管理、项目管理</li>
</ul>
</li>
</ul>
<h2 id="（四）认证与进阶"><a href="#（四）认证与进阶" class="headerlink" title="（四）认证与进阶"></a>（四）认证与进阶</h2><ul>
<li><p><strong>微软认证</strong></p>
<ul>
<li>Azure Developer Associate：Azure开发者</li>
<li>Azure Solutions Architect：Azure架构师</li>
<li>.NET Developer：.NET开发者认证</li>
<li>DevOps Engineer：DevOps工程师</li>
<li>Data Engineer：数据工程师</li>
</ul>
</li>
<li><p><strong>持续学习建议</strong></p>
<ul>
<li>关注.NET发展：新版本特性、路线图</li>
<li>参与开源项目：贡献代码、学习最佳实践</li>
<li>技术分享：博客写作、会议演讲</li>
<li>跨技术学习：前端、云计算、大数据</li>
<li>软技能提升：沟通、管理、业务理解</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：C#作为微软.NET生态系统的核心语言，以其强类型、面向对象、内存安全的特性，成为企业级应用开发的首选语言。从基础语法到高级特性，从Web开发到云原生应用，从单体架构到微服务，C#为开发者提供了完整的技术栈和丰富的生态系统。</p>
<p>学习C#不仅要掌握语言特性，更要理解.NET平台的设计理念和最佳实践。随着.NET的跨平台发展和云原生技术的兴起，C#开发者面临着更广阔的发展机遇。建议在学习过程中注重实践，通过实际项目来巩固理论知识，积极参与开源社区，关注技术发展趋势。掌握C#，将为您在企业级开发、云原生应用、微服务架构等领域打开广阔的职业发展空间。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、C-基础入门（1-2个月）"><a href="#一、C-基础入门（1-2个月）" class="headerlink" title="一、C#基础入门（1-2个月）"></a>一、C#基础入门（1-2个月）</h1><h2 id="（一）开发环境搭建"><a]]>
    </summary>
    
      <category term="Web开发" scheme="https://uwakeme.top/tags/Web%E5%BC%80%E5%8F%91/"/>
    
      <category term="C#" scheme="https://uwakeme.top/tags/C/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term=".NET" scheme="https://uwakeme.top/tags/NET/"/>
    
      <category term="企业级开发" scheme="https://uwakeme.top/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BC%80%E5%8F%91/"/>
    
      <category term="微软技术栈" scheme="https://uwakeme.top/tags/%E5%BE%AE%E8%BD%AF%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
      <category term="云原生" scheme="https://uwakeme.top/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】Go语言云原生开发之路：从简洁语法到微服务架构]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91Go%E8%AF%AD%E8%A8%80%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BC%80%E5%8F%91%E4%B9%8B%E8%B7%AF%EF%BC%9A%E4%BB%8E%E7%AE%80%E6%B4%81%E8%AF%AD%E6%B3%95%E5%88%B0%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】Go语言云原生开发之路：从简洁语法到微服务架构/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.196Z</updated>
    <content type="html"><![CDATA[<h1 id="一、Go语言基础入门（1-2个月）"><a href="#一、Go语言基础入门（1-2个月）" class="headerlink" title="一、Go语言基础入门（1-2个月）"></a>一、Go语言基础入门（1-2个月）</h1><h2 id="（一）环境搭建与工具链"><a href="#（一）环境搭建与工具链" class="headerlink" title="（一）环境搭建与工具链"></a>（一）环境搭建与工具链</h2><ul>
<li><p><strong>Go环境安装</strong></p>
<ul>
<li>官方安装：从golang.org下载安装包</li>
<li>版本管理：g、gvm等Go版本管理工具</li>
<li>环境变量：GOROOT、GOPATH、GOPROXY配置</li>
<li>Go Modules：现代依赖管理，go.mod文件</li>
<li>工作区设置：项目结构、包管理</li>
</ul>
</li>
<li><p><strong>开发工具选择</strong></p>
<ul>
<li>VS Code：轻量级，Go插件丰富</li>
<li>GoLand：JetBrains专业Go IDE</li>
<li>Vim&#x2F;Neovim：vim-go插件，高效编辑</li>
<li>Sublime Text：Go插件支持</li>
<li>命令行工具：go build、go run、go test</li>
</ul>
</li>
<li><p><strong>Go工具链</strong></p>
<ul>
<li>go fmt：代码格式化工具</li>
<li>go vet：静态分析工具</li>
<li>go doc：文档生成工具</li>
<li>go test：测试框架</li>
<li>go mod：模块管理工具</li>
<li>golint：代码规范检查</li>
<li>goimports：导入包管理</li>
</ul>
</li>
</ul>
<h2 id="（二）Go语言基础语法"><a href="#（二）Go语言基础语法" class="headerlink" title="（二）Go语言基础语法"></a>（二）Go语言基础语法</h2><ul>
<li><p><strong>基本语法特性</strong></p>
<ul>
<li>包声明：package关键字，main包</li>
<li>导入语句：import单个包、多个包</li>
<li>变量声明：var、短变量声明:&#x3D;</li>
<li>常量定义：const、iota枚举器</li>
<li>基本数据类型：bool、string、int、float、complex</li>
</ul>
</li>
<li><p><strong>控制结构</strong></p>
<ul>
<li>条件语句：if、if-else、switch-case</li>
<li>循环语句：for循环（唯一循环结构）</li>
<li>跳转语句：break、continue、goto、return</li>
<li>defer语句：延迟执行，资源清理</li>
<li>panic和recover：异常处理机制</li>
</ul>
</li>
<li><p><strong>函数与方法</strong></p>
<ul>
<li>函数定义：func关键字、参数、返回值</li>
<li>多返回值：Go语言特色，错误处理模式</li>
<li>可变参数：…语法，参数切片</li>
<li>匿名函数：函数字面量、闭包</li>
<li>方法定义：接收者方法、值接收者vs指针接收者</li>
</ul>
</li>
</ul>
<h2 id="（三）复合数据类型"><a href="#（三）复合数据类型" class="headerlink" title="（三）复合数据类型"></a>（三）复合数据类型</h2><ul>
<li><p><strong>数组与切片</strong></p>
<ul>
<li>数组：固定长度，值类型</li>
<li>切片：动态数组，引用类型</li>
<li>切片操作：append、copy、切片表达式</li>
<li>切片内部结构：指针、长度、容量</li>
<li>多维切片：切片的切片</li>
</ul>
</li>
<li><p><strong>映射（Map）</strong></p>
<ul>
<li>映射定义：make函数、字面量初始化</li>
<li>映射操作：增删改查、存在性检查</li>
<li>映射遍历：range关键字</li>
<li>映射特性：引用类型、无序性</li>
<li>并发安全：sync.Map、读写锁</li>
</ul>
</li>
<li><p><strong>结构体</strong></p>
<ul>
<li>结构体定义：type关键字、字段定义</li>
<li>结构体初始化：字面量、new函数</li>
<li>字段访问：点操作符、指针解引用</li>
<li>匿名字段：结构体嵌入、组合</li>
<li>结构体标签：反射、JSON序列化</li>
</ul>
</li>
<li><p><strong>指针</strong></p>
<ul>
<li>指针概念：内存地址、指针类型</li>
<li>指针操作：取地址&amp;、解引用*</li>
<li>指针传递：函数参数、性能优化</li>
<li>指针安全：Go的指针限制</li>
<li>指针与切片：底层数组访问</li>
</ul>
</li>
</ul>
<h1 id="二、Go语言核心特性（2-3个月）"><a href="#二、Go语言核心特性（2-3个月）" class="headerlink" title="二、Go语言核心特性（2-3个月）"></a>二、Go语言核心特性（2-3个月）</h1><h2 id="（一）接口与多态"><a href="#（一）接口与多态" class="headerlink" title="（一）接口与多态"></a>（一）接口与多态</h2><ul>
<li><p><strong>接口定义</strong></p>
<ul>
<li>接口声明：interface关键字</li>
<li>方法集合：接口方法签名</li>
<li>接口实现：隐式实现、鸭子类型</li>
<li>空接口：interface{}、类型断言</li>
<li>接口嵌入：接口组合</li>
</ul>
</li>
<li><p><strong>接口应用</strong></p>
<ul>
<li>多态性：接口变量、动态类型</li>
<li>类型断言：x.(T)语法、安全断言</li>
<li>类型选择：switch type语句</li>
<li>接口设计：小接口原则、组合优于继承</li>
<li>标准库接口：io.Reader、io.Writer、fmt.Stringer</li>
</ul>
</li>
</ul>
<h2 id="（二）并发编程基础"><a href="#（二）并发编程基础" class="headerlink" title="（二）并发编程基础"></a>（二）并发编程基础</h2><ul>
<li><p><strong>Goroutine</strong></p>
<ul>
<li>协程概念：轻量级线程、用户态调度</li>
<li>创建协程：go关键字</li>
<li>协程调度：GMP模型、抢占式调度</li>
<li>协程生命周期：创建、运行、阻塞、死亡</li>
<li>协程泄漏：常见问题、避免方法</li>
</ul>
</li>
<li><p><strong>Channel通信</strong></p>
<ul>
<li>通道概念：CSP模型、通信顺序进程</li>
<li>通道类型：有缓冲、无缓冲通道</li>
<li>通道操作：发送、接收、关闭</li>
<li>通道方向：单向通道、类型转换</li>
<li>select语句：多路复用、非阻塞通信</li>
</ul>
</li>
<li><p><strong>并发模式</strong></p>
<ul>
<li>生产者消费者：通道缓冲、流量控制</li>
<li>扇入扇出：多个输入、多个输出</li>
<li>管道模式：数据流处理、阶段性处理</li>
<li>工作池：任务分发、结果收集</li>
<li>超时控制：context包、取消机制</li>
</ul>
</li>
</ul>
<h2 id="（三）错误处理与测试"><a href="#（三）错误处理与测试" class="headerlink" title="（三）错误处理与测试"></a>（三）错误处理与测试</h2><ul>
<li><p><strong>错误处理</strong></p>
<ul>
<li>error接口：标准错误类型</li>
<li>错误创建：errors.New、fmt.Errorf</li>
<li>错误包装：errors.Wrap、错误链</li>
<li>错误检查：errors.Is、errors.As</li>
<li>自定义错误：实现error接口</li>
</ul>
</li>
<li><p><strong>测试框架</strong></p>
<ul>
<li>单元测试：testing包、Test函数</li>
<li>基准测试：Benchmark函数、性能测试</li>
<li>示例测试：Example函数、文档测试</li>
<li>表格驱动测试：测试用例组织</li>
<li>测试覆盖率：go test -cover</li>
</ul>
</li>
<li><p><strong>调试技巧</strong></p>
<ul>
<li>日志调试：log包、结构化日志</li>
<li>调试器：delve调试器、断点调试</li>
<li>性能分析：pprof工具、CPU&#x2F;内存分析</li>
<li>竞态检测：go test -race</li>
<li>静态分析：go vet、golangci-lint</li>
</ul>
</li>
</ul>
<h1 id="三、标准库与生态系统（2-3个月）"><a href="#三、标准库与生态系统（2-3个月）" class="headerlink" title="三、标准库与生态系统（2-3个月）"></a>三、标准库与生态系统（2-3个月）</h1><h2 id="（一）核心标准库"><a href="#（一）核心标准库" class="headerlink" title="（一）核心标准库"></a>（一）核心标准库</h2><ul>
<li><p><strong>字符串处理</strong></p>
<ul>
<li>strings包：字符串操作函数</li>
<li>strconv包：类型转换、格式化</li>
<li>regexp包：正则表达式、模式匹配</li>
<li>unicode包：Unicode字符处理</li>
<li>文本模板：text&#x2F;template、html&#x2F;template</li>
</ul>
</li>
<li><p><strong>时间处理</strong></p>
<ul>
<li>time包：时间类型、时区处理</li>
<li>时间格式化：Layout格式、解析</li>
<li>时间计算：Duration、时间间隔</li>
<li>定时器：Timer、Ticker</li>
<li>时间比较：Before、After、Equal</li>
</ul>
</li>
<li><p><strong>数学计算</strong></p>
<ul>
<li>math包：数学函数、常量</li>
<li>math&#x2F;rand包：随机数生成</li>
<li>math&#x2F;big包：大数运算</li>
<li>sort包：排序算法、自定义排序</li>
<li>crypto包：加密算法、哈希函数</li>
</ul>
</li>
</ul>
<h2 id="（二）I-O与文件操作"><a href="#（二）I-O与文件操作" class="headerlink" title="（二）I&#x2F;O与文件操作"></a>（二）I&#x2F;O与文件操作</h2><ul>
<li><p><strong>I&#x2F;O接口</strong></p>
<ul>
<li>io包：Reader、Writer、Closer接口</li>
<li>io&#x2F;ioutil包：便利函数（已废弃）</li>
<li>bufio包：缓冲I&#x2F;O、Scanner</li>
<li>bytes包：字节操作、Buffer类型</li>
<li>流式处理：管道、数据流</li>
</ul>
</li>
<li><p><strong>文件系统</strong></p>
<ul>
<li>os包：文件操作、进程环境</li>
<li>path&#x2F;filepath包：路径操作、遍历</li>
<li>文件读写：Open、Create、Read、Write</li>
<li>目录操作：Mkdir、ReadDir、Walk</li>
<li>文件权限：FileMode、权限控制</li>
</ul>
</li>
</ul>
<h2 id="（三）网络编程"><a href="#（三）网络编程" class="headerlink" title="（三）网络编程"></a>（三）网络编程</h2><ul>
<li><p><strong>HTTP编程</strong></p>
<ul>
<li>net&#x2F;http包：HTTP客户端、服务器</li>
<li>HTTP客户端：Get、Post、Do方法</li>
<li>HTTP服务器：ListenAndServe、Handler接口</li>
<li>中间件：HandlerFunc、中间件链</li>
<li>路由处理：ServeMux、第三方路由器</li>
</ul>
</li>
<li><p><strong>TCP&#x2F;UDP编程</strong></p>
<ul>
<li>net包：网络连接、地址解析</li>
<li>TCP编程：Listen、Accept、Dial</li>
<li>UDP编程：ListenUDP、DialUDP</li>
<li>连接管理：超时、Keep-Alive</li>
<li>网络工具：ping、端口扫描</li>
</ul>
</li>
<li><p><strong>JSON与序列化</strong></p>
<ul>
<li>encoding&#x2F;json包：JSON编解码</li>
<li>结构体标签：json标签、字段映射</li>
<li>自定义序列化：MarshalJSON、UnmarshalJSON</li>
<li>其他格式：XML、CSV、Base64</li>
<li>协议缓冲：Protocol Buffers、gRPC</li>
</ul>
</li>
</ul>
<h1 id="四、Web开发与框架（3-4个月）"><a href="#四、Web开发与框架（3-4个月）" class="headerlink" title="四、Web开发与框架（3-4个月）"></a>四、Web开发与框架（3-4个月）</h1><h2 id="（一）Web框架选择"><a href="#（一）Web框架选择" class="headerlink" title="（一）Web框架选择"></a>（一）Web框架选择</h2><ul>
<li><p><strong>Gin框架</strong></p>
<ul>
<li>轻量级：高性能HTTP框架</li>
<li>路由系统：RESTful路由、参数绑定</li>
<li>中间件：认证、日志、CORS、限流</li>
<li>数据绑定：JSON、XML、Form绑定</li>
<li>模板渲染：HTML模板、静态文件</li>
</ul>
</li>
<li><p><strong>Echo框架</strong></p>
<ul>
<li>高性能：优化的HTTP路由器</li>
<li>中间件：丰富的内置中间件</li>
<li>数据绑定：自动数据绑定验证</li>
<li>WebSocket：实时通信支持</li>
<li>测试友好：易于单元测试</li>
</ul>
</li>
<li><p><strong>Fiber框架</strong></p>
<ul>
<li>Express风格：类似Node.js Express</li>
<li>零内存分配：高性能路由器</li>
<li>快速开发：简洁的API设计</li>
<li>中间件：Express风格中间件</li>
<li>WebSocket：内置WebSocket支持</li>
</ul>
</li>
</ul>
<h2 id="（二）数据库操作"><a href="#（二）数据库操作" class="headerlink" title="（二）数据库操作"></a>（二）数据库操作</h2><ul>
<li><p><strong>SQL数据库</strong></p>
<ul>
<li>database&#x2F;sql包：标准数据库接口</li>
<li>MySQL驱动：go-sql-driver&#x2F;mysql</li>
<li>PostgreSQL驱动：lib&#x2F;pq、pgx</li>
<li>连接池：sql.DB连接池管理</li>
<li>事务处理：Begin、Commit、Rollback</li>
</ul>
</li>
<li><p><strong>ORM框架</strong></p>
<ul>
<li>GORM：功能丰富的ORM框架</li>
<li>模型定义：结构体映射、关联关系</li>
<li>查询构建：链式查询、原生SQL</li>
<li>迁移管理：自动迁移、版本控制</li>
<li>钩子函数：BeforeCreate、AfterUpdate</li>
</ul>
</li>
<li><p><strong>NoSQL数据库</strong></p>
<ul>
<li>Redis：go-redis客户端</li>
<li>MongoDB：mongo-driver官方驱动</li>
<li>缓存策略：本地缓存、分布式缓存</li>
<li>数据建模：文档设计、索引优化</li>
<li>连接管理：连接池、故障转移</li>
</ul>
</li>
</ul>
<h2 id="（三）API开发"><a href="#（三）API开发" class="headerlink" title="（三）API开发"></a>（三）API开发</h2><ul>
<li><p><strong>RESTful API</strong></p>
<ul>
<li>REST原则：资源、HTTP方法、状态码</li>
<li>API设计：URL设计、版本控制</li>
<li>数据验证：参数验证、业务规则</li>
<li>错误处理：统一错误格式、错误码</li>
<li>API文档：Swagger、OpenAPI规范</li>
</ul>
</li>
<li><p><strong>GraphQL</strong></p>
<ul>
<li>GraphQL概念：查询语言、类型系统</li>
<li>gqlgen：Go的GraphQL代码生成器</li>
<li>Schema定义：类型、查询、变更</li>
<li>解析器：Resolver函数实现</li>
<li>数据加载：DataLoader、N+1问题</li>
</ul>
</li>
<li><p><strong>gRPC服务</strong></p>
<ul>
<li>Protocol Buffers：接口定义语言</li>
<li>gRPC框架：高性能RPC框架</li>
<li>服务定义：proto文件、代码生成</li>
<li>流式RPC：单向流、双向流</li>
<li>拦截器：认证、日志、监控</li>
</ul>
</li>
</ul>
<h1 id="五、微服务与云原生（4-5个月）"><a href="#五、微服务与云原生（4-5个月）" class="headerlink" title="五、微服务与云原生（4-5个月）"></a>五、微服务与云原生（4-5个月）</h1><h2 id="（一）微服务架构"><a href="#（一）微服务架构" class="headerlink" title="（一）微服务架构"></a>（一）微服务架构</h2><ul>
<li><p><strong>服务拆分</strong></p>
<ul>
<li>领域驱动设计：DDD、边界上下文</li>
<li>服务划分：业务能力、数据一致性</li>
<li>接口设计：API网关、服务契约</li>
<li>数据管理：数据库分离、事件驱动</li>
<li>服务治理：服务注册、服务发现</li>
</ul>
</li>
<li><p><strong>服务通信</strong></p>
<ul>
<li>同步通信：HTTP、gRPC</li>
<li>异步通信：消息队列、事件总线</li>
<li>服务网格：Istio、Linkerd</li>
<li>负载均衡：客户端、服务端负载均衡</li>
<li>熔断降级：Circuit Breaker、限流</li>
</ul>
</li>
<li><p><strong>配置管理</strong></p>
<ul>
<li>配置中心：Consul、etcd、Nacos</li>
<li>环境配置：开发、测试、生产环境</li>
<li>动态配置：热更新、配置推送</li>
<li>配置安全：敏感信息加密、权限控制</li>
<li>配置版本：配置历史、回滚机制</li>
</ul>
</li>
</ul>
<h2 id="（二）容器化与编排"><a href="#（二）容器化与编排" class="headerlink" title="（二）容器化与编排"></a>（二）容器化与编排</h2><ul>
<li><p><strong>Docker容器</strong></p>
<ul>
<li>Dockerfile：镜像构建、多阶段构建</li>
<li>镜像优化：分层缓存、体积优化</li>
<li>容器运行：端口映射、数据卷</li>
<li>容器网络：bridge、host、overlay</li>
<li>容器监控：日志收集、健康检查</li>
</ul>
</li>
<li><p><strong>Kubernetes</strong></p>
<ul>
<li>核心概念：Pod、Service、Deployment</li>
<li>配置管理：ConfigMap、Secret</li>
<li>存储管理：PV、PVC、StorageClass</li>
<li>网络管理：Ingress、NetworkPolicy</li>
<li>自动扩缩容：HPA、VPA、Cluster Autoscaler</li>
</ul>
</li>
<li><p><strong>Helm包管理</strong></p>
<ul>
<li>Chart模板：Kubernetes应用打包</li>
<li>值文件：参数化配置</li>
<li>版本管理：应用版本、回滚</li>
<li>仓库管理：Chart仓库、依赖管理</li>
<li>最佳实践：Chart开发、测试</li>
</ul>
</li>
</ul>
<h2 id="（三）监控与可观测性"><a href="#（三）监控与可观测性" class="headerlink" title="（三）监控与可观测性"></a>（三）监控与可观测性</h2><ul>
<li><p><strong>日志管理</strong></p>
<ul>
<li>结构化日志：logrus、zap日志库</li>
<li>日志收集：Fluentd、Filebeat</li>
<li>日志存储：Elasticsearch、Loki</li>
<li>日志分析：Kibana、Grafana</li>
<li>日志规范：格式统一、级别管理</li>
</ul>
</li>
<li><p><strong>指标监控</strong></p>
<ul>
<li>Prometheus：指标收集、存储</li>
<li>指标类型：Counter、Gauge、Histogram</li>
<li>指标暴露：&#x2F;metrics端点、客户端库</li>
<li>告警规则：AlertManager、告警路由</li>
<li>可视化：Grafana仪表板、图表</li>
</ul>
</li>
<li><p><strong>链路追踪</strong></p>
<ul>
<li>OpenTelemetry：可观测性标准</li>
<li>Jaeger：分布式追踪系统</li>
<li>链路采样：采样策略、性能影响</li>
<li>链路分析：延迟分析、错误定位</li>
<li>集成方式：自动埋点、手动埋点</li>
</ul>
</li>
</ul>
<h1 id="六、高级特性与性能优化（3-4个月）"><a href="#六、高级特性与性能优化（3-4个月）" class="headerlink" title="六、高级特性与性能优化（3-4个月）"></a>六、高级特性与性能优化（3-4个月）</h1><h2 id="（一）内存管理与GC"><a href="#（一）内存管理与GC" class="headerlink" title="（一）内存管理与GC"></a>（一）内存管理与GC</h2><ul>
<li><p><strong>内存模型</strong></p>
<ul>
<li>堆栈分配：逃逸分析、栈上分配</li>
<li>垃圾回收：三色标记、并发GC</li>
<li>内存布局：对象头、指针压缩</li>
<li>内存泄漏：常见原因、检测方法</li>
<li>内存优化：对象池、内存复用</li>
</ul>
</li>
<li><p><strong>性能分析</strong></p>
<ul>
<li>pprof工具：CPU、内存、阻塞分析</li>
<li>火焰图：性能热点可视化</li>
<li>基准测试：性能回归、对比分析</li>
<li>压力测试：负载测试、容量规划</li>
<li>性能调优：算法优化、并发优化</li>
</ul>
</li>
</ul>
<h2 id="（二）并发编程进阶"><a href="#（二）并发编程进阶" class="headerlink" title="（二）并发编程进阶"></a>（二）并发编程进阶</h2><ul>
<li><p><strong>Context包</strong></p>
<ul>
<li>上下文传递：请求上下文、取消信号</li>
<li>超时控制：WithTimeout、WithDeadline</li>
<li>值传递：WithValue、上下文值</li>
<li>取消机制：WithCancel、Done通道</li>
<li>最佳实践：上下文传递、错误处理</li>
</ul>
</li>
<li><p><strong>同步原语</strong></p>
<ul>
<li>sync包：Mutex、RWMutex、WaitGroup</li>
<li>原子操作：sync&#x2F;atomic包、无锁编程</li>
<li>条件变量：sync.Cond、等待通知</li>
<li>单次执行：sync.Once、懒加载</li>
<li>并发安全：数据竞争、内存可见性</li>
</ul>
</li>
<li><p><strong>并发模式</strong></p>
<ul>
<li>Worker Pool：任务队列、工作协程</li>
<li>Pipeline：流水线处理、阶段分离</li>
<li>Fan-in&#x2F;Fan-out：聚合分发、负载均衡</li>
<li>Rate Limiting：令牌桶、漏桶算法</li>
<li>Circuit Breaker：熔断器、故障隔离</li>
</ul>
</li>
</ul>
<h2 id="（三）反射与代码生成"><a href="#（三）反射与代码生成" class="headerlink" title="（三）反射与代码生成"></a>（三）反射与代码生成</h2><ul>
<li><p><strong>反射机制</strong></p>
<ul>
<li>reflect包：类型信息、值操作</li>
<li>类型检查：Type、Kind、方法集</li>
<li>值操作：Value、字段访问、方法调用</li>
<li>结构体标签：Tag解析、元数据</li>
<li>性能考虑：反射开销、缓存优化</li>
</ul>
</li>
<li><p><strong>代码生成</strong></p>
<ul>
<li>go generate：代码生成工具</li>
<li>模板生成：text&#x2F;template、代码模板</li>
<li>AST操作：go&#x2F;ast、语法树分析</li>
<li>工具开发：命令行工具、插件</li>
<li>最佳实践：生成代码管理、版本控制</li>
</ul>
</li>
</ul>
<h1 id="七、项目实战与工程化（持续进行）"><a href="#七、项目实战与工程化（持续进行）" class="headerlink" title="七、项目实战与工程化（持续进行）"></a>七、项目实战与工程化（持续进行）</h1><h2 id="（一）项目实战案例"><a href="#（一）项目实战案例" class="headerlink" title="（一）项目实战案例"></a>（一）项目实战案例</h2><ul>
<li><p><strong>Web API服务</strong></p>
<ul>
<li>用户管理系统：注册、登录、权限控制</li>
<li>内容管理：文章发布、评论、搜索</li>
<li>文件服务：上传、下载、图片处理</li>
<li>支付集成：第三方支付、订单管理</li>
<li>实时通信：WebSocket、消息推送</li>
</ul>
</li>
<li><p><strong>微服务项目</strong></p>
<ul>
<li>电商系统：用户、商品、订单、支付服务</li>
<li>社交平台：用户关系、动态、推荐服务</li>
<li>物联网平台：设备管理、数据采集、规则引擎</li>
<li>金融系统：账户、交易、风控、清算服务</li>
<li>游戏后端：匹配、房间、排行榜服务</li>
</ul>
</li>
</ul>
<h2 id="（二）工程化实践"><a href="#（二）工程化实践" class="headerlink" title="（二）工程化实践"></a>（二）工程化实践</h2><ul>
<li><p><strong>代码质量</strong></p>
<ul>
<li>代码规范：gofmt、golint、golangci-lint</li>
<li>代码审查：Pull Request、代码评审</li>
<li>单元测试：测试覆盖率、测试策略</li>
<li>集成测试：API测试、端到端测试</li>
<li>性能测试：基准测试、压力测试</li>
</ul>
</li>
<li><p><strong>CI&#x2F;CD流水线</strong></p>
<ul>
<li>版本控制：Git工作流、分支策略</li>
<li>持续集成：GitHub Actions、Jenkins</li>
<li>自动化测试：测试自动化、质量门禁</li>
<li>构建部署：Docker镜像、Kubernetes部署</li>
<li>监控告警：应用监控、业务监控</li>
</ul>
</li>
</ul>
<h2 id="（三）安全与运维"><a href="#（三）安全与运维" class="headerlink" title="（三）安全与运维"></a>（三）安全与运维</h2><ul>
<li><p><strong>应用安全</strong></p>
<ul>
<li>身份认证：JWT、OAuth2、OIDC</li>
<li>权限控制：RBAC、ABAC、资源权限</li>
<li>数据安全：加密存储、传输加密</li>
<li>输入验证：参数校验、SQL注入防护</li>
<li>安全审计：操作日志、安全事件</li>
</ul>
</li>
<li><p><strong>运维监控</strong></p>
<ul>
<li>健康检查：存活探针、就绪探针</li>
<li>性能监控：响应时间、吞吐量、错误率</li>
<li>资源监控：CPU、内存、磁盘、网络</li>
<li>业务监控：业务指标、用户行为</li>
<li>故障处理：告警响应、故障恢复</li>
</ul>
</li>
</ul>
<h1 id="八、学习资源与职业发展"><a href="#八、学习资源与职业发展" class="headerlink" title="八、学习资源与职业发展"></a>八、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>官方资源</strong></p>
<ul>
<li>Go官方文档：golang.org完整文档</li>
<li>Go语言规范：语言标准、语法规范</li>
<li>Go博客：官方技术博客、最佳实践</li>
<li>Go Playground：在线代码运行环境</li>
<li>Go Wiki：社区维护的知识库</li>
</ul>
</li>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《Go语言圣经》：全面的Go语言教程</li>
<li>《Go语言实战》：实战项目、最佳实践</li>
<li>《Go并发编程实战》：并发编程深入</li>
<li>《Go语言高级编程》：高级特性、性能优化</li>
<li>《微服务设计》：微服务架构理论</li>
</ul>
</li>
<li><p><strong>在线资源</strong></p>
<ul>
<li>Go by Example：代码示例学习</li>
<li>Awesome Go：Go生态资源汇总</li>
<li>GopherCon：Go语言大会视频</li>
<li>Go Time播客：Go社区播客节目</li>
<li>GitHub：开源项目、代码学习</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>国外社区</strong></p>
<ul>
<li>Reddit：r&#x2F;golang社区讨论</li>
<li>Stack Overflow：技术问答</li>
<li>Gopher Slack：Go开发者聊天</li>
<li>GitHub：开源项目、代码协作</li>
<li>Medium：技术文章、经验分享</li>
</ul>
</li>
<li><p><strong>国内社区</strong></p>
<ul>
<li>Go中国：Go语言中文社区</li>
<li>掘金：技术文章、经验分享</li>
<li>CSDN：技术博客、问答</li>
<li>知乎：技术讨论、经验分享</li>
<li>博客园：技术博客、代码分享</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>后端开发工程师</strong></p>
<ul>
<li>Web API开发：RESTful、GraphQL服务</li>
<li>微服务架构：服务拆分、治理</li>
<li>数据库设计：关系型、NoSQL数据库</li>
<li>性能优化：并发、缓存、数据库优化</li>
<li>系统设计：高可用、高并发、可扩展</li>
</ul>
</li>
<li><p><strong>云原生工程师</strong></p>
<ul>
<li>容器化：Docker、Kubernetes</li>
<li>服务网格：Istio、Linkerd</li>
<li>监控运维：Prometheus、Grafana</li>
<li>CI&#x2F;CD：自动化部署、DevOps</li>
<li>云平台：AWS、Azure、阿里云</li>
</ul>
</li>
<li><p><strong>架构师&#x2F;技术专家</strong></p>
<ul>
<li>系统架构：分布式系统设计</li>
<li>技术选型：框架选择、技术评估</li>
<li>团队管理：技术团队、项目管理</li>
<li>技术布道：技术分享、社区贡献</li>
<li>产品规划：技术路线、产品架构</li>
</ul>
</li>
</ul>
<h2 id="（四）持续学习建议"><a href="#（四）持续学习建议" class="headerlink" title="（四）持续学习建议"></a>（四）持续学习建议</h2><ul>
<li><p><strong>技术深度</strong></p>
<ul>
<li>分布式系统：一致性、可用性、分区容错</li>
<li>数据库原理：存储引擎、事务、索引</li>
<li>网络协议：TCP&#x2F;IP、HTTP、gRPC</li>
<li>操作系统：进程、线程、内存管理</li>
<li>算法数据结构：复杂度分析、优化</li>
</ul>
</li>
<li><p><strong>相关技术</strong></p>
<ul>
<li>Rust：系统编程、性能优化</li>
<li>Python：数据分析、机器学习</li>
<li>JavaScript：前端开发、Node.js</li>
<li>Kubernetes：容器编排、云原生</li>
<li>消息队列：Kafka、RabbitMQ、NATS</li>
</ul>
</li>
<li><p><strong>软技能培养</strong></p>
<ul>
<li>问题解决：分析问题、设计方案</li>
<li>学习能力：快速学习、技术跟进</li>
<li>沟通协作：团队协作、技术交流</li>
<li>项目管理：时间管理、资源协调</li>
<li>技术写作：文档编写、技术分享</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：Go语言以其简洁的语法、强大的并发能力和优秀的性能，成为云原生时代的首选语言之一。学习Go语言不仅要掌握语法特性，更要理解其设计哲学：简洁、高效、并发。从基础语法到微服务架构，从单体应用到云原生部署，Go语言为开发者提供了完整的技术栈。建议在学习过程中多实践、多思考，通过实际项目来巩固理论知识，积极参与开源社区，关注技术发展趋势。掌握Go语言，将为您在后端开发、云原生、微服务等领域打开广阔的职业发展空间。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、Go语言基础入门（1-2个月）"><a href="#一、Go语言基础入门（1-2个月）" class="headerlink" title="一、Go语言基础入门（1-2个月）"></a>一、Go语言基础入门（1-2个月）</h1><h2 id="（一）环境]]>
    </summary>
    
      <category term="后端开发" scheme="https://uwakeme.top/tags/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="微服务" scheme="https://uwakeme.top/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="云原生" scheme="https://uwakeme.top/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
      <category term="并发编程" scheme="https://uwakeme.top/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
      <category term="Go语言" scheme="https://uwakeme.top/tags/Go%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Golang" scheme="https://uwakeme.top/tags/Golang/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】C语言从零到大神：系统编程的必经之路]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91C%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E8%AF%A6%E7%BB%86%E7%AC%94%E8%AE%B0/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】C语言开发学习路线详细笔记/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.195Z</updated>
    <content type="html"><![CDATA[<h1 id="一、C语言基础入门（1-2个月）"><a href="#一、C语言基础入门（1-2个月）" class="headerlink" title="一、C语言基础入门（1-2个月）"></a>一、C语言基础入门（1-2个月）</h1><h2 id="（一）开发环境搭建"><a href="#（一）开发环境搭建" class="headerlink" title="（一）开发环境搭建"></a>（一）开发环境搭建</h2><ul>
<li><p><strong>编译器选择</strong></p>
<ul>
<li>GCC：GNU编译器集合，跨平台支持</li>
<li>Clang：LLVM项目编译器，错误信息友好</li>
<li>MSVC：Microsoft Visual C++编译器</li>
<li>MinGW：Windows下的GCC移植版本</li>
</ul>
</li>
<li><p><strong>集成开发环境</strong></p>
<ul>
<li>Code::Blocks：轻量级，适合初学者</li>
<li>Dev-C++：简单易用的Windows IDE</li>
<li>Visual Studio：功能强大的Windows IDE</li>
<li>CLion：JetBrains出品的专业C&#x2F;C++ IDE</li>
<li>VS Code：轻量级编辑器，配置灵活</li>
</ul>
</li>
<li><p><strong>命令行工具</strong></p>
<ul>
<li>编译命令：gcc、clang基本用法</li>
<li>调试工具：gdb调试器使用</li>
<li>构建工具：make、CMake入门</li>
<li>版本控制：Git基础操作</li>
</ul>
</li>
</ul>
<h2 id="（二）C语言基础语法"><a href="#（二）C语言基础语法" class="headerlink" title="（二）C语言基础语法"></a>（二）C语言基础语法</h2><ul>
<li><p><strong>程序结构</strong></p>
<ul>
<li>Hello World程序：第一个C程序</li>
<li>预处理指令：#include、#define、#ifdef</li>
<li>main函数：程序入口点</li>
<li>注释：单行注释&#x2F;&#x2F;、多行注释&#x2F;* *&#x2F;</li>
<li>代码风格：缩进、命名规范</li>
</ul>
</li>
<li><p><strong>数据类型与变量</strong></p>
<ul>
<li>基本数据类型：char、int、float、double</li>
<li>类型修饰符：short、long、signed、unsigned</li>
<li>变量声明与初始化</li>
<li>常量：const关键字、#define宏定义</li>
<li>字面量：整数、浮点数、字符、字符串</li>
</ul>
</li>
<li><p><strong>运算符与表达式</strong></p>
<ul>
<li>算术运算符：+、-、*、&#x2F;、%</li>
<li>关系运算符：&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;、&#x3D;&#x3D;、!&#x3D;</li>
<li>逻辑运算符：&amp;&amp;、||、!</li>
<li>位运算符：&amp;、|、^、~、&lt;&lt;、&gt;&gt;</li>
<li>赋值运算符：&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;</li>
<li>自增自减：++、–（前缀和后缀）</li>
<li>三元运算符：condition ? value1 : value2</li>
</ul>
</li>
</ul>
<h2 id="（三）控制结构"><a href="#（三）控制结构" class="headerlink" title="（三）控制结构"></a>（三）控制结构</h2><ul>
<li><p><strong>条件语句</strong></p>
<ul>
<li>if语句：单分支条件判断</li>
<li>if-else语句：双分支条件判断</li>
<li>if-else if-else：多分支条件判断</li>
<li>switch-case语句：多值匹配</li>
<li>嵌套条件语句：条件语句的嵌套使用</li>
</ul>
</li>
<li><p><strong>循环语句</strong></p>
<ul>
<li>while循环：条件循环</li>
<li>do-while循环：至少执行一次的循环</li>
<li>for循环：计数循环</li>
<li>嵌套循环：循环的嵌套使用</li>
<li>无限循环：死循环的创建和避免</li>
</ul>
</li>
<li><p><strong>跳转语句</strong></p>
<ul>
<li>break语句：跳出循环或switch</li>
<li>continue语句：跳过本次循环</li>
<li>goto语句：无条件跳转（不推荐使用）</li>
<li>return语句：函数返回</li>
</ul>
</li>
</ul>
<h2 id="（四）函数基础"><a href="#（四）函数基础" class="headerlink" title="（四）函数基础"></a>（四）函数基础</h2><ul>
<li><p><strong>函数定义与调用</strong></p>
<ul>
<li>函数声明：函数原型</li>
<li>函数定义：返回类型、函数名、参数列表</li>
<li>函数调用：实参与形参</li>
<li>返回值：return语句的使用</li>
</ul>
</li>
<li><p><strong>参数传递</strong></p>
<ul>
<li>值传递：基本数据类型的传递</li>
<li>地址传递：指针参数的使用</li>
<li>数组参数：数组作为函数参数</li>
<li>函数参数的默认值（C99标准）</li>
</ul>
</li>
<li><p><strong>函数类型</strong></p>
<ul>
<li>无参函数：void参数列表</li>
<li>有参函数：多个参数的处理</li>
<li>递归函数：函数调用自身</li>
<li>内联函数：inline关键字（C99）</li>
</ul>
</li>
</ul>
<h1 id="二、数组与字符串（2-3个月）"><a href="#二、数组与字符串（2-3个月）" class="headerlink" title="二、数组与字符串（2-3个月）"></a>二、数组与字符串（2-3个月）</h1><h2 id="（一）数组基础"><a href="#（一）数组基础" class="headerlink" title="（一）数组基础"></a>（一）数组基础</h2><ul>
<li><p><strong>一维数组</strong></p>
<ul>
<li>数组声明：类型 数组名[大小]</li>
<li>数组初始化：静态初始化、动态初始化</li>
<li>数组访问：下标访问、边界检查</li>
<li>数组遍历：for循环遍历数组元素</li>
<li>数组长度：sizeof计算数组大小</li>
</ul>
</li>
<li><p><strong>多维数组</strong></p>
<ul>
<li>二维数组：矩阵的表示和操作</li>
<li>三维数组：立体数据结构</li>
<li>多维数组的初始化</li>
<li>多维数组的遍历：嵌套循环</li>
<li>内存布局：行优先存储</li>
</ul>
</li>
<li><p><strong>数组应用</strong></p>
<ul>
<li>数组排序：冒泡排序、选择排序、插入排序</li>
<li>数组查找：线性查找、二分查找</li>
<li>数组统计：最大值、最小值、平均值</li>
<li>数组操作：复制、合并、分割</li>
</ul>
</li>
</ul>
<h2 id="（二）字符串处理"><a href="#（二）字符串处理" class="headerlink" title="（二）字符串处理"></a>（二）字符串处理</h2><ul>
<li><p><strong>字符串基础</strong></p>
<ul>
<li>字符串定义：字符数组、字符串字面量</li>
<li>字符串结束符：’\0’的作用</li>
<li>字符串初始化：多种初始化方式</li>
<li>字符串输入输出：scanf、printf、gets、puts</li>
</ul>
</li>
<li><p><strong>字符串函数库</strong></p>
<ul>
<li>strlen：计算字符串长度</li>
<li>strcpy、strncpy：字符串复制</li>
<li>strcat、strncat：字符串连接</li>
<li>strcmp、strncmp：字符串比较</li>
<li>strchr、strstr：字符串查找</li>
<li>strtok：字符串分割</li>
</ul>
</li>
<li><p><strong>字符串操作实践</strong></p>
<ul>
<li>字符串反转：逆序排列字符</li>
<li>字符串统计：字符频率统计</li>
<li>字符串转换：大小写转换</li>
<li>字符串验证：回文判断、有效性检查</li>
</ul>
</li>
</ul>
<h2 id="（三）字符处理"><a href="#（三）字符处理" class="headerlink" title="（三）字符处理"></a>（三）字符处理</h2><ul>
<li><p><strong>字符分类函数</strong></p>
<ul>
<li>isalpha：判断字母</li>
<li>isdigit：判断数字</li>
<li>isalnum：判断字母或数字</li>
<li>isspace：判断空白字符</li>
<li>isupper、islower：判断大小写</li>
</ul>
</li>
<li><p><strong>字符转换函数</strong></p>
<ul>
<li>toupper：转换为大写</li>
<li>tolower：转换为小写</li>
<li>字符编码：ASCII码表</li>
<li>字符运算：字符的算术运算</li>
</ul>
</li>
</ul>
<h1 id="三、指针与内存管理（2-3个月）"><a href="#三、指针与内存管理（2-3个月）" class="headerlink" title="三、指针与内存管理（2-3个月）"></a>三、指针与内存管理（2-3个月）</h1><h2 id="（一）指针基础"><a href="#（一）指针基础" class="headerlink" title="（一）指针基础"></a>（一）指针基础</h2><ul>
<li><p><strong>指针概念</strong></p>
<ul>
<li>指针定义：存储地址的变量</li>
<li>指针声明：类型 *指针名</li>
<li>指针初始化：指向变量的地址</li>
<li>取地址运算符：&amp;操作符</li>
<li>解引用运算符：*操作符</li>
</ul>
</li>
<li><p><strong>指针操作</strong></p>
<ul>
<li>指针赋值：指针变量的赋值</li>
<li>指针运算：指针的算术运算</li>
<li>指针比较：指针的关系运算</li>
<li>空指针：NULL指针的使用</li>
<li>野指针：悬空指针的避免</li>
</ul>
</li>
<li><p><strong>指针与数组</strong></p>
<ul>
<li>数组名与指针：数组名的本质</li>
<li>指针访问数组：通过指针遍历数组</li>
<li>指针运算：指针的递增递减</li>
<li>数组参数：数组作为函数参数的本质</li>
</ul>
</li>
</ul>
<h2 id="（二）高级指针应用"><a href="#（二）高级指针应用" class="headerlink" title="（二）高级指针应用"></a>（二）高级指针应用</h2><ul>
<li><p><strong>指针与函数</strong></p>
<ul>
<li>函数指针：指向函数的指针</li>
<li>指针作为参数：通过指针修改变量值</li>
<li>指针作为返回值：返回指针的函数</li>
<li>回调函数：函数指针的应用</li>
</ul>
</li>
<li><p><strong>多级指针</strong></p>
<ul>
<li>二级指针：指向指针的指针</li>
<li>指针数组：存储指针的数组</li>
<li>数组指针：指向数组的指针</li>
<li>指针与二维数组：多维数组的指针操作</li>
</ul>
</li>
<li><p><strong>指针与字符串</strong></p>
<ul>
<li>字符指针：指向字符的指针</li>
<li>字符串数组：字符串的数组表示</li>
<li>字符串指针数组：存储多个字符串</li>
<li>命令行参数：argc、argv的使用</li>
</ul>
</li>
</ul>
<h2 id="（三）动态内存管理"><a href="#（三）动态内存管理" class="headerlink" title="（三）动态内存管理"></a>（三）动态内存管理</h2><ul>
<li><p><strong>内存分配函数</strong></p>
<ul>
<li>malloc：分配指定大小的内存</li>
<li>calloc：分配并初始化内存</li>
<li>realloc：重新分配内存大小</li>
<li>free：释放动态分配的内存</li>
</ul>
</li>
<li><p><strong>内存管理最佳实践</strong></p>
<ul>
<li>内存泄漏：忘记释放内存的问题</li>
<li>悬空指针：指向已释放内存的指针</li>
<li>重复释放：多次释放同一内存</li>
<li>内存越界：访问未分配的内存</li>
</ul>
</li>
<li><p><strong>动态数据结构</strong></p>
<ul>
<li>动态数组：运行时确定大小的数组</li>
<li>动态字符串：可变长度的字符串</li>
<li>内存池：预分配内存的管理</li>
<li>垃圾回收：内存自动管理（概念）</li>
</ul>
</li>
</ul>
<h1 id="四、结构体与联合体（2个月）"><a href="#四、结构体与联合体（2个月）" class="headerlink" title="四、结构体与联合体（2个月）"></a>四、结构体与联合体（2个月）</h1><h2 id="（一）结构体基础"><a href="#（一）结构体基础" class="headerlink" title="（一）结构体基础"></a>（一）结构体基础</h2><ul>
<li><p><strong>结构体定义</strong></p>
<ul>
<li>struct关键字：结构体的定义语法</li>
<li>成员变量：不同类型的数据组合</li>
<li>结构体变量：结构体类型的变量声明</li>
<li>结构体初始化：成员的初始化方法</li>
</ul>
</li>
<li><p><strong>结构体操作</strong></p>
<ul>
<li>成员访问：点运算符.的使用</li>
<li>指针访问：箭头运算符-&gt;的使用</li>
<li>结构体赋值：整体赋值和成员赋值</li>
<li>结构体比较：成员逐一比较</li>
</ul>
</li>
<li><p><strong>结构体数组</strong></p>
<ul>
<li>结构体数组的声明和初始化</li>
<li>结构体数组的遍历</li>
<li>结构体数组的排序</li>
<li>结构体数组的查找</li>
</ul>
</li>
</ul>
<h2 id="（二）结构体高级应用"><a href="#（二）结构体高级应用" class="headerlink" title="（二）结构体高级应用"></a>（二）结构体高级应用</h2><ul>
<li><p><strong>嵌套结构体</strong></p>
<ul>
<li>结构体嵌套：结构体包含其他结构体</li>
<li>自引用结构体：结构体包含指向自身的指针</li>
<li>匿名结构体：无名结构体的使用</li>
<li>结构体的内存布局：字节对齐</li>
</ul>
</li>
<li><p><strong>结构体与函数</strong></p>
<ul>
<li>结构体作为参数：值传递和地址传递</li>
<li>结构体作为返回值：返回结构体变量</li>
<li>结构体指针参数：提高传递效率</li>
<li>结构体数组参数：批量数据处理</li>
</ul>
</li>
</ul>
<h2 id="（三）联合体与枚举"><a href="#（三）联合体与枚举" class="headerlink" title="（三）联合体与枚举"></a>（三）联合体与枚举</h2><ul>
<li><p><strong>联合体（Union）</strong></p>
<ul>
<li>union关键字：联合体的定义</li>
<li>内存共享：所有成员共享同一内存空间</li>
<li>联合体的大小：最大成员的大小</li>
<li>联合体的应用：节省内存、类型转换</li>
</ul>
</li>
<li><p><strong>枚举（Enum）</strong></p>
<ul>
<li>enum关键字：枚举类型的定义</li>
<li>枚举常量：命名的整数常量</li>
<li>枚举的赋值：自定义枚举值</li>
<li>枚举的应用：状态表示、选项定义</li>
</ul>
</li>
<li><p><strong>位域（Bit Field）</strong></p>
<ul>
<li>位域定义：结构体中的位级成员</li>
<li>位域的大小：指定位数</li>
<li>位域的应用：节省存储空间</li>
<li>位域的限制：可移植性问题</li>
</ul>
</li>
</ul>
<h1 id="五、文件操作与I-O（2个月）"><a href="#五、文件操作与I-O（2个月）" class="headerlink" title="五、文件操作与I&#x2F;O（2个月）"></a>五、文件操作与I&#x2F;O（2个月）</h1><h2 id="（一）标准I-O"><a href="#（一）标准I-O" class="headerlink" title="（一）标准I&#x2F;O"></a>（一）标准I&#x2F;O</h2><ul>
<li><p><strong>输入输出基础</strong></p>
<ul>
<li>printf函数：格式化输出</li>
<li>scanf函数：格式化输入</li>
<li>getchar、putchar：字符输入输出</li>
<li>gets、puts：字符串输入输出（注意安全性）</li>
</ul>
</li>
<li><p><strong>格式化I&#x2F;O</strong></p>
<ul>
<li>格式说明符：%d、%f、%c、%s等</li>
<li>字段宽度：控制输出宽度</li>
<li>精度控制：小数点后位数</li>
<li>对齐方式：左对齐、右对齐</li>
<li>填充字符：空格、零填充</li>
</ul>
</li>
</ul>
<h2 id="（二）文件操作"><a href="#（二）文件操作" class="headerlink" title="（二）文件操作"></a>（二）文件操作</h2><ul>
<li><p><strong>文件基础</strong></p>
<ul>
<li>文件指针：FILE *类型</li>
<li>文件打开：fopen函数及模式</li>
<li>文件关闭：fclose函数</li>
<li>文件状态：feof、ferror函数</li>
</ul>
</li>
<li><p><strong>文件读写</strong></p>
<ul>
<li>字符读写：fgetc、fputc</li>
<li>字符串读写：fgets、fputs</li>
<li>格式化读写：fprintf、fscanf</li>
<li>二进制读写：fread、fwrite</li>
</ul>
</li>
<li><p><strong>文件定位</strong></p>
<ul>
<li>文件位置：ftell获取当前位置</li>
<li>文件定位：fseek设置文件位置</li>
<li>文件重定位：rewind回到文件开头</li>
<li>随机访问：任意位置读写</li>
</ul>
</li>
</ul>
<h2 id="（三）高级文件操作"><a href="#（三）高级文件操作" class="headerlink" title="（三）高级文件操作"></a>（三）高级文件操作</h2><ul>
<li><p><strong>文件系统操作</strong></p>
<ul>
<li>文件存在性：access函数</li>
<li>文件删除：remove函数</li>
<li>文件重命名：rename函数</li>
<li>目录操作：opendir、readdir、closedir</li>
</ul>
</li>
<li><p><strong>错误处理</strong></p>
<ul>
<li>错误码：errno全局变量</li>
<li>错误信息：perror、strerror函数</li>
<li>文件操作异常：权限、空间、路径问题</li>
<li>异常恢复：错误处理策略</li>
</ul>
</li>
</ul>
<h1 id="六、预处理器与宏（1个月）"><a href="#六、预处理器与宏（1个月）" class="headerlink" title="六、预处理器与宏（1个月）"></a>六、预处理器与宏（1个月）</h1><h2 id="（一）预处理指令"><a href="#（一）预处理指令" class="headerlink" title="（一）预处理指令"></a>（一）预处理指令</h2><ul>
<li><p><strong>文件包含</strong></p>
<ul>
<li>#include指令：头文件包含</li>
<li>系统头文件：&lt;&gt;包含方式</li>
<li>用户头文件：””包含方式</li>
<li>头文件保护：防止重复包含</li>
</ul>
</li>
<li><p><strong>宏定义</strong></p>
<ul>
<li>#define指令：宏的定义</li>
<li>对象宏：简单的文本替换</li>
<li>函数宏：带参数的宏</li>
<li>宏的作用域：宏的有效范围</li>
</ul>
</li>
<li><p><strong>条件编译</strong></p>
<ul>
<li>#ifdef、#ifndef：条件编译</li>
<li>#if、#elif、#else、#endif：复杂条件</li>
<li>预定义宏：<strong>FILE__、__LINE__、__DATE</strong></li>
<li>平台相关编译：跨平台代码</li>
</ul>
</li>
</ul>
<h2 id="（二）宏编程技巧"><a href="#（二）宏编程技巧" class="headerlink" title="（二）宏编程技巧"></a>（二）宏编程技巧</h2><ul>
<li><p><strong>宏的高级用法</strong></p>
<ul>
<li>字符串化：#操作符</li>
<li>连接操作：##操作符</li>
<li>可变参数宏：…和__VA_ARGS__</li>
<li>宏的递归：宏的嵌套使用</li>
</ul>
</li>
<li><p><strong>宏的最佳实践</strong></p>
<ul>
<li>宏命名规范：全大写命名</li>
<li>宏的副作用：多次求值问题</li>
<li>宏与函数：选择使用原则</li>
<li>宏调试：宏展开的调试技巧</li>
</ul>
</li>
</ul>
<h1 id="七、数据结构与算法（3-4个月）"><a href="#七、数据结构与算法（3-4个月）" class="headerlink" title="七、数据结构与算法（3-4个月）"></a>七、数据结构与算法（3-4个月）</h1><h2 id="（一）基础数据结构"><a href="#（一）基础数据结构" class="headerlink" title="（一）基础数据结构"></a>（一）基础数据结构</h2><ul>
<li><p><strong>线性表</strong></p>
<ul>
<li>顺序表：数组实现的线性表</li>
<li>链表：单链表、双链表、循环链表</li>
<li>栈：后进先出（LIFO）数据结构</li>
<li>队列：先进先出（FIFO）数据结构</li>
</ul>
</li>
<li><p><strong>树结构</strong></p>
<ul>
<li>二叉树：二叉树的表示和遍历</li>
<li>二叉搜索树：有序二叉树</li>
<li>平衡树：AVL树、红黑树（概念）</li>
<li>堆：完全二叉树的特殊形式</li>
</ul>
</li>
<li><p><strong>图结构</strong></p>
<ul>
<li>图的表示：邻接矩阵、邻接表</li>
<li>图的遍历：深度优先、广度优先</li>
<li>最短路径：Dijkstra算法</li>
<li>最小生成树：Prim算法、Kruskal算法</li>
</ul>
</li>
</ul>
<h2 id="（二）排序算法"><a href="#（二）排序算法" class="headerlink" title="（二）排序算法"></a>（二）排序算法</h2><ul>
<li><p><strong>简单排序</strong></p>
<ul>
<li>冒泡排序：相邻元素比较交换</li>
<li>选择排序：选择最小元素</li>
<li>插入排序：有序序列插入</li>
</ul>
</li>
<li><p><strong>高效排序</strong></p>
<ul>
<li>快速排序：分治法排序</li>
<li>归并排序：合并有序序列</li>
<li>堆排序：利用堆的性质排序</li>
<li>基数排序：按位排序</li>
</ul>
</li>
</ul>
<h2 id="（三）查找算法"><a href="#（三）查找算法" class="headerlink" title="（三）查找算法"></a>（三）查找算法</h2><ul>
<li><p><strong>线性查找</strong></p>
<ul>
<li>顺序查找：逐一比较查找</li>
<li>二分查找：有序数组的快速查找</li>
<li>插值查找：改进的二分查找</li>
</ul>
</li>
<li><p><strong>树表查找</strong></p>
<ul>
<li>二叉搜索树查找</li>
<li>平衡树查找</li>
<li>B树查找：多路搜索树</li>
</ul>
</li>
<li><p><strong>散列查找</strong></p>
<ul>
<li>哈希表：散列函数设计</li>
<li>冲突处理：开放地址法、链地址法</li>
<li>哈希函数：除留余数法、乘法散列法</li>
</ul>
</li>
</ul>
<h1 id="八、系统编程基础（2-3个月）"><a href="#八、系统编程基础（2-3个月）" class="headerlink" title="八、系统编程基础（2-3个月）"></a>八、系统编程基础（2-3个月）</h1><h2 id="（一）进程与线程"><a href="#（一）进程与线程" class="headerlink" title="（一）进程与线程"></a>（一）进程与线程</h2><ul>
<li><p><strong>进程管理</strong></p>
<ul>
<li>进程概念：程序的执行实例</li>
<li>进程创建：fork系统调用</li>
<li>进程等待：wait、waitpid函数</li>
<li>进程终止：exit、_exit函数</li>
<li>进程间通信：管道、消息队列、共享内存</li>
</ul>
</li>
<li><p><strong>线程编程</strong></p>
<ul>
<li>线程概念：轻量级进程</li>
<li>线程创建：pthread_create函数</li>
<li>线程同步：互斥锁、条件变量</li>
<li>线程通信：共享内存、信号量</li>
<li>线程池：线程的复用管理</li>
</ul>
</li>
</ul>
<h2 id="（二）网络编程"><a href="#（二）网络编程" class="headerlink" title="（二）网络编程"></a>（二）网络编程</h2><ul>
<li><p><strong>Socket编程</strong></p>
<ul>
<li>Socket概念：网络通信端点</li>
<li>TCP编程：可靠的连接通信</li>
<li>UDP编程：无连接的数据报通信</li>
<li>客户端编程：connect、send、recv</li>
<li>服务器编程：bind、listen、accept</li>
</ul>
</li>
<li><p><strong>网络协议</strong></p>
<ul>
<li>TCP&#x2F;IP协议栈：网络分层模型</li>
<li>HTTP协议：超文本传输协议</li>
<li>网络字节序：大端序、小端序</li>
<li>网络地址：IP地址、端口号</li>
</ul>
</li>
</ul>
<h2 id="（三）系统调用"><a href="#（三）系统调用" class="headerlink" title="（三）系统调用"></a>（三）系统调用</h2><ul>
<li><p><strong>文件系统调用</strong></p>
<ul>
<li>open、close：文件打开关闭</li>
<li>read、write：文件读写</li>
<li>lseek：文件定位</li>
<li>stat：文件状态信息</li>
</ul>
</li>
<li><p><strong>内存管理调用</strong></p>
<ul>
<li>mmap：内存映射</li>
<li>munmap：取消内存映射</li>
<li>brk、sbrk：堆内存管理</li>
<li>虚拟内存：内存管理概念</li>
</ul>
</li>
</ul>
<h1 id="九、项目实战与工程化（持续进行）"><a href="#九、项目实战与工程化（持续进行）" class="headerlink" title="九、项目实战与工程化（持续进行）"></a>九、项目实战与工程化（持续进行）</h1><h2 id="（一）项目实战案例"><a href="#（一）项目实战案例" class="headerlink" title="（一）项目实战案例"></a>（一）项目实战案例</h2><ul>
<li><p><strong>控制台应用</strong></p>
<ul>
<li>学生管理系统：增删改查、文件存储</li>
<li>计算器程序：表达式解析、运算实现</li>
<li>文本编辑器：文件操作、字符串处理</li>
<li>游戏开发：贪吃蛇、俄罗斯方块</li>
</ul>
</li>
<li><p><strong>系统工具</strong></p>
<ul>
<li>文件管理器：目录遍历、文件操作</li>
<li>网络工具：ping、telnet客户端</li>
<li>系统监控：进程监控、资源统计</li>
<li>数据库引擎：简单的数据存储引擎</li>
</ul>
</li>
</ul>
<h2 id="（二）代码质量管理"><a href="#（二）代码质量管理" class="headerlink" title="（二）代码质量管理"></a>（二）代码质量管理</h2><ul>
<li><p><strong>编码规范</strong></p>
<ul>
<li>命名规范：变量、函数、宏的命名</li>
<li>代码风格：缩进、空格、换行</li>
<li>注释规范：函数注释、行内注释</li>
<li>文件组织：头文件、源文件的组织</li>
</ul>
</li>
<li><p><strong>调试技巧</strong></p>
<ul>
<li>GDB调试器：断点、单步、变量查看</li>
<li>静态分析：代码检查工具</li>
<li>内存检查：Valgrind工具使用</li>
<li>性能分析：gprof性能分析工具</li>
</ul>
</li>
</ul>
<h2 id="（三）构建与部署"><a href="#（三）构建与部署" class="headerlink" title="（三）构建与部署"></a>（三）构建与部署</h2><ul>
<li><p><strong>构建系统</strong></p>
<ul>
<li>Makefile：自动化编译</li>
<li>CMake：跨平台构建工具</li>
<li>依赖管理：库文件的链接</li>
<li>版本控制：Git工作流</li>
</ul>
</li>
<li><p><strong>跨平台开发</strong></p>
<ul>
<li>平台差异：Windows、Linux、macOS</li>
<li>条件编译：平台相关代码</li>
<li>标准库：POSIX标准、C标准库</li>
<li>移植性：可移植代码的编写</li>
</ul>
</li>
</ul>
<h1 id="十、学习资源与职业发展"><a href="#十、学习资源与职业发展" class="headerlink" title="十、学习资源与职业发展"></a>十、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《C程序设计语言》（K&amp;R）：C语言圣经</li>
<li>《C和指针》：深入理解指针</li>
<li>《C陷阱与缺陷》：避免常见错误</li>
<li>《C专家编程》：高级C编程技巧</li>
<li>《数据结构与算法分析》：算法基础</li>
</ul>
</li>
<li><p><strong>在线资源</strong></p>
<ul>
<li>C语言标准文档：ISO&#x2F;IEC 9899</li>
<li>GNU C Library文档：glibc手册</li>
<li>Stack Overflow：问题解答社区</li>
<li>GitHub：开源项目学习</li>
<li>LeetCode：算法练习平台</li>
</ul>
</li>
<li><p><strong>实践平台</strong></p>
<ul>
<li>Online Judge：编程竞赛平台</li>
<li>Project Euler：数学编程挑战</li>
<li>HackerRank：技能评估平台</li>
<li>Codeforces：算法竞赛平台</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>国外社区</strong></p>
<ul>
<li>Reddit：r&#x2F;C_Programming</li>
<li>Stack Overflow：C语言标签</li>
<li>GitHub：C语言项目</li>
<li>Hacker News：技术新闻</li>
</ul>
</li>
<li><p><strong>国内社区</strong></p>
<ul>
<li>CSDN：技术博客平台</li>
<li>博客园：.NET和C技术</li>
<li>知乎：技术问答</li>
<li>掘金：前沿技术分享</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>系统开发工程师</strong></p>
<ul>
<li>操作系统开发：内核、驱动程序</li>
<li>嵌入式开发：单片机、物联网</li>
<li>数据库开发：存储引擎、查询优化</li>
<li>网络编程：服务器、网络协议</li>
</ul>
</li>
<li><p><strong>应用开发工程师</strong></p>
<ul>
<li>桌面应用：GUI应用开发</li>
<li>游戏开发：游戏引擎、图形编程</li>
<li>科学计算：数值计算、仿真</li>
<li>工具开发：编译器、解释器</li>
</ul>
</li>
<li><p><strong>技术专家路线</strong></p>
<ul>
<li>架构师：系统架构设计</li>
<li>技术专家：特定领域专家</li>
<li>研发经理：技术团队管理</li>
<li>CTO：技术战略规划</li>
</ul>
</li>
</ul>
<h2 id="（四）持续学习建议"><a href="#（四）持续学习建议" class="headerlink" title="（四）持续学习建议"></a>（四）持续学习建议</h2><ul>
<li><p><strong>技术深度</strong></p>
<ul>
<li>操作系统原理：进程、内存、文件系统</li>
<li>计算机网络：协议栈、网络编程</li>
<li>数据库系统：存储、索引、事务</li>
<li>编译原理：词法分析、语法分析</li>
</ul>
</li>
<li><p><strong>相关技术</strong></p>
<ul>
<li>C++：面向对象编程</li>
<li>Rust：系统编程新语言</li>
<li>Go：并发编程语言</li>
<li>Python：脚本和数据分析</li>
</ul>
</li>
<li><p><strong>软技能培养</strong></p>
<ul>
<li>问题解决：分析问题、寻找方案</li>
<li>学习能力：快速学习新技术</li>
<li>沟通能力：技术交流、文档编写</li>
<li>团队协作：代码协作、知识分享</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：C语言学习是一个循序渐进的过程，从基础语法到系统编程，每个阶段都需要大量的实践和思考。C语言作为系统编程语言，不仅要掌握语法特性，更要理解计算机系统的工作原理。建议在学习过程中多动手实践，多阅读优秀的开源代码，培养良好的编程习惯和系统思维。记住，C语言的精髓在于简洁和高效，掌握了C语言，将为学习其他编程语言和深入理解计算机系统打下坚实的基础。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、C语言基础入门（1-2个月）"><a href="#一、C语言基础入门（1-2个月）" class="headerlink" title="一、C语言基础入门（1-2个月）"></a>一、C语言基础入门（1-2个月）</h1><h2 id="（一）开发环境搭建]]>
    </summary>
    
      <category term="编程语言" scheme="https://uwakeme.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="C语言" scheme="https://uwakeme.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="系统编程" scheme="https://uwakeme.top/tags/%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    
      <category term="底层开发" scheme="https://uwakeme.top/tags/%E5%BA%95%E5%B1%82%E5%BC%80%E5%8F%91/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[【学习路线】JavaScript全栈开发攻略：前端到后端的完整征程]]></title>
    <link href="https://uwakeme.top/2025/07/19/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/%E3%80%90%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%E3%80%91JavaScript%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91%E6%94%BB%E7%95%A5%EF%BC%9A%E5%89%8D%E7%AB%AF%E5%88%B0%E5%90%8E%E7%AB%AF%E7%9A%84%E5%AE%8C%E6%95%B4%E5%BE%81%E7%A8%8B/"/>
    <id>https://uwakeme.top/2025/07/19/学习路线/【学习路线】JavaScript全栈开发攻略：前端到后端的完整征程/</id>
    <published>2025-07-18T16:00:00.000Z</published>
    <updated>2025-07-21T02:15:51.197Z</updated>
    <content type="html"><![CDATA[<h1 id="一、JavaScript基础入门（1-2个月）"><a href="#一、JavaScript基础入门（1-2个月）" class="headerlink" title="一、JavaScript基础入门（1-2个月）"></a>一、JavaScript基础入门（1-2个月）</h1><h2 id="（一）环境准备与工具"><a href="#（一）环境准备与工具" class="headerlink" title="（一）环境准备与工具"></a>（一）环境准备与工具</h2><ul>
<li><p><strong>浏览器开发者工具</strong></p>
<ul>
<li>Chrome DevTools：调试、性能分析、网络监控</li>
<li>Firefox Developer Tools：CSS Grid调试、响应式设计</li>
<li>Safari Web Inspector：移动端调试</li>
<li>Edge DevTools：兼容性测试</li>
</ul>
</li>
<li><p><strong>代码编辑器</strong></p>
<ul>
<li>Visual Studio Code（推荐）：丰富的插件生态</li>
<li>WebStorm：强大的JavaScript IDE</li>
<li>Sublime Text：轻量级编辑器</li>
<li>Atom：GitHub开源编辑器</li>
</ul>
</li>
<li><p><strong>运行环境</strong></p>
<ul>
<li>Node.js：服务端JavaScript运行时</li>
<li>npm&#x2F;yarn：包管理工具</li>
<li>在线编码平台：CodePen、JSFiddle、CodeSandbox</li>
</ul>
</li>
</ul>
<h2 id="（二）JavaScript语法基础"><a href="#（二）JavaScript语法基础" class="headerlink" title="（二）JavaScript语法基础"></a>（二）JavaScript语法基础</h2><ul>
<li><p><strong>变量与数据类型</strong></p>
<ul>
<li>变量声明：var、let、const的区别</li>
<li>基本数据类型：Number、String、Boolean、undefined、null、Symbol、BigInt</li>
<li>引用数据类型：Object、Array、Function</li>
<li>类型检测：typeof、instanceof、Object.prototype.toString</li>
</ul>
</li>
<li><p><strong>运算符与表达式</strong></p>
<ul>
<li>算术运算符：+、-、<em>、&#x2F;、%、</em>*</li>
<li>比较运算符：&#x3D;&#x3D;、&#x3D;&#x3D;&#x3D;、!&#x3D;、!&#x3D;&#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;</li>
<li>逻辑运算符：&amp;&amp;、||、!</li>
<li>赋值运算符：&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;</li>
<li>三元运算符：condition ? value1 : value2</li>
</ul>
</li>
<li><p><strong>控制流程</strong></p>
<ul>
<li>条件语句：if-else、switch-case</li>
<li>循环语句：for、while、do-while</li>
<li>跳转语句：break、continue、return</li>
<li>异常处理：try-catch-finally、throw</li>
</ul>
</li>
<li><p><strong>函数基础</strong></p>
<ul>
<li>函数声明与函数表达式</li>
<li>参数传递：默认参数、剩余参数、解构参数</li>
<li>返回值和作用域</li>
<li>立即执行函数（IIFE）</li>
<li>递归函数</li>
</ul>
</li>
</ul>
<h2 id="（三）数组与字符串操作"><a href="#（三）数组与字符串操作" class="headerlink" title="（三）数组与字符串操作"></a>（三）数组与字符串操作</h2><ul>
<li><p><strong>数组基础</strong></p>
<ul>
<li>数组创建：字面量、构造函数、Array.from、Array.of</li>
<li>数组访问：索引、length属性</li>
<li>数组方法：push、pop、shift、unshift、splice、slice</li>
<li>数组遍历：for、for…in、for…of、forEach</li>
</ul>
</li>
<li><p><strong>字符串操作</strong></p>
<ul>
<li>字符串创建：字面量、构造函数、模板字符串</li>
<li>字符串方法：charAt、indexOf、substring、slice、split、replace</li>
<li>正则表达式：创建、匹配、替换、分组</li>
<li>字符串模板：插值、多行字符串、标签模板</li>
</ul>
</li>
</ul>
<h2 id="（四）对象基础"><a href="#（四）对象基础" class="headerlink" title="（四）对象基础"></a>（四）对象基础</h2><ul>
<li><p><strong>对象创建与操作</strong></p>
<ul>
<li>对象字面量：属性、方法定义</li>
<li>属性访问：点记法、方括号记法</li>
<li>属性操作：添加、删除、修改、检测</li>
<li>对象遍历：for…in、Object.keys、Object.values、Object.entries</li>
</ul>
</li>
<li><p><strong>对象方法</strong></p>
<ul>
<li>Object.assign：对象合并</li>
<li>Object.create：原型继承</li>
<li>Object.defineProperty：属性描述符</li>
<li>Object.freeze、Object.seal：对象冻结和密封</li>
</ul>
</li>
</ul>
<h1 id="二、JavaScript核心概念（2-3个月）"><a href="#二、JavaScript核心概念（2-3个月）" class="headerlink" title="二、JavaScript核心概念（2-3个月）"></a>二、JavaScript核心概念（2-3个月）</h1><h2 id="（一）作用域与闭包"><a href="#（一）作用域与闭包" class="headerlink" title="（一）作用域与闭包"></a>（一）作用域与闭包</h2><ul>
<li><p><strong>作用域机制</strong></p>
<ul>
<li>全局作用域：window对象、全局变量</li>
<li>函数作用域：局部变量、参数作用域</li>
<li>块级作用域：let、const的块级作用域</li>
<li>作用域链：变量查找机制</li>
</ul>
</li>
<li><p><strong>闭包原理</strong></p>
<ul>
<li>闭包的定义和形成条件</li>
<li>闭包的应用场景：数据私有化、模块化</li>
<li>闭包的内存管理：内存泄漏防范</li>
<li>实际应用：计数器、缓存、模块模式</li>
</ul>
</li>
<li><p><strong>变量提升</strong></p>
<ul>
<li>var的提升机制</li>
<li>函数声明的提升</li>
<li>let、const的暂时性死区</li>
<li>最佳实践：避免提升陷阱</li>
</ul>
</li>
</ul>
<h2 id="（二）this关键字与执行上下文"><a href="#（二）this关键字与执行上下文" class="headerlink" title="（二）this关键字与执行上下文"></a>（二）this关键字与执行上下文</h2><ul>
<li><p><strong>this绑定规则</strong></p>
<ul>
<li>默认绑定：全局环境下的this</li>
<li>隐式绑定：对象方法调用</li>
<li>显式绑定：call、apply、bind方法</li>
<li>new绑定：构造函数调用</li>
<li>箭头函数的this：词法绑定</li>
</ul>
</li>
<li><p><strong>执行上下文</strong></p>
<ul>
<li>执行上下文的创建过程</li>
<li>变量对象和活动对象</li>
<li>作用域链的建立</li>
<li>this值的确定</li>
</ul>
</li>
<li><p><strong>调用栈</strong></p>
<ul>
<li>函数调用栈的工作原理</li>
<li>栈溢出和递归优化</li>
<li>调试技巧：使用调用栈定位问题</li>
</ul>
</li>
</ul>
<h2 id="（三）原型与继承"><a href="#（三）原型与继承" class="headerlink" title="（三）原型与继承"></a>（三）原型与继承</h2><ul>
<li><p><strong>原型机制</strong></p>
<ul>
<li>prototype属性：函数的原型对象</li>
<li>__proto__属性：对象的原型链接</li>
<li>constructor属性：构造函数引用</li>
<li>原型链：属性查找机制</li>
</ul>
</li>
<li><p><strong>继承模式</strong></p>
<ul>
<li>原型链继承：基本原理和问题</li>
<li>构造函数继承：call&#x2F;apply实现</li>
<li>组合继承：原型链+构造函数</li>
<li>寄生组合继承：最优继承方案</li>
<li>ES6类继承：class、extends、super</li>
</ul>
</li>
<li><p><strong>对象创建模式</strong></p>
<ul>
<li>工厂模式：函数返回对象</li>
<li>构造函数模式：new操作符</li>
<li>原型模式：共享属性和方法</li>
<li>混合模式：构造函数+原型</li>
</ul>
</li>
</ul>
<h2 id="（四）异步编程基础"><a href="#（四）异步编程基础" class="headerlink" title="（四）异步编程基础"></a>（四）异步编程基础</h2><ul>
<li><p><strong>回调函数</strong></p>
<ul>
<li>回调函数的概念和用法</li>
<li>回调地狱：嵌套回调的问题</li>
<li>错误处理：错误优先回调</li>
<li>异步控制流：串行、并行执行</li>
</ul>
</li>
<li><p><strong>Promise基础</strong></p>
<ul>
<li>Promise的三种状态：pending、fulfilled、rejected</li>
<li>Promise构造函数：executor函数</li>
<li>then方法：成功和失败回调</li>
<li>catch方法：错误处理</li>
<li>finally方法：清理操作</li>
</ul>
</li>
<li><p><strong>定时器</strong></p>
<ul>
<li>setTimeout：延迟执行</li>
<li>setInterval：重复执行</li>
<li>clearTimeout、clearInterval：清除定时器</li>
<li>定时器的精度问题和优化</li>
</ul>
</li>
</ul>
<h1 id="三、DOM操作与事件处理（2-3个月）"><a href="#三、DOM操作与事件处理（2-3个月）" class="headerlink" title="三、DOM操作与事件处理（2-3个月）"></a>三、DOM操作与事件处理（2-3个月）</h1><h2 id="（一）DOM基础操作"><a href="#（一）DOM基础操作" class="headerlink" title="（一）DOM基础操作"></a>（一）DOM基础操作</h2><ul>
<li><p><strong>DOM树结构</strong></p>
<ul>
<li>文档对象模型：节点类型和关系</li>
<li>元素节点：Element、HTMLElement</li>
<li>文本节点：Text、Comment</li>
<li>属性节点：Attr</li>
</ul>
</li>
<li><p><strong>元素选择</strong></p>
<ul>
<li>getElementById：通过ID选择</li>
<li>getElementsByClassName：通过类名选择</li>
<li>getElementsByTagName：通过标签名选择</li>
<li>querySelector：CSS选择器（单个）</li>
<li>querySelectorAll：CSS选择器（多个）</li>
</ul>
</li>
<li><p><strong>元素操作</strong></p>
<ul>
<li>创建元素：createElement、createTextNode</li>
<li>插入元素：appendChild、insertBefore、insertAdjacentHTML</li>
<li>删除元素：removeChild、remove</li>
<li>替换元素：replaceChild</li>
<li>克隆元素：cloneNode</li>
</ul>
</li>
<li><p><strong>属性操作</strong></p>
<ul>
<li>标准属性：getAttribute、setAttribute、removeAttribute</li>
<li>自定义属性：dataset API</li>
<li>类名操作：className、classList</li>
<li>样式操作：style属性、getComputedStyle</li>
</ul>
</li>
</ul>
<h2 id="（二）事件处理机制"><a href="#（二）事件处理机制" class="headerlink" title="（二）事件处理机制"></a>（二）事件处理机制</h2><ul>
<li><p><strong>事件基础</strong></p>
<ul>
<li>事件类型：鼠标事件、键盘事件、表单事件、窗口事件</li>
<li>事件对象：Event对象的属性和方法</li>
<li>事件目标：target、currentTarget的区别</li>
<li>事件阻止：preventDefault、stopPropagation</li>
</ul>
</li>
<li><p><strong>事件绑定</strong></p>
<ul>
<li>HTML事件处理：onclick等属性</li>
<li>DOM0级事件：element.onclick</li>
<li>DOM2级事件：addEventListener、removeEventListener</li>
<li>事件处理器的this指向</li>
</ul>
</li>
<li><p><strong>事件流</strong></p>
<ul>
<li>事件冒泡：从目标元素向上传播</li>
<li>事件捕获：从根元素向下传播</li>
<li>事件委托：利用冒泡机制优化性能</li>
<li>自定义事件：CustomEvent、dispatchEvent</li>
</ul>
</li>
</ul>
<h2 id="（三）表单处理"><a href="#（三）表单处理" class="headerlink" title="（三）表单处理"></a>（三）表单处理</h2><ul>
<li><p><strong>表单元素</strong></p>
<ul>
<li>表单控件：input、select、textarea、button</li>
<li>表单属性：value、checked、selected、disabled</li>
<li>表单方法：focus、blur、select、submit、reset</li>
</ul>
</li>
<li><p><strong>表单验证</strong></p>
<ul>
<li>HTML5验证：required、pattern、min、max</li>
<li>自定义验证：checkValidity、setCustomValidity</li>
<li>实时验证：input、change事件</li>
<li>表单提交：submit事件、FormData对象</li>
</ul>
</li>
<li><p><strong>表单数据处理</strong></p>
<ul>
<li>数据收集：表单序列化</li>
<li>数据验证：格式检查、业务规则</li>
<li>数据提交：Ajax提交、文件上传</li>
<li>用户体验：加载状态、错误提示</li>
</ul>
</li>
</ul>
<h2 id="（四）浏览器API"><a href="#（四）浏览器API" class="headerlink" title="（四）浏览器API"></a>（四）浏览器API</h2><ul>
<li><p><strong>BOM对象</strong></p>
<ul>
<li>window对象：全局对象、窗口操作</li>
<li>location对象：URL操作、页面跳转</li>
<li>history对象：历史记录、前进后退</li>
<li>navigator对象：浏览器信息、用户代理</li>
<li>screen对象：屏幕信息</li>
</ul>
</li>
<li><p><strong>存储API</strong></p>
<ul>
<li>localStorage：持久化本地存储</li>
<li>sessionStorage：会话级存储</li>
<li>Cookie：传统存储方式</li>
<li>IndexedDB：客户端数据库</li>
</ul>
</li>
<li><p><strong>其他API</strong></p>
<ul>
<li>Geolocation：地理位置</li>
<li>File API：文件操作</li>
<li>Canvas API：图形绘制</li>
<li>Web Workers：后台线程</li>
</ul>
</li>
</ul>
<h1 id="四、ES6-现代JavaScript（2-3个月）"><a href="#四、ES6-现代JavaScript（2-3个月）" class="headerlink" title="四、ES6+现代JavaScript（2-3个月）"></a>四、ES6+现代JavaScript（2-3个月）</h1><h2 id="（一）ES6基础特性"><a href="#（一）ES6基础特性" class="headerlink" title="（一）ES6基础特性"></a>（一）ES6基础特性</h2><ul>
<li><p><strong>变量声明</strong></p>
<ul>
<li>let和const：块级作用域、暂时性死区</li>
<li>解构赋值：数组解构、对象解构、默认值</li>
<li>模板字符串：插值表达式、多行字符串、标签模板</li>
</ul>
</li>
<li><p><strong>函数增强</strong></p>
<ul>
<li>箭头函数：语法、this绑定、使用场景</li>
<li>默认参数：参数默认值、表达式默认值</li>
<li>剩余参数：…rest语法</li>
<li>扩展运算符：…spread语法</li>
</ul>
</li>
<li><p><strong>对象增强</strong></p>
<ul>
<li>属性简写：同名属性、方法简写</li>
<li>计算属性名：动态属性名</li>
<li>Object.assign：对象合并</li>
<li>Object.is：严格相等比较</li>
</ul>
</li>
</ul>
<h2 id="（二）ES6高级特性"><a href="#（二）ES6高级特性" class="headerlink" title="（二）ES6高级特性"></a>（二）ES6高级特性</h2><ul>
<li><p><strong>类与继承</strong></p>
<ul>
<li>class语法：构造函数、实例方法、静态方法</li>
<li>继承：extends关键字、super调用</li>
<li>私有属性：#私有字段（ES2022）</li>
<li>装饰器：@decorator语法（提案）</li>
</ul>
</li>
<li><p><strong>模块系统</strong></p>
<ul>
<li>export导出：命名导出、默认导出</li>
<li>import导入：命名导入、默认导入、动态导入</li>
<li>模块化最佳实践：文件组织、循环依赖</li>
<li>CommonJS vs ES Modules：区别和选择</li>
</ul>
</li>
<li><p><strong>Symbol类型</strong></p>
<ul>
<li>Symbol基础：唯一标识符</li>
<li>Symbol.for：全局Symbol注册表</li>
<li>内置Symbol：Symbol.iterator、Symbol.toStringTag</li>
<li>Symbol应用：私有属性、元编程</li>
</ul>
</li>
</ul>
<h2 id="（三）异步编程进阶"><a href="#（三）异步编程进阶" class="headerlink" title="（三）异步编程进阶"></a>（三）异步编程进阶</h2><ul>
<li><p><strong>Promise深入</strong></p>
<ul>
<li>Promise.all：并行执行、全部成功</li>
<li>Promise.race：竞态执行、最快完成</li>
<li>Promise.allSettled：并行执行、全部完成</li>
<li>Promise.any：竞态执行、任一成功</li>
<li>Promise链式调用：then链、错误传播</li>
</ul>
</li>
<li><p><strong>async&#x2F;await</strong></p>
<ul>
<li>async函数：返回Promise的函数</li>
<li>await表达式：等待Promise完成</li>
<li>错误处理：try-catch结合async&#x2F;await</li>
<li>并发控制：Promise.all与async&#x2F;await结合</li>
</ul>
</li>
<li><p><strong>生成器函数</strong></p>
<ul>
<li>function*语法：生成器函数定义</li>
<li>yield表达式：暂停和恢复执行</li>
<li>迭代器协议：next方法、done和value</li>
<li>生成器应用：异步流控制、状态机</li>
</ul>
</li>
</ul>
<h2 id="（四）ES2017-新特性"><a href="#（四）ES2017-新特性" class="headerlink" title="（四）ES2017+新特性"></a>（四）ES2017+新特性</h2><ul>
<li><p><strong>数组方法增强</strong></p>
<ul>
<li>Array.prototype.includes：包含检测</li>
<li>Array.prototype.flat：数组扁平化</li>
<li>Array.prototype.flatMap：映射后扁平化</li>
<li>Array.from：类数组转换</li>
</ul>
</li>
<li><p><strong>对象方法增强</strong></p>
<ul>
<li>Object.entries：键值对数组</li>
<li>Object.values：值数组</li>
<li>Object.fromEntries：键值对数组转对象</li>
<li>Object.getOwnPropertyDescriptors：属性描述符</li>
</ul>
</li>
<li><p><strong>字符串方法增强</strong></p>
<ul>
<li>String.prototype.padStart：开头填充</li>
<li>String.prototype.padEnd：结尾填充</li>
<li>String.prototype.trimStart：开头去空格</li>
<li>String.prototype.trimEnd：结尾去空格</li>
</ul>
</li>
</ul>
<h1 id="五、前端框架与库（3-4个月）"><a href="#五、前端框架与库（3-4个月）" class="headerlink" title="五、前端框架与库（3-4个月）"></a>五、前端框架与库（3-4个月）</h1><h2 id="（一）jQuery基础（可选）"><a href="#（一）jQuery基础（可选）" class="headerlink" title="（一）jQuery基础（可选）"></a>（一）jQuery基础（可选）</h2><ul>
<li><p><strong>jQuery核心</strong></p>
<ul>
<li>$选择器：CSS选择器、伪类选择器</li>
<li>DOM操作：增删改查、属性操作</li>
<li>事件处理：事件绑定、事件委托</li>
<li>动画效果：show&#x2F;hide、fade、slide、animate</li>
</ul>
</li>
<li><p><strong>Ajax操作</strong></p>
<ul>
<li>$.ajax：完整的Ajax配置</li>
<li>$.get、$.post：简化的HTTP请求</li>
<li>$.getJSON：JSON数据获取</li>
<li>跨域处理：JSONP、CORS</li>
</ul>
</li>
</ul>
<h2 id="（二）现代前端框架选择"><a href="#（二）现代前端框架选择" class="headerlink" title="（二）现代前端框架选择"></a>（二）现代前端框架选择</h2><ul>
<li><p><strong>React生态</strong></p>
<ul>
<li>React基础：组件、JSX、props、state</li>
<li>React Hooks：useState、useEffect、自定义Hook</li>
<li>状态管理：Redux、Context API、Zustand</li>
<li>路由管理：React Router</li>
<li>构建工具：Create React App、Vite</li>
</ul>
</li>
<li><p><strong>Vue生态</strong></p>
<ul>
<li>Vue基础：模板语法、指令、组件</li>
<li>Vue 3特性：Composition API、Teleport、Fragments</li>
<li>状态管理：Vuex、Pinia</li>
<li>路由管理：Vue Router</li>
<li>构建工具：Vue CLI、Vite</li>
</ul>
</li>
<li><p><strong>Angular生态</strong></p>
<ul>
<li>Angular基础：组件、服务、依赖注入</li>
<li>TypeScript集成：类型系统、装饰器</li>
<li>状态管理：NgRx、Akita</li>
<li>路由管理：Angular Router</li>
<li>构建工具：Angular CLI</li>
</ul>
</li>
</ul>
<h2 id="（三）状态管理"><a href="#（三）状态管理" class="headerlink" title="（三）状态管理"></a>（三）状态管理</h2><ul>
<li><p><strong>状态管理模式</strong></p>
<ul>
<li>单向数据流：Flux架构</li>
<li>状态提升：组件间状态共享</li>
<li>全局状态：应用级状态管理</li>
<li>本地状态：组件级状态管理</li>
</ul>
</li>
<li><p><strong>Redux模式</strong></p>
<ul>
<li>Store：状态容器</li>
<li>Action：状态变更描述</li>
<li>Reducer：状态变更逻辑</li>
<li>Middleware：异步处理、日志记录</li>
</ul>
</li>
</ul>
<h2 id="（四）组件化开发"><a href="#（四）组件化开发" class="headerlink" title="（四）组件化开发"></a>（四）组件化开发</h2><ul>
<li><p><strong>组件设计原则</strong></p>
<ul>
<li>单一职责：组件功能单一</li>
<li>可复用性：通用组件设计</li>
<li>可组合性：组件组合模式</li>
<li>可测试性：组件测试策略</li>
</ul>
</li>
<li><p><strong>组件通信</strong></p>
<ul>
<li>父子通信：props、events</li>
<li>兄弟通信：状态提升、事件总线</li>
<li>跨级通信：Context、Provider</li>
<li>全局通信：状态管理库</li>
</ul>
</li>
</ul>
<h1 id="六、构建工具与工程化（2-3个月）"><a href="#六、构建工具与工程化（2-3个月）" class="headerlink" title="六、构建工具与工程化（2-3个月）"></a>六、构建工具与工程化（2-3个月）</h1><h2 id="（一）模块化系统"><a href="#（一）模块化系统" class="headerlink" title="（一）模块化系统"></a>（一）模块化系统</h2><ul>
<li><p><strong>模块化演进</strong></p>
<ul>
<li>全局变量：命名空间污染</li>
<li>IIFE：立即执行函数</li>
<li>CommonJS：Node.js模块系统</li>
<li>AMD：异步模块定义</li>
<li>ES Modules：标准模块系统</li>
</ul>
</li>
<li><p><strong>模块打包器</strong></p>
<ul>
<li>Webpack：配置复杂、功能强大</li>
<li>Rollup：ES模块优化、库打包</li>
<li>Parcel：零配置、快速打包</li>
<li>Vite：开发快速、生产优化</li>
<li>esbuild：极速构建工具</li>
</ul>
</li>
</ul>
<h2 id="（二）开发工具链"><a href="#（二）开发工具链" class="headerlink" title="（二）开发工具链"></a>（二）开发工具链</h2><ul>
<li><p><strong>代码质量</strong></p>
<ul>
<li>ESLint：代码检查、规范统一</li>
<li>Prettier：代码格式化</li>
<li>Husky：Git钩子管理</li>
<li>lint-staged：暂存区代码检查</li>
</ul>
</li>
<li><p><strong>类型检查</strong></p>
<ul>
<li>TypeScript：静态类型检查</li>
<li>Flow：Facebook类型检查器</li>
<li>JSDoc：文档注释类型</li>
<li>PropTypes：React属性类型</li>
</ul>
</li>
<li><p><strong>测试工具</strong></p>
<ul>
<li>Jest：JavaScript测试框架</li>
<li>Mocha：灵活的测试框架</li>
<li>Cypress：端到端测试</li>
<li>Testing Library：组件测试</li>
</ul>
</li>
</ul>
<h2 id="（三）性能优化"><a href="#（三）性能优化" class="headerlink" title="（三）性能优化"></a>（三）性能优化</h2><ul>
<li><p><strong>代码优化</strong></p>
<ul>
<li>代码分割：动态导入、路由分割</li>
<li>树摇优化：无用代码消除</li>
<li>压缩混淆：代码体积优化</li>
<li>缓存策略：浏览器缓存、CDN缓存</li>
</ul>
</li>
<li><p><strong>运行时优化</strong></p>
<ul>
<li>懒加载：图片、组件、路由</li>
<li>虚拟滚动：大列表优化</li>
<li>防抖节流：事件优化</li>
<li>内存管理：内存泄漏防范</li>
</ul>
</li>
</ul>
<h2 id="（四）部署与发布"><a href="#（四）部署与发布" class="headerlink" title="（四）部署与发布"></a>（四）部署与发布</h2><ul>
<li><p><strong>构建流程</strong></p>
<ul>
<li>开发环境：热重载、源码映射</li>
<li>测试环境：自动化测试、代码覆盖率</li>
<li>生产环境：代码优化、资源压缩</li>
<li>CI&#x2F;CD：持续集成、自动部署</li>
</ul>
</li>
<li><p><strong>部署策略</strong></p>
<ul>
<li>静态部署：GitHub Pages、Netlify、Vercel</li>
<li>服务器部署：Nginx、Apache、Node.js</li>
<li>容器化部署：Docker、Kubernetes</li>
<li>CDN部署：全球加速、缓存优化</li>
</ul>
</li>
</ul>
<h1 id="七、Node-js后端开发（3-4个月）"><a href="#七、Node-js后端开发（3-4个月）" class="headerlink" title="七、Node.js后端开发（3-4个月）"></a>七、Node.js后端开发（3-4个月）</h1><h2 id="（一）Node-js基础"><a href="#（一）Node-js基础" class="headerlink" title="（一）Node.js基础"></a>（一）Node.js基础</h2><ul>
<li><p><strong>Node.js核心</strong></p>
<ul>
<li>事件循环：单线程、非阻塞I&#x2F;O</li>
<li>模块系统：require、exports、module.exports</li>
<li>全局对象：global、process、Buffer</li>
<li>文件系统：fs模块、路径操作</li>
</ul>
</li>
<li><p><strong>核心模块</strong></p>
<ul>
<li>http模块：创建服务器、处理请求</li>
<li>url模块：URL解析、查询参数</li>
<li>path模块：路径操作、跨平台兼容</li>
<li>os模块：操作系统信息</li>
<li>crypto模块：加密解密、哈希计算</li>
</ul>
</li>
</ul>
<h2 id="（二）Express框架"><a href="#（二）Express框架" class="headerlink" title="（二）Express框架"></a>（二）Express框架</h2><ul>
<li><p><strong>Express基础</strong></p>
<ul>
<li>路由系统：GET、POST、PUT、DELETE</li>
<li>中间件：应用级、路由级、错误处理</li>
<li>模板引擎：EJS、Pug、Handlebars</li>
<li>静态文件：express.static中间件</li>
</ul>
</li>
<li><p><strong>Express进阶</strong></p>
<ul>
<li>路由模块化：Router、路由分组</li>
<li>错误处理：错误中间件、异常捕获</li>
<li>安全性：helmet、cors、rate-limiting</li>
<li>日志记录：morgan、winston</li>
</ul>
</li>
</ul>
<h2 id="（三）数据库操作"><a href="#（三）数据库操作" class="headerlink" title="（三）数据库操作"></a>（三）数据库操作</h2><ul>
<li><p><strong>关系型数据库</strong></p>
<ul>
<li>MySQL：mysql2、Sequelize ORM</li>
<li>PostgreSQL：pg、TypeORM</li>
<li>SQLite：sqlite3、better-sqlite3</li>
<li>数据库设计：表结构、关联关系、索引优化</li>
</ul>
</li>
<li><p><strong>NoSQL数据库</strong></p>
<ul>
<li>MongoDB：mongoose ODM、聚合查询</li>
<li>Redis：缓存、会话存储、消息队列</li>
<li>数据建模：文档设计、嵌入vs引用</li>
<li>性能优化：查询优化、索引策略</li>
</ul>
</li>
</ul>
<h2 id="（四）API开发"><a href="#（四）API开发" class="headerlink" title="（四）API开发"></a>（四）API开发</h2><ul>
<li><p><strong>RESTful API</strong></p>
<ul>
<li>REST原则：资源、HTTP方法、状态码</li>
<li>API设计：URL设计、版本控制、文档</li>
<li>数据验证：joi、express-validator</li>
<li>错误处理：统一错误格式、错误码</li>
</ul>
</li>
<li><p><strong>GraphQL API</strong></p>
<ul>
<li>GraphQL基础：Schema、Query、Mutation</li>
<li>Apollo Server：GraphQL服务器</li>
<li>数据加载：DataLoader、N+1问题</li>
<li>订阅：实时数据推送</li>
</ul>
</li>
</ul>
<h1 id="八、测试与调试（2个月）"><a href="#八、测试与调试（2个月）" class="headerlink" title="八、测试与调试（2个月）"></a>八、测试与调试（2个月）</h1><h2 id="（一）测试基础"><a href="#（一）测试基础" class="headerlink" title="（一）测试基础"></a>（一）测试基础</h2><ul>
<li><p><strong>测试类型</strong></p>
<ul>
<li>单元测试：函数、组件测试</li>
<li>集成测试：模块间交互测试</li>
<li>端到端测试：用户流程测试</li>
<li>性能测试：加载时间、响应时间</li>
</ul>
</li>
<li><p><strong>测试框架</strong></p>
<ul>
<li>Jest：快照测试、模拟函数、覆盖率</li>
<li>Mocha + Chai：灵活的测试组合</li>
<li>Jasmine：行为驱动开发</li>
<li>Vitest：Vite原生测试框架</li>
</ul>
</li>
</ul>
<h2 id="（二）调试技巧"><a href="#（二）调试技巧" class="headerlink" title="（二）调试技巧"></a>（二）调试技巧</h2><ul>
<li><p><strong>浏览器调试</strong></p>
<ul>
<li>断点调试：条件断点、日志断点</li>
<li>性能分析：Performance面板、Memory面板</li>
<li>网络调试：Network面板、请求分析</li>
<li>控制台调试：console方法、调试技巧</li>
</ul>
</li>
<li><p><strong>Node.js调试</strong></p>
<ul>
<li>内置调试器：node –inspect</li>
<li>VS Code调试：launch.json配置</li>
<li>日志调试：debug模块、winston</li>
<li>性能分析：clinic.js、0x</li>
</ul>
</li>
</ul>
<h2 id="（三）错误处理"><a href="#（三）错误处理" class="headerlink" title="（三）错误处理"></a>（三）错误处理</h2><ul>
<li><p><strong>错误类型</strong></p>
<ul>
<li>语法错误：编译时错误</li>
<li>运行时错误：TypeError、ReferenceError</li>
<li>逻辑错误：业务逻辑错误</li>
<li>异步错误：Promise rejection、async&#x2F;await</li>
</ul>
</li>
<li><p><strong>错误监控</strong></p>
<ul>
<li>错误捕获：try-catch、window.onerror</li>
<li>错误上报：Sentry、Bugsnag</li>
<li>错误分析：错误统计、用户影响</li>
<li>错误修复：热修复、版本回滚</li>
</ul>
</li>
</ul>
<h1 id="九、项目实战与最佳实践"><a href="#九、项目实战与最佳实践" class="headerlink" title="九、项目实战与最佳实践"></a>九、项目实战与最佳实践</h1><h2 id="（一）项目实战案例"><a href="#（一）项目实战案例" class="headerlink" title="（一）项目实战案例"></a>（一）项目实战案例</h2><ul>
<li><p><strong>Todo应用</strong></p>
<ul>
<li>基础功能：增删改查、状态切换</li>
<li>进阶功能：分类管理、搜索过滤、数据持久化</li>
<li>技术栈：原生JS、React&#x2F;Vue、Node.js</li>
</ul>
</li>
<li><p><strong>博客系统</strong></p>
<ul>
<li>前端：文章展示、分类标签、评论系统</li>
<li>后端：用户认证、内容管理、API设计</li>
<li>技术栈：React&#x2F;Vue + Express + MongoDB</li>
</ul>
</li>
<li><p><strong>电商平台</strong></p>
<ul>
<li>用户系统：注册登录、个人中心、权限管理</li>
<li>商品系统：商品展示、购物车、订单管理</li>
<li>支付系统：支付集成、订单状态、库存管理</li>
</ul>
</li>
</ul>
<h2 id="（二）代码质量"><a href="#（二）代码质量" class="headerlink" title="（二）代码质量"></a>（二）代码质量</h2><ul>
<li><p><strong>编码规范</strong></p>
<ul>
<li>命名规范：变量、函数、类的命名</li>
<li>代码结构：模块化、组件化、分层架构</li>
<li>注释规范：JSDoc、代码注释、文档编写</li>
<li>版本控制：Git工作流、提交规范</li>
</ul>
</li>
<li><p><strong>性能优化</strong></p>
<ul>
<li>代码层面：算法优化、数据结构选择</li>
<li>网络层面：请求优化、缓存策略</li>
<li>渲染层面：DOM操作优化、重绘重排</li>
<li>资源层面：图片优化、代码分割</li>
</ul>
</li>
</ul>
<h2 id="（三）安全考虑"><a href="#（三）安全考虑" class="headerlink" title="（三）安全考虑"></a>（三）安全考虑</h2><ul>
<li><p><strong>前端安全</strong></p>
<ul>
<li>XSS防护：输入验证、输出编码</li>
<li>CSRF防护：Token验证、SameSite Cookie</li>
<li>内容安全：CSP策略、HTTPS</li>
<li>数据保护：敏感信息加密、本地存储安全</li>
</ul>
</li>
<li><p><strong>后端安全</strong></p>
<ul>
<li>身份认证：JWT、Session、OAuth</li>
<li>权限控制：RBAC、ACL、资源权限</li>
<li>数据验证：输入验证、SQL注入防护</li>
<li>接口安全：限流、防重放、签名验证</li>
</ul>
</li>
</ul>
<h1 id="十、学习资源与职业发展"><a href="#十、学习资源与职业发展" class="headerlink" title="十、学习资源与职业发展"></a>十、学习资源与职业发展</h1><h2 id="（一）学习资源推荐"><a href="#（一）学习资源推荐" class="headerlink" title="（一）学习资源推荐"></a>（一）学习资源推荐</h2><ul>
<li><p><strong>经典书籍</strong></p>
<ul>
<li>《JavaScript高级程序设计》：全面的JavaScript指南</li>
<li>《你不知道的JavaScript》：深入理解JavaScript</li>
<li>《JavaScript设计模式》：设计模式在JS中的应用</li>
<li>《高性能JavaScript》：性能优化实践</li>
</ul>
</li>
<li><p><strong>在线资源</strong></p>
<ul>
<li>MDN Web Docs：权威的Web技术文档</li>
<li>JavaScript.info：现代JavaScript教程</li>
<li>FreeCodeCamp：免费编程课程</li>
<li>Codecademy：交互式编程学习</li>
</ul>
</li>
<li><p><strong>实践平台</strong></p>
<ul>
<li>LeetCode：算法练习</li>
<li>Codewars：编程挑战</li>
<li>HackerRank：技能评估</li>
<li>GitHub：开源项目参与</li>
</ul>
</li>
</ul>
<h2 id="（二）技术社区"><a href="#（二）技术社区" class="headerlink" title="（二）技术社区"></a>（二）技术社区</h2><ul>
<li><p><strong>国外社区</strong></p>
<ul>
<li>Stack Overflow：技术问答</li>
<li>Reddit：r&#x2F;javascript、r&#x2F;webdev</li>
<li>Dev.to：开发者博客平台</li>
<li>Hacker News：技术新闻</li>
</ul>
</li>
<li><p><strong>国内社区</strong></p>
<ul>
<li>掘金：前端技术社区</li>
<li>思否：技术问答社区</li>
<li>知乎：技术专栏</li>
<li>CSDN：技术博客</li>
</ul>
</li>
</ul>
<h2 id="（三）职业发展路径"><a href="#（三）职业发展路径" class="headerlink" title="（三）职业发展路径"></a>（三）职业发展路径</h2><ul>
<li><p><strong>前端开发工程师</strong></p>
<ul>
<li>初级（0-1年）：掌握HTML&#x2F;CSS&#x2F;JS基础</li>
<li>中级（1-3年）：熟练使用框架，具备工程化思维</li>
<li>高级（3-5年）：架构设计能力，技术选型能力</li>
<li>专家（5年+）：技术深度，团队领导能力</li>
</ul>
</li>
<li><p><strong>全栈开发工程师</strong></p>
<ul>
<li>前端技能：现代前端框架、工程化工具</li>
<li>后端技能：Node.js、数据库、API设计</li>
<li>运维技能：部署、监控、性能优化</li>
<li>软技能：项目管理、团队协作</li>
</ul>
</li>
<li><p><strong>技术管理路线</strong></p>
<ul>
<li>技术Lead：技术决策、架构设计</li>
<li>项目经理：项目管理、资源协调</li>
<li>技术总监：技术战略、团队建设</li>
<li>CTO：技术愿景、商业理解</li>
</ul>
</li>
</ul>
<h2 id="（四）持续学习建议"><a href="#（四）持续学习建议" class="headerlink" title="（四）持续学习建议"></a>（四）持续学习建议</h2><ul>
<li><p><strong>技术趋势关注</strong></p>
<ul>
<li>WebAssembly：高性能Web应用</li>
<li>PWA：渐进式Web应用</li>
<li>Serverless：无服务器架构</li>
<li>微前端：大型应用架构</li>
</ul>
</li>
<li><p><strong>学习方法</strong></p>
<ul>
<li>项目驱动：通过实际项目学习</li>
<li>源码阅读：理解框架实现原理</li>
<li>技术分享：输出倒逼输入</li>
<li>社区参与：开源贡献、技术交流</li>
</ul>
</li>
<li><p><strong>软技能培养</strong></p>
<ul>
<li>沟通能力：技术表达、需求理解</li>
<li>学习能力：快速学习新技术</li>
<li>解决问题：分析问题、寻找方案</li>
<li>团队协作：代码协作、知识分享</li>
</ul>
</li>
</ul>
<hr>
<p><strong>总结</strong>：JavaScript学习是一个持续的过程，从基础语法到现代框架，从前端开发到全栈开发，每个阶段都有其重点和挑战。建议根据自己的兴趣和职业规划选择合适的学习路径，保持实践和思考的习惯，在项目中应用所学知识，不断提升自己的技术能力和解决问题的能力。记住，技术在不断发展，保持学习的热情和开放的心态是成为优秀JavaScript开发者的关键。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一、JavaScript基础入门（1-2个月）"><a href="#一、JavaScript基础入门（1-2个月）" class="headerlink" title="一、JavaScript基础入门（1-2个月）"></a>一、JavaScript基础入门（]]>
    </summary>
    
      <category term="Web开发" scheme="https://uwakeme.top/tags/Web%E5%BC%80%E5%8F%91/"/>
    
      <category term="前端开发" scheme="https://uwakeme.top/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="JavaScript" scheme="https://uwakeme.top/tags/JavaScript/"/>
    
      <category term="编程语言" scheme="https://uwakeme.top/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/tags/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
      <category term="学习路线" scheme="https://uwakeme.top/categories/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
    
  </entry>
  
</feed>
